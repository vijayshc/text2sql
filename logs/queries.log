2025-03-24 23:57:25 - QUERY: 'How many customers do we have?' → SQL: SELECT COUNT(*) AS total_customers FROM customers;
2025-03-24 23:57:29 - QUERY: 'How many customers do we have?' → SQL: SELECT COUNT(*) AS customer_count FROM customers;
2025-03-25 00:01:32 - QUERY: 'get me list of customers' → SQL: SELECT * FROM customers;
2025-03-25 00:02:39 - QUERY: 'get me list of customers whose name starts with J' → SQL: SELECT * FROM customers WHERE name LIKE 'J%';
2025-03-25 00:04:03 - QUERY: 'get me list of customers whose name starts with J' → SQL: SELECT *
FROM customers
WHERE first_name LIKE 'J%'
2025-03-25 00:05:06 - QUERY: 'get me list of customers whose name starts with J' → SQL: SELECT * FROM customers
WHERE first_name LIKE 'J%';
2025-03-25 00:09:34 - QUERY: 'What are the top 5 products by sales?' → SQL: SELECT 
    products.product_id,
    products.name,
    SUM(orders.total_amount) AS total_sales
FROM 
    orders
JOIN 
    products ON orders.product_id = products.product_id
GROUP BY 
    products.product_id, products.name
ORDER BY 
    total_sales DESC
LIMIT 5;
2025-03-25 00:22:50 - QUERY: 'How many customers do we have?' → SQL: SELECT COUNT(*) AS total_customers FROM customers;
2025-03-25 00:22:50 - QUERY: 'How many customers do we have?' → SQL: SELECT COUNT(*) AS total_customers FROM customers;
2025-03-25 00:22:54 - QUERY: 'How many customers do we have?' → SQL: SELECT COUNT(*) AS total_customers FROM customers;
2025-03-25 00:22:54 - QUERY: 'How many customers do we have?' → SQL: SELECT COUNT(*) AS total_customers FROM customers;
2025-03-25 00:25:52 - QUERY: 'How many customers do we have?' → SQL: SELECT COUNT(DISTINCT customer_id) AS total_customers FROM customers;
2025-03-25 00:25:52 - QUERY: 'How many customers do we have?' → SQL: SELECT COUNT(DISTINCT customer_id) AS total_customers FROM customers;
2025-03-25 00:27:02 - QUERY: 'How many customers do we have?' → SQL: SELECT COUNT(*) AS total_customers FROM customers;
2025-03-25 00:27:02 - QUERY: 'How many customers do we have?' → SQL: SELECT COUNT(*) AS total_customers FROM customers;
2025-03-25 00:28:34 - QUERY: 'How many customers do we have?' → SQL: SELECT COUNT(*) AS total_customers FROM customers;
2025-03-25 00:28:34 - QUERY: 'How many customers do we have?' → SQL: SELECT COUNT(*) AS total_customers FROM customers;
2025-03-25 00:31:30 - QUERY: 'Please get me list of customers whose name starts with J' → SQL: SELECT * FROM customers
WHERE first_name LIKE 'J%'
2025-03-25 00:31:30 - QUERY: 'Please get me list of customers whose name starts with J' → SQL: SELECT * FROM customers
WHERE first_name LIKE 'J%'
2025-03-25 00:42:04 - QUERY: 'What are the top 5 products by sales?' → SQL: SELECT p.product_id, p.name, SUM(sp.quantity_sold) AS total_quantity_sold
FROM products p
JOIN sales_products sp ON p.product_id = sp.product_id
GROUP BY p.product_id, p.name
ORDER BY total_quantity_sold DESC
LIMIT 5;
2025-03-25 00:42:05 - QUERY: 'What are the top 5 products by sales?' → SQL: SELECT p.product_id, p.name, SUM(sp.quantity_sold) AS total_quantity_sold
FROM products p
JOIN sales_products sp ON p.product_id = sp.product_id
GROUP BY p.product_id, p.name
ORDER BY total_quantity_sold DESC
LIMIT 5;
2025-03-25 00:55:49,894 - QUERY: 'How many customers do we have?' → SQL: SELECT COUNT(*) AS customer_count FROM customers
2025-03-25 00:55:49 - QUERY: 'How many customers do we have?' → SQL: SELECT COUNT(*) AS customer_count FROM customers
2025-03-25 00:55:49,906 - QUERY: 'How many customers do we have?' → SQL: SELECT COUNT(*) AS customer_count FROM customers
2025-03-25 00:55:49 - QUERY: 'How many customers do we have?' → SQL: SELECT COUNT(*) AS customer_count FROM customers
2025-03-25 00:56:38,668 - QUERY: 'Get me all the customers whose name starts with J' → SQL: SELECT *
FROM customers
WHERE first_name LIKE 'J%'
2025-03-25 00:56:38 - QUERY: 'Get me all the customers whose name starts with J' → SQL: SELECT *
FROM customers
WHERE first_name LIKE 'J%'
2025-03-25 00:56:38,682 - QUERY: 'Get me all the customers whose name starts with J' → SQL: SELECT *
FROM customers
WHERE first_name LIKE 'J%'
2025-03-25 00:56:38 - QUERY: 'Get me all the customers whose name starts with J' → SQL: SELECT *
FROM customers
WHERE first_name LIKE 'J%'
2025-03-25 00:59:33,709 [INFO] text2sql.queries [azure_client.py:134]: QUERY: 'Get me all the customers whose name starts with J' → SQL: SELECT *
FROM customers
WHERE first_name LIKE 'J%'
2025-03-25 00:59:33 - QUERY: 'Get me all the customers whose name starts with J' → SQL: SELECT *
FROM customers
WHERE first_name LIKE 'J%'
2025-03-25 00:59:33,771 [INFO] text2sql.queries [app.py:138]: QUERY: 'Get me all the customers whose name starts with J' → SQL: SELECT *
FROM customers
WHERE first_name LIKE 'J%'
2025-03-25 00:59:33 - QUERY: 'Get me all the customers whose name starts with J' → SQL: SELECT *
FROM customers
WHERE first_name LIKE 'J%'
2025-03-25 01:02:34,383 - QUERY: 'Get me all the customers whose name starts with J' → SQL: SELECT *
FROM customers
WHERE first_name LIKE 'J%'
2025-03-25 01:02:34 - QUERY: 'Get me all the customers whose name starts with J' → SQL: SELECT *
FROM customers
WHERE first_name LIKE 'J%'
2025-03-25 01:02:34,393 - QUERY: 'Get me all the customers whose name starts with J' → SQL: SELECT *
FROM customers
WHERE first_name LIKE 'J%'
2025-03-25 01:02:34 - QUERY: 'Get me all the customers whose name starts with J' → SQL: SELECT *
FROM customers
WHERE first_name LIKE 'J%'
2025-03-25 01:13:46 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 01:13:46 - INFO - [azure_client.py:21] - Using model: Phi-3.5-mini-instruct
2025-03-25 01:13:46 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 01:13:46 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 01:13:46 - INFO - [azure_client.py:21] - Using model: Phi-3.5-mini-instruct
2025-03-25 01:13:46 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 01:13:46 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 01:13:46 - INFO - [azure_client.py:21] - Using model: Phi-3.5-mini-instruct
2025-03-25 01:13:46 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 01:13:46 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 01:13:46 - INFO - [azure_client.py:21] - Using model: Phi-3.5-mini-instruct
2025-03-25 01:13:46 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 01:13:46 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-25 01:16:27 - INFO - [app.py:93] - Processing query: 'get me list of customers' in workspace 'Default'
2025-03-25 01:16:27 - INFO - [sql_generator.py:34] - Processing query: 'get me list of customers'
2025-03-25 01:16:29 - INFO - [sql_generator.py:39] - Detected intent: data_retrieval
2025-03-25 01:16:29 - INFO - [sql_generator.py:109] - Starting SQL generation process
2025-03-25 01:16:29 - INFO - [database.py:24] - Attempting database connection
2025-03-25 01:16:29 - INFO - [database.py:28] - Database connection established in 0.01s
2025-03-25 01:16:40 - INFO - [azure_client.py:46] - SQL generation started for query: 'get me list of customers'
2025-03-25 01:16:53 - INFO - [azure_client.py:131] - Generated SQL: SELECT * FROM customers;
2025-03-25 01:16:53,298 - QUERY: 'get me list of customers' → SQL: SELECT * FROM customers;
2025-03-25 01:16:53 - INFO - [azure_client.py:139] - SQL generation completed in 12.33s
2025-03-25 01:16:53 - INFO - [database.py:45] - Executing SQL query: SELECT * FROM customers;
2025-03-25 01:16:53 - INFO - [database.py:66] - Query returned 5 rows with 11 columns
2025-03-25 01:16:53 - INFO - [database.py:75] - Query processing completed in 0.02s
2025-03-25 01:16:53 - INFO - [sql_generator.py:245] - SQL generation completed in 23.64s
2025-03-25 01:16:53 - INFO - [sql_generator.py:95] - Query processing completed in 25.73s
2025-03-25 01:16:53 - ERROR - [app.py:101] - Query processing error: None
2025-03-25 01:16:53 - INFO - [app.py:104] - Total query processing time: 25.736s
2025-03-25 01:19:03 - INFO - [app.py:93] - Processing query: 'get me list of customers' in workspace 'Default'
2025-03-25 01:19:03 - INFO - [sql_generator.py:34] - Processing query: 'get me list of customers'
2025-03-25 01:19:04 - INFO - [sql_generator.py:39] - Detected intent: data_retrieval
2025-03-25 01:19:04 - INFO - [sql_generator.py:109] - Starting SQL generation process
2025-03-25 01:19:04 - INFO - [database.py:24] - Attempting database connection
2025-03-25 01:19:04 - INFO - [database.py:28] - Database connection established in 0.00s
2025-03-25 01:19:12 - INFO - [azure_client.py:46] - SQL generation started for query: 'get me list of customers'
2025-03-25 01:19:20 - INFO - [azure_client.py:131] - Generated SQL: SELECT * FROM customers;
2025-03-25 01:19:20,916 - QUERY: 'get me list of customers' → SQL: SELECT * FROM customers;
2025-03-25 01:19:20 - INFO - [azure_client.py:139] - SQL generation completed in 8.00s
2025-03-25 01:19:20 - INFO - [database.py:45] - Executing SQL query: SELECT * FROM customers;
2025-03-25 01:19:20 - INFO - [database.py:66] - Query returned 5 rows with 11 columns
2025-03-25 01:19:20 - INFO - [database.py:75] - Query processing completed in 0.00s
2025-03-25 01:19:20 - INFO - [sql_generator.py:245] - SQL generation completed in 16.67s
2025-03-25 01:19:20 - INFO - [sql_generator.py:95] - Query processing completed in 17.46s
2025-03-25 01:19:20 - ERROR - [app.py:101] - Query processing error: None
2025-03-25 01:19:20 - INFO - [app.py:104] - Total query processing time: 17.467s
2025-03-25 01:23:37 - INFO - [app.py:93] - Processing query: 'get me list of customers' in workspace 'Default'
2025-03-25 01:23:37 - INFO - [sql_generator.py:34] - Processing query: 'get me list of customers'
2025-03-25 01:23:38 - INFO - [sql_generator.py:39] - Detected intent: data_retrieval
2025-03-25 01:23:38 - INFO - [sql_generator.py:109] - Starting SQL generation process
2025-03-25 01:23:38 - INFO - [database.py:24] - Attempting database connection
2025-03-25 01:23:38 - INFO - [database.py:28] - Database connection established in 0.00s
2025-03-25 01:23:48 - INFO - [azure_client.py:46] - SQL generation started for query: 'get me list of customers'
2025-03-25 01:23:55 - INFO - [azure_client.py:131] - Generated SQL: SELECT * FROM customers;
2025-03-25 01:23:55,705 - QUERY: 'get me list of customers' → SQL: SELECT * FROM customers;
2025-03-25 01:23:55 - INFO - [azure_client.py:139] - SQL generation completed in 7.42s
2025-03-25 01:23:55 - INFO - [database.py:45] - Executing SQL query: SELECT * FROM customers;
2025-03-25 01:23:55 - INFO - [database.py:66] - Query returned 5 rows with 11 columns
2025-03-25 01:23:55 - INFO - [database.py:75] - Query processing completed in 0.01s
2025-03-25 01:23:55 - INFO - [sql_generator.py:245] - SQL generation completed in 17.07s
2025-03-25 01:23:55 - INFO - [sql_generator.py:95] - Query processing completed in 17.83s
2025-03-25 01:23:55 - ERROR - [app.py:101] - Query processing error: None
2025-03-25 01:23:55 - INFO - [app.py:104] - Total query processing time: 17.827s
2025-03-25 01:27:12 - INFO - [app.py:118] - Schema requested for workspace: Default
2025-03-25 01:27:12 - INFO - [database.py:24] - Attempting database connection
2025-03-25 01:27:12 - INFO - [database.py:28] - Database connection established in 0.00s
2025-03-25 01:27:12 - ERROR - [app.py:132] - Error retrieving database schema: 'DatabaseManager' object has no attribute 'get_schema'
Traceback (most recent call last):
  File "/home/vijay/text2sql/app.py", line 122, in get_schema
    schema = sql_manager.db_manager.get_schema()
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'DatabaseManager' object has no attribute 'get_schema'
2025-03-25 01:28:49 - INFO - [app.py:93] - Processing query: 'get me list of customers' in workspace 'Default'
2025-03-25 01:28:49 - INFO - [sql_generator.py:34] - Processing query: 'get me list of customers'
2025-03-25 01:28:49 - INFO - [sql_generator.py:39] - Detected intent: data_retrieval
2025-03-25 01:28:49 - INFO - [sql_generator.py:109] - Starting SQL generation process
2025-03-25 01:28:49 - INFO - [database.py:24] - Attempting database connection
2025-03-25 01:28:49 - INFO - [database.py:28] - Database connection established in 0.00s
2025-03-25 01:28:49 - INFO - [azure_client.py:46] - SQL generation started for query: 'get me list of customers'
2025-03-25 01:29:05 - INFO - [azure_client.py:131] - Generated SQL: SELECT * FROM customers;
2025-03-25 01:29:05,763 - QUERY: 'get me list of customers' → SQL: SELECT * FROM customers;
2025-03-25 01:29:05 - INFO - [azure_client.py:139] - SQL generation completed in 15.80s
2025-03-25 01:29:05 - INFO - [database.py:45] - Executing SQL query: SELECT * FROM customers;
2025-03-25 01:29:05 - INFO - [database.py:66] - Query returned 5 rows with 11 columns
2025-03-25 01:29:05 - INFO - [database.py:75] - Query processing completed in 0.01s
2025-03-25 01:29:05 - INFO - [sql_generator.py:245] - SQL generation completed in 16.10s
2025-03-25 01:29:05 - INFO - [sql_generator.py:95] - Query processing completed in 16.34s
2025-03-25 01:29:05 - ERROR - [app.py:101] - Query processing error: None
2025-03-25 01:29:05 - INFO - [app.py:104] - Total query processing time: 16.341s
2025-03-25 01:42:34 - INFO - [app.py:93] - Processing query: 'get me list of customers' in workspace 'Default'
2025-03-25 01:42:34 - INFO - [sql_generator.py:34] - Processing query: 'get me list of customers'
2025-03-25 01:42:35 - INFO - [sql_generator.py:39] - Detected intent: data_retrieval
2025-03-25 01:42:35 - INFO - [sql_generator.py:109] - Starting SQL generation process
2025-03-25 01:42:35 - INFO - [database.py:24] - Attempting database connection
2025-03-25 01:42:35 - INFO - [database.py:28] - Database connection established in 0.00s
2025-03-25 01:42:48 - INFO - [azure_client.py:46] - SQL generation started for query: 'get me list of customers'
2025-03-25 01:43:03 - INFO - [azure_client.py:131] - Generated SQL: SELECT customer_id, first_name, last_name, email, phone, address, city, state, country, postal_code, registration_date
FROM customers;
2025-03-25 01:43:03,884 - QUERY: 'get me list of customers' → SQL: SELECT customer_id, first_name, last_name, email, phone, address, city, state, country, postal_code, registration_date
FROM customers;
2025-03-25 01:43:03 - INFO - [azure_client.py:139] - SQL generation completed in 15.26s
2025-03-25 01:43:03 - INFO - [database.py:45] - Executing SQL query: SELECT customer_id, first_name, last_name, email, phone, address, city, state, country, postal_code, registration_date
FROM customers;
2025-03-25 01:43:03 - INFO - [database.py:66] - Query returned 5 rows with 11 columns
2025-03-25 01:43:03 - INFO - [database.py:75] - Query processing completed in 0.02s
2025-03-25 01:43:03 - INFO - [sql_generator.py:245] - SQL generation completed in 27.95s
2025-03-25 01:43:03 - INFO - [sql_generator.py:95] - Query processing completed in 29.47s
2025-03-25 01:43:03 - ERROR - [app.py:101] - Query processing error: None
2025-03-25 01:43:03 - INFO - [app.py:104] - Total query processing time: 29.476s
2025-03-25 01:44:48 - INFO - [app.py:118] - Schema requested for workspace: Default
2025-03-25 01:44:48 - INFO - [database.py:24] - Attempting database connection
2025-03-25 01:44:48 - INFO - [database.py:28] - Database connection established in 0.00s
2025-03-25 01:44:48 - ERROR - [app.py:132] - Error retrieving database schema: 'DatabaseManager' object has no attribute 'get_schema'
Traceback (most recent call last):
  File "/home/vijay/text2sql/app.py", line 122, in get_schema
    schema = sql_manager.db_manager.get_schema()
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'DatabaseManager' object has no attribute 'get_schema'
2025-03-25 01:50:38 - INFO - [database.py:238] - Closing database connection
2025-03-25 01:50:40 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 01:50:40 - INFO - [azure_client.py:21] - Using model: Phi-3.5-mini-instruct
2025-03-25 01:50:40 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 01:50:40 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 01:50:40 - INFO - [azure_client.py:21] - Using model: Phi-3.5-mini-instruct
2025-03-25 01:50:40 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 01:50:40 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 01:50:40 - INFO - [azure_client.py:21] - Using model: Phi-3.5-mini-instruct
2025-03-25 01:50:40 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 01:50:40 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 01:50:40 - INFO - [azure_client.py:21] - Using model: Phi-3.5-mini-instruct
2025-03-25 01:50:40 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 01:50:40 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-25 01:50:51 - INFO - [database.py:238] - Closing database connection
2025-03-25 01:50:53 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 01:50:53 - INFO - [azure_client.py:21] - Using model: Phi-3.5-mini-instruct
2025-03-25 01:50:53 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 01:50:53 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 01:50:53 - INFO - [azure_client.py:21] - Using model: Phi-3.5-mini-instruct
2025-03-25 01:50:53 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 01:50:53 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 01:50:53 - INFO - [azure_client.py:21] - Using model: Phi-3.5-mini-instruct
2025-03-25 01:50:53 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 01:50:53 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 01:50:53 - INFO - [azure_client.py:21] - Using model: Phi-3.5-mini-instruct
2025-03-25 01:50:53 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 01:50:53 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-25 01:50:53 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 01:50:53 - INFO - [azure_client.py:21] - Using model: Phi-3.5-mini-instruct
2025-03-25 01:50:53 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 01:50:53 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 01:50:53 - INFO - [azure_client.py:21] - Using model: Phi-3.5-mini-instruct
2025-03-25 01:50:53 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 01:50:53 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 01:50:53 - INFO - [azure_client.py:21] - Using model: Phi-3.5-mini-instruct
2025-03-25 01:50:53 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 01:50:53 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 01:50:53 - INFO - [azure_client.py:21] - Using model: Phi-3.5-mini-instruct
2025-03-25 01:50:53 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 01:50:53 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-25 01:51:01 - INFO - [app.py:93] - Processing query: 'get me list of customers' in workspace 'Default'
2025-03-25 01:51:01 - INFO - [sql_generator.py:34] - Processing query: 'get me list of customers'
2025-03-25 01:51:03 - INFO - [sql_generator.py:39] - Detected intent: data_retrieval
2025-03-25 01:51:03 - INFO - [sql_generator.py:109] - Starting SQL generation process
2025-03-25 01:51:03 - INFO - [database.py:24] - Attempting database connection
2025-03-25 01:51:03 - INFO - [database.py:28] - Database connection established in 0.01s
2025-03-25 01:51:12 - INFO - [azure_client.py:46] - SQL generation started for query: 'get me list of customers'
2025-03-25 01:51:24 - INFO - [azure_client.py:131] - Generated SQL: SELECT c.*
FROM customers c
2025-03-25 01:51:24,190 - QUERY: 'get me list of customers' → SQL: SELECT c.*
FROM customers c
2025-03-25 01:51:24 - INFO - [azure_client.py:139] - SQL generation completed in 11.70s
2025-03-25 01:51:24 - INFO - [database.py:45] - Executing SQL query: SELECT c.*
FROM customers c
2025-03-25 01:51:24 - INFO - [database.py:66] - Query returned 5 rows with 11 columns
2025-03-25 01:51:24 - INFO - [database.py:75] - Query processing completed in 0.02s
2025-03-25 01:51:24 - INFO - [sql_generator.py:245] - SQL generation completed in 21.02s
2025-03-25 01:51:24 - INFO - [sql_generator.py:95] - Query processing completed in 22.60s
2025-03-25 01:51:24 - ERROR - [app.py:101] - Query processing error: None
2025-03-25 01:51:24 - INFO - [app.py:104] - Total query processing time: 22.605s
2025-03-25 01:54:50 - INFO - [app.py:93] - Processing query: 'Please get me list of customers' in workspace 'Default'
2025-03-25 01:54:50 - INFO - [sql_generator.py:34] - Processing query: 'Please get me list of customers'
2025-03-25 01:54:51 - INFO - [sql_generator.py:39] - Detected intent: data_retrieval
2025-03-25 01:54:51 - INFO - [sql_generator.py:109] - Starting SQL generation process
2025-03-25 01:54:51 - INFO - [database.py:24] - Attempting database connection
2025-03-25 01:54:51 - INFO - [database.py:28] - Database connection established in 0.00s
2025-03-25 01:54:59 - INFO - [azure_client.py:46] - SQL generation started for query: 'Please get me list of customers'
2025-03-25 01:55:13 - INFO - [azure_client.py:131] - Generated SQL: SELECT * FROM customers;
2025-03-25 01:55:13,361 - QUERY: 'Please get me list of customers' → SQL: SELECT * FROM customers;
2025-03-25 01:55:13 - INFO - [azure_client.py:139] - SQL generation completed in 13.84s
2025-03-25 01:55:13 - INFO - [database.py:45] - Executing SQL query: SELECT * FROM customers;
2025-03-25 01:55:13 - INFO - [database.py:66] - Query returned 5 rows with 11 columns
2025-03-25 01:55:13 - INFO - [database.py:75] - Query processing completed in 0.01s
2025-03-25 01:55:13 - INFO - [sql_generator.py:245] - SQL generation completed in 21.76s
2025-03-25 01:55:13 - INFO - [sql_generator.py:95] - Query processing completed in 22.52s
2025-03-25 01:55:13 - ERROR - [app.py:101] - Query processing error: None
2025-03-25 01:55:13 - INFO - [app.py:104] - Total query processing time: 22.521s
2025-03-25 01:57:00 - INFO - [app.py:93] - Processing query: 'get me list of customers' in workspace 'Default'
2025-03-25 01:57:00 - INFO - [sql_generator.py:34] - Processing query: 'get me list of customers'
2025-03-25 01:57:01 - INFO - [sql_generator.py:39] - Detected intent: data_retrieval
2025-03-25 01:57:01 - INFO - [sql_generator.py:109] - Starting SQL generation process
2025-03-25 01:57:01 - INFO - [database.py:24] - Attempting database connection
2025-03-25 01:57:01 - INFO - [database.py:28] - Database connection established in 0.00s
2025-03-25 01:57:09 - INFO - [azure_client.py:46] - SQL generation started for query: 'get me list of customers'
2025-03-25 01:57:22 - INFO - [azure_client.py:131] - Generated SQL: SELECT customer_id, first_name, last_name, email
FROM customers;
2025-03-25 01:57:22,492 - QUERY: 'get me list of customers' → SQL: SELECT customer_id, first_name, last_name, email
FROM customers;
2025-03-25 01:57:22 - INFO - [azure_client.py:139] - SQL generation completed in 13.17s
2025-03-25 01:57:22 - INFO - [database.py:45] - Executing SQL query: SELECT customer_id, first_name, last_name, email
FROM customers;
2025-03-25 01:57:22 - INFO - [database.py:66] - Query returned 5 rows with 4 columns
2025-03-25 01:57:22 - INFO - [database.py:75] - Query processing completed in 0.01s
2025-03-25 01:57:22 - INFO - [sql_generator.py:245] - SQL generation completed in 21.30s
2025-03-25 01:57:22 - INFO - [sql_generator.py:95] - Query processing completed in 22.06s
2025-03-25 01:57:22 - ERROR - [app.py:101] - Query processing error: None
2025-03-25 01:57:22 - INFO - [app.py:104] - Total query processing time: 22.063s
2025-03-25 01:58:01 - INFO - [app.py:93] - Processing query: 'get me all the customers details' in workspace 'Default'
2025-03-25 01:58:01 - INFO - [sql_generator.py:34] - Processing query: 'get me all the customers details'
2025-03-25 01:58:02 - INFO - [sql_generator.py:39] - Detected intent: data_retrieval
2025-03-25 01:58:02 - INFO - [sql_generator.py:109] - Starting SQL generation process
2025-03-25 01:58:02 - INFO - [database.py:24] - Attempting database connection
2025-03-25 01:58:02 - INFO - [database.py:28] - Database connection established in 0.00s
2025-03-25 01:58:10 - INFO - [azure_client.py:46] - SQL generation started for query: 'get me all the customers details'
2025-03-25 01:58:18 - INFO - [azure_client.py:131] - Generated SQL: SELECT *
FROM customers;
2025-03-25 01:58:18,437 - QUERY: 'get me all the customers details' → SQL: SELECT *
FROM customers;
2025-03-25 01:58:18 - INFO - [azure_client.py:139] - SQL generation completed in 7.79s
2025-03-25 01:58:18 - INFO - [database.py:45] - Executing SQL query: SELECT *
FROM customers;
2025-03-25 01:58:18 - INFO - [database.py:66] - Query returned 5 rows with 11 columns
2025-03-25 01:58:18 - INFO - [database.py:75] - Query processing completed in 0.02s
2025-03-25 01:58:18 - INFO - [sql_generator.py:245] - SQL generation completed in 16.22s
2025-03-25 01:58:18 - INFO - [sql_generator.py:95] - Query processing completed in 16.95s
2025-03-25 01:58:18 - ERROR - [app.py:101] - Query processing error: None
2025-03-25 01:58:18 - INFO - [app.py:104] - Total query processing time: 16.958s
2025-03-25 02:05:54 - INFO - [database.py:238] - Closing database connection
2025-03-25 02:05:56 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 02:05:56 - INFO - [azure_client.py:21] - Using model: Phi-3.5-mini-instruct
2025-03-25 02:05:56 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 02:05:56 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 02:05:56 - INFO - [azure_client.py:21] - Using model: Phi-3.5-mini-instruct
2025-03-25 02:05:56 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 02:05:56 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 02:05:56 - INFO - [azure_client.py:21] - Using model: Phi-3.5-mini-instruct
2025-03-25 02:05:56 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 02:05:56 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 02:05:56 - INFO - [azure_client.py:21] - Using model: Phi-3.5-mini-instruct
2025-03-25 02:05:56 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 02:05:56 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-25 02:05:57 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 02:05:57 - INFO - [azure_client.py:21] - Using model: Phi-3.5-mini-instruct
2025-03-25 02:05:57 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 02:05:57 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 02:05:57 - INFO - [azure_client.py:21] - Using model: Phi-3.5-mini-instruct
2025-03-25 02:05:57 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 02:05:57 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 02:05:57 - INFO - [azure_client.py:21] - Using model: Phi-3.5-mini-instruct
2025-03-25 02:05:57 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 02:05:57 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 02:05:57 - INFO - [azure_client.py:21] - Using model: Phi-3.5-mini-instruct
2025-03-25 02:05:57 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 02:05:57 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-25 02:06:11 - INFO - [app.py:93] - Processing query: 'get me list of customers' in workspace 'Default'
2025-03-25 02:06:11 - INFO - [sql_generator.py:34] - Processing query: 'get me list of customers'
2025-03-25 02:06:13 - INFO - [sql_generator.py:39] - Detected intent: data_retrieval
2025-03-25 02:06:13 - INFO - [sql_generator.py:109] - Starting SQL generation process
2025-03-25 02:06:13 - INFO - [database.py:24] - Attempting database connection
2025-03-25 02:06:13 - INFO - [database.py:28] - Database connection established in 0.01s
2025-03-25 02:06:32 - INFO - [azure_client.py:46] - SQL generation started for query: 'get me list of customers'
2025-03-25 02:06:41 - INFO - [azure_client.py:131] - Generated SQL: SELECT * FROM customers;
2025-03-25 02:06:41,716 - QUERY: 'get me list of customers' → SQL: SELECT * FROM customers;
2025-03-25 02:06:41 - INFO - [azure_client.py:139] - SQL generation completed in 9.37s
2025-03-25 02:06:41 - INFO - [database.py:45] - Executing SQL query: SELECT * FROM customers;
2025-03-25 02:06:41 - INFO - [database.py:66] - Query returned 5 rows with 11 columns
2025-03-25 02:06:41 - INFO - [database.py:75] - Query processing completed in 0.01s
2025-03-25 02:06:41 - INFO - [sql_generator.py:245] - SQL generation completed in 28.21s
2025-03-25 02:06:41 - INFO - [sql_generator.py:95] - Query processing completed in 29.75s
2025-03-25 02:06:41 - ERROR - [app.py:101] - Query processing error: None
2025-03-25 02:06:41 - INFO - [app.py:104] - Total query processing time: 29.758s
2025-03-25 02:07:57 - INFO - [app.py:118] - Schema requested for workspace: Default
2025-03-25 02:07:57 - INFO - [database.py:24] - Attempting database connection
2025-03-25 02:07:57 - INFO - [database.py:28] - Database connection established in 0.00s
2025-03-25 02:07:57 - ERROR - [app.py:132] - Error retrieving database schema: 'DatabaseManager' object has no attribute 'get_schema'
Traceback (most recent call last):
  File "/home/vijay/text2sql/app.py", line 122, in get_schema
    schema = sql_manager.db_manager.get_schema()
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'DatabaseManager' object has no attribute 'get_schema'
2025-03-25 02:09:19 - INFO - [database.py:238] - Closing database connection
2025-03-25 02:09:20 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 02:09:20 - INFO - [azure_client.py:21] - Using model: Phi-3.5-mini-instruct
2025-03-25 02:09:20 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 02:09:20 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 02:09:20 - INFO - [azure_client.py:21] - Using model: Phi-3.5-mini-instruct
2025-03-25 02:09:20 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 02:09:20 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 02:09:20 - INFO - [azure_client.py:21] - Using model: Phi-3.5-mini-instruct
2025-03-25 02:09:20 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 02:09:20 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 02:09:20 - INFO - [azure_client.py:21] - Using model: Phi-3.5-mini-instruct
2025-03-25 02:09:20 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 02:09:20 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-25 02:12:34 - INFO - [database.py:238] - Closing database connection
2025-03-25 02:12:35 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 02:12:35 - INFO - [azure_client.py:21] - Using model: Phi-3.5-mini-instruct
2025-03-25 02:12:35 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 02:12:35 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 02:12:35 - INFO - [azure_client.py:21] - Using model: Phi-3.5-mini-instruct
2025-03-25 02:12:35 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 02:12:35 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 02:12:35 - INFO - [azure_client.py:21] - Using model: Phi-3.5-mini-instruct
2025-03-25 02:12:35 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 02:12:35 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 02:12:35 - INFO - [azure_client.py:21] - Using model: Phi-3.5-mini-instruct
2025-03-25 02:12:35 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 02:12:35 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-25 02:13:05 - INFO - [database.py:238] - Closing database connection
2025-03-25 02:13:05 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 02:13:05 - INFO - [azure_client.py:21] - Using model: Phi-3.5-mini-instruct
2025-03-25 02:13:05 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 02:13:05 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 02:13:05 - INFO - [azure_client.py:21] - Using model: Phi-3.5-mini-instruct
2025-03-25 02:13:05 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 02:13:05 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 02:13:05 - INFO - [azure_client.py:21] - Using model: Phi-3.5-mini-instruct
2025-03-25 02:13:05 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 02:13:05 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 02:13:05 - INFO - [azure_client.py:21] - Using model: Phi-3.5-mini-instruct
2025-03-25 02:13:05 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 02:13:05 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-25 02:13:14 - INFO - [sql_generator.py:35] - Processing query: 'get me list of customers'
2025-03-25 02:13:15 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 02:13:15 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 02:13:15 - INFO - [database.py:24] - Attempting database connection
2025-03-25 02:13:15 - INFO - [database.py:28] - Database connection established in 0.01s
2025-03-25 02:13:24 - INFO - [azure_client.py:46] - SQL generation started for query: 'get me list of customers'
2025-03-25 02:13:41 - INFO - [azure_client.py:131] - Generated SQL: SELECT * FROM customers
2025-03-25 02:13:41,965 - QUERY: 'get me list of customers' → SQL: SELECT * FROM customers
2025-03-25 02:13:41 - INFO - [azure_client.py:139] - SQL generation completed in 17.60s
2025-03-25 02:13:41 - INFO - [database.py:45] - Executing SQL query: SELECT * FROM customers
2025-03-25 02:13:41 - INFO - [database.py:66] - Query returned 5 rows with 11 columns
2025-03-25 02:13:41 - INFO - [database.py:75] - Query processing completed in 0.01s
2025-03-25 02:13:41 - INFO - [sql_generator.py:278] - SQL generation completed in 26.33s
2025-03-25 02:13:41 - INFO - [sql_generator.py:117] - Query processing completed in 27.82s
2025-03-25 02:15:12 - INFO - [sql_generator.py:35] - Processing query: 'get me list of customers whose name starts with J'
2025-03-25 02:15:12 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 02:15:12 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 02:15:12 - INFO - [database.py:24] - Attempting database connection
2025-03-25 02:15:12 - INFO - [database.py:28] - Database connection established in 0.00s
2025-03-25 02:15:20 - INFO - [azure_client.py:46] - SQL generation started for query: 'get me list of customers whose name starts with J'
2025-03-25 02:15:37 - INFO - [azure_client.py:131] - Generated SQL: SELECT first_name, last_name
FROM customers
WHERE first_name LIKE 'J%'
2025-03-25 02:15:37,813 - QUERY: 'get me list of customers whose name starts with J' → SQL: SELECT first_name, last_name
FROM customers
WHERE first_name LIKE 'J%'
2025-03-25 02:15:37 - INFO - [azure_client.py:139] - SQL generation completed in 17.78s
2025-03-25 02:15:37 - INFO - [database.py:45] - Executing SQL query: SELECT first_name, last_name
FROM customers
WHERE first_name LIKE 'J%'
2025-03-25 02:15:37 - INFO - [database.py:66] - Query returned 2 rows with 2 columns
2025-03-25 02:15:37 - INFO - [database.py:75] - Query processing completed in 0.01s
2025-03-25 02:15:37 - INFO - [sql_generator.py:278] - SQL generation completed in 24.92s
2025-03-25 02:15:37 - INFO - [sql_generator.py:117] - Query processing completed in 25.67s
2025-03-25 02:16:19 - INFO - [sql_generator.py:35] - Processing query: 'get me list of customers whose name starts with J'
2025-03-25 02:16:20 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 02:16:20 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 02:16:20 - INFO - [database.py:24] - Attempting database connection
2025-03-25 02:16:20 - INFO - [database.py:28] - Database connection established in 0.01s
2025-03-25 02:16:28 - INFO - [azure_client.py:46] - SQL generation started for query: 'get me list of customers whose name starts with J'
2025-03-25 02:16:40 - INFO - [azure_client.py:131] - Generated SQL: SELECT first_name, last_name
FROM customers
WHERE first_name LIKE 'J%'
2025-03-25 02:16:40,168 - QUERY: 'get me list of customers whose name starts with J' → SQL: SELECT first_name, last_name
FROM customers
WHERE first_name LIKE 'J%'
2025-03-25 02:16:40 - INFO - [azure_client.py:139] - SQL generation completed in 11.31s
2025-03-25 02:16:40 - INFO - [database.py:45] - Executing SQL query: SELECT first_name, last_name
FROM customers
WHERE first_name LIKE 'J%'
2025-03-25 02:16:40 - INFO - [database.py:66] - Query returned 2 rows with 2 columns
2025-03-25 02:16:40 - INFO - [database.py:75] - Query processing completed in 0.00s
2025-03-25 02:16:40 - INFO - [sql_generator.py:278] - SQL generation completed in 20.17s
2025-03-25 02:16:40 - INFO - [sql_generator.py:117] - Query processing completed in 20.90s
2025-03-25 02:16:55 - INFO - [app.py:157] - Schema requested for workspace: Default
2025-03-25 02:16:55 - INFO - [database.py:24] - Attempting database connection
2025-03-25 02:16:55 - INFO - [database.py:28] - Database connection established in 0.00s
2025-03-25 02:16:55 - ERROR - [app.py:171] - Error retrieving database schema: 'DatabaseManager' object has no attribute 'get_schema'
Traceback (most recent call last):
  File "/home/vijay/text2sql/app.py", line 161, in get_schema
    schema = sql_manager.db_manager.get_schema()
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'DatabaseManager' object has no attribute 'get_schema'
2025-03-25 02:18:48 - INFO - [sql_generator.py:35] - Processing query: 'get me list of customers whose name starts with J'
2025-03-25 02:18:49 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 02:18:49 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 02:18:49 - INFO - [database.py:24] - Attempting database connection
2025-03-25 02:18:49 - INFO - [database.py:28] - Database connection established in 0.00s
2025-03-25 02:19:00 - INFO - [azure_client.py:46] - SQL generation started for query: 'get me list of customers whose name starts with J'
2025-03-25 02:19:11 - INFO - [azure_client.py:131] - Generated SQL: SELECT first_name, last_name
FROM customers
WHERE first_name LIKE 'J%'
2025-03-25 02:19:11,872 - QUERY: 'get me list of customers whose name starts with J' → SQL: SELECT first_name, last_name
FROM customers
WHERE first_name LIKE 'J%'
2025-03-25 02:19:11 - INFO - [azure_client.py:139] - SQL generation completed in 11.62s
2025-03-25 02:19:11 - INFO - [database.py:45] - Executing SQL query: SELECT first_name, last_name
FROM customers
WHERE first_name LIKE 'J%'
2025-03-25 02:19:11 - INFO - [database.py:66] - Query returned 2 rows with 2 columns
2025-03-25 02:19:11 - INFO - [database.py:75] - Query processing completed in 0.01s
2025-03-25 02:19:11 - INFO - [sql_generator.py:278] - SQL generation completed in 22.52s
2025-03-25 02:19:11 - INFO - [sql_generator.py:117] - Query processing completed in 23.28s
2025-03-25 02:21:11 - INFO - [sql_generator.py:35] - Processing query: 'get me list of customers whose name starts with J'
2025-03-25 02:21:12 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 02:21:12 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 02:21:12 - INFO - [database.py:24] - Attempting database connection
2025-03-25 02:21:12 - INFO - [database.py:28] - Database connection established in 0.00s
2025-03-25 02:21:19 - INFO - [azure_client.py:46] - SQL generation started for query: 'get me list of customers whose name starts with J'
2025-03-25 02:21:34 - INFO - [azure_client.py:131] - Generated SQL: SELECT first_name, last_name
FROM customers
WHERE first_name LIKE 'J%'
2025-03-25 02:21:34,066 - QUERY: 'get me list of customers whose name starts with J' → SQL: SELECT first_name, last_name
FROM customers
WHERE first_name LIKE 'J%'
2025-03-25 02:21:34 - INFO - [azure_client.py:139] - SQL generation completed in 14.92s
2025-03-25 02:21:34 - INFO - [database.py:45] - Executing SQL query: SELECT first_name, last_name
FROM customers
WHERE first_name LIKE 'J%'
2025-03-25 02:21:34 - INFO - [database.py:66] - Query returned 2 rows with 2 columns
2025-03-25 02:21:34 - INFO - [database.py:75] - Query processing completed in 0.01s
2025-03-25 02:21:34 - INFO - [sql_generator.py:278] - SQL generation completed in 21.52s
2025-03-25 02:21:34 - INFO - [sql_generator.py:117] - Query processing completed in 22.28s
2025-03-25 02:21:40 - INFO - [sql_generator.py:35] - Processing query: 'get me list of customers whose name starts with J'
2025-03-25 02:21:40 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 02:21:40 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 02:21:40 - INFO - [database.py:24] - Attempting database connection
2025-03-25 02:21:40 - INFO - [database.py:28] - Database connection established in 0.00s
2025-03-25 02:21:46 - INFO - [azure_client.py:46] - SQL generation started for query: 'get me list of customers whose name starts with J'
2025-03-25 02:22:04 - INFO - [azure_client.py:131] - Generated SQL: SELECT first_name
FROM customers
WHERE first_name LIKE 'J%'
2025-03-25 02:22:04,328 - QUERY: 'get me list of customers whose name starts with J' → SQL: SELECT first_name
FROM customers
WHERE first_name LIKE 'J%'
2025-03-25 02:22:04 - INFO - [azure_client.py:139] - SQL generation completed in 17.41s
2025-03-25 02:22:04 - INFO - [database.py:45] - Executing SQL query: SELECT first_name
FROM customers
WHERE first_name LIKE 'J%'
2025-03-25 02:22:04 - INFO - [database.py:66] - Query returned 2 rows with 1 columns
2025-03-25 02:22:04 - INFO - [database.py:75] - Query processing completed in 0.01s
2025-03-25 02:22:04 - INFO - [sql_generator.py:278] - SQL generation completed in 23.65s
2025-03-25 02:22:04 - INFO - [sql_generator.py:117] - Query processing completed in 24.32s
2025-03-25 02:24:30 - INFO - [sql_generator.py:35] - Processing query: 'get me list of customers whose name starts with J'
2025-03-25 02:24:31 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 02:24:31 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 02:24:31 - INFO - [database.py:24] - Attempting database connection
2025-03-25 02:24:31 - INFO - [database.py:28] - Database connection established in 0.01s
2025-03-25 02:24:39 - INFO - [azure_client.py:46] - SQL generation started for query: 'get me list of customers whose name starts with J'
2025-03-25 02:24:51 - INFO - [azure_client.py:131] - Generated SQL: SELECT first_name, last_name
FROM customers
WHERE first_name LIKE 'J%'
2025-03-25 02:24:51,378 - QUERY: 'get me list of customers whose name starts with J' → SQL: SELECT first_name, last_name
FROM customers
WHERE first_name LIKE 'J%'
2025-03-25 02:24:51 - INFO - [azure_client.py:139] - SQL generation completed in 12.34s
2025-03-25 02:24:51 - INFO - [database.py:45] - Executing SQL query: SELECT first_name, last_name
FROM customers
WHERE first_name LIKE 'J%'
2025-03-25 02:24:51 - INFO - [database.py:66] - Query returned 2 rows with 2 columns
2025-03-25 02:24:51 - INFO - [database.py:75] - Query processing completed in 0.01s
2025-03-25 02:24:51 - INFO - [sql_generator.py:278] - SQL generation completed in 19.68s
2025-03-25 02:24:51 - INFO - [sql_generator.py:117] - Query processing completed in 20.46s
2025-03-25 02:29:12 - INFO - [sql_generator.py:35] - Processing query: 'get me list of customers whose name starts with J'
2025-03-25 02:29:12 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 02:29:12 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 02:29:12 - INFO - [database.py:24] - Attempting database connection
2025-03-25 02:29:12 - INFO - [database.py:28] - Database connection established in 0.00s
2025-03-25 02:29:13 - INFO - [azure_client.py:46] - SQL generation started for query: 'get me list of customers whose name starts with J'
2025-03-25 02:29:24 - INFO - [azure_client.py:131] - Generated SQL: SELECT first_name, last_name
FROM customers
WHERE first_name LIKE 'J%'
2025-03-25 02:29:24,902 - QUERY: 'get me list of customers whose name starts with J' → SQL: SELECT first_name, last_name
FROM customers
WHERE first_name LIKE 'J%'
2025-03-25 02:29:24 - INFO - [azure_client.py:139] - SQL generation completed in 11.59s
2025-03-25 02:29:24 - INFO - [database.py:45] - Executing SQL query: SELECT first_name, last_name
FROM customers
WHERE first_name LIKE 'J%'
2025-03-25 02:29:24 - INFO - [database.py:66] - Query returned 2 rows with 2 columns
2025-03-25 02:29:24 - INFO - [database.py:75] - Query processing completed in 0.02s
2025-03-25 02:29:24 - INFO - [sql_generator.py:278] - SQL generation completed in 12.16s
2025-03-25 02:29:24 - INFO - [sql_generator.py:117] - Query processing completed in 12.20s
2025-03-25 02:29:37 - INFO - [sql_generator.py:35] - Processing query: 'get me list of customers whose name starts with J'
2025-03-25 02:29:39 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 02:29:39 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 02:29:39 - INFO - [database.py:24] - Attempting database connection
2025-03-25 02:29:39 - INFO - [database.py:28] - Database connection established in 0.00s
2025-03-25 02:29:51 - INFO - [azure_client.py:46] - SQL generation started for query: 'get me list of customers whose name starts with J'
2025-03-25 02:30:05 - INFO - [azure_client.py:131] - Generated SQL: SELECT first_name, last_name
FROM customers
WHERE first_name LIKE 'J%'
2025-03-25 02:30:05,907 - QUERY: 'get me list of customers whose name starts with J' → SQL: SELECT first_name, last_name
FROM customers
WHERE first_name LIKE 'J%'
2025-03-25 02:30:05 - INFO - [azure_client.py:139] - SQL generation completed in 13.99s
2025-03-25 02:30:05 - INFO - [database.py:45] - Executing SQL query: SELECT first_name, last_name
FROM customers
WHERE first_name LIKE 'J%'
2025-03-25 02:30:05 - INFO - [database.py:66] - Query returned 2 rows with 2 columns
2025-03-25 02:30:05 - INFO - [database.py:75] - Query processing completed in 0.02s
2025-03-25 02:30:05 - INFO - [sql_generator.py:278] - SQL generation completed in 26.92s
2025-03-25 02:30:05 - INFO - [sql_generator.py:117] - Query processing completed in 28.31s
2025-03-25 02:30:27 - INFO - [app.py:157] - Schema requested for workspace: Default
2025-03-25 02:30:27 - INFO - [database.py:24] - Attempting database connection
2025-03-25 02:30:27 - INFO - [database.py:28] - Database connection established in 0.00s
2025-03-25 02:30:27 - ERROR - [app.py:171] - Error retrieving database schema: 'DatabaseManager' object has no attribute 'get_schema'
Traceback (most recent call last):
  File "/home/vijay/text2sql/app.py", line 161, in get_schema
    schema = sql_manager.db_manager.get_schema()
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'DatabaseManager' object has no attribute 'get_schema'
2025-03-25 02:31:44 - INFO - [database.py:238] - Closing database connection
2025-03-25 02:31:45 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 02:31:45 - INFO - [azure_client.py:21] - Using model: Phi-3.5-mini-instruct
2025-03-25 02:31:45 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 02:31:45 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 02:31:45 - INFO - [azure_client.py:21] - Using model: Phi-3.5-mini-instruct
2025-03-25 02:31:45 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 02:31:45 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 02:31:45 - INFO - [azure_client.py:21] - Using model: Phi-3.5-mini-instruct
2025-03-25 02:31:45 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 02:31:45 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 02:31:45 - INFO - [azure_client.py:21] - Using model: Phi-3.5-mini-instruct
2025-03-25 02:31:45 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 02:31:45 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-25 02:32:22 - INFO - [database.py:238] - Closing database connection
2025-03-25 02:32:22 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 02:32:22 - INFO - [azure_client.py:21] - Using model: Phi-3.5-mini-instruct
2025-03-25 02:32:22 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 02:32:22 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 02:32:22 - INFO - [azure_client.py:21] - Using model: Phi-3.5-mini-instruct
2025-03-25 02:32:22 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 02:32:22 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 02:32:22 - INFO - [azure_client.py:21] - Using model: Phi-3.5-mini-instruct
2025-03-25 02:32:22 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 02:32:22 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 02:32:22 - INFO - [azure_client.py:21] - Using model: Phi-3.5-mini-instruct
2025-03-25 02:32:22 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 02:32:22 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-25 02:32:28 - INFO - [app.py:157] - Schema requested for workspace: Default
2025-03-25 02:32:38 - INFO - [app.py:157] - Schema requested for workspace: Sales
2025-03-25 02:32:42 - INFO - [app.py:157] - Schema requested for workspace: Analytics
2025-03-25 02:33:09 - INFO - [app.py:157] - Schema requested for workspace: Default
2025-03-25 02:33:14 - INFO - [app.py:223] - Initializing sample database at 'text2sql.db'
2025-03-25 02:33:15 - INFO - [database.py:24] - Attempting database connection
2025-03-25 02:33:15 - INFO - [database.py:28] - Database connection established in 0.01s
2025-03-25 02:33:15 - INFO - [app.py:233] - Sample database initialized in 0.052s
2025-03-25 02:34:10 - INFO - [app.py:157] - Schema requested for workspace: Default
2025-03-25 02:35:57 - INFO - [database.py:238] - Closing database connection
2025-03-25 02:35:57 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 02:35:57 - INFO - [azure_client.py:21] - Using model: Phi-3.5-mini-instruct
2025-03-25 02:35:57 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 02:35:57 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 02:35:57 - INFO - [azure_client.py:21] - Using model: Phi-3.5-mini-instruct
2025-03-25 02:35:57 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 02:35:57 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 02:35:57 - INFO - [azure_client.py:21] - Using model: Phi-3.5-mini-instruct
2025-03-25 02:35:57 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 02:35:57 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 02:35:57 - INFO - [azure_client.py:21] - Using model: Phi-3.5-mini-instruct
2025-03-25 02:35:57 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 02:35:57 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-25 02:36:12 - INFO - [app.py:157] - Schema requested for workspace: Default
2025-03-25 02:36:36 - INFO - [database.py:238] - Closing database connection
2025-03-25 02:36:37 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 02:36:37 - INFO - [azure_client.py:21] - Using model: Phi-3.5-mini-instruct
2025-03-25 02:36:37 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 02:36:37 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 02:36:37 - INFO - [azure_client.py:21] - Using model: Phi-3.5-mini-instruct
2025-03-25 02:36:37 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 02:36:37 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 02:36:37 - INFO - [azure_client.py:21] - Using model: Phi-3.5-mini-instruct
2025-03-25 02:36:37 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 02:36:37 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 02:36:37 - INFO - [azure_client.py:21] - Using model: Phi-3.5-mini-instruct
2025-03-25 02:36:37 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 02:36:37 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-25 02:36:48 - INFO - [app.py:156] - Schema requested for workspace: Default
2025-03-25 02:37:13 - INFO - [database.py:238] - Closing database connection
2025-03-25 02:37:13 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 02:37:13 - INFO - [azure_client.py:21] - Using model: Phi-3.5-mini-instruct
2025-03-25 02:37:13 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 02:37:13 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 02:37:13 - INFO - [azure_client.py:21] - Using model: Phi-3.5-mini-instruct
2025-03-25 02:37:13 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 02:37:13 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 02:37:13 - INFO - [azure_client.py:21] - Using model: Phi-3.5-mini-instruct
2025-03-25 02:37:13 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 02:37:13 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 02:37:13 - INFO - [azure_client.py:21] - Using model: Phi-3.5-mini-instruct
2025-03-25 02:37:13 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 02:37:13 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-25 02:37:24 - INFO - [sql_generator.py:35] - Processing query: 'get me list of customers whose name starts with J'
2025-03-25 02:37:26 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 02:37:26 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 02:37:26 - INFO - [database.py:24] - Attempting database connection
2025-03-25 02:37:26 - INFO - [database.py:28] - Database connection established in 0.02s
2025-03-25 02:37:35 - INFO - [azure_client.py:46] - SQL generation started for query: 'get me list of customers whose name starts with J'
2025-03-25 02:39:07 - INFO - [database.py:238] - Closing database connection
2025-03-25 02:39:07 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 02:39:07 - INFO - [azure_client.py:21] - Using model: Phi-3.5-mini-instruct
2025-03-25 02:39:07 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 02:39:07 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 02:39:07 - INFO - [azure_client.py:21] - Using model: Phi-3.5-mini-instruct
2025-03-25 02:39:07 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 02:39:07 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 02:39:07 - INFO - [azure_client.py:21] - Using model: Phi-3.5-mini-instruct
2025-03-25 02:39:07 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 02:39:07 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 02:39:07 - INFO - [azure_client.py:21] - Using model: Phi-3.5-mini-instruct
2025-03-25 02:39:07 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 02:39:07 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-25 02:39:27 - INFO - [app.py:156] - Schema requested for workspace: Default
2025-03-25 02:39:56 - INFO - [database.py:238] - Closing database connection
2025-03-25 02:39:56 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 02:39:56 - INFO - [azure_client.py:21] - Using model: Phi-3.5-mini-instruct
2025-03-25 02:39:57 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 02:39:57 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 02:39:57 - INFO - [azure_client.py:21] - Using model: Phi-3.5-mini-instruct
2025-03-25 02:39:57 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 02:39:57 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 02:39:57 - INFO - [azure_client.py:21] - Using model: Phi-3.5-mini-instruct
2025-03-25 02:39:57 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 02:39:57 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 02:39:57 - INFO - [azure_client.py:21] - Using model: Phi-3.5-mini-instruct
2025-03-25 02:39:57 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 02:39:57 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-25 02:41:09 - INFO - [database.py:238] - Closing database connection
2025-03-25 02:41:10 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 02:41:10 - INFO - [azure_client.py:21] - Using model: Phi-3.5-mini-instruct
2025-03-25 02:41:10 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 02:41:10 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 02:41:10 - INFO - [azure_client.py:21] - Using model: Phi-3.5-mini-instruct
2025-03-25 02:41:10 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 02:41:10 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 02:41:10 - INFO - [azure_client.py:21] - Using model: Phi-3.5-mini-instruct
2025-03-25 02:41:10 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 02:41:10 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 02:41:10 - INFO - [azure_client.py:21] - Using model: Phi-3.5-mini-instruct
2025-03-25 02:41:10 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 02:41:10 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-25 02:41:17 - INFO - [app.py:156] - Schema requested for workspace: Default
2025-03-25 02:41:43 - INFO - [app.py:156] - Schema requested for workspace: Default
2025-03-25 02:42:05 - INFO - [app.py:156] - Schema requested for workspace: Default
2025-03-25 02:44:36 - INFO - [database.py:238] - Closing database connection
2025-03-25 02:44:37 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 02:44:37 - INFO - [azure_client.py:21] - Using model: Phi-3.5-mini-instruct
2025-03-25 02:44:37 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 02:44:37 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 02:44:37 - INFO - [azure_client.py:21] - Using model: Phi-3.5-mini-instruct
2025-03-25 02:44:37 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 02:44:37 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 02:44:37 - INFO - [azure_client.py:21] - Using model: Phi-3.5-mini-instruct
2025-03-25 02:44:37 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 02:44:37 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 02:44:37 - INFO - [azure_client.py:21] - Using model: Phi-3.5-mini-instruct
2025-03-25 02:44:37 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 02:44:37 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-25 02:46:57 - INFO - [app.py:156] - Schema requested for workspace: Default
2025-03-25 02:47:13 - INFO - [database.py:238] - Closing database connection
2025-03-25 02:47:14 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 02:47:14 - INFO - [azure_client.py:21] - Using model: Phi-3.5-mini-instruct
2025-03-25 02:47:14 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 02:47:14 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 02:47:14 - INFO - [azure_client.py:21] - Using model: Phi-3.5-mini-instruct
2025-03-25 02:47:14 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 02:47:14 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 02:47:14 - INFO - [azure_client.py:21] - Using model: Phi-3.5-mini-instruct
2025-03-25 02:47:14 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 02:47:14 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 02:47:14 - INFO - [azure_client.py:21] - Using model: Phi-3.5-mini-instruct
2025-03-25 02:47:14 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 02:47:14 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-25 02:48:33 - INFO - [database.py:238] - Closing database connection
2025-03-25 02:48:36 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 02:48:36 - INFO - [azure_client.py:21] - Using model: Phi-3.5-mini-instruct
2025-03-25 02:48:36 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 02:48:36 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 02:48:36 - INFO - [azure_client.py:21] - Using model: Phi-3.5-mini-instruct
2025-03-25 02:48:36 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 02:48:36 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 02:48:36 - INFO - [azure_client.py:21] - Using model: Phi-3.5-mini-instruct
2025-03-25 02:48:36 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 02:48:36 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 02:48:36 - INFO - [azure_client.py:21] - Using model: Phi-3.5-mini-instruct
2025-03-25 02:48:36 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 02:48:36 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-25 02:50:37 - INFO - [database.py:238] - Closing database connection
2025-03-25 02:50:39 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 02:50:39 - INFO - [azure_client.py:21] - Using model: Phi-3.5-mini-instruct
2025-03-25 02:50:39 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 02:50:39 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 02:50:39 - INFO - [azure_client.py:21] - Using model: Phi-3.5-mini-instruct
2025-03-25 02:50:39 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 02:50:39 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 02:50:39 - INFO - [azure_client.py:21] - Using model: Phi-3.5-mini-instruct
2025-03-25 02:50:39 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 02:50:39 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 02:50:39 - INFO - [azure_client.py:21] - Using model: Phi-3.5-mini-instruct
2025-03-25 02:50:39 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 02:50:39 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-25 02:50:43 - INFO - [app.py:156] - Schema requested for workspace: Default
2025-03-25 02:51:09 - INFO - [sql_generator.py:35] - Processing query: 'get me list of customers whose name starts with J'
2025-03-25 02:56:54 - INFO - [database.py:238] - Closing database connection
2025-03-25 02:57:03 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 02:57:03 - INFO - [azure_client.py:21] - Using model: Phi-3.5-mini-instruct
2025-03-25 02:57:03 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 02:57:03 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 02:57:03 - INFO - [azure_client.py:21] - Using model: Phi-3.5-mini-instruct
2025-03-25 02:57:03 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 02:57:03 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 02:57:03 - INFO - [azure_client.py:21] - Using model: Phi-3.5-mini-instruct
2025-03-25 02:57:03 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 02:57:03 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 02:57:03 - INFO - [azure_client.py:21] - Using model: Phi-3.5-mini-instruct
2025-03-25 02:57:03 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 02:57:03 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-25 02:57:03 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 02:57:03 - INFO - [azure_client.py:21] - Using model: Phi-3.5-mini-instruct
2025-03-25 02:57:03 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 02:57:03 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 02:57:03 - INFO - [azure_client.py:21] - Using model: Phi-3.5-mini-instruct
2025-03-25 02:57:03 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 02:57:03 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 02:57:03 - INFO - [azure_client.py:21] - Using model: Phi-3.5-mini-instruct
2025-03-25 02:57:03 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 02:57:03 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 02:57:03 - INFO - [azure_client.py:21] - Using model: Phi-3.5-mini-instruct
2025-03-25 02:57:03 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 02:57:03 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-25 02:57:18 - INFO - [sql_generator.py:35] - Processing query: 'get me list of customers whose name starts with J'
2025-03-25 02:58:02 - INFO - [database.py:238] - Closing database connection
2025-03-25 02:58:02 - INFO - [database.py:238] - Closing database connection
2025-03-25 02:58:44 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 02:58:44 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 02:58:44 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 02:58:44 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 02:58:44 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 02:58:44 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 02:58:44 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 02:58:44 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 02:58:44 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 02:58:44 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 02:58:44 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 02:58:44 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 02:58:44 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-25 02:58:45 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 02:58:45 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 02:58:45 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 02:58:45 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 02:58:45 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 02:58:45 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 02:58:45 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 02:58:45 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 02:58:45 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 02:58:45 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 02:58:45 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 02:58:45 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 02:58:45 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-25 02:58:57 - INFO - [sql_generator.py:35] - Processing query: 'get me list of customers whose name starts with J'
2025-03-25 02:58:59 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 02:58:59 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 02:58:59 - INFO - [database.py:24] - Attempting database connection
2025-03-25 02:58:59 - INFO - [database.py:28] - Database connection established in 0.01s
2025-03-25 02:59:03 - INFO - [azure_client.py:46] - SQL generation started for query: 'get me list of customers whose name starts with J'
2025-03-25 02:59:08 - INFO - [azure_client.py:131] - Generated SQL: SELECT customer_id, first_name, last_name
FROM customers
WHERE first_name LIKE 'J%';
2025-03-25 02:59:08,433 - QUERY: 'get me list of customers whose name starts with J' → SQL: SELECT customer_id, first_name, last_name
FROM customers
WHERE first_name LIKE 'J%';
2025-03-25 02:59:08 - INFO - [azure_client.py:139] - SQL generation completed in 5.11s
2025-03-25 02:59:08 - INFO - [database.py:45] - Executing SQL query: SELECT customer_id, first_name, last_name
FROM customers
WHERE first_name LIKE 'J%';
2025-03-25 02:59:08 - INFO - [database.py:66] - Query returned 2 rows with 3 columns
2025-03-25 02:59:08 - INFO - [database.py:75] - Query processing completed in 0.01s
2025-03-25 02:59:08 - INFO - [sql_generator.py:278] - SQL generation completed in 9.42s
2025-03-25 02:59:08 - INFO - [sql_generator.py:117] - Query processing completed in 11.07s
2025-03-25 02:59:29 - INFO - [database.py:238] - Closing database connection
2025-03-25 02:59:46 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 02:59:46 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 02:59:46 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 02:59:46 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 02:59:46 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 02:59:46 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 02:59:46 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 02:59:46 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 02:59:46 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 02:59:46 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 02:59:46 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 02:59:46 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 02:59:46 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-25 02:59:48 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 02:59:48 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 02:59:48 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 02:59:48 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 02:59:48 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 02:59:48 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 02:59:48 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 02:59:48 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 02:59:48 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 02:59:48 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 02:59:48 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 02:59:48 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 02:59:48 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-25 03:03:31 - INFO - [database.py:238] - Closing database connection
2025-03-25 03:03:31 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:03:31 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:03:32 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:03:32 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:03:32 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:03:32 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:03:32 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:03:32 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:03:32 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:03:32 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:03:32 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:03:32 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:03:32 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-25 03:04:53 - INFO - [database.py:238] - Closing database connection
2025-03-25 03:04:53 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:04:53 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:04:54 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:04:54 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:04:54 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:04:54 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:04:54 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:04:54 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:04:54 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:04:54 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:04:54 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:04:54 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:04:54 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-25 03:05:23 - INFO - [database.py:238] - Closing database connection
2025-03-25 03:05:25 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:05:25 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:05:25 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:05:25 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:05:25 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:05:25 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:05:25 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:05:25 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:05:25 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:05:25 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:05:25 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:05:25 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:05:25 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-25 03:05:36 - INFO - [database.py:238] - Closing database connection
2025-03-25 03:05:37 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:05:37 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:05:37 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:05:37 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:05:37 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:05:37 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:05:37 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:05:37 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:05:37 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:05:37 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:05:37 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:05:37 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:05:37 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-25 03:05:50 - INFO - [database.py:238] - Closing database connection
2025-03-25 03:05:52 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:05:52 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:05:52 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:05:52 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:05:52 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:05:52 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:05:52 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:05:52 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:05:52 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:05:52 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:05:52 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:05:52 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:05:52 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-25 03:05:54 - INFO - [database.py:238] - Closing database connection
2025-03-25 03:05:56 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:05:56 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:05:56 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:05:56 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:05:56 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:05:56 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:05:56 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:05:56 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:05:56 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:05:56 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:05:56 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:05:56 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:05:56 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-25 03:06:21 - INFO - [database.py:238] - Closing database connection
2025-03-25 03:06:22 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:06:22 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:06:23 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:06:23 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:06:23 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:06:23 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:06:23 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:06:23 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:06:23 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:06:23 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:06:23 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:06:23 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:06:23 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-25 03:09:26 - INFO - [streamlit_app.py:79] - Schema requested for workspace: Default
2025-03-25 03:09:26 - INFO - [streamlit_app.py:79] - Schema requested for workspace: Default
2025-03-25 03:09:26 - INFO - [streamlit_app.py:79] - Schema requested for workspace: Default
2025-03-25 03:09:26 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:09:26 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:09:26 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:09:26 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:09:26 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:09:26 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:09:27 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:09:27 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:09:27 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:09:27 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:09:27 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:09:27 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:09:27 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:09:27 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:09:27 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:09:27 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:09:27 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:09:27 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:09:27 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:09:27 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:09:27 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:09:27 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:09:27 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:09:27 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:09:27 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:09:27 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:09:27 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:09:27 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:09:27 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:09:27 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:09:27 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:09:27 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:09:27 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:09:27 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:09:27 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:09:27 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:09:27 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-25 03:09:27 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-25 03:09:27 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-25 03:09:36 - INFO - [streamlit_app.py:79] - Schema requested for workspace: Default
2025-03-25 03:09:36 - INFO - [streamlit_app.py:79] - Schema requested for workspace: Default
2025-03-25 03:09:36 - INFO - [streamlit_app.py:79] - Schema requested for workspace: Default
2025-03-25 03:09:36 - INFO - [streamlit_app.py:79] - Schema requested for workspace: Default
2025-03-25 03:09:36 - INFO - [streamlit_app.py:125] - Processing query: 'How many customers do we have?'
2025-03-25 03:09:36 - INFO - [streamlit_app.py:125] - Processing query: 'How many customers do we have?'
2025-03-25 03:09:36 - INFO - [streamlit_app.py:125] - Processing query: 'How many customers do we have?'
2025-03-25 03:09:36 - INFO - [streamlit_app.py:125] - Processing query: 'How many customers do we have?'
2025-03-25 03:09:36 - INFO - [sql_generator.py:35] - Processing query: 'How many customers do we have?'
2025-03-25 03:09:36 - INFO - [sql_generator.py:35] - Processing query: 'How many customers do we have?'
2025-03-25 03:09:36 - INFO - [sql_generator.py:35] - Processing query: 'How many customers do we have?'
2025-03-25 03:09:36 - INFO - [sql_generator.py:35] - Processing query: 'How many customers do we have?'
2025-03-25 03:09:38 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:09:38 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:09:38 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:09:38 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:09:38 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:09:38 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:09:38 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:09:38 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:09:38 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:09:38 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:09:38 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:09:38 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:09:38 - INFO - [database.py:28] - Database connection established in 0.01s
2025-03-25 03:09:38 - INFO - [database.py:28] - Database connection established in 0.01s
2025-03-25 03:09:38 - INFO - [database.py:28] - Database connection established in 0.01s
2025-03-25 03:09:38 - INFO - [database.py:28] - Database connection established in 0.01s
2025-03-25 03:09:43 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 03:09:43 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 03:09:43 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 03:09:43 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 03:09:47 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:09:47 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:09:47 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:09:47 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:09:47,810 - QUERY: 'How many customers do we have?' → SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:09:47 - INFO - [azure_client.py:139] - SQL generation completed in 3.91s
2025-03-25 03:09:47 - INFO - [azure_client.py:139] - SQL generation completed in 3.91s
2025-03-25 03:09:47 - INFO - [azure_client.py:139] - SQL generation completed in 3.91s
2025-03-25 03:09:47 - INFO - [azure_client.py:139] - SQL generation completed in 3.91s
2025-03-25 03:09:47 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:09:47 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:09:47 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:09:47 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:09:47 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:09:47 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:09:47 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:09:47 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:09:47 - INFO - [database.py:75] - Query processing completed in 0.01s
2025-03-25 03:09:47 - INFO - [database.py:75] - Query processing completed in 0.01s
2025-03-25 03:09:47 - INFO - [database.py:75] - Query processing completed in 0.01s
2025-03-25 03:09:47 - INFO - [database.py:75] - Query processing completed in 0.01s
2025-03-25 03:09:47 - INFO - [sql_generator.py:278] - SQL generation completed in 9.41s
2025-03-25 03:09:47 - INFO - [sql_generator.py:278] - SQL generation completed in 9.41s
2025-03-25 03:09:47 - INFO - [sql_generator.py:278] - SQL generation completed in 9.41s
2025-03-25 03:09:47 - INFO - [sql_generator.py:278] - SQL generation completed in 9.41s
2025-03-25 03:09:47 - INFO - [sql_generator.py:117] - Query processing completed in 11.07s
2025-03-25 03:09:47 - INFO - [sql_generator.py:117] - Query processing completed in 11.07s
2025-03-25 03:09:47 - INFO - [sql_generator.py:117] - Query processing completed in 11.07s
2025-03-25 03:09:47 - INFO - [sql_generator.py:117] - Query processing completed in 11.07s
2025-03-25 03:10:05 - INFO - [streamlit_app.py:79] - Schema requested for workspace: Default
2025-03-25 03:10:05 - INFO - [streamlit_app.py:79] - Schema requested for workspace: Default
2025-03-25 03:10:05 - INFO - [streamlit_app.py:79] - Schema requested for workspace: Default
2025-03-25 03:10:05 - INFO - [streamlit_app.py:79] - Schema requested for workspace: Default
2025-03-25 03:10:05 - INFO - [streamlit_app.py:79] - Schema requested for workspace: Default
2025-03-25 03:10:05 - INFO - [streamlit_app.py:125] - Processing query: 'Which customers made the most orders?'
2025-03-25 03:10:05 - INFO - [streamlit_app.py:125] - Processing query: 'Which customers made the most orders?'
2025-03-25 03:10:05 - INFO - [streamlit_app.py:125] - Processing query: 'Which customers made the most orders?'
2025-03-25 03:10:05 - INFO - [streamlit_app.py:125] - Processing query: 'Which customers made the most orders?'
2025-03-25 03:10:05 - INFO - [streamlit_app.py:125] - Processing query: 'Which customers made the most orders?'
2025-03-25 03:10:05 - INFO - [sql_generator.py:35] - Processing query: 'Which customers made the most orders?'
2025-03-25 03:10:05 - INFO - [sql_generator.py:35] - Processing query: 'Which customers made the most orders?'
2025-03-25 03:10:05 - INFO - [sql_generator.py:35] - Processing query: 'Which customers made the most orders?'
2025-03-25 03:10:05 - INFO - [sql_generator.py:35] - Processing query: 'Which customers made the most orders?'
2025-03-25 03:10:05 - INFO - [sql_generator.py:35] - Processing query: 'Which customers made the most orders?'
2025-03-25 03:10:05 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:10:05 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:10:05 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:10:05 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:10:05 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:10:05 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:10:05 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:10:05 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:10:05 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:10:05 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:10:05 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:10:05 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:10:05 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:10:05 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:10:05 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:10:05 - INFO - [database.py:28] - Database connection established in 0.01s
2025-03-25 03:10:05 - INFO - [database.py:28] - Database connection established in 0.01s
2025-03-25 03:10:05 - INFO - [database.py:28] - Database connection established in 0.01s
2025-03-25 03:10:05 - INFO - [database.py:28] - Database connection established in 0.01s
2025-03-25 03:10:05 - INFO - [database.py:28] - Database connection established in 0.01s
2025-03-25 03:10:08 - INFO - [azure_client.py:46] - SQL generation started for query: 'Which customers made the most orders?'
2025-03-25 03:10:08 - INFO - [azure_client.py:46] - SQL generation started for query: 'Which customers made the most orders?'
2025-03-25 03:10:08 - INFO - [azure_client.py:46] - SQL generation started for query: 'Which customers made the most orders?'
2025-03-25 03:10:08 - INFO - [azure_client.py:46] - SQL generation started for query: 'Which customers made the most orders?'
2025-03-25 03:10:08 - INFO - [azure_client.py:46] - SQL generation started for query: 'Which customers made the most orders?'
2025-03-25 03:10:17 - INFO - [azure_client.py:131] - Generated SQL: SELECT 
    c.customer_id, 
    c.first_name, 
    c.last_name, 
    COUNT(o.order_id) AS order_count
FROM 
    customers c
LEFT JOIN 
    orders o
ON 
    c.customer_id = o.customer_id
GROUP BY 
    c.customer_id, c.first_name, c.last_name
ORDER BY 
    order_count DESC
LIMIT 1;
2025-03-25 03:10:17 - INFO - [azure_client.py:131] - Generated SQL: SELECT 
    c.customer_id, 
    c.first_name, 
    c.last_name, 
    COUNT(o.order_id) AS order_count
FROM 
    customers c
LEFT JOIN 
    orders o
ON 
    c.customer_id = o.customer_id
GROUP BY 
    c.customer_id, c.first_name, c.last_name
ORDER BY 
    order_count DESC
LIMIT 1;
2025-03-25 03:10:17 - INFO - [azure_client.py:131] - Generated SQL: SELECT 
    c.customer_id, 
    c.first_name, 
    c.last_name, 
    COUNT(o.order_id) AS order_count
FROM 
    customers c
LEFT JOIN 
    orders o
ON 
    c.customer_id = o.customer_id
GROUP BY 
    c.customer_id, c.first_name, c.last_name
ORDER BY 
    order_count DESC
LIMIT 1;
2025-03-25 03:10:17 - INFO - [azure_client.py:131] - Generated SQL: SELECT 
    c.customer_id, 
    c.first_name, 
    c.last_name, 
    COUNT(o.order_id) AS order_count
FROM 
    customers c
LEFT JOIN 
    orders o
ON 
    c.customer_id = o.customer_id
GROUP BY 
    c.customer_id, c.first_name, c.last_name
ORDER BY 
    order_count DESC
LIMIT 1;
2025-03-25 03:10:17 - INFO - [azure_client.py:131] - Generated SQL: SELECT 
    c.customer_id, 
    c.first_name, 
    c.last_name, 
    COUNT(o.order_id) AS order_count
FROM 
    customers c
LEFT JOIN 
    orders o
ON 
    c.customer_id = o.customer_id
GROUP BY 
    c.customer_id, c.first_name, c.last_name
ORDER BY 
    order_count DESC
LIMIT 1;
2025-03-25 03:10:17,107 - QUERY: 'Which customers made the most orders?' → SQL: SELECT 
    c.customer_id, 
    c.first_name, 
    c.last_name, 
    COUNT(o.order_id) AS order_count
FROM 
    customers c
LEFT JOIN 
    orders o
ON 
    c.customer_id = o.customer_id
GROUP BY 
    c.customer_id, c.first_name, c.last_name
ORDER BY 
    order_count DESC
LIMIT 1;
2025-03-25 03:10:17 - INFO - [azure_client.py:139] - SQL generation completed in 8.62s
2025-03-25 03:10:17 - INFO - [azure_client.py:139] - SQL generation completed in 8.62s
2025-03-25 03:10:17 - INFO - [azure_client.py:139] - SQL generation completed in 8.62s
2025-03-25 03:10:17 - INFO - [azure_client.py:139] - SQL generation completed in 8.62s
2025-03-25 03:10:17 - INFO - [azure_client.py:139] - SQL generation completed in 8.62s
2025-03-25 03:10:17 - INFO - [database.py:45] - Executing SQL query: SELECT 
    c.customer_id, 
    c.first_name, 
    c.last_name, 
    COUNT(o.order_id) AS order_count
FROM 
    customers c
LEFT JOIN 
    orders o
ON 
    c.customer_id = o.customer_id
GROUP BY 
    c.customer_id, c.first_name, c.last_name
ORDER BY 
    order_count DESC
LIMIT 1;
2025-03-25 03:10:17 - INFO - [database.py:45] - Executing SQL query: SELECT 
    c.customer_id, 
    c.first_name, 
    c.last_name, 
    COUNT(o.order_id) AS order_count
FROM 
    customers c
LEFT JOIN 
    orders o
ON 
    c.customer_id = o.customer_id
GROUP BY 
    c.customer_id, c.first_name, c.last_name
ORDER BY 
    order_count DESC
LIMIT 1;
2025-03-25 03:10:17 - INFO - [database.py:45] - Executing SQL query: SELECT 
    c.customer_id, 
    c.first_name, 
    c.last_name, 
    COUNT(o.order_id) AS order_count
FROM 
    customers c
LEFT JOIN 
    orders o
ON 
    c.customer_id = o.customer_id
GROUP BY 
    c.customer_id, c.first_name, c.last_name
ORDER BY 
    order_count DESC
LIMIT 1;
2025-03-25 03:10:17 - INFO - [database.py:45] - Executing SQL query: SELECT 
    c.customer_id, 
    c.first_name, 
    c.last_name, 
    COUNT(o.order_id) AS order_count
FROM 
    customers c
LEFT JOIN 
    orders o
ON 
    c.customer_id = o.customer_id
GROUP BY 
    c.customer_id, c.first_name, c.last_name
ORDER BY 
    order_count DESC
LIMIT 1;
2025-03-25 03:10:17 - INFO - [database.py:45] - Executing SQL query: SELECT 
    c.customer_id, 
    c.first_name, 
    c.last_name, 
    COUNT(o.order_id) AS order_count
FROM 
    customers c
LEFT JOIN 
    orders o
ON 
    c.customer_id = o.customer_id
GROUP BY 
    c.customer_id, c.first_name, c.last_name
ORDER BY 
    order_count DESC
LIMIT 1;
2025-03-25 03:10:17 - INFO - [database.py:66] - Query returned 1 rows with 4 columns
2025-03-25 03:10:17 - INFO - [database.py:66] - Query returned 1 rows with 4 columns
2025-03-25 03:10:17 - INFO - [database.py:66] - Query returned 1 rows with 4 columns
2025-03-25 03:10:17 - INFO - [database.py:66] - Query returned 1 rows with 4 columns
2025-03-25 03:10:17 - INFO - [database.py:66] - Query returned 1 rows with 4 columns
2025-03-25 03:10:17 - INFO - [database.py:75] - Query processing completed in 0.02s
2025-03-25 03:10:17 - INFO - [database.py:75] - Query processing completed in 0.02s
2025-03-25 03:10:17 - INFO - [database.py:75] - Query processing completed in 0.02s
2025-03-25 03:10:17 - INFO - [database.py:75] - Query processing completed in 0.02s
2025-03-25 03:10:17 - INFO - [database.py:75] - Query processing completed in 0.02s
2025-03-25 03:10:17 - INFO - [sql_generator.py:278] - SQL generation completed in 11.17s
2025-03-25 03:10:17 - INFO - [sql_generator.py:278] - SQL generation completed in 11.17s
2025-03-25 03:10:17 - INFO - [sql_generator.py:278] - SQL generation completed in 11.17s
2025-03-25 03:10:17 - INFO - [sql_generator.py:278] - SQL generation completed in 11.17s
2025-03-25 03:10:17 - INFO - [sql_generator.py:278] - SQL generation completed in 11.17s
2025-03-25 03:10:17 - INFO - [sql_generator.py:117] - Query processing completed in 11.90s
2025-03-25 03:10:17 - INFO - [sql_generator.py:117] - Query processing completed in 11.90s
2025-03-25 03:10:17 - INFO - [sql_generator.py:117] - Query processing completed in 11.90s
2025-03-25 03:10:17 - INFO - [sql_generator.py:117] - Query processing completed in 11.90s
2025-03-25 03:10:17 - INFO - [sql_generator.py:117] - Query processing completed in 11.90s
2025-03-25 03:10:48 - INFO - [streamlit_app.py:79] - Schema requested for workspace: Default
2025-03-25 03:10:48 - INFO - [streamlit_app.py:79] - Schema requested for workspace: Default
2025-03-25 03:10:48 - INFO - [streamlit_app.py:79] - Schema requested for workspace: Default
2025-03-25 03:10:48 - INFO - [streamlit_app.py:79] - Schema requested for workspace: Default
2025-03-25 03:10:48 - INFO - [streamlit_app.py:79] - Schema requested for workspace: Default
2025-03-25 03:10:48 - INFO - [streamlit_app.py:79] - Schema requested for workspace: Default
2025-03-25 03:10:48 - INFO - [streamlit_app.py:125] - Processing query: 'Which customers made the most orders?'
2025-03-25 03:10:48 - INFO - [streamlit_app.py:125] - Processing query: 'Which customers made the most orders?'
2025-03-25 03:10:48 - INFO - [streamlit_app.py:125] - Processing query: 'Which customers made the most orders?'
2025-03-25 03:10:48 - INFO - [streamlit_app.py:125] - Processing query: 'Which customers made the most orders?'
2025-03-25 03:10:48 - INFO - [streamlit_app.py:125] - Processing query: 'Which customers made the most orders?'
2025-03-25 03:10:48 - INFO - [streamlit_app.py:125] - Processing query: 'Which customers made the most orders?'
2025-03-25 03:10:48 - INFO - [sql_generator.py:35] - Processing query: 'Which customers made the most orders?'
2025-03-25 03:10:48 - INFO - [sql_generator.py:35] - Processing query: 'Which customers made the most orders?'
2025-03-25 03:10:48 - INFO - [sql_generator.py:35] - Processing query: 'Which customers made the most orders?'
2025-03-25 03:10:48 - INFO - [sql_generator.py:35] - Processing query: 'Which customers made the most orders?'
2025-03-25 03:10:48 - INFO - [sql_generator.py:35] - Processing query: 'Which customers made the most orders?'
2025-03-25 03:10:48 - INFO - [sql_generator.py:35] - Processing query: 'Which customers made the most orders?'
2025-03-25 03:10:49 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:10:49 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:10:49 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:10:49 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:10:49 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:10:49 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:10:49 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:10:49 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:10:49 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:10:49 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:10:49 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:10:49 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:10:49 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:10:49 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:10:49 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:10:49 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:10:49 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:10:49 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:10:49 - INFO - [database.py:28] - Database connection established in 0.00s
2025-03-25 03:10:49 - INFO - [database.py:28] - Database connection established in 0.00s
2025-03-25 03:10:49 - INFO - [database.py:28] - Database connection established in 0.00s
2025-03-25 03:10:49 - INFO - [database.py:28] - Database connection established in 0.00s
2025-03-25 03:10:49 - INFO - [database.py:28] - Database connection established in 0.00s
2025-03-25 03:10:49 - INFO - [database.py:28] - Database connection established in 0.00s
2025-03-25 03:10:53 - INFO - [azure_client.py:46] - SQL generation started for query: 'Which customers made the most orders?'
2025-03-25 03:10:53 - INFO - [azure_client.py:46] - SQL generation started for query: 'Which customers made the most orders?'
2025-03-25 03:10:53 - INFO - [azure_client.py:46] - SQL generation started for query: 'Which customers made the most orders?'
2025-03-25 03:10:53 - INFO - [azure_client.py:46] - SQL generation started for query: 'Which customers made the most orders?'
2025-03-25 03:10:53 - INFO - [azure_client.py:46] - SQL generation started for query: 'Which customers made the most orders?'
2025-03-25 03:10:53 - INFO - [azure_client.py:46] - SQL generation started for query: 'Which customers made the most orders?'
2025-03-25 03:11:05 - INFO - [azure_client.py:131] - Generated SQL: SELECT 
    c.customer_id, 
    c.first_name, 
    c.last_name, 
    COUNT(o.order_id) AS order_count
FROM 
    customers c
JOIN 
    orders o 
ON 
    c.customer_id = o.customer_id
GROUP BY 
    c.customer_id, c.first_name, c.last_name
HAVING 
    COUNT(o.order_id) = (
        SELECT MAX(order_count)
        FROM (
            SELECT COUNT(order_id) AS order_count
            FROM orders
            GROUP BY customer_id
        ) subquery
    )
2025-03-25 03:11:05 - INFO - [azure_client.py:131] - Generated SQL: SELECT 
    c.customer_id, 
    c.first_name, 
    c.last_name, 
    COUNT(o.order_id) AS order_count
FROM 
    customers c
JOIN 
    orders o 
ON 
    c.customer_id = o.customer_id
GROUP BY 
    c.customer_id, c.first_name, c.last_name
HAVING 
    COUNT(o.order_id) = (
        SELECT MAX(order_count)
        FROM (
            SELECT COUNT(order_id) AS order_count
            FROM orders
            GROUP BY customer_id
        ) subquery
    )
2025-03-25 03:11:05 - INFO - [azure_client.py:131] - Generated SQL: SELECT 
    c.customer_id, 
    c.first_name, 
    c.last_name, 
    COUNT(o.order_id) AS order_count
FROM 
    customers c
JOIN 
    orders o 
ON 
    c.customer_id = o.customer_id
GROUP BY 
    c.customer_id, c.first_name, c.last_name
HAVING 
    COUNT(o.order_id) = (
        SELECT MAX(order_count)
        FROM (
            SELECT COUNT(order_id) AS order_count
            FROM orders
            GROUP BY customer_id
        ) subquery
    )
2025-03-25 03:11:05 - INFO - [azure_client.py:131] - Generated SQL: SELECT 
    c.customer_id, 
    c.first_name, 
    c.last_name, 
    COUNT(o.order_id) AS order_count
FROM 
    customers c
JOIN 
    orders o 
ON 
    c.customer_id = o.customer_id
GROUP BY 
    c.customer_id, c.first_name, c.last_name
HAVING 
    COUNT(o.order_id) = (
        SELECT MAX(order_count)
        FROM (
            SELECT COUNT(order_id) AS order_count
            FROM orders
            GROUP BY customer_id
        ) subquery
    )
2025-03-25 03:11:05 - INFO - [azure_client.py:131] - Generated SQL: SELECT 
    c.customer_id, 
    c.first_name, 
    c.last_name, 
    COUNT(o.order_id) AS order_count
FROM 
    customers c
JOIN 
    orders o 
ON 
    c.customer_id = o.customer_id
GROUP BY 
    c.customer_id, c.first_name, c.last_name
HAVING 
    COUNT(o.order_id) = (
        SELECT MAX(order_count)
        FROM (
            SELECT COUNT(order_id) AS order_count
            FROM orders
            GROUP BY customer_id
        ) subquery
    )
2025-03-25 03:11:05 - INFO - [azure_client.py:131] - Generated SQL: SELECT 
    c.customer_id, 
    c.first_name, 
    c.last_name, 
    COUNT(o.order_id) AS order_count
FROM 
    customers c
JOIN 
    orders o 
ON 
    c.customer_id = o.customer_id
GROUP BY 
    c.customer_id, c.first_name, c.last_name
HAVING 
    COUNT(o.order_id) = (
        SELECT MAX(order_count)
        FROM (
            SELECT COUNT(order_id) AS order_count
            FROM orders
            GROUP BY customer_id
        ) subquery
    )
2025-03-25 03:11:05,966 - QUERY: 'Which customers made the most orders?' → SQL: SELECT 
    c.customer_id, 
    c.first_name, 
    c.last_name, 
    COUNT(o.order_id) AS order_count
FROM 
    customers c
JOIN 
    orders o 
ON 
    c.customer_id = o.customer_id
GROUP BY 
    c.customer_id, c.first_name, c.last_name
HAVING 
    COUNT(o.order_id) = (
        SELECT MAX(order_count)
        FROM (
            SELECT COUNT(order_id) AS order_count
            FROM orders
            GROUP BY customer_id
        ) subquery
    )
2025-03-25 03:11:05 - INFO - [azure_client.py:139] - SQL generation completed in 12.85s
2025-03-25 03:11:05 - INFO - [azure_client.py:139] - SQL generation completed in 12.85s
2025-03-25 03:11:05 - INFO - [azure_client.py:139] - SQL generation completed in 12.85s
2025-03-25 03:11:05 - INFO - [azure_client.py:139] - SQL generation completed in 12.85s
2025-03-25 03:11:05 - INFO - [azure_client.py:139] - SQL generation completed in 12.85s
2025-03-25 03:11:05 - INFO - [azure_client.py:139] - SQL generation completed in 12.85s
2025-03-25 03:11:05 - INFO - [database.py:45] - Executing SQL query: SELECT 
    c.customer_id, 
    c.first_name, 
    c.last_name, 
    COUNT(o.order_id) AS order_count
FROM 
    customers c
JOIN 
    orders o 
ON 
    c.customer_id = o.customer_id
GROUP BY 
    c.customer_id, c.first_name, c.last_name
HAVING 
    COUNT(o.order_id) = (
        SELECT MAX(order_count)
        FROM (
            SELECT COUNT(order_id) AS order_count
            FROM orders
            GROUP BY customer_id
        ) subquery
    )
2025-03-25 03:11:05 - INFO - [database.py:45] - Executing SQL query: SELECT 
    c.customer_id, 
    c.first_name, 
    c.last_name, 
    COUNT(o.order_id) AS order_count
FROM 
    customers c
JOIN 
    orders o 
ON 
    c.customer_id = o.customer_id
GROUP BY 
    c.customer_id, c.first_name, c.last_name
HAVING 
    COUNT(o.order_id) = (
        SELECT MAX(order_count)
        FROM (
            SELECT COUNT(order_id) AS order_count
            FROM orders
            GROUP BY customer_id
        ) subquery
    )
2025-03-25 03:11:05 - INFO - [database.py:45] - Executing SQL query: SELECT 
    c.customer_id, 
    c.first_name, 
    c.last_name, 
    COUNT(o.order_id) AS order_count
FROM 
    customers c
JOIN 
    orders o 
ON 
    c.customer_id = o.customer_id
GROUP BY 
    c.customer_id, c.first_name, c.last_name
HAVING 
    COUNT(o.order_id) = (
        SELECT MAX(order_count)
        FROM (
            SELECT COUNT(order_id) AS order_count
            FROM orders
            GROUP BY customer_id
        ) subquery
    )
2025-03-25 03:11:05 - INFO - [database.py:45] - Executing SQL query: SELECT 
    c.customer_id, 
    c.first_name, 
    c.last_name, 
    COUNT(o.order_id) AS order_count
FROM 
    customers c
JOIN 
    orders o 
ON 
    c.customer_id = o.customer_id
GROUP BY 
    c.customer_id, c.first_name, c.last_name
HAVING 
    COUNT(o.order_id) = (
        SELECT MAX(order_count)
        FROM (
            SELECT COUNT(order_id) AS order_count
            FROM orders
            GROUP BY customer_id
        ) subquery
    )
2025-03-25 03:11:05 - INFO - [database.py:45] - Executing SQL query: SELECT 
    c.customer_id, 
    c.first_name, 
    c.last_name, 
    COUNT(o.order_id) AS order_count
FROM 
    customers c
JOIN 
    orders o 
ON 
    c.customer_id = o.customer_id
GROUP BY 
    c.customer_id, c.first_name, c.last_name
HAVING 
    COUNT(o.order_id) = (
        SELECT MAX(order_count)
        FROM (
            SELECT COUNT(order_id) AS order_count
            FROM orders
            GROUP BY customer_id
        ) subquery
    )
2025-03-25 03:11:05 - INFO - [database.py:45] - Executing SQL query: SELECT 
    c.customer_id, 
    c.first_name, 
    c.last_name, 
    COUNT(o.order_id) AS order_count
FROM 
    customers c
JOIN 
    orders o 
ON 
    c.customer_id = o.customer_id
GROUP BY 
    c.customer_id, c.first_name, c.last_name
HAVING 
    COUNT(o.order_id) = (
        SELECT MAX(order_count)
        FROM (
            SELECT COUNT(order_id) AS order_count
            FROM orders
            GROUP BY customer_id
        ) subquery
    )
2025-03-25 03:11:05 - INFO - [database.py:66] - Query returned 3 rows with 4 columns
2025-03-25 03:11:05 - INFO - [database.py:66] - Query returned 3 rows with 4 columns
2025-03-25 03:11:05 - INFO - [database.py:66] - Query returned 3 rows with 4 columns
2025-03-25 03:11:05 - INFO - [database.py:66] - Query returned 3 rows with 4 columns
2025-03-25 03:11:05 - INFO - [database.py:66] - Query returned 3 rows with 4 columns
2025-03-25 03:11:05 - INFO - [database.py:66] - Query returned 3 rows with 4 columns
2025-03-25 03:11:05 - INFO - [database.py:75] - Query processing completed in 0.02s
2025-03-25 03:11:05 - INFO - [database.py:75] - Query processing completed in 0.02s
2025-03-25 03:11:05 - INFO - [database.py:75] - Query processing completed in 0.02s
2025-03-25 03:11:05 - INFO - [database.py:75] - Query processing completed in 0.02s
2025-03-25 03:11:05 - INFO - [database.py:75] - Query processing completed in 0.02s
2025-03-25 03:11:05 - INFO - [database.py:75] - Query processing completed in 0.02s
2025-03-25 03:11:05 - INFO - [sql_generator.py:278] - SQL generation completed in 16.92s
2025-03-25 03:11:05 - INFO - [sql_generator.py:278] - SQL generation completed in 16.92s
2025-03-25 03:11:05 - INFO - [sql_generator.py:278] - SQL generation completed in 16.92s
2025-03-25 03:11:05 - INFO - [sql_generator.py:278] - SQL generation completed in 16.92s
2025-03-25 03:11:05 - INFO - [sql_generator.py:278] - SQL generation completed in 16.92s
2025-03-25 03:11:05 - INFO - [sql_generator.py:278] - SQL generation completed in 16.92s
2025-03-25 03:11:06 - INFO - [sql_generator.py:117] - Query processing completed in 17.78s
2025-03-25 03:11:06 - INFO - [sql_generator.py:117] - Query processing completed in 17.78s
2025-03-25 03:11:06 - INFO - [sql_generator.py:117] - Query processing completed in 17.78s
2025-03-25 03:11:06 - INFO - [sql_generator.py:117] - Query processing completed in 17.78s
2025-03-25 03:11:06 - INFO - [sql_generator.py:117] - Query processing completed in 17.78s
2025-03-25 03:11:06 - INFO - [sql_generator.py:117] - Query processing completed in 17.78s
2025-03-25 03:12:15 - INFO - [database.py:238] - Closing database connection
2025-03-25 03:12:16 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:12:16 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:12:16 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:12:16 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:12:16 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:12:16 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:12:16 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:12:16 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:12:16 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:12:16 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:12:16 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:12:16 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:12:16 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-25 03:12:37 - INFO - [database.py:238] - Closing database connection
2025-03-25 03:12:38 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:12:38 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:12:38 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:12:38 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:12:38 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:12:38 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:12:38 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:12:38 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:12:38 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:12:38 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:12:38 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:12:38 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:12:38 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-25 03:13:26 - INFO - [streamlit_app.py:79] - Schema requested for workspace: Default
2025-03-25 03:13:26 - INFO - [streamlit_app.py:79] - Schema requested for workspace: Default
2025-03-25 03:13:26 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:13:26 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:13:26 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:13:26 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:13:26 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:13:26 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:13:26 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:13:26 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:13:26 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:13:26 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:13:26 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:13:26 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:13:26 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:13:26 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:13:26 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:13:26 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:13:26 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:13:26 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:13:26 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:13:26 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:13:26 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:13:26 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:13:26 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:13:26 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:13:26 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-25 03:13:26 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-25 03:13:34 - INFO - [streamlit_app.py:79] - Schema requested for workspace: Default
2025-03-25 03:13:34 - INFO - [streamlit_app.py:79] - Schema requested for workspace: Default
2025-03-25 03:13:34 - INFO - [streamlit_app.py:79] - Schema requested for workspace: Default
2025-03-25 03:15:03 - INFO - [database.py:238] - Closing database connection
2025-03-25 03:15:05 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:15:05 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:15:05 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:15:05 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:15:05 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:15:05 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:15:05 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:15:05 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:15:05 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:15:05 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:15:05 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:15:05 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:15:05 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-25 03:15:46 - INFO - [database.py:238] - Closing database connection
2025-03-25 03:15:48 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:15:48 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:15:48 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:15:48 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:15:48 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:15:48 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:15:48 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:15:48 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:15:48 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:15:48 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:15:48 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:15:48 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:15:48 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-25 03:15:57 - INFO - [streamlit_app.py:125] - Processing query: 'How many customers do we have?'
2025-03-25 03:15:57 - INFO - [streamlit_app.py:125] - Processing query: 'How many customers do we have?'
2025-03-25 03:15:57 - INFO - [streamlit_app.py:125] - Processing query: 'How many customers do we have?'
2025-03-25 03:15:57 - INFO - [streamlit_app.py:125] - Processing query: 'How many customers do we have?'
2025-03-25 03:15:57 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:15:57 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:15:57 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:15:57 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:15:57 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:15:57 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:15:57 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:15:57 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:15:57 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:15:57 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:15:57 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:15:57 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:15:57 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:15:57 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:15:57 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:15:57 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:15:57 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:15:57 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:15:57 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:15:57 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:15:57 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:15:57 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:15:57 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:15:57 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:15:57 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:15:57 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:15:57 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:15:57 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:15:57 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:15:57 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:15:57 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:15:57 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:15:57 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:15:57 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:15:57 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:15:57 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:15:57 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:15:57 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:15:57 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:15:57 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:15:57 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:15:57 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:15:57 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:15:57 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:15:57 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:15:57 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:15:57 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:15:57 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:15:57 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-25 03:15:57 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-25 03:15:57 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-25 03:15:57 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-25 03:15:57 - INFO - [sql_generator.py:35] - Processing query: 'How many customers do we have?'
2025-03-25 03:15:57 - INFO - [sql_generator.py:35] - Processing query: 'How many customers do we have?'
2025-03-25 03:15:57 - INFO - [sql_generator.py:35] - Processing query: 'How many customers do we have?'
2025-03-25 03:15:57 - INFO - [sql_generator.py:35] - Processing query: 'How many customers do we have?'
2025-03-25 03:15:58 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:15:58 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:15:58 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:15:58 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:15:58 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:15:58 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:15:58 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:15:58 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:15:58 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:15:58 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:15:58 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:15:58 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:15:58 - INFO - [database.py:28] - Database connection established in 0.01s
2025-03-25 03:15:58 - INFO - [database.py:28] - Database connection established in 0.01s
2025-03-25 03:15:58 - INFO - [database.py:28] - Database connection established in 0.01s
2025-03-25 03:15:58 - INFO - [database.py:28] - Database connection established in 0.01s
2025-03-25 03:16:02 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 03:16:02 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 03:16:02 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 03:16:02 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 03:16:05 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:16:05 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:16:05 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:16:05 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:16:05,403 - QUERY: 'How many customers do we have?' → SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:16:05 - INFO - [azure_client.py:139] - SQL generation completed in 3.21s
2025-03-25 03:16:05 - INFO - [azure_client.py:139] - SQL generation completed in 3.21s
2025-03-25 03:16:05 - INFO - [azure_client.py:139] - SQL generation completed in 3.21s
2025-03-25 03:16:05 - INFO - [azure_client.py:139] - SQL generation completed in 3.21s
2025-03-25 03:16:05 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:16:05 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:16:05 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:16:05 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:16:05 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:16:05 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:16:05 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:16:05 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:16:05 - INFO - [database.py:75] - Query processing completed in 0.02s
2025-03-25 03:16:05 - INFO - [database.py:75] - Query processing completed in 0.02s
2025-03-25 03:16:05 - INFO - [database.py:75] - Query processing completed in 0.02s
2025-03-25 03:16:05 - INFO - [database.py:75] - Query processing completed in 0.02s
2025-03-25 03:16:05 - INFO - [sql_generator.py:278] - SQL generation completed in 6.49s
2025-03-25 03:16:05 - INFO - [sql_generator.py:278] - SQL generation completed in 6.49s
2025-03-25 03:16:05 - INFO - [sql_generator.py:278] - SQL generation completed in 6.49s
2025-03-25 03:16:05 - INFO - [sql_generator.py:278] - SQL generation completed in 6.49s
2025-03-25 03:16:05 - INFO - [sql_generator.py:117] - Query processing completed in 8.24s
2025-03-25 03:16:05 - INFO - [sql_generator.py:117] - Query processing completed in 8.24s
2025-03-25 03:16:05 - INFO - [sql_generator.py:117] - Query processing completed in 8.24s
2025-03-25 03:16:05 - INFO - [sql_generator.py:117] - Query processing completed in 8.24s
2025-03-25 03:17:37 - INFO - [streamlit_app.py:125] - Processing query: 'Get me all customers details'
2025-03-25 03:17:37 - INFO - [streamlit_app.py:125] - Processing query: 'Get me all customers details'
2025-03-25 03:17:37 - INFO - [streamlit_app.py:125] - Processing query: 'Get me all customers details'
2025-03-25 03:17:37 - INFO - [streamlit_app.py:125] - Processing query: 'Get me all customers details'
2025-03-25 03:17:37 - INFO - [streamlit_app.py:125] - Processing query: 'Get me all customers details'
2025-03-25 03:17:37 - INFO - [sql_generator.py:35] - Processing query: 'Get me all customers details'
2025-03-25 03:17:37 - INFO - [sql_generator.py:35] - Processing query: 'Get me all customers details'
2025-03-25 03:17:37 - INFO - [sql_generator.py:35] - Processing query: 'Get me all customers details'
2025-03-25 03:17:37 - INFO - [sql_generator.py:35] - Processing query: 'Get me all customers details'
2025-03-25 03:17:37 - INFO - [sql_generator.py:35] - Processing query: 'Get me all customers details'
2025-03-25 03:17:38 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:17:38 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:17:38 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:17:38 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:17:38 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:17:38 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:17:38 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:17:38 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:17:38 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:17:38 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:17:38 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:17:38 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:17:38 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:17:38 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:17:38 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:17:38 - INFO - [database.py:28] - Database connection established in 0.01s
2025-03-25 03:17:38 - INFO - [database.py:28] - Database connection established in 0.01s
2025-03-25 03:17:38 - INFO - [database.py:28] - Database connection established in 0.01s
2025-03-25 03:17:38 - INFO - [database.py:28] - Database connection established in 0.01s
2025-03-25 03:17:38 - INFO - [database.py:28] - Database connection established in 0.01s
2025-03-25 03:17:42 - INFO - [azure_client.py:46] - SQL generation started for query: 'Get me all customers details'
2025-03-25 03:17:42 - INFO - [azure_client.py:46] - SQL generation started for query: 'Get me all customers details'
2025-03-25 03:17:42 - INFO - [azure_client.py:46] - SQL generation started for query: 'Get me all customers details'
2025-03-25 03:17:42 - INFO - [azure_client.py:46] - SQL generation started for query: 'Get me all customers details'
2025-03-25 03:17:42 - INFO - [azure_client.py:46] - SQL generation started for query: 'Get me all customers details'
2025-03-25 03:17:44 - INFO - [azure_client.py:131] - Generated SQL: SELECT *
FROM customers;
2025-03-25 03:17:44 - INFO - [azure_client.py:131] - Generated SQL: SELECT *
FROM customers;
2025-03-25 03:17:44 - INFO - [azure_client.py:131] - Generated SQL: SELECT *
FROM customers;
2025-03-25 03:17:44 - INFO - [azure_client.py:131] - Generated SQL: SELECT *
FROM customers;
2025-03-25 03:17:44 - INFO - [azure_client.py:131] - Generated SQL: SELECT *
FROM customers;
2025-03-25 03:17:44,597 - QUERY: 'Get me all customers details' → SQL: SELECT *
FROM customers;
2025-03-25 03:17:44 - INFO - [azure_client.py:139] - SQL generation completed in 2.48s
2025-03-25 03:17:44 - INFO - [azure_client.py:139] - SQL generation completed in 2.48s
2025-03-25 03:17:44 - INFO - [azure_client.py:139] - SQL generation completed in 2.48s
2025-03-25 03:17:44 - INFO - [azure_client.py:139] - SQL generation completed in 2.48s
2025-03-25 03:17:44 - INFO - [azure_client.py:139] - SQL generation completed in 2.48s
2025-03-25 03:17:44 - INFO - [database.py:45] - Executing SQL query: SELECT *
FROM customers;
2025-03-25 03:17:44 - INFO - [database.py:45] - Executing SQL query: SELECT *
FROM customers;
2025-03-25 03:17:44 - INFO - [database.py:45] - Executing SQL query: SELECT *
FROM customers;
2025-03-25 03:17:44 - INFO - [database.py:45] - Executing SQL query: SELECT *
FROM customers;
2025-03-25 03:17:44 - INFO - [database.py:45] - Executing SQL query: SELECT *
FROM customers;
2025-03-25 03:17:44 - INFO - [database.py:66] - Query returned 5 rows with 11 columns
2025-03-25 03:17:44 - INFO - [database.py:66] - Query returned 5 rows with 11 columns
2025-03-25 03:17:44 - INFO - [database.py:66] - Query returned 5 rows with 11 columns
2025-03-25 03:17:44 - INFO - [database.py:66] - Query returned 5 rows with 11 columns
2025-03-25 03:17:44 - INFO - [database.py:66] - Query returned 5 rows with 11 columns
2025-03-25 03:17:44 - INFO - [database.py:75] - Query processing completed in 0.02s
2025-03-25 03:17:44 - INFO - [database.py:75] - Query processing completed in 0.02s
2025-03-25 03:17:44 - INFO - [database.py:75] - Query processing completed in 0.02s
2025-03-25 03:17:44 - INFO - [database.py:75] - Query processing completed in 0.02s
2025-03-25 03:17:44 - INFO - [database.py:75] - Query processing completed in 0.02s
2025-03-25 03:17:44 - INFO - [sql_generator.py:278] - SQL generation completed in 6.37s
2025-03-25 03:17:44 - INFO - [sql_generator.py:278] - SQL generation completed in 6.37s
2025-03-25 03:17:44 - INFO - [sql_generator.py:278] - SQL generation completed in 6.37s
2025-03-25 03:17:44 - INFO - [sql_generator.py:278] - SQL generation completed in 6.37s
2025-03-25 03:17:44 - INFO - [sql_generator.py:278] - SQL generation completed in 6.37s
2025-03-25 03:17:44 - INFO - [sql_generator.py:117] - Query processing completed in 7.28s
2025-03-25 03:17:44 - INFO - [sql_generator.py:117] - Query processing completed in 7.28s
2025-03-25 03:17:44 - INFO - [sql_generator.py:117] - Query processing completed in 7.28s
2025-03-25 03:17:44 - INFO - [sql_generator.py:117] - Query processing completed in 7.28s
2025-03-25 03:17:44 - INFO - [sql_generator.py:117] - Query processing completed in 7.28s
2025-03-25 03:19:38 - INFO - [database.py:238] - Closing database connection
2025-03-25 03:19:39 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:19:39 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:19:40 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:19:40 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:19:40 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:19:40 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:19:40 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:19:40 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:19:40 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:19:40 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:19:40 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:19:40 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:19:40 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-25 03:19:58 - INFO - [database.py:238] - Closing database connection
2025-03-25 03:20:00 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:00 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:00 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:00 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:00 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:00 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:00 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:00 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:00 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:00 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:00 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:00 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:00 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-25 03:20:24 - INFO - [streamlit_app.py:120] - Background processing of query: 'How many customers do we have?'
2025-03-25 03:20:24 - INFO - [streamlit_app.py:120] - Background processing of query: 'How many customers do we have?'
2025-03-25 03:20:24 - INFO - [streamlit_app.py:120] - Background processing of query: 'How many customers do we have?'
2025-03-25 03:20:24 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:24 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:24 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:24 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:24 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:24 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:25 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:25 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:25 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:25 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:25 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:25 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:25 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:25 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:25 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:25 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:25 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:25 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:25 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:25 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:25 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:25 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:25 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:25 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:25 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:25 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:25 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:25 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:25 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:25 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:25 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:25 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:25 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:25 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:25 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:25 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:25 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-25 03:20:25 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-25 03:20:25 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-25 03:20:25 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-25 03:20:25 - INFO - [sql_generator.py:35] - Processing query: 'How many customers do we have?'
2025-03-25 03:20:25 - INFO - [sql_generator.py:35] - Processing query: 'How many customers do we have?'
2025-03-25 03:20:25 - INFO - [sql_generator.py:35] - Processing query: 'How many customers do we have?'
2025-03-25 03:20:25 - INFO - [sql_generator.py:35] - Processing query: 'How many customers do we have?'
2025-03-25 03:20:34 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:20:34 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:20:34 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:20:34 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:20:34 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:20:34 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:20:34 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:20:34 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:20:34 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:20:34 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:20:34 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:20:34 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:20:34 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:20:34 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:20:34 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:20:34 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:20:34 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:20:34 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:20:34 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:20:34 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:20:34 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:20:34 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:20:34 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:20:34 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:20:34 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:20:34 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:20:34 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:20:34 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:20:34 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:20:34 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:20:34 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:20:34 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:20:34 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:20:34 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:20:34 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:20:34 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:20:34 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:20:34 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:20:34 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:20:34 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:20:34 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:20:34 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:20:34 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:20:34 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:20:34 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:20:34 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:20:34 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:20:34 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:20:34 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:20:34 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:20:34 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:20:34 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:20:34 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:20:34 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:20:34 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:20:34 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:20:34 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:20:34 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:20:34 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:20:34 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:20:34 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:20:34 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:20:34 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:20:34 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:20:34 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:20:34 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:20:34 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:20:34 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:20:34 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:20:34 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:20:34 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:20:34 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:20:34 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:20:34 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:20:34 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:20:34 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:20:34 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:20:34 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:20:34 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:20:34 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:20:34 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:20:34 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:20:34 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:20:34 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:20:34 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:20:34 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:20:34 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:20:34 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:20:34 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:20:34 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:20:34 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:20:34 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:20:34 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:20:34 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:20:34 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:20:34 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:20:34 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:20:34 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:20:34 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:20:34 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:20:34 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:20:34 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:20:34 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:20:34 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:20:34 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:20:35 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:20:35 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:20:35 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:20:35 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:20:35 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:20:35 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:20:35 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:20:35 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:20:35 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:20:35 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:20:35 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:20:35 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:20:35 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:20:35 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:20:35 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:20:35 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:20:35 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:20:35 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:20:35 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:20:35 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:20:35 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:20:35 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:20:35 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:20:35 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:20:35 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:20:35 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:20:35 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:20:35 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:20:35 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:20:35 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:20:35 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:20:35 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:20:35 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:20:35 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:20:35 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:20:35 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:20:35 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:20:35 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:20:35 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:20:35 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:20:35 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:20:35 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:20:35 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:20:35 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:20:35 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:20:35 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:20:35 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:20:35 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:20:35 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:20:35 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:20:35 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:20:35 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:20:35 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:20:35 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:20:35 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:20:35 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:20:36 - INFO - [database.py:28] - Database connection established in 0.69s
2025-03-25 03:20:36 - INFO - [database.py:28] - Database connection established in 0.69s
2025-03-25 03:20:36 - INFO - [database.py:28] - Database connection established in 0.69s
2025-03-25 03:20:36 - INFO - [database.py:28] - Database connection established in 0.69s
2025-03-25 03:20:36 - INFO - [database.py:28] - Database connection established in 0.69s
2025-03-25 03:20:36 - INFO - [database.py:28] - Database connection established in 0.69s
2025-03-25 03:20:36 - INFO - [database.py:28] - Database connection established in 0.69s
2025-03-25 03:20:36 - INFO - [database.py:28] - Database connection established in 0.69s
2025-03-25 03:20:36 - INFO - [database.py:28] - Database connection established in 0.69s
2025-03-25 03:20:36 - INFO - [database.py:28] - Database connection established in 0.69s
2025-03-25 03:20:36 - INFO - [database.py:28] - Database connection established in 0.69s
2025-03-25 03:20:36 - INFO - [database.py:28] - Database connection established in 0.69s
2025-03-25 03:20:36 - INFO - [database.py:28] - Database connection established in 0.69s
2025-03-25 03:20:36 - INFO - [database.py:28] - Database connection established in 0.69s
2025-03-25 03:20:36 - INFO - [database.py:28] - Database connection established in 0.69s
2025-03-25 03:20:36 - INFO - [database.py:28] - Database connection established in 0.69s
2025-03-25 03:20:36 - INFO - [database.py:28] - Database connection established in 0.69s
2025-03-25 03:20:36 - INFO - [database.py:28] - Database connection established in 0.69s
2025-03-25 03:20:36 - INFO - [database.py:28] - Database connection established in 0.69s
2025-03-25 03:20:36 - INFO - [database.py:28] - Database connection established in 0.69s
2025-03-25 03:20:36 - INFO - [database.py:28] - Database connection established in 0.69s
2025-03-25 03:20:36 - INFO - [database.py:28] - Database connection established in 0.69s
2025-03-25 03:20:36 - INFO - [database.py:28] - Database connection established in 0.69s
2025-03-25 03:20:36 - INFO - [database.py:28] - Database connection established in 0.69s
2025-03-25 03:20:36 - INFO - [database.py:28] - Database connection established in 0.69s
2025-03-25 03:20:36 - INFO - [database.py:28] - Database connection established in 0.69s
2025-03-25 03:20:36 - INFO - [database.py:28] - Database connection established in 0.69s
2025-03-25 03:20:36 - INFO - [database.py:28] - Database connection established in 0.69s
2025-03-25 03:20:36 - INFO - [database.py:28] - Database connection established in 0.69s
2025-03-25 03:20:36 - INFO - [database.py:28] - Database connection established in 0.69s
2025-03-25 03:20:36 - INFO - [database.py:28] - Database connection established in 0.69s
2025-03-25 03:20:36 - INFO - [database.py:28] - Database connection established in 0.69s
2025-03-25 03:20:36 - INFO - [database.py:28] - Database connection established in 0.69s
2025-03-25 03:20:36 - INFO - [database.py:28] - Database connection established in 0.69s
2025-03-25 03:20:36 - INFO - [database.py:28] - Database connection established in 0.69s
2025-03-25 03:20:36 - INFO - [database.py:28] - Database connection established in 0.69s
2025-03-25 03:20:36 - INFO - [database.py:28] - Database connection established in 0.69s
2025-03-25 03:20:36 - INFO - [database.py:28] - Database connection established in 0.69s
2025-03-25 03:20:36 - INFO - [database.py:28] - Database connection established in 0.69s
2025-03-25 03:20:36 - INFO - [database.py:28] - Database connection established in 0.69s
2025-03-25 03:20:36 - INFO - [database.py:28] - Database connection established in 0.69s
2025-03-25 03:20:36 - INFO - [database.py:28] - Database connection established in 0.69s
2025-03-25 03:20:36 - INFO - [database.py:28] - Database connection established in 0.69s
2025-03-25 03:20:36 - INFO - [database.py:28] - Database connection established in 0.69s
2025-03-25 03:20:36 - INFO - [database.py:28] - Database connection established in 0.69s
2025-03-25 03:20:36 - INFO - [database.py:28] - Database connection established in 0.69s
2025-03-25 03:20:36 - INFO - [database.py:28] - Database connection established in 0.69s
2025-03-25 03:20:36 - INFO - [database.py:28] - Database connection established in 0.69s
2025-03-25 03:20:36 - INFO - [database.py:28] - Database connection established in 0.69s
2025-03-25 03:20:36 - INFO - [database.py:28] - Database connection established in 0.69s
2025-03-25 03:20:36 - INFO - [database.py:28] - Database connection established in 0.69s
2025-03-25 03:20:36 - INFO - [database.py:28] - Database connection established in 0.69s
2025-03-25 03:20:36 - INFO - [database.py:28] - Database connection established in 0.69s
2025-03-25 03:20:36 - INFO - [database.py:28] - Database connection established in 0.69s
2025-03-25 03:20:36 - INFO - [database.py:28] - Database connection established in 0.69s
2025-03-25 03:20:36 - INFO - [database.py:28] - Database connection established in 0.69s
2025-03-25 03:20:36 - INFO - [database.py:28] - Database connection established in 0.69s
2025-03-25 03:20:36 - INFO - [database.py:28] - Database connection established in 0.69s
2025-03-25 03:20:40 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 03:20:40 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 03:20:40 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 03:20:40 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 03:20:40 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 03:20:40 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 03:20:40 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 03:20:40 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 03:20:40 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 03:20:40 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 03:20:40 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 03:20:40 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 03:20:40 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 03:20:40 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 03:20:40 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 03:20:40 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 03:20:40 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 03:20:40 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 03:20:40 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 03:20:40 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 03:20:40 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 03:20:40 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 03:20:40 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 03:20:40 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 03:20:40 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 03:20:40 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 03:20:40 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 03:20:40 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 03:20:40 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 03:20:40 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 03:20:40 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 03:20:40 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 03:20:40 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 03:20:40 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 03:20:40 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 03:20:40 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 03:20:40 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 03:20:40 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 03:20:40 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 03:20:40 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 03:20:40 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 03:20:40 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 03:20:40 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 03:20:40 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 03:20:40 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 03:20:40 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 03:20:40 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 03:20:40 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 03:20:40 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 03:20:40 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 03:20:40 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 03:20:40 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 03:20:40 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 03:20:40 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 03:20:40 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 03:20:40 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 03:20:40 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 03:20:40 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 03:20:40 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 03:20:40 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 03:20:40 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 03:20:40 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 03:20:40 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 03:20:40 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 03:20:40 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 03:20:40 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 03:20:40 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 03:20:40 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 03:20:40 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 03:20:40 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 03:20:40 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 03:20:40 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 03:20:40 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 03:20:43 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:20:43 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:20:43 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:20:43 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:20:43 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:20:43 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:20:43 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:20:43 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:20:43 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:20:43 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:20:43 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:20:43 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:20:43 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:20:43 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:20:43 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:20:43 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:20:43 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:20:43 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:20:43 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:20:43 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:20:43 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:20:43 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:20:43 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:20:43 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:20:43 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:20:43 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:20:43 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:20:43 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:20:43 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:20:43 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:20:43 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:20:43 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:20:43 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:20:43 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:20:43 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:20:43 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:20:43 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:20:43 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:20:43 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:20:43 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:20:43 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:20:43 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:20:43 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:20:43 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:20:43 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:20:43 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:20:43 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:20:43 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:20:43 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:20:43 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:20:43 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:20:43 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:20:43 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:20:43 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:20:43 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:20:43 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:20:43 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:20:43 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:20:43 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:20:43 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:20:43 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:20:43 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:20:43 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:20:43 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:20:43 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:20:43 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:20:43 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:20:43 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:20:43 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:20:43 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:20:43 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:20:43 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:20:43 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:20:43 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:20:43 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:20:43 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:20:43 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:20:43 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:20:43 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:20:43 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:20:43 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:20:43 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:20:43 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:20:43 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:20:43 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:20:43,453 - QUERY: 'How many customers do we have?' → SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:20:43 - INFO - [azure_client.py:139] - SQL generation completed in 3.35s
2025-03-25 03:20:43 - INFO - [azure_client.py:139] - SQL generation completed in 3.35s
2025-03-25 03:20:43 - INFO - [azure_client.py:139] - SQL generation completed in 3.35s
2025-03-25 03:20:43 - INFO - [azure_client.py:139] - SQL generation completed in 3.35s
2025-03-25 03:20:43 - INFO - [azure_client.py:139] - SQL generation completed in 3.35s
2025-03-25 03:20:43 - INFO - [azure_client.py:139] - SQL generation completed in 3.35s
2025-03-25 03:20:43 - INFO - [azure_client.py:139] - SQL generation completed in 3.35s
2025-03-25 03:20:43 - INFO - [azure_client.py:139] - SQL generation completed in 3.35s
2025-03-25 03:20:43 - INFO - [azure_client.py:139] - SQL generation completed in 3.35s
2025-03-25 03:20:43 - INFO - [azure_client.py:139] - SQL generation completed in 3.35s
2025-03-25 03:20:43 - INFO - [azure_client.py:139] - SQL generation completed in 3.35s
2025-03-25 03:20:43 - INFO - [azure_client.py:139] - SQL generation completed in 3.35s
2025-03-25 03:20:43 - INFO - [azure_client.py:139] - SQL generation completed in 3.35s
2025-03-25 03:20:43 - INFO - [azure_client.py:139] - SQL generation completed in 3.35s
2025-03-25 03:20:43 - INFO - [azure_client.py:139] - SQL generation completed in 3.35s
2025-03-25 03:20:43 - INFO - [azure_client.py:139] - SQL generation completed in 3.35s
2025-03-25 03:20:43 - INFO - [azure_client.py:139] - SQL generation completed in 3.35s
2025-03-25 03:20:43 - INFO - [azure_client.py:139] - SQL generation completed in 3.35s
2025-03-25 03:20:43 - INFO - [azure_client.py:139] - SQL generation completed in 3.35s
2025-03-25 03:20:43 - INFO - [azure_client.py:139] - SQL generation completed in 3.35s
2025-03-25 03:20:43 - INFO - [azure_client.py:139] - SQL generation completed in 3.35s
2025-03-25 03:20:43 - INFO - [azure_client.py:139] - SQL generation completed in 3.35s
2025-03-25 03:20:43 - INFO - [azure_client.py:139] - SQL generation completed in 3.35s
2025-03-25 03:20:43 - INFO - [azure_client.py:139] - SQL generation completed in 3.35s
2025-03-25 03:20:43 - INFO - [azure_client.py:139] - SQL generation completed in 3.35s
2025-03-25 03:20:43 - INFO - [azure_client.py:139] - SQL generation completed in 3.35s
2025-03-25 03:20:43 - INFO - [azure_client.py:139] - SQL generation completed in 3.35s
2025-03-25 03:20:43 - INFO - [azure_client.py:139] - SQL generation completed in 3.35s
2025-03-25 03:20:43 - INFO - [azure_client.py:139] - SQL generation completed in 3.35s
2025-03-25 03:20:43 - INFO - [azure_client.py:139] - SQL generation completed in 3.35s
2025-03-25 03:20:43 - INFO - [azure_client.py:139] - SQL generation completed in 3.35s
2025-03-25 03:20:43 - INFO - [azure_client.py:139] - SQL generation completed in 3.35s
2025-03-25 03:20:43 - INFO - [azure_client.py:139] - SQL generation completed in 3.35s
2025-03-25 03:20:43 - INFO - [azure_client.py:139] - SQL generation completed in 3.35s
2025-03-25 03:20:43 - INFO - [azure_client.py:139] - SQL generation completed in 3.35s
2025-03-25 03:20:43 - INFO - [azure_client.py:139] - SQL generation completed in 3.35s
2025-03-25 03:20:43 - INFO - [azure_client.py:139] - SQL generation completed in 3.35s
2025-03-25 03:20:43 - INFO - [azure_client.py:139] - SQL generation completed in 3.35s
2025-03-25 03:20:43 - INFO - [azure_client.py:139] - SQL generation completed in 3.35s
2025-03-25 03:20:43 - INFO - [azure_client.py:139] - SQL generation completed in 3.35s
2025-03-25 03:20:43 - INFO - [azure_client.py:139] - SQL generation completed in 3.35s
2025-03-25 03:20:43 - INFO - [azure_client.py:139] - SQL generation completed in 3.35s
2025-03-25 03:20:43 - INFO - [azure_client.py:139] - SQL generation completed in 3.35s
2025-03-25 03:20:43 - INFO - [azure_client.py:139] - SQL generation completed in 3.35s
2025-03-25 03:20:43 - INFO - [azure_client.py:139] - SQL generation completed in 3.35s
2025-03-25 03:20:43 - INFO - [azure_client.py:139] - SQL generation completed in 3.35s
2025-03-25 03:20:43 - INFO - [azure_client.py:139] - SQL generation completed in 3.35s
2025-03-25 03:20:43 - INFO - [azure_client.py:139] - SQL generation completed in 3.35s
2025-03-25 03:20:43 - INFO - [azure_client.py:139] - SQL generation completed in 3.35s
2025-03-25 03:20:43 - INFO - [azure_client.py:139] - SQL generation completed in 3.35s
2025-03-25 03:20:43 - INFO - [azure_client.py:139] - SQL generation completed in 3.35s
2025-03-25 03:20:43 - INFO - [azure_client.py:139] - SQL generation completed in 3.35s
2025-03-25 03:20:43 - INFO - [azure_client.py:139] - SQL generation completed in 3.35s
2025-03-25 03:20:43 - INFO - [azure_client.py:139] - SQL generation completed in 3.35s
2025-03-25 03:20:43 - INFO - [azure_client.py:139] - SQL generation completed in 3.35s
2025-03-25 03:20:43 - INFO - [azure_client.py:139] - SQL generation completed in 3.35s
2025-03-25 03:20:43 - INFO - [azure_client.py:139] - SQL generation completed in 3.35s
2025-03-25 03:20:43 - INFO - [azure_client.py:139] - SQL generation completed in 3.35s
2025-03-25 03:20:43 - INFO - [azure_client.py:139] - SQL generation completed in 3.35s
2025-03-25 03:20:43 - INFO - [azure_client.py:139] - SQL generation completed in 3.35s
2025-03-25 03:20:43 - INFO - [azure_client.py:139] - SQL generation completed in 3.35s
2025-03-25 03:20:43 - INFO - [azure_client.py:139] - SQL generation completed in 3.35s
2025-03-25 03:20:43 - INFO - [azure_client.py:139] - SQL generation completed in 3.35s
2025-03-25 03:20:43 - INFO - [azure_client.py:139] - SQL generation completed in 3.35s
2025-03-25 03:20:43 - INFO - [azure_client.py:139] - SQL generation completed in 3.35s
2025-03-25 03:20:43 - INFO - [azure_client.py:139] - SQL generation completed in 3.35s
2025-03-25 03:20:43 - INFO - [azure_client.py:139] - SQL generation completed in 3.35s
2025-03-25 03:20:43 - INFO - [azure_client.py:139] - SQL generation completed in 3.35s
2025-03-25 03:20:43 - INFO - [azure_client.py:139] - SQL generation completed in 3.35s
2025-03-25 03:20:43 - INFO - [azure_client.py:139] - SQL generation completed in 3.35s
2025-03-25 03:20:43 - INFO - [azure_client.py:139] - SQL generation completed in 3.35s
2025-03-25 03:20:43 - INFO - [azure_client.py:139] - SQL generation completed in 3.35s
2025-03-25 03:20:43 - INFO - [azure_client.py:139] - SQL generation completed in 3.35s
2025-03-25 03:20:43 - INFO - [azure_client.py:139] - SQL generation completed in 3.35s
2025-03-25 03:20:43 - INFO - [azure_client.py:139] - SQL generation completed in 3.35s
2025-03-25 03:20:43 - INFO - [azure_client.py:139] - SQL generation completed in 3.35s
2025-03-25 03:20:43 - INFO - [azure_client.py:139] - SQL generation completed in 3.35s
2025-03-25 03:20:43 - INFO - [azure_client.py:139] - SQL generation completed in 3.35s
2025-03-25 03:20:43 - INFO - [azure_client.py:139] - SQL generation completed in 3.35s
2025-03-25 03:20:43 - INFO - [azure_client.py:139] - SQL generation completed in 3.35s
2025-03-25 03:20:43 - INFO - [azure_client.py:139] - SQL generation completed in 3.35s
2025-03-25 03:20:43 - INFO - [azure_client.py:139] - SQL generation completed in 3.35s
2025-03-25 03:20:43 - INFO - [azure_client.py:139] - SQL generation completed in 3.35s
2025-03-25 03:20:43 - INFO - [azure_client.py:139] - SQL generation completed in 3.35s
2025-03-25 03:20:43 - INFO - [azure_client.py:139] - SQL generation completed in 3.35s
2025-03-25 03:20:43 - INFO - [azure_client.py:139] - SQL generation completed in 3.35s
2025-03-25 03:20:43 - INFO - [azure_client.py:139] - SQL generation completed in 3.35s
2025-03-25 03:20:43 - INFO - [azure_client.py:139] - SQL generation completed in 3.35s
2025-03-25 03:20:44 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:20:44 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:20:44 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:20:44 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:20:44 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:20:44 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:20:44 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:20:44 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:20:44 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:20:44 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:20:44 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:20:44 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:20:44 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:20:44 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:20:44 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:20:44 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:20:44 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:20:44 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:20:44 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:20:44 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:20:44 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:20:44 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:20:44 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:20:44 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:20:44 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:20:44 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:20:44 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:20:44 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:20:44 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:20:44 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:20:44 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:20:44 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:20:44 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:20:44 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:20:44 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:20:44 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:20:44 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:20:44 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:20:44 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:20:44 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:20:44 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:20:44 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:20:44 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:20:44 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:20:44 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:20:44 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:20:44 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:20:44 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:20:44 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:20:44 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:20:44 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:20:44 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:20:44 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:20:44 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:20:44 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:20:44 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:20:44 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:20:44 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:20:44 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:20:44 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:20:44 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:20:44 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:20:44 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:20:44 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:20:44 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:20:44 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:20:44 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:20:44 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:20:44 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:20:44 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:20:44 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:20:44 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:20:44 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:20:44 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:20:44 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:20:44 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:20:44 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:20:44 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:20:44 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:20:44 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:20:44 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:20:44 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:20:44 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:20:44 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:20:44 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:20:44 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:20:44 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:20:44 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:20:44 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:20:44 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:20:44 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:20:44 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:20:44 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:20:44 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:20:44 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:20:44 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:20:44 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:20:44 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:20:44 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:20:44 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:20:44 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:20:44 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:20:44 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:20:44 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:20:44 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:20:44 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:20:44 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:20:44 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:20:44 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:20:44 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:20:44 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:20:44 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:20:44 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:20:44 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:20:44 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:20:44 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:20:44 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:20:44 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:20:44 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:20:44 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:20:44 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:20:44 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:20:44 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:20:44 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:20:44 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:20:44 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:20:44 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:20:44 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:20:44 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:20:44 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:20:44 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:20:44 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:20:44 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:20:44 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:20:44 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:20:44 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:20:44 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:20:44 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:20:44 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:20:44 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:20:44 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:20:44 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:20:44 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:20:44 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:20:44 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:20:44 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:20:44 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:20:44 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:20:44 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:20:44 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:20:44 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:20:44 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:20:44 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:20:44 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:20:44 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:20:44 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:20:44 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:20:44 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:20:44 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:20:44 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:20:44 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:20:44 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:20:44 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:20:44 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:20:44 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:20:44 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:20:44 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:20:44 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:20:44 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:20:44 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:20:44 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:20:44 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:20:44 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:20:44 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:20:44 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:20:44 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:20:44 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:20:44 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:20:44 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:20:44 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:20:44 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:20:44 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:20:45 - INFO - [database.py:75] - Query processing completed in 1.28s
2025-03-25 03:20:45 - INFO - [database.py:75] - Query processing completed in 1.28s
2025-03-25 03:20:45 - INFO - [database.py:75] - Query processing completed in 1.28s
2025-03-25 03:20:45 - INFO - [database.py:75] - Query processing completed in 1.28s
2025-03-25 03:20:45 - INFO - [database.py:75] - Query processing completed in 1.28s
2025-03-25 03:20:45 - INFO - [database.py:75] - Query processing completed in 1.28s
2025-03-25 03:20:45 - INFO - [database.py:75] - Query processing completed in 1.28s
2025-03-25 03:20:45 - INFO - [database.py:75] - Query processing completed in 1.28s
2025-03-25 03:20:45 - INFO - [database.py:75] - Query processing completed in 1.28s
2025-03-25 03:20:45 - INFO - [database.py:75] - Query processing completed in 1.28s
2025-03-25 03:20:45 - INFO - [database.py:75] - Query processing completed in 1.28s
2025-03-25 03:20:45 - INFO - [database.py:75] - Query processing completed in 1.28s
2025-03-25 03:20:45 - INFO - [database.py:75] - Query processing completed in 1.28s
2025-03-25 03:20:45 - INFO - [database.py:75] - Query processing completed in 1.28s
2025-03-25 03:20:45 - INFO - [database.py:75] - Query processing completed in 1.28s
2025-03-25 03:20:45 - INFO - [database.py:75] - Query processing completed in 1.28s
2025-03-25 03:20:45 - INFO - [database.py:75] - Query processing completed in 1.28s
2025-03-25 03:20:45 - INFO - [database.py:75] - Query processing completed in 1.28s
2025-03-25 03:20:45 - INFO - [database.py:75] - Query processing completed in 1.28s
2025-03-25 03:20:45 - INFO - [database.py:75] - Query processing completed in 1.28s
2025-03-25 03:20:45 - INFO - [database.py:75] - Query processing completed in 1.28s
2025-03-25 03:20:45 - INFO - [database.py:75] - Query processing completed in 1.28s
2025-03-25 03:20:45 - INFO - [database.py:75] - Query processing completed in 1.28s
2025-03-25 03:20:45 - INFO - [database.py:75] - Query processing completed in 1.28s
2025-03-25 03:20:45 - INFO - [database.py:75] - Query processing completed in 1.28s
2025-03-25 03:20:45 - INFO - [database.py:75] - Query processing completed in 1.28s
2025-03-25 03:20:45 - INFO - [database.py:75] - Query processing completed in 1.28s
2025-03-25 03:20:45 - INFO - [database.py:75] - Query processing completed in 1.28s
2025-03-25 03:20:45 - INFO - [database.py:75] - Query processing completed in 1.28s
2025-03-25 03:20:45 - INFO - [database.py:75] - Query processing completed in 1.28s
2025-03-25 03:20:45 - INFO - [database.py:75] - Query processing completed in 1.28s
2025-03-25 03:20:45 - INFO - [database.py:75] - Query processing completed in 1.28s
2025-03-25 03:20:45 - INFO - [database.py:75] - Query processing completed in 1.28s
2025-03-25 03:20:45 - INFO - [database.py:75] - Query processing completed in 1.28s
2025-03-25 03:20:45 - INFO - [database.py:75] - Query processing completed in 1.28s
2025-03-25 03:20:45 - INFO - [database.py:75] - Query processing completed in 1.28s
2025-03-25 03:20:45 - INFO - [database.py:75] - Query processing completed in 1.28s
2025-03-25 03:20:45 - INFO - [database.py:75] - Query processing completed in 1.28s
2025-03-25 03:20:45 - INFO - [database.py:75] - Query processing completed in 1.28s
2025-03-25 03:20:45 - INFO - [database.py:75] - Query processing completed in 1.28s
2025-03-25 03:20:45 - INFO - [database.py:75] - Query processing completed in 1.28s
2025-03-25 03:20:45 - INFO - [database.py:75] - Query processing completed in 1.28s
2025-03-25 03:20:45 - INFO - [database.py:75] - Query processing completed in 1.28s
2025-03-25 03:20:45 - INFO - [database.py:75] - Query processing completed in 1.28s
2025-03-25 03:20:45 - INFO - [database.py:75] - Query processing completed in 1.28s
2025-03-25 03:20:45 - INFO - [database.py:75] - Query processing completed in 1.28s
2025-03-25 03:20:45 - INFO - [database.py:75] - Query processing completed in 1.28s
2025-03-25 03:20:45 - INFO - [database.py:75] - Query processing completed in 1.28s
2025-03-25 03:20:45 - INFO - [database.py:75] - Query processing completed in 1.28s
2025-03-25 03:20:45 - INFO - [database.py:75] - Query processing completed in 1.28s
2025-03-25 03:20:45 - INFO - [database.py:75] - Query processing completed in 1.28s
2025-03-25 03:20:45 - INFO - [database.py:75] - Query processing completed in 1.28s
2025-03-25 03:20:45 - INFO - [database.py:75] - Query processing completed in 1.28s
2025-03-25 03:20:45 - INFO - [database.py:75] - Query processing completed in 1.28s
2025-03-25 03:20:45 - INFO - [database.py:75] - Query processing completed in 1.28s
2025-03-25 03:20:45 - INFO - [database.py:75] - Query processing completed in 1.28s
2025-03-25 03:20:45 - INFO - [database.py:75] - Query processing completed in 1.28s
2025-03-25 03:20:45 - INFO - [database.py:75] - Query processing completed in 1.28s
2025-03-25 03:20:45 - INFO - [database.py:75] - Query processing completed in 1.28s
2025-03-25 03:20:45 - INFO - [database.py:75] - Query processing completed in 1.28s
2025-03-25 03:20:45 - INFO - [database.py:75] - Query processing completed in 1.28s
2025-03-25 03:20:45 - INFO - [database.py:75] - Query processing completed in 1.28s
2025-03-25 03:20:45 - INFO - [database.py:75] - Query processing completed in 1.28s
2025-03-25 03:20:45 - INFO - [database.py:75] - Query processing completed in 1.28s
2025-03-25 03:20:45 - INFO - [database.py:75] - Query processing completed in 1.28s
2025-03-25 03:20:45 - INFO - [database.py:75] - Query processing completed in 1.28s
2025-03-25 03:20:45 - INFO - [database.py:75] - Query processing completed in 1.28s
2025-03-25 03:20:45 - INFO - [database.py:75] - Query processing completed in 1.28s
2025-03-25 03:20:45 - INFO - [database.py:75] - Query processing completed in 1.28s
2025-03-25 03:20:45 - INFO - [database.py:75] - Query processing completed in 1.28s
2025-03-25 03:20:45 - INFO - [database.py:75] - Query processing completed in 1.28s
2025-03-25 03:20:45 - INFO - [database.py:75] - Query processing completed in 1.28s
2025-03-25 03:20:45 - INFO - [database.py:75] - Query processing completed in 1.28s
2025-03-25 03:20:45 - INFO - [database.py:75] - Query processing completed in 1.28s
2025-03-25 03:20:45 - INFO - [database.py:75] - Query processing completed in 1.28s
2025-03-25 03:20:45 - INFO - [database.py:75] - Query processing completed in 1.28s
2025-03-25 03:20:45 - INFO - [database.py:75] - Query processing completed in 1.28s
2025-03-25 03:20:45 - INFO - [database.py:75] - Query processing completed in 1.28s
2025-03-25 03:20:45 - INFO - [database.py:75] - Query processing completed in 1.28s
2025-03-25 03:20:45 - INFO - [database.py:75] - Query processing completed in 1.28s
2025-03-25 03:20:45 - INFO - [database.py:75] - Query processing completed in 1.28s
2025-03-25 03:20:45 - INFO - [database.py:75] - Query processing completed in 1.28s
2025-03-25 03:20:45 - INFO - [database.py:75] - Query processing completed in 1.28s
2025-03-25 03:20:45 - INFO - [database.py:75] - Query processing completed in 1.28s
2025-03-25 03:20:45 - INFO - [database.py:75] - Query processing completed in 1.28s
2025-03-25 03:20:45 - INFO - [database.py:75] - Query processing completed in 1.28s
2025-03-25 03:20:45 - INFO - [database.py:75] - Query processing completed in 1.28s
2025-03-25 03:20:45 - INFO - [database.py:75] - Query processing completed in 1.28s
2025-03-25 03:20:45 - INFO - [database.py:75] - Query processing completed in 1.28s
2025-03-25 03:20:45 - INFO - [database.py:75] - Query processing completed in 1.28s
2025-03-25 03:20:45 - INFO - [database.py:75] - Query processing completed in 1.28s
2025-03-25 03:20:45 - INFO - [database.py:75] - Query processing completed in 1.28s
2025-03-25 03:20:45 - INFO - [database.py:75] - Query processing completed in 1.28s
2025-03-25 03:20:45 - INFO - [database.py:75] - Query processing completed in 1.28s
2025-03-25 03:20:45 - INFO - [database.py:75] - Query processing completed in 1.28s
2025-03-25 03:20:45 - INFO - [database.py:75] - Query processing completed in 1.28s
2025-03-25 03:20:46 - INFO - [sql_generator.py:278] - SQL generation completed in 11.83s
2025-03-25 03:20:46 - INFO - [sql_generator.py:278] - SQL generation completed in 11.83s
2025-03-25 03:20:46 - INFO - [sql_generator.py:278] - SQL generation completed in 11.83s
2025-03-25 03:20:46 - INFO - [sql_generator.py:278] - SQL generation completed in 11.83s
2025-03-25 03:20:46 - INFO - [sql_generator.py:278] - SQL generation completed in 11.83s
2025-03-25 03:20:46 - INFO - [sql_generator.py:278] - SQL generation completed in 11.83s
2025-03-25 03:20:46 - INFO - [sql_generator.py:278] - SQL generation completed in 11.83s
2025-03-25 03:20:46 - INFO - [sql_generator.py:278] - SQL generation completed in 11.83s
2025-03-25 03:20:46 - INFO - [sql_generator.py:278] - SQL generation completed in 11.83s
2025-03-25 03:20:46 - INFO - [sql_generator.py:278] - SQL generation completed in 11.83s
2025-03-25 03:20:46 - INFO - [sql_generator.py:278] - SQL generation completed in 11.83s
2025-03-25 03:20:46 - INFO - [sql_generator.py:278] - SQL generation completed in 11.83s
2025-03-25 03:20:46 - INFO - [sql_generator.py:278] - SQL generation completed in 11.83s
2025-03-25 03:20:46 - INFO - [sql_generator.py:278] - SQL generation completed in 11.83s
2025-03-25 03:20:46 - INFO - [sql_generator.py:278] - SQL generation completed in 11.83s
2025-03-25 03:20:46 - INFO - [sql_generator.py:278] - SQL generation completed in 11.83s
2025-03-25 03:20:46 - INFO - [sql_generator.py:278] - SQL generation completed in 11.83s
2025-03-25 03:20:46 - INFO - [sql_generator.py:278] - SQL generation completed in 11.83s
2025-03-25 03:20:46 - INFO - [sql_generator.py:278] - SQL generation completed in 11.83s
2025-03-25 03:20:46 - INFO - [sql_generator.py:278] - SQL generation completed in 11.83s
2025-03-25 03:20:46 - INFO - [sql_generator.py:278] - SQL generation completed in 11.83s
2025-03-25 03:20:46 - INFO - [sql_generator.py:278] - SQL generation completed in 11.83s
2025-03-25 03:20:46 - INFO - [sql_generator.py:278] - SQL generation completed in 11.83s
2025-03-25 03:20:46 - INFO - [sql_generator.py:278] - SQL generation completed in 11.83s
2025-03-25 03:20:46 - INFO - [sql_generator.py:278] - SQL generation completed in 11.83s
2025-03-25 03:20:46 - INFO - [sql_generator.py:278] - SQL generation completed in 11.83s
2025-03-25 03:20:46 - INFO - [sql_generator.py:278] - SQL generation completed in 11.83s
2025-03-25 03:20:46 - INFO - [sql_generator.py:278] - SQL generation completed in 11.83s
2025-03-25 03:20:46 - INFO - [sql_generator.py:278] - SQL generation completed in 11.83s
2025-03-25 03:20:46 - INFO - [sql_generator.py:278] - SQL generation completed in 11.83s
2025-03-25 03:20:46 - INFO - [sql_generator.py:278] - SQL generation completed in 11.83s
2025-03-25 03:20:46 - INFO - [sql_generator.py:278] - SQL generation completed in 11.83s
2025-03-25 03:20:46 - INFO - [sql_generator.py:278] - SQL generation completed in 11.83s
2025-03-25 03:20:46 - INFO - [sql_generator.py:278] - SQL generation completed in 11.83s
2025-03-25 03:20:46 - INFO - [sql_generator.py:278] - SQL generation completed in 11.83s
2025-03-25 03:20:46 - INFO - [sql_generator.py:278] - SQL generation completed in 11.83s
2025-03-25 03:20:46 - INFO - [sql_generator.py:278] - SQL generation completed in 11.83s
2025-03-25 03:20:46 - INFO - [sql_generator.py:278] - SQL generation completed in 11.83s
2025-03-25 03:20:46 - INFO - [sql_generator.py:278] - SQL generation completed in 11.83s
2025-03-25 03:20:46 - INFO - [sql_generator.py:278] - SQL generation completed in 11.83s
2025-03-25 03:20:46 - INFO - [sql_generator.py:278] - SQL generation completed in 11.83s
2025-03-25 03:20:46 - INFO - [sql_generator.py:278] - SQL generation completed in 11.83s
2025-03-25 03:20:46 - INFO - [sql_generator.py:278] - SQL generation completed in 11.83s
2025-03-25 03:20:46 - INFO - [sql_generator.py:278] - SQL generation completed in 11.83s
2025-03-25 03:20:46 - INFO - [sql_generator.py:278] - SQL generation completed in 11.83s
2025-03-25 03:20:46 - INFO - [sql_generator.py:278] - SQL generation completed in 11.83s
2025-03-25 03:20:46 - INFO - [sql_generator.py:278] - SQL generation completed in 11.83s
2025-03-25 03:20:46 - INFO - [sql_generator.py:278] - SQL generation completed in 11.83s
2025-03-25 03:20:46 - INFO - [sql_generator.py:278] - SQL generation completed in 11.83s
2025-03-25 03:20:46 - INFO - [sql_generator.py:278] - SQL generation completed in 11.83s
2025-03-25 03:20:46 - INFO - [sql_generator.py:278] - SQL generation completed in 11.83s
2025-03-25 03:20:46 - INFO - [sql_generator.py:278] - SQL generation completed in 11.83s
2025-03-25 03:20:46 - INFO - [sql_generator.py:278] - SQL generation completed in 11.83s
2025-03-25 03:20:46 - INFO - [sql_generator.py:278] - SQL generation completed in 11.83s
2025-03-25 03:20:46 - INFO - [sql_generator.py:278] - SQL generation completed in 11.83s
2025-03-25 03:20:46 - INFO - [sql_generator.py:278] - SQL generation completed in 11.83s
2025-03-25 03:20:46 - INFO - [sql_generator.py:278] - SQL generation completed in 11.83s
2025-03-25 03:20:46 - INFO - [sql_generator.py:278] - SQL generation completed in 11.83s
2025-03-25 03:20:46 - INFO - [sql_generator.py:278] - SQL generation completed in 11.83s
2025-03-25 03:20:46 - INFO - [sql_generator.py:278] - SQL generation completed in 11.83s
2025-03-25 03:20:46 - INFO - [sql_generator.py:278] - SQL generation completed in 11.83s
2025-03-25 03:20:46 - INFO - [sql_generator.py:278] - SQL generation completed in 11.83s
2025-03-25 03:20:46 - INFO - [sql_generator.py:278] - SQL generation completed in 11.83s
2025-03-25 03:20:46 - INFO - [sql_generator.py:278] - SQL generation completed in 11.83s
2025-03-25 03:20:46 - INFO - [sql_generator.py:278] - SQL generation completed in 11.83s
2025-03-25 03:20:46 - INFO - [sql_generator.py:278] - SQL generation completed in 11.83s
2025-03-25 03:20:46 - INFO - [sql_generator.py:278] - SQL generation completed in 11.83s
2025-03-25 03:20:46 - INFO - [sql_generator.py:278] - SQL generation completed in 11.83s
2025-03-25 03:20:46 - INFO - [sql_generator.py:278] - SQL generation completed in 11.83s
2025-03-25 03:20:46 - INFO - [sql_generator.py:278] - SQL generation completed in 11.83s
2025-03-25 03:20:46 - INFO - [sql_generator.py:278] - SQL generation completed in 11.83s
2025-03-25 03:20:46 - INFO - [sql_generator.py:278] - SQL generation completed in 11.83s
2025-03-25 03:20:46 - INFO - [sql_generator.py:278] - SQL generation completed in 11.83s
2025-03-25 03:20:46 - INFO - [sql_generator.py:278] - SQL generation completed in 11.83s
2025-03-25 03:20:46 - INFO - [sql_generator.py:278] - SQL generation completed in 11.83s
2025-03-25 03:20:46 - INFO - [sql_generator.py:278] - SQL generation completed in 11.83s
2025-03-25 03:20:46 - INFO - [sql_generator.py:278] - SQL generation completed in 11.83s
2025-03-25 03:20:46 - INFO - [sql_generator.py:278] - SQL generation completed in 11.83s
2025-03-25 03:20:46 - INFO - [sql_generator.py:278] - SQL generation completed in 11.83s
2025-03-25 03:20:46 - INFO - [sql_generator.py:278] - SQL generation completed in 11.83s
2025-03-25 03:20:46 - INFO - [sql_generator.py:278] - SQL generation completed in 11.83s
2025-03-25 03:20:46 - INFO - [sql_generator.py:278] - SQL generation completed in 11.83s
2025-03-25 03:20:46 - INFO - [sql_generator.py:278] - SQL generation completed in 11.83s
2025-03-25 03:20:46 - INFO - [sql_generator.py:278] - SQL generation completed in 11.83s
2025-03-25 03:20:46 - INFO - [sql_generator.py:278] - SQL generation completed in 11.83s
2025-03-25 03:20:46 - INFO - [sql_generator.py:278] - SQL generation completed in 11.83s
2025-03-25 03:20:46 - INFO - [sql_generator.py:278] - SQL generation completed in 11.83s
2025-03-25 03:20:46 - INFO - [sql_generator.py:278] - SQL generation completed in 11.83s
2025-03-25 03:20:46 - INFO - [sql_generator.py:278] - SQL generation completed in 11.83s
2025-03-25 03:20:46 - INFO - [sql_generator.py:278] - SQL generation completed in 11.83s
2025-03-25 03:20:46 - INFO - [sql_generator.py:278] - SQL generation completed in 11.83s
2025-03-25 03:20:46 - INFO - [sql_generator.py:278] - SQL generation completed in 11.83s
2025-03-25 03:20:46 - INFO - [sql_generator.py:278] - SQL generation completed in 11.83s
2025-03-25 03:20:46 - INFO - [sql_generator.py:278] - SQL generation completed in 11.83s
2025-03-25 03:20:46 - INFO - [sql_generator.py:278] - SQL generation completed in 11.83s
2025-03-25 03:20:46 - INFO - [sql_generator.py:278] - SQL generation completed in 11.83s
2025-03-25 03:20:46 - INFO - [sql_generator.py:278] - SQL generation completed in 11.83s
2025-03-25 03:20:46 - INFO - [sql_generator.py:278] - SQL generation completed in 11.83s
2025-03-25 03:20:46 - INFO - [sql_generator.py:278] - SQL generation completed in 11.83s
2025-03-25 03:20:46 - INFO - [sql_generator.py:278] - SQL generation completed in 11.83s
2025-03-25 03:20:47 - INFO - [sql_generator.py:117] - Query processing completed in 22.39s
2025-03-25 03:20:47 - INFO - [sql_generator.py:117] - Query processing completed in 22.39s
2025-03-25 03:20:47 - INFO - [sql_generator.py:117] - Query processing completed in 22.39s
2025-03-25 03:20:47 - INFO - [sql_generator.py:117] - Query processing completed in 22.39s
2025-03-25 03:20:47 - INFO - [sql_generator.py:117] - Query processing completed in 22.39s
2025-03-25 03:20:47 - INFO - [sql_generator.py:117] - Query processing completed in 22.39s
2025-03-25 03:20:47 - INFO - [sql_generator.py:117] - Query processing completed in 22.39s
2025-03-25 03:20:47 - INFO - [sql_generator.py:117] - Query processing completed in 22.39s
2025-03-25 03:20:47 - INFO - [sql_generator.py:117] - Query processing completed in 22.39s
2025-03-25 03:20:47 - INFO - [sql_generator.py:117] - Query processing completed in 22.39s
2025-03-25 03:20:47 - INFO - [sql_generator.py:117] - Query processing completed in 22.39s
2025-03-25 03:20:47 - INFO - [sql_generator.py:117] - Query processing completed in 22.39s
2025-03-25 03:20:47 - INFO - [sql_generator.py:117] - Query processing completed in 22.39s
2025-03-25 03:20:47 - INFO - [sql_generator.py:117] - Query processing completed in 22.39s
2025-03-25 03:20:47 - INFO - [sql_generator.py:117] - Query processing completed in 22.39s
2025-03-25 03:20:47 - INFO - [sql_generator.py:117] - Query processing completed in 22.39s
2025-03-25 03:20:47 - INFO - [sql_generator.py:117] - Query processing completed in 22.39s
2025-03-25 03:20:47 - INFO - [sql_generator.py:117] - Query processing completed in 22.39s
2025-03-25 03:20:47 - INFO - [sql_generator.py:117] - Query processing completed in 22.39s
2025-03-25 03:20:47 - INFO - [sql_generator.py:117] - Query processing completed in 22.39s
2025-03-25 03:20:47 - INFO - [sql_generator.py:117] - Query processing completed in 22.39s
2025-03-25 03:20:47 - INFO - [sql_generator.py:117] - Query processing completed in 22.39s
2025-03-25 03:20:47 - INFO - [sql_generator.py:117] - Query processing completed in 22.39s
2025-03-25 03:20:47 - INFO - [sql_generator.py:117] - Query processing completed in 22.39s
2025-03-25 03:20:47 - INFO - [sql_generator.py:117] - Query processing completed in 22.39s
2025-03-25 03:20:47 - INFO - [sql_generator.py:117] - Query processing completed in 22.39s
2025-03-25 03:20:47 - INFO - [sql_generator.py:117] - Query processing completed in 22.39s
2025-03-25 03:20:47 - INFO - [sql_generator.py:117] - Query processing completed in 22.39s
2025-03-25 03:20:47 - INFO - [sql_generator.py:117] - Query processing completed in 22.39s
2025-03-25 03:20:47 - INFO - [sql_generator.py:117] - Query processing completed in 22.39s
2025-03-25 03:20:47 - INFO - [sql_generator.py:117] - Query processing completed in 22.39s
2025-03-25 03:20:47 - INFO - [sql_generator.py:117] - Query processing completed in 22.39s
2025-03-25 03:20:47 - INFO - [sql_generator.py:117] - Query processing completed in 22.39s
2025-03-25 03:20:47 - INFO - [sql_generator.py:117] - Query processing completed in 22.39s
2025-03-25 03:20:47 - INFO - [sql_generator.py:117] - Query processing completed in 22.39s
2025-03-25 03:20:47 - INFO - [sql_generator.py:117] - Query processing completed in 22.39s
2025-03-25 03:20:47 - INFO - [sql_generator.py:117] - Query processing completed in 22.39s
2025-03-25 03:20:47 - INFO - [sql_generator.py:117] - Query processing completed in 22.39s
2025-03-25 03:20:47 - INFO - [sql_generator.py:117] - Query processing completed in 22.39s
2025-03-25 03:20:47 - INFO - [sql_generator.py:117] - Query processing completed in 22.39s
2025-03-25 03:20:47 - INFO - [sql_generator.py:117] - Query processing completed in 22.39s
2025-03-25 03:20:47 - INFO - [sql_generator.py:117] - Query processing completed in 22.39s
2025-03-25 03:20:47 - INFO - [sql_generator.py:117] - Query processing completed in 22.39s
2025-03-25 03:20:47 - INFO - [sql_generator.py:117] - Query processing completed in 22.39s
2025-03-25 03:20:47 - INFO - [sql_generator.py:117] - Query processing completed in 22.39s
2025-03-25 03:20:47 - INFO - [sql_generator.py:117] - Query processing completed in 22.39s
2025-03-25 03:20:47 - INFO - [sql_generator.py:117] - Query processing completed in 22.39s
2025-03-25 03:20:47 - INFO - [sql_generator.py:117] - Query processing completed in 22.39s
2025-03-25 03:20:47 - INFO - [sql_generator.py:117] - Query processing completed in 22.39s
2025-03-25 03:20:47 - INFO - [sql_generator.py:117] - Query processing completed in 22.39s
2025-03-25 03:20:47 - INFO - [sql_generator.py:117] - Query processing completed in 22.39s
2025-03-25 03:20:47 - INFO - [sql_generator.py:117] - Query processing completed in 22.39s
2025-03-25 03:20:47 - INFO - [sql_generator.py:117] - Query processing completed in 22.39s
2025-03-25 03:20:47 - INFO - [sql_generator.py:117] - Query processing completed in 22.39s
2025-03-25 03:20:47 - INFO - [sql_generator.py:117] - Query processing completed in 22.39s
2025-03-25 03:20:47 - INFO - [sql_generator.py:117] - Query processing completed in 22.39s
2025-03-25 03:20:47 - INFO - [sql_generator.py:117] - Query processing completed in 22.39s
2025-03-25 03:20:47 - INFO - [sql_generator.py:117] - Query processing completed in 22.39s
2025-03-25 03:20:47 - INFO - [sql_generator.py:117] - Query processing completed in 22.39s
2025-03-25 03:20:47 - INFO - [sql_generator.py:117] - Query processing completed in 22.39s
2025-03-25 03:20:47 - INFO - [sql_generator.py:117] - Query processing completed in 22.39s
2025-03-25 03:20:47 - INFO - [sql_generator.py:117] - Query processing completed in 22.39s
2025-03-25 03:20:47 - INFO - [sql_generator.py:117] - Query processing completed in 22.39s
2025-03-25 03:20:47 - INFO - [sql_generator.py:117] - Query processing completed in 22.39s
2025-03-25 03:20:47 - INFO - [sql_generator.py:117] - Query processing completed in 22.39s
2025-03-25 03:20:47 - INFO - [sql_generator.py:117] - Query processing completed in 22.39s
2025-03-25 03:20:47 - INFO - [sql_generator.py:117] - Query processing completed in 22.39s
2025-03-25 03:20:47 - INFO - [sql_generator.py:117] - Query processing completed in 22.39s
2025-03-25 03:20:47 - INFO - [sql_generator.py:117] - Query processing completed in 22.39s
2025-03-25 03:20:47 - INFO - [sql_generator.py:117] - Query processing completed in 22.39s
2025-03-25 03:20:47 - INFO - [sql_generator.py:117] - Query processing completed in 22.39s
2025-03-25 03:20:47 - INFO - [sql_generator.py:117] - Query processing completed in 22.39s
2025-03-25 03:20:47 - INFO - [sql_generator.py:117] - Query processing completed in 22.39s
2025-03-25 03:20:47 - INFO - [sql_generator.py:117] - Query processing completed in 22.39s
2025-03-25 03:20:47 - INFO - [sql_generator.py:117] - Query processing completed in 22.39s
2025-03-25 03:20:47 - INFO - [sql_generator.py:117] - Query processing completed in 22.39s
2025-03-25 03:20:47 - INFO - [sql_generator.py:117] - Query processing completed in 22.39s
2025-03-25 03:20:47 - INFO - [sql_generator.py:117] - Query processing completed in 22.39s
2025-03-25 03:20:47 - INFO - [sql_generator.py:117] - Query processing completed in 22.39s
2025-03-25 03:20:47 - INFO - [sql_generator.py:117] - Query processing completed in 22.39s
2025-03-25 03:20:47 - INFO - [sql_generator.py:117] - Query processing completed in 22.39s
2025-03-25 03:20:47 - INFO - [sql_generator.py:117] - Query processing completed in 22.39s
2025-03-25 03:20:47 - INFO - [sql_generator.py:117] - Query processing completed in 22.39s
2025-03-25 03:20:47 - INFO - [sql_generator.py:117] - Query processing completed in 22.39s
2025-03-25 03:20:47 - INFO - [sql_generator.py:117] - Query processing completed in 22.39s
2025-03-25 03:20:47 - INFO - [sql_generator.py:117] - Query processing completed in 22.39s
2025-03-25 03:20:47 - INFO - [sql_generator.py:117] - Query processing completed in 22.39s
2025-03-25 03:20:47 - INFO - [sql_generator.py:117] - Query processing completed in 22.39s
2025-03-25 03:20:47 - INFO - [sql_generator.py:117] - Query processing completed in 22.39s
2025-03-25 03:20:47 - INFO - [sql_generator.py:117] - Query processing completed in 22.39s
2025-03-25 03:20:47 - INFO - [sql_generator.py:117] - Query processing completed in 22.39s
2025-03-25 03:20:47 - INFO - [sql_generator.py:117] - Query processing completed in 22.39s
2025-03-25 03:20:47 - INFO - [sql_generator.py:117] - Query processing completed in 22.39s
2025-03-25 03:20:47 - INFO - [sql_generator.py:117] - Query processing completed in 22.39s
2025-03-25 03:20:47 - INFO - [sql_generator.py:117] - Query processing completed in 22.39s
2025-03-25 03:20:47 - INFO - [sql_generator.py:117] - Query processing completed in 22.39s
2025-03-25 03:20:47 - INFO - [sql_generator.py:117] - Query processing completed in 22.39s
2025-03-25 03:20:47 - INFO - [sql_generator.py:117] - Query processing completed in 22.39s
2025-03-25 03:20:47 - INFO - [sql_generator.py:117] - Query processing completed in 22.39s
2025-03-25 03:20:47 - INFO - [sql_generator.py:117] - Query processing completed in 22.39s
2025-03-25 03:20:47 - INFO - [sql_generator.py:117] - Query processing completed in 22.39s
2025-03-25 03:20:48 - INFO - [streamlit_app.py:120] - Background processing of query: 'How many customers do we have?'
2025-03-25 03:20:48 - INFO - [streamlit_app.py:120] - Background processing of query: 'How many customers do we have?'
2025-03-25 03:20:48 - INFO - [streamlit_app.py:120] - Background processing of query: 'How many customers do we have?'
2025-03-25 03:20:48 - INFO - [streamlit_app.py:120] - Background processing of query: 'How many customers do we have?'
2025-03-25 03:20:48 - INFO - [streamlit_app.py:120] - Background processing of query: 'How many customers do we have?'
2025-03-25 03:20:48 - INFO - [streamlit_app.py:120] - Background processing of query: 'How many customers do we have?'
2025-03-25 03:20:48 - INFO - [streamlit_app.py:120] - Background processing of query: 'How many customers do we have?'
2025-03-25 03:20:48 - INFO - [streamlit_app.py:120] - Background processing of query: 'How many customers do we have?'
2025-03-25 03:20:48 - INFO - [streamlit_app.py:120] - Background processing of query: 'How many customers do we have?'
2025-03-25 03:20:48 - INFO - [streamlit_app.py:120] - Background processing of query: 'How many customers do we have?'
2025-03-25 03:20:48 - INFO - [streamlit_app.py:120] - Background processing of query: 'How many customers do we have?'
2025-03-25 03:20:48 - INFO - [streamlit_app.py:120] - Background processing of query: 'How many customers do we have?'
2025-03-25 03:20:48 - INFO - [streamlit_app.py:120] - Background processing of query: 'How many customers do we have?'
2025-03-25 03:20:48 - INFO - [streamlit_app.py:120] - Background processing of query: 'How many customers do we have?'
2025-03-25 03:20:48 - INFO - [streamlit_app.py:120] - Background processing of query: 'How many customers do we have?'
2025-03-25 03:20:48 - INFO - [streamlit_app.py:120] - Background processing of query: 'How many customers do we have?'
2025-03-25 03:20:48 - INFO - [streamlit_app.py:120] - Background processing of query: 'How many customers do we have?'
2025-03-25 03:20:48 - INFO - [streamlit_app.py:120] - Background processing of query: 'How many customers do we have?'
2025-03-25 03:20:48 - INFO - [streamlit_app.py:120] - Background processing of query: 'How many customers do we have?'
2025-03-25 03:20:48 - INFO - [streamlit_app.py:120] - Background processing of query: 'How many customers do we have?'
2025-03-25 03:20:48 - INFO - [streamlit_app.py:120] - Background processing of query: 'How many customers do we have?'
2025-03-25 03:20:48 - INFO - [streamlit_app.py:120] - Background processing of query: 'How many customers do we have?'
2025-03-25 03:20:48 - INFO - [streamlit_app.py:120] - Background processing of query: 'How many customers do we have?'
2025-03-25 03:20:48 - INFO - [streamlit_app.py:120] - Background processing of query: 'How many customers do we have?'
2025-03-25 03:20:48 - INFO - [streamlit_app.py:120] - Background processing of query: 'How many customers do we have?'
2025-03-25 03:20:48 - INFO - [streamlit_app.py:120] - Background processing of query: 'How many customers do we have?'
2025-03-25 03:20:48 - INFO - [streamlit_app.py:120] - Background processing of query: 'How many customers do we have?'
2025-03-25 03:20:48 - INFO - [streamlit_app.py:120] - Background processing of query: 'How many customers do we have?'
2025-03-25 03:20:48 - INFO - [streamlit_app.py:120] - Background processing of query: 'How many customers do we have?'
2025-03-25 03:20:48 - INFO - [streamlit_app.py:120] - Background processing of query: 'How many customers do we have?'
2025-03-25 03:20:48 - INFO - [streamlit_app.py:120] - Background processing of query: 'How many customers do we have?'
2025-03-25 03:20:48 - INFO - [streamlit_app.py:120] - Background processing of query: 'How many customers do we have?'
2025-03-25 03:20:48 - INFO - [streamlit_app.py:120] - Background processing of query: 'How many customers do we have?'
2025-03-25 03:20:48 - INFO - [streamlit_app.py:120] - Background processing of query: 'How many customers do we have?'
2025-03-25 03:20:48 - INFO - [streamlit_app.py:120] - Background processing of query: 'How many customers do we have?'
2025-03-25 03:20:48 - INFO - [streamlit_app.py:120] - Background processing of query: 'How many customers do we have?'
2025-03-25 03:20:48 - INFO - [streamlit_app.py:120] - Background processing of query: 'How many customers do we have?'
2025-03-25 03:20:48 - INFO - [streamlit_app.py:120] - Background processing of query: 'How many customers do we have?'
2025-03-25 03:20:48 - INFO - [streamlit_app.py:120] - Background processing of query: 'How many customers do we have?'
2025-03-25 03:20:48 - INFO - [streamlit_app.py:120] - Background processing of query: 'How many customers do we have?'
2025-03-25 03:20:48 - INFO - [streamlit_app.py:120] - Background processing of query: 'How many customers do we have?'
2025-03-25 03:20:48 - INFO - [streamlit_app.py:120] - Background processing of query: 'How many customers do we have?'
2025-03-25 03:20:48 - INFO - [streamlit_app.py:120] - Background processing of query: 'How many customers do we have?'
2025-03-25 03:20:48 - INFO - [streamlit_app.py:120] - Background processing of query: 'How many customers do we have?'
2025-03-25 03:20:48 - INFO - [streamlit_app.py:120] - Background processing of query: 'How many customers do we have?'
2025-03-25 03:20:48 - INFO - [streamlit_app.py:120] - Background processing of query: 'How many customers do we have?'
2025-03-25 03:20:48 - INFO - [streamlit_app.py:120] - Background processing of query: 'How many customers do we have?'
2025-03-25 03:20:48 - INFO - [streamlit_app.py:120] - Background processing of query: 'How many customers do we have?'
2025-03-25 03:20:48 - INFO - [streamlit_app.py:120] - Background processing of query: 'How many customers do we have?'
2025-03-25 03:20:48 - INFO - [streamlit_app.py:120] - Background processing of query: 'How many customers do we have?'
2025-03-25 03:20:48 - INFO - [streamlit_app.py:120] - Background processing of query: 'How many customers do we have?'
2025-03-25 03:20:48 - INFO - [streamlit_app.py:120] - Background processing of query: 'How many customers do we have?'
2025-03-25 03:20:48 - INFO - [streamlit_app.py:120] - Background processing of query: 'How many customers do we have?'
2025-03-25 03:20:48 - INFO - [streamlit_app.py:120] - Background processing of query: 'How many customers do we have?'
2025-03-25 03:20:48 - INFO - [streamlit_app.py:120] - Background processing of query: 'How many customers do we have?'
2025-03-25 03:20:48 - INFO - [streamlit_app.py:120] - Background processing of query: 'How many customers do we have?'
2025-03-25 03:20:48 - INFO - [streamlit_app.py:120] - Background processing of query: 'How many customers do we have?'
2025-03-25 03:20:48 - INFO - [streamlit_app.py:120] - Background processing of query: 'How many customers do we have?'
2025-03-25 03:20:48 - INFO - [streamlit_app.py:120] - Background processing of query: 'How many customers do we have?'
2025-03-25 03:20:48 - INFO - [streamlit_app.py:120] - Background processing of query: 'How many customers do we have?'
2025-03-25 03:20:48 - INFO - [streamlit_app.py:120] - Background processing of query: 'How many customers do we have?'
2025-03-25 03:20:48 - INFO - [streamlit_app.py:120] - Background processing of query: 'How many customers do we have?'
2025-03-25 03:20:48 - INFO - [streamlit_app.py:120] - Background processing of query: 'How many customers do we have?'
2025-03-25 03:20:48 - INFO - [streamlit_app.py:120] - Background processing of query: 'How many customers do we have?'
2025-03-25 03:20:48 - INFO - [streamlit_app.py:120] - Background processing of query: 'How many customers do we have?'
2025-03-25 03:20:48 - INFO - [streamlit_app.py:120] - Background processing of query: 'How many customers do we have?'
2025-03-25 03:20:48 - INFO - [streamlit_app.py:120] - Background processing of query: 'How many customers do we have?'
2025-03-25 03:20:48 - INFO - [streamlit_app.py:120] - Background processing of query: 'How many customers do we have?'
2025-03-25 03:20:48 - INFO - [streamlit_app.py:120] - Background processing of query: 'How many customers do we have?'
2025-03-25 03:20:48 - INFO - [streamlit_app.py:120] - Background processing of query: 'How many customers do we have?'
2025-03-25 03:20:48 - INFO - [streamlit_app.py:120] - Background processing of query: 'How many customers do we have?'
2025-03-25 03:20:48 - INFO - [streamlit_app.py:120] - Background processing of query: 'How many customers do we have?'
2025-03-25 03:20:48 - INFO - [streamlit_app.py:120] - Background processing of query: 'How many customers do we have?'
2025-03-25 03:20:48 - INFO - [streamlit_app.py:120] - Background processing of query: 'How many customers do we have?'
2025-03-25 03:20:48 - INFO - [streamlit_app.py:120] - Background processing of query: 'How many customers do we have?'
2025-03-25 03:20:48 - INFO - [streamlit_app.py:120] - Background processing of query: 'How many customers do we have?'
2025-03-25 03:20:48 - INFO - [streamlit_app.py:120] - Background processing of query: 'How many customers do we have?'
2025-03-25 03:20:48 - INFO - [streamlit_app.py:120] - Background processing of query: 'How many customers do we have?'
2025-03-25 03:20:48 - INFO - [streamlit_app.py:120] - Background processing of query: 'How many customers do we have?'
2025-03-25 03:20:48 - INFO - [streamlit_app.py:120] - Background processing of query: 'How many customers do we have?'
2025-03-25 03:20:48 - INFO - [streamlit_app.py:120] - Background processing of query: 'How many customers do we have?'
2025-03-25 03:20:48 - INFO - [streamlit_app.py:120] - Background processing of query: 'How many customers do we have?'
2025-03-25 03:20:48 - INFO - [streamlit_app.py:120] - Background processing of query: 'How many customers do we have?'
2025-03-25 03:20:48 - INFO - [streamlit_app.py:120] - Background processing of query: 'How many customers do we have?'
2025-03-25 03:20:48 - INFO - [streamlit_app.py:120] - Background processing of query: 'How many customers do we have?'
2025-03-25 03:20:48 - INFO - [streamlit_app.py:120] - Background processing of query: 'How many customers do we have?'
2025-03-25 03:20:48 - INFO - [streamlit_app.py:120] - Background processing of query: 'How many customers do we have?'
2025-03-25 03:20:48 - INFO - [streamlit_app.py:120] - Background processing of query: 'How many customers do we have?'
2025-03-25 03:20:48 - INFO - [streamlit_app.py:120] - Background processing of query: 'How many customers do we have?'
2025-03-25 03:20:48 - INFO - [streamlit_app.py:120] - Background processing of query: 'How many customers do we have?'
2025-03-25 03:20:48 - INFO - [streamlit_app.py:120] - Background processing of query: 'How many customers do we have?'
2025-03-25 03:20:48 - INFO - [streamlit_app.py:120] - Background processing of query: 'How many customers do we have?'
2025-03-25 03:20:48 - INFO - [streamlit_app.py:120] - Background processing of query: 'How many customers do we have?'
2025-03-25 03:20:48 - INFO - [streamlit_app.py:120] - Background processing of query: 'How many customers do we have?'
2025-03-25 03:20:48 - INFO - [streamlit_app.py:120] - Background processing of query: 'How many customers do we have?'
2025-03-25 03:20:48 - INFO - [streamlit_app.py:120] - Background processing of query: 'How many customers do we have?'
2025-03-25 03:20:48 - INFO - [streamlit_app.py:120] - Background processing of query: 'How many customers do we have?'
2025-03-25 03:20:48 - INFO - [streamlit_app.py:120] - Background processing of query: 'How many customers do we have?'
2025-03-25 03:20:48 - INFO - [streamlit_app.py:120] - Background processing of query: 'How many customers do we have?'
2025-03-25 03:20:48 - INFO - [streamlit_app.py:120] - Background processing of query: 'How many customers do we have?'
2025-03-25 03:20:48 - INFO - [streamlit_app.py:120] - Background processing of query: 'How many customers do we have?'
2025-03-25 03:20:48 - INFO - [streamlit_app.py:120] - Background processing of query: 'How many customers do we have?'
2025-03-25 03:20:48 - INFO - [streamlit_app.py:120] - Background processing of query: 'How many customers do we have?'
2025-03-25 03:20:48 - INFO - [streamlit_app.py:120] - Background processing of query: 'How many customers do we have?'
2025-03-25 03:20:48 - INFO - [streamlit_app.py:120] - Background processing of query: 'How many customers do we have?'
2025-03-25 03:20:48 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:48 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:48 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:48 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:48 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:48 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:48 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:48 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:48 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:48 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:48 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:48 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:48 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:48 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:48 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:48 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:48 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:48 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:48 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:48 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:48 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:48 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:48 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:48 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:48 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:48 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:48 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:48 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:48 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:48 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:48 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:48 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:48 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:48 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:48 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:48 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:48 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:48 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:48 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:48 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:48 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:48 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:48 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:48 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:48 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:48 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:48 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:48 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:48 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:48 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:48 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:48 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:48 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:48 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:48 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:48 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:48 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:48 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:48 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:48 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:48 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:48 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:48 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:48 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:48 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:48 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:48 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:48 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:48 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:48 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:48 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:48 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:48 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:48 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:48 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:48 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:48 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:48 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:48 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:48 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:48 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:48 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:48 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:48 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:48 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:48 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:48 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:48 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:48 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:48 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:48 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:48 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:48 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:48 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:48 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:48 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:48 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:48 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:48 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:48 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:48 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:48 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:48 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:48 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:48 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:48 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:48 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:49 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:49 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:49 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:49 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:49 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:49 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:49 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:49 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:49 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:49 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:49 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:49 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:49 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:49 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:49 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:49 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:49 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:49 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:49 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:49 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:49 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:49 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:49 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:49 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:49 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:49 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:49 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:49 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:49 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:49 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:49 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:49 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:49 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:49 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:49 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:49 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:49 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:49 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:49 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:49 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:49 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:49 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:49 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:49 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:49 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:49 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:49 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:49 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:49 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:49 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:49 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:49 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:49 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:49 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:49 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:49 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:49 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:49 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:49 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:49 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:49 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:49 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:49 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:49 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:49 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:49 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:49 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:49 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:49 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:49 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:49 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:49 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:49 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:49 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:49 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:49 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:49 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:49 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:49 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:49 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:49 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:49 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:49 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:49 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:49 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:49 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:49 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:49 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:49 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:49 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:49 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:49 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:49 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:49 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:49 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:49 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:49 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:49 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:49 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:49 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:49 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:49 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:49 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:49 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:49 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:49 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:49 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:49 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:49 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:50 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:50 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:50 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:50 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:50 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:50 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:50 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:50 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:50 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:50 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:50 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:50 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:50 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:50 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:50 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:50 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:50 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:50 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:50 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:50 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:50 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:50 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:50 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:50 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:50 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:50 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:50 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:50 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:50 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:50 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:50 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:50 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:50 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:50 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:50 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:50 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:50 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:50 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:50 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:50 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:50 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:50 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:50 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:50 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:50 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:50 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:50 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:50 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:50 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:50 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:50 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:50 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:50 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:50 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:50 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:50 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:50 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:50 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:50 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:50 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:50 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:50 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:50 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:50 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:50 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:50 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:50 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:50 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:50 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:50 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:50 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:50 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:50 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:50 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:50 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:50 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:50 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:50 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:50 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:50 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:50 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:50 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:50 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:50 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:50 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:50 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:50 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:50 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:50 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:50 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:50 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:50 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:50 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:50 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:50 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:50 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:50 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:50 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:50 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:50 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:50 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:50 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:50 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:50 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:50 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:50 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:50 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:50 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:50 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:50 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:50 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:50 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:51 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:51 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:51 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:51 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:51 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:51 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:51 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:51 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:51 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:51 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:51 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:51 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:51 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:51 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:51 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:51 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:51 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:51 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:51 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:51 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:51 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:51 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:51 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:51 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:51 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:51 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:51 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:51 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:51 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:51 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:51 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:51 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:51 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:51 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:51 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:51 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:51 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:51 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:51 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:51 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:51 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:51 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:51 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:51 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:51 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:51 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:51 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:51 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:51 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:51 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:51 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:51 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:51 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:51 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:51 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:51 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:51 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:51 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:51 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:51 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:51 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:51 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:51 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:51 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:51 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:51 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:51 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:51 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:51 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:51 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:51 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:51 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:51 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:51 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:51 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:51 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:51 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:51 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:51 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:51 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:51 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:51 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:51 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:51 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:51 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:51 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:51 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:51 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:51 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:51 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:51 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:51 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:51 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:51 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:51 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:51 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:51 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:51 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:51 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:51 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:51 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:51 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:51 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:51 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:51 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:51 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:51 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:51 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:51 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:51 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:51 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:51 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:51 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:51 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:51 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:52 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:52 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:52 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:52 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:52 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:52 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:52 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:52 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:52 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:52 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:52 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:52 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:52 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:52 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:52 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:52 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:52 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:52 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:52 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:52 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:52 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:52 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:52 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:52 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:52 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:52 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:52 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:52 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:52 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:52 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:52 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:52 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:52 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:52 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:52 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:52 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:52 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:52 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:52 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:52 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:52 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:52 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:52 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:52 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:52 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:52 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:52 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:52 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:52 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:52 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:52 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:52 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:52 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:52 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:52 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:52 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:52 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:52 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:52 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:52 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:52 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:52 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:52 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:52 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:52 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:52 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:52 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:52 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:52 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:52 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:52 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:52 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:52 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:52 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:52 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:52 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:52 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:52 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:52 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:52 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:52 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:52 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:52 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:52 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:52 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:52 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:52 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:52 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:52 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:52 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:52 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:52 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:52 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:52 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:52 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:52 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:52 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:52 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:52 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:52 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:52 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:52 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:52 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:52 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:52 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:52 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:52 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:52 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:52 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:52 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:52 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:52 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:52 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:52 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:52 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:52 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:52 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:52 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:52 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:53 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:53 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:53 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:53 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:53 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:53 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:53 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:53 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:53 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:53 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:53 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:53 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:53 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:53 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:53 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:53 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:53 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:53 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:53 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:53 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:53 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:53 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:53 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:53 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:53 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:53 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:53 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:53 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:53 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:53 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:53 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:53 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:53 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:53 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:53 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:53 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:53 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:53 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:53 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:53 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:53 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:53 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:53 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:53 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:53 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:53 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:53 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:53 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:53 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:53 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:53 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:53 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:53 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:53 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:53 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:53 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:53 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:53 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:53 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:53 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:53 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:53 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:53 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:53 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:53 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:53 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:53 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:53 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:53 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:53 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:53 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:53 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:53 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:53 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:53 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:53 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:53 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:53 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:53 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:53 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:53 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:53 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:53 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:53 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:53 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:53 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:53 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:53 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:53 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:53 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:53 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:53 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:53 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:53 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:53 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:53 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:53 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:53 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:53 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:53 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:53 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:53 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:53 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:53 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:53 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:53 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:53 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:53 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:53 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:53 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:53 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:53 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:53 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:53 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:53 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:53 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:53 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:53 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:53 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:53 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:53 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:53 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:54 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:54 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:54 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:54 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:54 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:54 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:54 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:54 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:54 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:54 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:54 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:54 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:54 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:54 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:54 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:54 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:54 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:54 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:54 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:54 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:54 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:54 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:54 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:54 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:54 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:54 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:54 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:54 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:54 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:54 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:54 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:54 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:54 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:54 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:54 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:54 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:54 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:54 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:54 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:54 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:54 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:54 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:54 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:54 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:54 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:54 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:54 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:54 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:54 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:54 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:54 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:54 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:54 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:54 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:54 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:54 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:54 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:54 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:54 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:54 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:54 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:54 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:54 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:54 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:54 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:54 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:54 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:54 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:54 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:54 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:54 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:54 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:54 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:54 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:54 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:54 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:54 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:54 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:54 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:54 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:54 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:54 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:54 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:54 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:54 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:54 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:54 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:54 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:54 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:54 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:54 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:54 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:54 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:54 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:54 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:54 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:54 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:54 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:54 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:54 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:54 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:54 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:54 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:54 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:54 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:54 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:54 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:54 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:54 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:54 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:54 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:54 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:54 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:54 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:54 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:54 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:54 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:54 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:54 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:54 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:54 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:54 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:54 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:54 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:55 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:55 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:55 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:55 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:55 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:55 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:55 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:55 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:55 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:55 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:55 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:55 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:55 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:55 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:55 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:55 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:55 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:55 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:55 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:55 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:55 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:55 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:55 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:55 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:55 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:55 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:55 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:55 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:55 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:55 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:55 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:55 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:55 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:55 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:55 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:55 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:55 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:55 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:55 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:55 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:55 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:55 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:55 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:55 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:55 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:55 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:55 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:55 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:55 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:55 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:55 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:55 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:55 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:55 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:55 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:55 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:55 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:55 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:55 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:55 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:55 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:55 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:55 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:55 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:55 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:55 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:55 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:55 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:55 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:55 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:55 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:55 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:55 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:55 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:55 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:55 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:55 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:55 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:55 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:55 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:55 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:55 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:55 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:55 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:55 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:55 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:55 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:55 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:55 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:55 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:55 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:55 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:55 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:55 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:55 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:55 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:55 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:55 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:55 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:55 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:55 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:55 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:55 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:55 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:55 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:55 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:55 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:55 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:55 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:55 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:55 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:55 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:55 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:55 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:55 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:55 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:55 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:55 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:55 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:55 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:55 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:55 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:55 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:55 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:55 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:55 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:55 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:55 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:56 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:56 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:56 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:56 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:56 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:56 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:56 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:56 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:56 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:56 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:56 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:56 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:56 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:56 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:56 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:56 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:56 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:56 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:56 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:56 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:56 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:56 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:56 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:56 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:56 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:56 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:56 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:56 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:56 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:56 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:56 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:56 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:56 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:56 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:56 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:56 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:56 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:56 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:56 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:56 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:56 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:56 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:56 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:56 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:56 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:56 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:56 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:56 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:56 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:56 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:56 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:56 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:56 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:56 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:56 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:56 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:56 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:56 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:56 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:56 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:56 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:56 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:56 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:56 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:56 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:56 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:56 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:56 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:56 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:56 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:56 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:56 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:56 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:56 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:56 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:56 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:56 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:56 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:56 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:56 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:56 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:56 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:56 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:56 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:56 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:56 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:56 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:56 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:56 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:56 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:56 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:56 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:56 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:56 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:56 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:56 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:56 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:56 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:56 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:56 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:56 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:56 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:56 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:56 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:56 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:56 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:56 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:56 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:56 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:56 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:56 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:56 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:56 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:56 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:56 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:56 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:56 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:56 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:56 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:56 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:56 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:56 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:56 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:56 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:56 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:56 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:56 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:56 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:56 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:57 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:57 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:57 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:57 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:57 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:57 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:57 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:57 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:57 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:57 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:57 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:57 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:57 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:57 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:57 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:57 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:57 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:57 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:57 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:57 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:57 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:57 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:57 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:57 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:57 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:57 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:57 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:57 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:57 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:57 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:57 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:57 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:57 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:57 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:57 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:57 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:57 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:57 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:57 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:57 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:57 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:57 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:57 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:57 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:57 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:57 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:57 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:57 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:57 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:57 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:57 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:57 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:57 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:57 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:57 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:57 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:57 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:57 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:57 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:57 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:57 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:57 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:57 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:57 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:57 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:57 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:57 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:57 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:57 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:57 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:57 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:57 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:57 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:57 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:57 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:57 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:57 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:57 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:57 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:57 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:57 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:57 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:57 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:57 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:57 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:57 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:57 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:57 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:57 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:57 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:57 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:57 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:57 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:57 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:57 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:57 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:57 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:57 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:57 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:57 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:57 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:57 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:57 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:57 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:57 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:57 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:57 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:57 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:57 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:57 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:57 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:57 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:57 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:57 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:57 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:57 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:57 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:57 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:57 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:57 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:57 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:57 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:57 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:57 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:57 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:57 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:57 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:57 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:57 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:57 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:57 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:57 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:57 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:20:58 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:58 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:58 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:58 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:58 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:58 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:58 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:58 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:58 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:58 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:58 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:58 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:58 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:58 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:58 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:58 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:58 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:58 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:58 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:58 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:58 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:58 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:58 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:58 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:58 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:58 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:58 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:58 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:58 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:58 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:58 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:58 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:58 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:58 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:58 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:58 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:58 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:58 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:58 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:58 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:58 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:58 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:58 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:58 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:58 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:58 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:58 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:58 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:58 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:58 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:58 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:58 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:58 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:58 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:58 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:58 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:58 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:58 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:58 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:58 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:58 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:58 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:58 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:58 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:58 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:58 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:58 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:58 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:58 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:58 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:58 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:58 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:58 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:58 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:58 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:58 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:58 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:58 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:58 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:58 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:58 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:58 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:58 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:58 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:58 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:58 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:58 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:58 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:58 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:58 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:58 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:58 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:58 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:58 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:58 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:58 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:58 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:58 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:58 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:58 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:58 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:58 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:58 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:58 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:58 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:58 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:58 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:58 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:58 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:58 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:58 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:58 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:58 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:58 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:58 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:58 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:58 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:58 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:58 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:58 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:58 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:58 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:58 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:58 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:58 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:58 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:58 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:58 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:58 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:58 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:58 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:58 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:58 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:58 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:58 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:58 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:20:59 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:59 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:59 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:59 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:59 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:59 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:59 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:59 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:59 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:59 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:59 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:59 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:59 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:59 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:59 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:59 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:59 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:59 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:59 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:59 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:59 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:59 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:59 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:59 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:59 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:59 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:59 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:59 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:59 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:59 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:59 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:59 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:59 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:59 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:59 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:59 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:59 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:59 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:59 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:59 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:59 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:59 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:59 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:59 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:59 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:59 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:59 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:59 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:59 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:59 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:59 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:59 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:59 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:59 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:59 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:59 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:59 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:59 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:59 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:59 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:59 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:59 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:59 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:59 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:59 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:59 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:59 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:59 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:59 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:59 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:59 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:59 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:59 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:59 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:59 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:59 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:59 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:59 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:59 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:59 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:59 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:59 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:59 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:59 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:59 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:59 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:59 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:59 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:59 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:59 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:59 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:59 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:59 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:59 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:59 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:59 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:59 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:59 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:59 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:59 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:59 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:59 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:59 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:59 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:59 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:59 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:59 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:59 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:59 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:59 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:59 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:59 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:59 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:59 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:59 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:59 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:59 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:59 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:59 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:59 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:59 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:59 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:59 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:59 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:59 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:59 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:59 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:59 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:59 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:59 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:59 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:59 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:59 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:59 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:59 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:59 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:59 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:59 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:59 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:20:59 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:21:00 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-25 03:21:00 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-25 03:21:00 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-25 03:21:00 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-25 03:21:00 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-25 03:21:00 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-25 03:21:00 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-25 03:21:00 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-25 03:21:00 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-25 03:21:00 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-25 03:21:00 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-25 03:21:00 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-25 03:21:00 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-25 03:21:00 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-25 03:21:00 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-25 03:21:00 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-25 03:21:00 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-25 03:21:00 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-25 03:21:00 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-25 03:21:00 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-25 03:21:00 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-25 03:21:00 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-25 03:21:00 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-25 03:21:00 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-25 03:21:00 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-25 03:21:00 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-25 03:21:00 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-25 03:21:00 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-25 03:21:00 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-25 03:21:00 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-25 03:21:00 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-25 03:21:00 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-25 03:21:00 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-25 03:21:00 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-25 03:21:00 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-25 03:21:00 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-25 03:21:00 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-25 03:21:00 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-25 03:21:00 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-25 03:21:00 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-25 03:21:00 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-25 03:21:00 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-25 03:21:00 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-25 03:21:00 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-25 03:21:00 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-25 03:21:00 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-25 03:21:00 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-25 03:21:00 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-25 03:21:00 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-25 03:21:00 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-25 03:21:00 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-25 03:21:00 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-25 03:21:00 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-25 03:21:00 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-25 03:21:00 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-25 03:21:00 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-25 03:21:00 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-25 03:21:00 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-25 03:21:00 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-25 03:21:00 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-25 03:21:00 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-25 03:21:00 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-25 03:21:00 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-25 03:21:00 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-25 03:21:00 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-25 03:21:00 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-25 03:21:00 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-25 03:21:00 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-25 03:21:00 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-25 03:21:00 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-25 03:21:00 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-25 03:21:00 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-25 03:21:00 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-25 03:21:00 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-25 03:21:00 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-25 03:21:00 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-25 03:21:00 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-25 03:21:00 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-25 03:21:00 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-25 03:21:00 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-25 03:21:00 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-25 03:21:00 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-25 03:21:00 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-25 03:21:00 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-25 03:21:00 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-25 03:21:00 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-25 03:21:00 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-25 03:21:00 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-25 03:21:00 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-25 03:21:00 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-25 03:21:00 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-25 03:21:00 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-25 03:21:00 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-25 03:21:00 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-25 03:21:00 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-25 03:21:00 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-25 03:21:00 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-25 03:21:00 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-25 03:21:00 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-25 03:21:00 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-25 03:21:00 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-25 03:21:00 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-25 03:21:00 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-25 03:21:00 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-25 03:21:00 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-25 03:21:00 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-25 03:21:00 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-25 03:21:00 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-25 03:21:00 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-25 03:21:00 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-25 03:21:00 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-25 03:21:00 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-25 03:21:00 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-25 03:21:00 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-25 03:21:00 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-25 03:21:00 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-25 03:21:00 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-25 03:21:00 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-25 03:21:00 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-25 03:21:00 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-25 03:21:00 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-25 03:21:00 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-25 03:21:00 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-25 03:21:00 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-25 03:21:00 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-25 03:21:00 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-25 03:21:00 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-25 03:21:00 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-25 03:21:00 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-25 03:21:00 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-25 03:21:00 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-25 03:21:00 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-25 03:21:00 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-25 03:21:00 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-25 03:21:00 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-25 03:21:00 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-25 03:21:00 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-25 03:21:00 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-25 03:21:00 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-25 03:21:00 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-25 03:21:00 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-25 03:21:00 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-25 03:21:00 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-25 03:21:01 - INFO - [sql_generator.py:35] - Processing query: 'How many customers do we have?'
2025-03-25 03:21:01 - INFO - [sql_generator.py:35] - Processing query: 'How many customers do we have?'
2025-03-25 03:21:01 - INFO - [sql_generator.py:35] - Processing query: 'How many customers do we have?'
2025-03-25 03:21:01 - INFO - [sql_generator.py:35] - Processing query: 'How many customers do we have?'
2025-03-25 03:21:01 - INFO - [sql_generator.py:35] - Processing query: 'How many customers do we have?'
2025-03-25 03:21:01 - INFO - [sql_generator.py:35] - Processing query: 'How many customers do we have?'
2025-03-25 03:21:01 - INFO - [sql_generator.py:35] - Processing query: 'How many customers do we have?'
2025-03-25 03:21:01 - INFO - [sql_generator.py:35] - Processing query: 'How many customers do we have?'
2025-03-25 03:21:01 - INFO - [sql_generator.py:35] - Processing query: 'How many customers do we have?'
2025-03-25 03:21:01 - INFO - [sql_generator.py:35] - Processing query: 'How many customers do we have?'
2025-03-25 03:21:01 - INFO - [sql_generator.py:35] - Processing query: 'How many customers do we have?'
2025-03-25 03:21:01 - INFO - [sql_generator.py:35] - Processing query: 'How many customers do we have?'
2025-03-25 03:21:01 - INFO - [sql_generator.py:35] - Processing query: 'How many customers do we have?'
2025-03-25 03:21:01 - INFO - [sql_generator.py:35] - Processing query: 'How many customers do we have?'
2025-03-25 03:21:01 - INFO - [sql_generator.py:35] - Processing query: 'How many customers do we have?'
2025-03-25 03:21:01 - INFO - [sql_generator.py:35] - Processing query: 'How many customers do we have?'
2025-03-25 03:21:01 - INFO - [sql_generator.py:35] - Processing query: 'How many customers do we have?'
2025-03-25 03:21:01 - INFO - [sql_generator.py:35] - Processing query: 'How many customers do we have?'
2025-03-25 03:21:01 - INFO - [sql_generator.py:35] - Processing query: 'How many customers do we have?'
2025-03-25 03:21:01 - INFO - [sql_generator.py:35] - Processing query: 'How many customers do we have?'
2025-03-25 03:21:01 - INFO - [sql_generator.py:35] - Processing query: 'How many customers do we have?'
2025-03-25 03:21:01 - INFO - [sql_generator.py:35] - Processing query: 'How many customers do we have?'
2025-03-25 03:21:01 - INFO - [sql_generator.py:35] - Processing query: 'How many customers do we have?'
2025-03-25 03:21:01 - INFO - [sql_generator.py:35] - Processing query: 'How many customers do we have?'
2025-03-25 03:21:01 - INFO - [sql_generator.py:35] - Processing query: 'How many customers do we have?'
2025-03-25 03:21:01 - INFO - [sql_generator.py:35] - Processing query: 'How many customers do we have?'
2025-03-25 03:21:01 - INFO - [sql_generator.py:35] - Processing query: 'How many customers do we have?'
2025-03-25 03:21:01 - INFO - [sql_generator.py:35] - Processing query: 'How many customers do we have?'
2025-03-25 03:21:01 - INFO - [sql_generator.py:35] - Processing query: 'How many customers do we have?'
2025-03-25 03:21:01 - INFO - [sql_generator.py:35] - Processing query: 'How many customers do we have?'
2025-03-25 03:21:01 - INFO - [sql_generator.py:35] - Processing query: 'How many customers do we have?'
2025-03-25 03:21:01 - INFO - [sql_generator.py:35] - Processing query: 'How many customers do we have?'
2025-03-25 03:21:01 - INFO - [sql_generator.py:35] - Processing query: 'How many customers do we have?'
2025-03-25 03:21:01 - INFO - [sql_generator.py:35] - Processing query: 'How many customers do we have?'
2025-03-25 03:21:01 - INFO - [sql_generator.py:35] - Processing query: 'How many customers do we have?'
2025-03-25 03:21:01 - INFO - [sql_generator.py:35] - Processing query: 'How many customers do we have?'
2025-03-25 03:21:01 - INFO - [sql_generator.py:35] - Processing query: 'How many customers do we have?'
2025-03-25 03:21:01 - INFO - [sql_generator.py:35] - Processing query: 'How many customers do we have?'
2025-03-25 03:21:01 - INFO - [sql_generator.py:35] - Processing query: 'How many customers do we have?'
2025-03-25 03:21:01 - INFO - [sql_generator.py:35] - Processing query: 'How many customers do we have?'
2025-03-25 03:21:01 - INFO - [sql_generator.py:35] - Processing query: 'How many customers do we have?'
2025-03-25 03:21:01 - INFO - [sql_generator.py:35] - Processing query: 'How many customers do we have?'
2025-03-25 03:21:01 - INFO - [sql_generator.py:35] - Processing query: 'How many customers do we have?'
2025-03-25 03:21:01 - INFO - [sql_generator.py:35] - Processing query: 'How many customers do we have?'
2025-03-25 03:21:01 - INFO - [sql_generator.py:35] - Processing query: 'How many customers do we have?'
2025-03-25 03:21:01 - INFO - [sql_generator.py:35] - Processing query: 'How many customers do we have?'
2025-03-25 03:21:01 - INFO - [sql_generator.py:35] - Processing query: 'How many customers do we have?'
2025-03-25 03:21:01 - INFO - [sql_generator.py:35] - Processing query: 'How many customers do we have?'
2025-03-25 03:21:01 - INFO - [sql_generator.py:35] - Processing query: 'How many customers do we have?'
2025-03-25 03:21:01 - INFO - [sql_generator.py:35] - Processing query: 'How many customers do we have?'
2025-03-25 03:21:01 - INFO - [sql_generator.py:35] - Processing query: 'How many customers do we have?'
2025-03-25 03:21:01 - INFO - [sql_generator.py:35] - Processing query: 'How many customers do we have?'
2025-03-25 03:21:01 - INFO - [sql_generator.py:35] - Processing query: 'How many customers do we have?'
2025-03-25 03:21:01 - INFO - [sql_generator.py:35] - Processing query: 'How many customers do we have?'
2025-03-25 03:21:01 - INFO - [sql_generator.py:35] - Processing query: 'How many customers do we have?'
2025-03-25 03:21:01 - INFO - [sql_generator.py:35] - Processing query: 'How many customers do we have?'
2025-03-25 03:21:01 - INFO - [sql_generator.py:35] - Processing query: 'How many customers do we have?'
2025-03-25 03:21:01 - INFO - [sql_generator.py:35] - Processing query: 'How many customers do we have?'
2025-03-25 03:21:01 - INFO - [sql_generator.py:35] - Processing query: 'How many customers do we have?'
2025-03-25 03:21:01 - INFO - [sql_generator.py:35] - Processing query: 'How many customers do we have?'
2025-03-25 03:21:01 - INFO - [sql_generator.py:35] - Processing query: 'How many customers do we have?'
2025-03-25 03:21:01 - INFO - [sql_generator.py:35] - Processing query: 'How many customers do we have?'
2025-03-25 03:21:01 - INFO - [sql_generator.py:35] - Processing query: 'How many customers do we have?'
2025-03-25 03:21:01 - INFO - [sql_generator.py:35] - Processing query: 'How many customers do we have?'
2025-03-25 03:21:01 - INFO - [sql_generator.py:35] - Processing query: 'How many customers do we have?'
2025-03-25 03:21:01 - INFO - [sql_generator.py:35] - Processing query: 'How many customers do we have?'
2025-03-25 03:21:01 - INFO - [sql_generator.py:35] - Processing query: 'How many customers do we have?'
2025-03-25 03:21:01 - INFO - [sql_generator.py:35] - Processing query: 'How many customers do we have?'
2025-03-25 03:21:01 - INFO - [sql_generator.py:35] - Processing query: 'How many customers do we have?'
2025-03-25 03:21:01 - INFO - [sql_generator.py:35] - Processing query: 'How many customers do we have?'
2025-03-25 03:21:01 - INFO - [sql_generator.py:35] - Processing query: 'How many customers do we have?'
2025-03-25 03:21:01 - INFO - [sql_generator.py:35] - Processing query: 'How many customers do we have?'
2025-03-25 03:21:01 - INFO - [sql_generator.py:35] - Processing query: 'How many customers do we have?'
2025-03-25 03:21:01 - INFO - [sql_generator.py:35] - Processing query: 'How many customers do we have?'
2025-03-25 03:21:01 - INFO - [sql_generator.py:35] - Processing query: 'How many customers do we have?'
2025-03-25 03:21:01 - INFO - [sql_generator.py:35] - Processing query: 'How many customers do we have?'
2025-03-25 03:21:01 - INFO - [sql_generator.py:35] - Processing query: 'How many customers do we have?'
2025-03-25 03:21:01 - INFO - [sql_generator.py:35] - Processing query: 'How many customers do we have?'
2025-03-25 03:21:01 - INFO - [sql_generator.py:35] - Processing query: 'How many customers do we have?'
2025-03-25 03:21:01 - INFO - [sql_generator.py:35] - Processing query: 'How many customers do we have?'
2025-03-25 03:21:01 - INFO - [sql_generator.py:35] - Processing query: 'How many customers do we have?'
2025-03-25 03:21:01 - INFO - [sql_generator.py:35] - Processing query: 'How many customers do we have?'
2025-03-25 03:21:01 - INFO - [sql_generator.py:35] - Processing query: 'How many customers do we have?'
2025-03-25 03:21:01 - INFO - [sql_generator.py:35] - Processing query: 'How many customers do we have?'
2025-03-25 03:21:01 - INFO - [sql_generator.py:35] - Processing query: 'How many customers do we have?'
2025-03-25 03:21:01 - INFO - [sql_generator.py:35] - Processing query: 'How many customers do we have?'
2025-03-25 03:21:01 - INFO - [sql_generator.py:35] - Processing query: 'How many customers do we have?'
2025-03-25 03:21:01 - INFO - [sql_generator.py:35] - Processing query: 'How many customers do we have?'
2025-03-25 03:21:01 - INFO - [sql_generator.py:35] - Processing query: 'How many customers do we have?'
2025-03-25 03:21:01 - INFO - [sql_generator.py:35] - Processing query: 'How many customers do we have?'
2025-03-25 03:21:01 - INFO - [sql_generator.py:35] - Processing query: 'How many customers do we have?'
2025-03-25 03:21:01 - INFO - [sql_generator.py:35] - Processing query: 'How many customers do we have?'
2025-03-25 03:21:01 - INFO - [sql_generator.py:35] - Processing query: 'How many customers do we have?'
2025-03-25 03:21:01 - INFO - [sql_generator.py:35] - Processing query: 'How many customers do we have?'
2025-03-25 03:21:01 - INFO - [sql_generator.py:35] - Processing query: 'How many customers do we have?'
2025-03-25 03:21:01 - INFO - [sql_generator.py:35] - Processing query: 'How many customers do we have?'
2025-03-25 03:21:01 - INFO - [sql_generator.py:35] - Processing query: 'How many customers do we have?'
2025-03-25 03:21:01 - INFO - [sql_generator.py:35] - Processing query: 'How many customers do we have?'
2025-03-25 03:21:01 - INFO - [sql_generator.py:35] - Processing query: 'How many customers do we have?'
2025-03-25 03:21:01 - INFO - [sql_generator.py:35] - Processing query: 'How many customers do we have?'
2025-03-25 03:21:01 - INFO - [sql_generator.py:35] - Processing query: 'How many customers do we have?'
2025-03-25 03:21:01 - INFO - [sql_generator.py:35] - Processing query: 'How many customers do we have?'
2025-03-25 03:21:01 - INFO - [sql_generator.py:35] - Processing query: 'How many customers do we have?'
2025-03-25 03:21:01 - INFO - [sql_generator.py:35] - Processing query: 'How many customers do we have?'
2025-03-25 03:21:01 - INFO - [sql_generator.py:35] - Processing query: 'How many customers do we have?'
2025-03-25 03:21:01 - INFO - [sql_generator.py:35] - Processing query: 'How many customers do we have?'
2025-03-25 03:21:01 - INFO - [sql_generator.py:35] - Processing query: 'How many customers do we have?'
2025-03-25 03:21:01 - INFO - [sql_generator.py:35] - Processing query: 'How many customers do we have?'
2025-03-25 03:21:01 - INFO - [sql_generator.py:35] - Processing query: 'How many customers do we have?'
2025-03-25 03:21:01 - INFO - [sql_generator.py:35] - Processing query: 'How many customers do we have?'
2025-03-25 03:21:01 - INFO - [sql_generator.py:35] - Processing query: 'How many customers do we have?'
2025-03-25 03:21:01 - INFO - [sql_generator.py:35] - Processing query: 'How many customers do we have?'
2025-03-25 03:21:01 - INFO - [sql_generator.py:35] - Processing query: 'How many customers do we have?'
2025-03-25 03:21:01 - INFO - [sql_generator.py:35] - Processing query: 'How many customers do we have?'
2025-03-25 03:21:01 - INFO - [sql_generator.py:35] - Processing query: 'How many customers do we have?'
2025-03-25 03:21:01 - INFO - [sql_generator.py:35] - Processing query: 'How many customers do we have?'
2025-03-25 03:21:01 - INFO - [sql_generator.py:35] - Processing query: 'How many customers do we have?'
2025-03-25 03:21:01 - INFO - [sql_generator.py:35] - Processing query: 'How many customers do we have?'
2025-03-25 03:21:01 - INFO - [sql_generator.py:35] - Processing query: 'How many customers do we have?'
2025-03-25 03:21:01 - INFO - [sql_generator.py:35] - Processing query: 'How many customers do we have?'
2025-03-25 03:21:01 - INFO - [sql_generator.py:35] - Processing query: 'How many customers do we have?'
2025-03-25 03:21:01 - INFO - [sql_generator.py:35] - Processing query: 'How many customers do we have?'
2025-03-25 03:21:01 - INFO - [sql_generator.py:35] - Processing query: 'How many customers do we have?'
2025-03-25 03:21:01 - INFO - [sql_generator.py:35] - Processing query: 'How many customers do we have?'
2025-03-25 03:21:01 - INFO - [sql_generator.py:35] - Processing query: 'How many customers do we have?'
2025-03-25 03:21:01 - INFO - [sql_generator.py:35] - Processing query: 'How many customers do we have?'
2025-03-25 03:21:01 - INFO - [sql_generator.py:35] - Processing query: 'How many customers do we have?'
2025-03-25 03:21:01 - INFO - [sql_generator.py:35] - Processing query: 'How many customers do we have?'
2025-03-25 03:21:01 - INFO - [sql_generator.py:35] - Processing query: 'How many customers do we have?'
2025-03-25 03:21:01 - INFO - [sql_generator.py:35] - Processing query: 'How many customers do we have?'
2025-03-25 03:21:01 - INFO - [sql_generator.py:35] - Processing query: 'How many customers do we have?'
2025-03-25 03:21:01 - INFO - [sql_generator.py:35] - Processing query: 'How many customers do we have?'
2025-03-25 03:21:01 - INFO - [sql_generator.py:35] - Processing query: 'How many customers do we have?'
2025-03-25 03:21:01 - INFO - [sql_generator.py:35] - Processing query: 'How many customers do we have?'
2025-03-25 03:21:01 - INFO - [sql_generator.py:35] - Processing query: 'How many customers do we have?'
2025-03-25 03:21:01 - INFO - [sql_generator.py:35] - Processing query: 'How many customers do we have?'
2025-03-25 03:21:01 - INFO - [sql_generator.py:35] - Processing query: 'How many customers do we have?'
2025-03-25 03:21:01 - INFO - [sql_generator.py:35] - Processing query: 'How many customers do we have?'
2025-03-25 03:21:01 - INFO - [sql_generator.py:35] - Processing query: 'How many customers do we have?'
2025-03-25 03:21:01 - INFO - [sql_generator.py:35] - Processing query: 'How many customers do we have?'
2025-03-25 03:21:01 - INFO - [sql_generator.py:35] - Processing query: 'How many customers do we have?'
2025-03-25 03:21:01 - INFO - [sql_generator.py:35] - Processing query: 'How many customers do we have?'
2025-03-25 03:21:01 - INFO - [sql_generator.py:35] - Processing query: 'How many customers do we have?'
2025-03-25 03:21:01 - INFO - [sql_generator.py:35] - Processing query: 'How many customers do we have?'
2025-03-25 03:21:01 - INFO - [sql_generator.py:35] - Processing query: 'How many customers do we have?'
2025-03-25 03:21:01 - INFO - [sql_generator.py:35] - Processing query: 'How many customers do we have?'
2025-03-25 03:21:01 - INFO - [sql_generator.py:35] - Processing query: 'How many customers do we have?'
2025-03-25 03:21:05 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:21:05 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:21:05 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:21:05 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:21:05 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:21:05 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:21:05 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:21:05 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:21:05 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:21:05 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:21:05 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:21:05 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:21:05 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:21:05 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:21:05 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:21:05 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:21:05 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:21:05 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:21:05 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:21:05 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:21:05 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:21:05 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:21:05 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:21:05 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:21:05 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:21:05 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:21:05 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:21:05 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:21:05 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:21:05 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:21:05 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:21:05 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:21:05 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:21:05 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:21:05 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:21:05 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:21:05 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:21:05 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:21:05 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:21:05 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:21:05 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:21:05 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:21:05 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:21:05 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:21:05 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:21:05 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:21:05 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:21:05 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:21:05 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:21:05 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:21:05 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:21:05 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:21:05 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:21:05 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:21:05 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:21:05 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:21:05 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:21:05 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:21:05 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:21:05 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:21:05 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:21:05 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:21:05 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:21:05 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:21:05 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:21:05 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:21:05 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:21:05 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:21:05 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:21:05 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:21:05 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:21:05 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:21:05 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:21:05 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:21:05 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:21:05 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:21:05 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:21:05 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:21:05 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:21:05 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:21:05 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:21:05 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:21:05 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:21:05 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:21:05 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:21:05 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:21:05 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:21:05 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:21:05 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:21:05 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:21:05 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:21:05 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:21:05 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:21:05 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:21:05 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:21:05 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:21:05 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:21:05 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:21:05 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:21:05 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:21:05 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:21:05 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:21:05 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:21:05 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:21:05 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:21:05 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:21:05 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:21:05 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:21:05 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:21:05 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:21:05 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:21:05 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:21:05 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:21:05 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:21:05 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:21:05 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:21:05 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:21:05 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:21:05 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:21:05 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:21:05 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:21:05 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:21:05 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:21:05 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:21:05 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:21:05 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:21:05 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:21:05 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:21:05 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:21:05 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:21:05 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:21:05 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:21:05 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:21:05 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:21:05 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:21:05 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:21:05 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:21:05 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:21:05 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:21:05 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:21:05 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:21:05 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:21:05 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:21:05 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:21:05 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:21:05 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:21:05 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:21:05 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:21:05 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:21:05 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:21:05 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:21:05 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:21:05 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:21:05 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:21:05 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:21:05 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:21:05 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:21:05 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:21:05 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:21:05 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:21:05 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:21:06 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:21:06 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:21:06 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:21:06 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:21:06 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:21:06 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:21:06 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:21:06 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:21:06 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:21:06 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:21:06 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:21:06 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:21:06 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:21:06 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:21:06 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:21:06 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:21:06 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:21:06 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:21:06 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:21:06 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:21:06 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:21:06 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:21:06 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:21:06 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:21:06 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:21:06 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:21:06 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:21:06 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:21:06 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:21:06 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:21:06 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:21:06 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:21:06 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:21:06 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:21:06 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:21:06 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:21:06 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:21:06 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:21:06 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:21:06 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:21:06 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:21:06 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:21:06 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:21:06 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:21:06 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:21:06 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:21:06 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:21:06 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:21:06 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:21:06 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:21:06 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:21:06 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:21:06 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:21:06 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:21:06 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:21:06 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:21:06 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:21:06 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:21:06 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:21:06 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:21:06 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:21:06 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:21:06 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:21:06 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:21:06 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:21:06 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:21:06 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:21:06 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:21:06 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:21:06 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:21:06 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:21:06 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:21:06 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:21:06 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:21:06 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:21:06 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:21:06 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:21:06 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:21:06 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:21:06 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:21:06 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:21:06 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:21:06 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:21:06 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:21:06 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:21:06 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:21:06 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:21:06 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:21:06 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:21:06 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:21:06 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:21:06 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:21:06 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:21:06 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:21:06 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:21:06 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:21:06 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:21:06 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:21:06 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:21:06 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:21:06 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:21:06 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:21:06 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:21:06 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:21:06 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:21:06 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:21:06 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:21:06 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:21:06 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:21:06 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:21:06 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:21:06 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:21:06 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:21:06 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:21:06 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:21:06 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:21:06 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:21:06 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:21:06 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:21:06 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:21:06 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:21:06 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:21:06 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:21:06 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:21:06 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:21:06 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:21:06 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:21:06 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:21:06 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:21:06 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:21:06 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:21:06 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:21:06 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:21:06 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:21:06 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:21:06 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:21:06 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:21:06 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:21:06 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:21:06 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:21:06 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:21:06 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:21:06 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:21:06 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:21:06 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:21:06 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:21:06 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:21:06 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:21:06 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:21:06 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:21:06 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:21:06 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:21:06 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:21:06 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:21:06 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:21:06 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:21:06 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:21:06 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:21:06 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:21:06 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:21:06 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:21:06 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:21:06 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:21:06 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:21:06 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:21:08 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:21:08 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:21:08 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:21:08 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:21:08 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:21:08 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:21:08 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:21:08 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:21:08 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:21:08 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:21:08 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:21:08 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:21:08 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:21:08 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:21:08 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:21:08 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:21:08 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:21:08 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:21:08 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:21:08 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:21:08 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:21:08 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:21:08 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:21:08 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:21:08 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:21:08 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:21:08 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:21:08 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:21:08 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:21:08 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:21:08 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:21:08 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:21:08 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:21:08 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:21:08 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:21:08 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:21:08 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:21:08 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:21:08 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:21:08 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:21:08 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:21:08 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:21:08 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:21:08 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:21:08 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:21:08 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:21:08 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:21:08 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:21:08 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:21:08 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:21:08 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:21:08 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:21:08 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:21:08 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:21:08 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:21:08 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:21:08 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:21:08 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:21:08 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:21:08 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:21:08 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:21:08 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:21:08 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:21:08 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:21:08 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:21:08 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:21:08 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:21:08 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:21:08 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:21:08 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:21:08 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:21:08 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:21:08 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:21:08 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:21:08 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:21:08 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:21:08 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:21:08 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:21:08 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:21:08 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:21:08 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:21:08 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:21:08 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:21:08 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:21:08 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:21:08 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:21:08 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:21:08 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:21:08 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:21:08 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:21:08 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:21:08 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:21:08 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:21:08 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:21:08 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:21:08 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:21:08 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:21:08 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:21:08 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:21:08 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:21:08 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:21:08 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:21:08 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:21:08 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:21:08 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:21:08 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:21:08 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:21:08 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:21:08 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:21:08 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:21:08 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:21:08 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:21:08 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:21:08 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:21:08 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:21:08 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:21:08 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:21:08 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:21:08 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:21:08 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:21:08 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:21:08 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:21:08 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:21:08 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:21:08 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:21:08 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:21:08 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:21:08 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:21:08 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:21:08 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:21:08 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:21:08 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:21:08 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:21:08 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:21:08 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:21:08 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:21:08 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:21:08 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:21:08 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:21:08 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:21:08 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:21:08 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:21:08 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:21:08 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:21:08 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:21:08 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:21:08 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:21:08 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:21:08 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:21:08 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:21:08 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:21:08 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:21:08 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:21:08 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:21:08 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:21:08 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:21:08 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:21:08 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:21:08 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:21:08 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:21:08 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:21:08 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:21:08 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:21:08 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:21:08 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:21:08 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:21:08 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:21:08 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:21:08 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:21:09 - INFO - [database.py:28] - Database connection established in 1.16s
2025-03-25 03:21:09 - INFO - [database.py:28] - Database connection established in 1.16s
2025-03-25 03:21:09 - INFO - [database.py:28] - Database connection established in 1.16s
2025-03-25 03:21:09 - INFO - [database.py:28] - Database connection established in 1.16s
2025-03-25 03:21:09 - INFO - [database.py:28] - Database connection established in 1.16s
2025-03-25 03:21:09 - INFO - [database.py:28] - Database connection established in 1.16s
2025-03-25 03:21:09 - INFO - [database.py:28] - Database connection established in 1.16s
2025-03-25 03:21:09 - INFO - [database.py:28] - Database connection established in 1.16s
2025-03-25 03:21:09 - INFO - [database.py:28] - Database connection established in 1.16s
2025-03-25 03:21:09 - INFO - [database.py:28] - Database connection established in 1.16s
2025-03-25 03:21:09 - INFO - [database.py:28] - Database connection established in 1.16s
2025-03-25 03:21:09 - INFO - [database.py:28] - Database connection established in 1.16s
2025-03-25 03:21:09 - INFO - [database.py:28] - Database connection established in 1.16s
2025-03-25 03:21:09 - INFO - [database.py:28] - Database connection established in 1.16s
2025-03-25 03:21:09 - INFO - [database.py:28] - Database connection established in 1.16s
2025-03-25 03:21:09 - INFO - [database.py:28] - Database connection established in 1.16s
2025-03-25 03:21:09 - INFO - [database.py:28] - Database connection established in 1.16s
2025-03-25 03:21:09 - INFO - [database.py:28] - Database connection established in 1.16s
2025-03-25 03:21:09 - INFO - [database.py:28] - Database connection established in 1.16s
2025-03-25 03:21:09 - INFO - [database.py:28] - Database connection established in 1.16s
2025-03-25 03:21:09 - INFO - [database.py:28] - Database connection established in 1.16s
2025-03-25 03:21:09 - INFO - [database.py:28] - Database connection established in 1.16s
2025-03-25 03:21:09 - INFO - [database.py:28] - Database connection established in 1.16s
2025-03-25 03:21:09 - INFO - [database.py:28] - Database connection established in 1.16s
2025-03-25 03:21:09 - INFO - [database.py:28] - Database connection established in 1.16s
2025-03-25 03:21:09 - INFO - [database.py:28] - Database connection established in 1.16s
2025-03-25 03:21:09 - INFO - [database.py:28] - Database connection established in 1.16s
2025-03-25 03:21:09 - INFO - [database.py:28] - Database connection established in 1.16s
2025-03-25 03:21:09 - INFO - [database.py:28] - Database connection established in 1.16s
2025-03-25 03:21:09 - INFO - [database.py:28] - Database connection established in 1.16s
2025-03-25 03:21:09 - INFO - [database.py:28] - Database connection established in 1.16s
2025-03-25 03:21:09 - INFO - [database.py:28] - Database connection established in 1.16s
2025-03-25 03:21:09 - INFO - [database.py:28] - Database connection established in 1.16s
2025-03-25 03:21:09 - INFO - [database.py:28] - Database connection established in 1.16s
2025-03-25 03:21:09 - INFO - [database.py:28] - Database connection established in 1.16s
2025-03-25 03:21:09 - INFO - [database.py:28] - Database connection established in 1.16s
2025-03-25 03:21:09 - INFO - [database.py:28] - Database connection established in 1.16s
2025-03-25 03:21:09 - INFO - [database.py:28] - Database connection established in 1.16s
2025-03-25 03:21:09 - INFO - [database.py:28] - Database connection established in 1.16s
2025-03-25 03:21:09 - INFO - [database.py:28] - Database connection established in 1.16s
2025-03-25 03:21:09 - INFO - [database.py:28] - Database connection established in 1.16s
2025-03-25 03:21:09 - INFO - [database.py:28] - Database connection established in 1.16s
2025-03-25 03:21:09 - INFO - [database.py:28] - Database connection established in 1.16s
2025-03-25 03:21:09 - INFO - [database.py:28] - Database connection established in 1.16s
2025-03-25 03:21:09 - INFO - [database.py:28] - Database connection established in 1.16s
2025-03-25 03:21:09 - INFO - [database.py:28] - Database connection established in 1.16s
2025-03-25 03:21:09 - INFO - [database.py:28] - Database connection established in 1.16s
2025-03-25 03:21:09 - INFO - [database.py:28] - Database connection established in 1.16s
2025-03-25 03:21:09 - INFO - [database.py:28] - Database connection established in 1.16s
2025-03-25 03:21:09 - INFO - [database.py:28] - Database connection established in 1.16s
2025-03-25 03:21:09 - INFO - [database.py:28] - Database connection established in 1.16s
2025-03-25 03:21:09 - INFO - [database.py:28] - Database connection established in 1.16s
2025-03-25 03:21:09 - INFO - [database.py:28] - Database connection established in 1.16s
2025-03-25 03:21:09 - INFO - [database.py:28] - Database connection established in 1.16s
2025-03-25 03:21:09 - INFO - [database.py:28] - Database connection established in 1.16s
2025-03-25 03:21:09 - INFO - [database.py:28] - Database connection established in 1.16s
2025-03-25 03:21:09 - INFO - [database.py:28] - Database connection established in 1.16s
2025-03-25 03:21:09 - INFO - [database.py:28] - Database connection established in 1.16s
2025-03-25 03:21:09 - INFO - [database.py:28] - Database connection established in 1.16s
2025-03-25 03:21:09 - INFO - [database.py:28] - Database connection established in 1.16s
2025-03-25 03:21:09 - INFO - [database.py:28] - Database connection established in 1.16s
2025-03-25 03:21:09 - INFO - [database.py:28] - Database connection established in 1.16s
2025-03-25 03:21:09 - INFO - [database.py:28] - Database connection established in 1.16s
2025-03-25 03:21:09 - INFO - [database.py:28] - Database connection established in 1.16s
2025-03-25 03:21:09 - INFO - [database.py:28] - Database connection established in 1.16s
2025-03-25 03:21:09 - INFO - [database.py:28] - Database connection established in 1.16s
2025-03-25 03:21:09 - INFO - [database.py:28] - Database connection established in 1.16s
2025-03-25 03:21:09 - INFO - [database.py:28] - Database connection established in 1.16s
2025-03-25 03:21:09 - INFO - [database.py:28] - Database connection established in 1.16s
2025-03-25 03:21:09 - INFO - [database.py:28] - Database connection established in 1.16s
2025-03-25 03:21:09 - INFO - [database.py:28] - Database connection established in 1.16s
2025-03-25 03:21:09 - INFO - [database.py:28] - Database connection established in 1.16s
2025-03-25 03:21:09 - INFO - [database.py:28] - Database connection established in 1.16s
2025-03-25 03:21:09 - INFO - [database.py:28] - Database connection established in 1.16s
2025-03-25 03:21:09 - INFO - [database.py:28] - Database connection established in 1.16s
2025-03-25 03:21:09 - INFO - [database.py:28] - Database connection established in 1.16s
2025-03-25 03:21:09 - INFO - [database.py:28] - Database connection established in 1.16s
2025-03-25 03:21:09 - INFO - [database.py:28] - Database connection established in 1.16s
2025-03-25 03:21:09 - INFO - [database.py:28] - Database connection established in 1.16s
2025-03-25 03:21:09 - INFO - [database.py:28] - Database connection established in 1.16s
2025-03-25 03:21:09 - INFO - [database.py:28] - Database connection established in 1.16s
2025-03-25 03:21:09 - INFO - [database.py:28] - Database connection established in 1.16s
2025-03-25 03:21:09 - INFO - [database.py:28] - Database connection established in 1.16s
2025-03-25 03:21:09 - INFO - [database.py:28] - Database connection established in 1.16s
2025-03-25 03:21:09 - INFO - [database.py:28] - Database connection established in 1.16s
2025-03-25 03:21:09 - INFO - [database.py:28] - Database connection established in 1.16s
2025-03-25 03:21:09 - INFO - [database.py:28] - Database connection established in 1.16s
2025-03-25 03:21:09 - INFO - [database.py:28] - Database connection established in 1.16s
2025-03-25 03:21:09 - INFO - [database.py:28] - Database connection established in 1.16s
2025-03-25 03:21:09 - INFO - [database.py:28] - Database connection established in 1.16s
2025-03-25 03:21:09 - INFO - [database.py:28] - Database connection established in 1.16s
2025-03-25 03:21:09 - INFO - [database.py:28] - Database connection established in 1.16s
2025-03-25 03:21:09 - INFO - [database.py:28] - Database connection established in 1.16s
2025-03-25 03:21:09 - INFO - [database.py:28] - Database connection established in 1.16s
2025-03-25 03:21:09 - INFO - [database.py:28] - Database connection established in 1.16s
2025-03-25 03:21:09 - INFO - [database.py:28] - Database connection established in 1.16s
2025-03-25 03:21:09 - INFO - [database.py:28] - Database connection established in 1.16s
2025-03-25 03:21:09 - INFO - [database.py:28] - Database connection established in 1.16s
2025-03-25 03:21:09 - INFO - [database.py:28] - Database connection established in 1.16s
2025-03-25 03:21:09 - INFO - [database.py:28] - Database connection established in 1.16s
2025-03-25 03:21:09 - INFO - [database.py:28] - Database connection established in 1.16s
2025-03-25 03:21:09 - INFO - [database.py:28] - Database connection established in 1.16s
2025-03-25 03:21:09 - INFO - [database.py:28] - Database connection established in 1.16s
2025-03-25 03:21:09 - INFO - [database.py:28] - Database connection established in 1.16s
2025-03-25 03:21:09 - INFO - [database.py:28] - Database connection established in 1.16s
2025-03-25 03:21:09 - INFO - [database.py:28] - Database connection established in 1.16s
2025-03-25 03:21:09 - INFO - [database.py:28] - Database connection established in 1.16s
2025-03-25 03:21:09 - INFO - [database.py:28] - Database connection established in 1.16s
2025-03-25 03:21:09 - INFO - [database.py:28] - Database connection established in 1.16s
2025-03-25 03:21:09 - INFO - [database.py:28] - Database connection established in 1.16s
2025-03-25 03:21:09 - INFO - [database.py:28] - Database connection established in 1.16s
2025-03-25 03:21:09 - INFO - [database.py:28] - Database connection established in 1.16s
2025-03-25 03:21:09 - INFO - [database.py:28] - Database connection established in 1.16s
2025-03-25 03:21:09 - INFO - [database.py:28] - Database connection established in 1.16s
2025-03-25 03:21:09 - INFO - [database.py:28] - Database connection established in 1.16s
2025-03-25 03:21:09 - INFO - [database.py:28] - Database connection established in 1.16s
2025-03-25 03:21:09 - INFO - [database.py:28] - Database connection established in 1.16s
2025-03-25 03:21:09 - INFO - [database.py:28] - Database connection established in 1.16s
2025-03-25 03:21:09 - INFO - [database.py:28] - Database connection established in 1.16s
2025-03-25 03:21:09 - INFO - [database.py:28] - Database connection established in 1.16s
2025-03-25 03:21:09 - INFO - [database.py:28] - Database connection established in 1.16s
2025-03-25 03:21:09 - INFO - [database.py:28] - Database connection established in 1.16s
2025-03-25 03:21:09 - INFO - [database.py:28] - Database connection established in 1.16s
2025-03-25 03:21:09 - INFO - [database.py:28] - Database connection established in 1.16s
2025-03-25 03:21:09 - INFO - [database.py:28] - Database connection established in 1.16s
2025-03-25 03:21:09 - INFO - [database.py:28] - Database connection established in 1.16s
2025-03-25 03:21:09 - INFO - [database.py:28] - Database connection established in 1.16s
2025-03-25 03:21:09 - INFO - [database.py:28] - Database connection established in 1.16s
2025-03-25 03:21:09 - INFO - [database.py:28] - Database connection established in 1.16s
2025-03-25 03:21:09 - INFO - [database.py:28] - Database connection established in 1.16s
2025-03-25 03:21:09 - INFO - [database.py:28] - Database connection established in 1.16s
2025-03-25 03:21:09 - INFO - [database.py:28] - Database connection established in 1.16s
2025-03-25 03:21:09 - INFO - [database.py:28] - Database connection established in 1.16s
2025-03-25 03:21:09 - INFO - [database.py:28] - Database connection established in 1.16s
2025-03-25 03:21:09 - INFO - [database.py:28] - Database connection established in 1.16s
2025-03-25 03:21:09 - INFO - [database.py:28] - Database connection established in 1.16s
2025-03-25 03:21:09 - INFO - [database.py:28] - Database connection established in 1.16s
2025-03-25 03:21:09 - INFO - [database.py:28] - Database connection established in 1.16s
2025-03-25 03:21:09 - INFO - [database.py:28] - Database connection established in 1.16s
2025-03-25 03:21:09 - INFO - [database.py:28] - Database connection established in 1.16s
2025-03-25 03:21:09 - INFO - [database.py:28] - Database connection established in 1.16s
2025-03-25 03:21:09 - INFO - [database.py:28] - Database connection established in 1.16s
2025-03-25 03:21:09 - INFO - [database.py:28] - Database connection established in 1.16s
2025-03-25 03:21:09 - INFO - [database.py:28] - Database connection established in 1.16s
2025-03-25 03:21:09 - INFO - [database.py:28] - Database connection established in 1.16s
2025-03-25 03:21:09 - INFO - [database.py:28] - Database connection established in 1.16s
2025-03-25 03:21:09 - INFO - [database.py:28] - Database connection established in 1.16s
2025-03-25 03:21:09 - INFO - [database.py:28] - Database connection established in 1.16s
2025-03-25 03:21:09 - INFO - [database.py:28] - Database connection established in 1.16s
2025-03-25 03:21:09 - INFO - [database.py:28] - Database connection established in 1.16s
2025-03-25 03:21:09 - INFO - [database.py:28] - Database connection established in 1.16s
2025-03-25 03:21:09 - INFO - [database.py:28] - Database connection established in 1.16s
2025-03-25 03:21:09 - INFO - [database.py:28] - Database connection established in 1.16s
2025-03-25 03:21:09 - INFO - [database.py:28] - Database connection established in 1.16s
2025-03-25 03:21:09 - INFO - [database.py:28] - Database connection established in 1.16s
2025-03-25 03:21:09 - INFO - [database.py:28] - Database connection established in 1.16s
2025-03-25 03:21:09 - INFO - [database.py:28] - Database connection established in 1.16s
2025-03-25 03:21:09 - INFO - [database.py:28] - Database connection established in 1.16s
2025-03-25 03:21:09 - INFO - [database.py:28] - Database connection established in 1.16s
2025-03-25 03:21:09 - INFO - [database.py:28] - Database connection established in 1.16s
2025-03-25 03:21:09 - INFO - [database.py:28] - Database connection established in 1.16s
2025-03-25 03:21:09 - INFO - [database.py:28] - Database connection established in 1.16s
2025-03-25 03:21:09 - INFO - [database.py:28] - Database connection established in 1.16s
2025-03-25 03:21:09 - INFO - [database.py:28] - Database connection established in 1.16s
2025-03-25 03:21:09 - INFO - [database.py:28] - Database connection established in 1.16s
2025-03-25 03:21:09 - INFO - [database.py:28] - Database connection established in 1.16s
2025-03-25 03:21:09 - INFO - [database.py:28] - Database connection established in 1.16s
2025-03-25 03:21:09 - INFO - [database.py:28] - Database connection established in 1.16s
2025-03-25 03:21:09 - INFO - [database.py:28] - Database connection established in 1.16s
2025-03-25 03:21:09 - INFO - [database.py:28] - Database connection established in 1.16s
2025-03-25 03:21:09 - INFO - [database.py:28] - Database connection established in 1.16s
2025-03-25 03:21:09 - INFO - [database.py:28] - Database connection established in 1.16s
2025-03-25 03:21:09 - INFO - [database.py:28] - Database connection established in 1.16s
2025-03-25 03:21:14 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 03:21:14 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 03:21:14 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 03:21:14 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 03:21:14 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 03:21:14 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 03:21:14 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 03:21:14 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 03:21:14 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 03:21:14 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 03:21:14 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 03:21:14 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 03:21:14 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 03:21:14 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 03:21:14 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 03:21:14 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 03:21:14 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 03:21:14 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 03:21:14 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 03:21:14 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 03:21:14 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 03:21:14 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 03:21:14 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 03:21:14 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 03:21:14 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 03:21:14 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 03:21:14 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 03:21:14 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 03:21:14 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 03:21:14 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 03:21:14 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 03:21:14 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 03:21:14 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 03:21:14 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 03:21:14 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 03:21:14 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 03:21:14 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 03:21:14 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 03:21:14 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 03:21:14 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 03:21:14 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 03:21:14 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 03:21:14 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 03:21:14 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 03:21:14 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 03:21:14 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 03:21:14 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 03:21:14 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 03:21:14 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 03:21:14 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 03:21:14 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 03:21:14 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 03:21:14 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 03:21:14 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 03:21:14 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 03:21:14 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 03:21:14 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 03:21:14 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 03:21:14 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 03:21:14 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 03:21:14 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 03:21:14 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 03:21:14 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 03:21:14 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 03:21:14 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 03:21:14 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 03:21:14 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 03:21:14 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 03:21:14 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 03:21:14 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 03:21:14 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 03:21:14 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 03:21:14 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 03:21:14 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 03:21:14 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 03:21:14 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 03:21:14 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 03:21:14 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 03:21:14 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 03:21:14 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 03:21:14 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 03:21:14 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 03:21:14 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 03:21:14 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 03:21:14 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 03:21:14 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 03:21:14 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 03:21:14 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 03:21:14 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 03:21:14 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 03:21:14 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 03:21:14 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 03:21:14 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 03:21:14 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 03:21:14 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 03:21:14 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 03:21:14 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 03:21:14 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 03:21:14 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 03:21:14 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 03:21:14 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 03:21:14 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 03:21:14 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 03:21:14 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 03:21:14 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 03:21:14 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 03:21:14 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 03:21:14 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 03:21:14 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 03:21:14 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 03:21:14 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 03:21:14 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 03:21:14 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 03:21:14 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 03:21:14 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 03:21:14 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 03:21:14 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 03:21:14 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 03:21:14 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 03:21:14 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 03:21:14 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 03:21:14 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 03:21:14 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 03:21:14 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 03:21:14 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 03:21:14 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 03:21:14 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 03:21:14 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 03:21:14 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 03:21:14 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 03:21:14 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 03:21:14 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 03:21:14 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 03:21:14 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 03:21:14 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 03:21:14 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 03:21:14 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 03:21:14 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 03:21:14 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 03:21:14 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 03:21:14 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 03:21:14 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 03:21:14 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 03:21:14 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 03:21:14 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 03:21:14 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 03:21:14 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 03:21:14 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 03:21:14 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 03:21:14 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 03:21:14 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 03:21:14 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 03:21:14 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 03:21:14 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 03:21:14 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 03:21:14 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 03:21:14 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 03:21:14 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 03:21:14 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 03:21:14 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 03:21:14 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 03:21:14 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 03:21:14 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 03:21:14 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 03:21:14 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 03:21:14 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 03:21:14 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 03:21:14 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 03:21:14 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 03:21:14 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 03:21:14 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 03:21:14 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 03:21:14 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 03:21:14 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 03:21:14 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 03:21:14 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 03:21:14 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 03:21:14 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 03:21:14 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 03:21:14 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 03:21:14 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 03:21:14 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 03:21:14 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 03:21:14 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 03:21:14 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 03:21:14 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 03:21:14 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 03:21:14 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 03:21:14 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 03:21:14 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 03:21:14 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 03:21:14 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 03:21:18 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:18 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:18 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:18 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:18 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:18 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:18 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:18 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:18 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:18 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:18 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:18 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:18 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:18 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:18 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:18 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:18 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:18 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:18 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:18 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:18 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:18 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:18 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:18 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:18 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:18 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:18 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:18 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:18 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:18 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:18 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:18 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:18 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:18 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:18 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:18 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:18 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:18 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:18 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:18 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:18 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:18 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:18 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:18 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:18 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:18 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:18 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:18 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:18 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:18 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:18 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:18 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:18 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:18 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:18 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:18 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:18 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:18 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:18 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:18 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:18 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:18 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:18 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:18 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:18 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:18 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:18 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:18 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:18 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:18 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:18 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:18 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:18 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:18 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:18 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:18 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:18 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:18 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:18 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:18 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:18 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:18 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:18 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:18 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:18 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:18 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:18 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:18 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:18 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:18 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:18 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:18 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:18 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:18 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:18 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:18 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:18 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:18 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:18 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:18 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:18 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:18 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:18 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:18 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:18 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:18 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:18 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:18 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:18 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:18 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:18 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:18 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:18 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:18 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:18 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:18 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:18 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:18 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:18 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:18 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:18 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:18 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:18 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:18 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:18 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:18 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:18 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:18 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:18 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:18 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:18 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:18 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:18 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:18 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:18 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:18 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:18 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:18 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:18 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:18 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:18 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:18 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:18 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:18 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:18 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:18 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:18 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:18 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:18 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:18 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:18 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:18 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:18 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:18 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:18 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:18 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:18 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:18 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:18 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:18 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:18 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:18 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:18 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:18 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:18 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:18 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:18 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:18 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:18 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:18 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:18 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:18 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:18 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:18 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:18 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:18 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:18 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:18 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:18 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:18 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:18 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:18 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:18 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:18 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:18 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:18 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:18 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:18 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:18 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:18 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:18 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:18 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:18 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:18 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:18 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:18 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:18 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:18 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:18 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:18 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:18 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:18 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:18 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:18 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:18 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:19,533 - QUERY: 'How many customers do we have?' → SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:19 - INFO - [azure_client.py:139] - SQL generation completed in 4.69s
2025-03-25 03:21:19 - INFO - [azure_client.py:139] - SQL generation completed in 4.69s
2025-03-25 03:21:19 - INFO - [azure_client.py:139] - SQL generation completed in 4.69s
2025-03-25 03:21:19 - INFO - [azure_client.py:139] - SQL generation completed in 4.69s
2025-03-25 03:21:19 - INFO - [azure_client.py:139] - SQL generation completed in 4.69s
2025-03-25 03:21:19 - INFO - [azure_client.py:139] - SQL generation completed in 4.69s
2025-03-25 03:21:19 - INFO - [azure_client.py:139] - SQL generation completed in 4.69s
2025-03-25 03:21:19 - INFO - [azure_client.py:139] - SQL generation completed in 4.69s
2025-03-25 03:21:19 - INFO - [azure_client.py:139] - SQL generation completed in 4.69s
2025-03-25 03:21:19 - INFO - [azure_client.py:139] - SQL generation completed in 4.69s
2025-03-25 03:21:19 - INFO - [azure_client.py:139] - SQL generation completed in 4.69s
2025-03-25 03:21:19 - INFO - [azure_client.py:139] - SQL generation completed in 4.69s
2025-03-25 03:21:19 - INFO - [azure_client.py:139] - SQL generation completed in 4.69s
2025-03-25 03:21:19 - INFO - [azure_client.py:139] - SQL generation completed in 4.69s
2025-03-25 03:21:19 - INFO - [azure_client.py:139] - SQL generation completed in 4.69s
2025-03-25 03:21:19 - INFO - [azure_client.py:139] - SQL generation completed in 4.69s
2025-03-25 03:21:19 - INFO - [azure_client.py:139] - SQL generation completed in 4.69s
2025-03-25 03:21:19 - INFO - [azure_client.py:139] - SQL generation completed in 4.69s
2025-03-25 03:21:19 - INFO - [azure_client.py:139] - SQL generation completed in 4.69s
2025-03-25 03:21:19 - INFO - [azure_client.py:139] - SQL generation completed in 4.69s
2025-03-25 03:21:19 - INFO - [azure_client.py:139] - SQL generation completed in 4.69s
2025-03-25 03:21:19 - INFO - [azure_client.py:139] - SQL generation completed in 4.69s
2025-03-25 03:21:19 - INFO - [azure_client.py:139] - SQL generation completed in 4.69s
2025-03-25 03:21:19 - INFO - [azure_client.py:139] - SQL generation completed in 4.69s
2025-03-25 03:21:19 - INFO - [azure_client.py:139] - SQL generation completed in 4.69s
2025-03-25 03:21:19 - INFO - [azure_client.py:139] - SQL generation completed in 4.69s
2025-03-25 03:21:19 - INFO - [azure_client.py:139] - SQL generation completed in 4.69s
2025-03-25 03:21:19 - INFO - [azure_client.py:139] - SQL generation completed in 4.69s
2025-03-25 03:21:19 - INFO - [azure_client.py:139] - SQL generation completed in 4.69s
2025-03-25 03:21:19 - INFO - [azure_client.py:139] - SQL generation completed in 4.69s
2025-03-25 03:21:19 - INFO - [azure_client.py:139] - SQL generation completed in 4.69s
2025-03-25 03:21:19 - INFO - [azure_client.py:139] - SQL generation completed in 4.69s
2025-03-25 03:21:19 - INFO - [azure_client.py:139] - SQL generation completed in 4.69s
2025-03-25 03:21:19 - INFO - [azure_client.py:139] - SQL generation completed in 4.69s
2025-03-25 03:21:19 - INFO - [azure_client.py:139] - SQL generation completed in 4.69s
2025-03-25 03:21:19 - INFO - [azure_client.py:139] - SQL generation completed in 4.69s
2025-03-25 03:21:19 - INFO - [azure_client.py:139] - SQL generation completed in 4.69s
2025-03-25 03:21:19 - INFO - [azure_client.py:139] - SQL generation completed in 4.69s
2025-03-25 03:21:19 - INFO - [azure_client.py:139] - SQL generation completed in 4.69s
2025-03-25 03:21:19 - INFO - [azure_client.py:139] - SQL generation completed in 4.69s
2025-03-25 03:21:19 - INFO - [azure_client.py:139] - SQL generation completed in 4.69s
2025-03-25 03:21:19 - INFO - [azure_client.py:139] - SQL generation completed in 4.69s
2025-03-25 03:21:19 - INFO - [azure_client.py:139] - SQL generation completed in 4.69s
2025-03-25 03:21:19 - INFO - [azure_client.py:139] - SQL generation completed in 4.69s
2025-03-25 03:21:19 - INFO - [azure_client.py:139] - SQL generation completed in 4.69s
2025-03-25 03:21:19 - INFO - [azure_client.py:139] - SQL generation completed in 4.69s
2025-03-25 03:21:19 - INFO - [azure_client.py:139] - SQL generation completed in 4.69s
2025-03-25 03:21:19 - INFO - [azure_client.py:139] - SQL generation completed in 4.69s
2025-03-25 03:21:19 - INFO - [azure_client.py:139] - SQL generation completed in 4.69s
2025-03-25 03:21:19 - INFO - [azure_client.py:139] - SQL generation completed in 4.69s
2025-03-25 03:21:19 - INFO - [azure_client.py:139] - SQL generation completed in 4.69s
2025-03-25 03:21:19 - INFO - [azure_client.py:139] - SQL generation completed in 4.69s
2025-03-25 03:21:19 - INFO - [azure_client.py:139] - SQL generation completed in 4.69s
2025-03-25 03:21:19 - INFO - [azure_client.py:139] - SQL generation completed in 4.69s
2025-03-25 03:21:19 - INFO - [azure_client.py:139] - SQL generation completed in 4.69s
2025-03-25 03:21:19 - INFO - [azure_client.py:139] - SQL generation completed in 4.69s
2025-03-25 03:21:19 - INFO - [azure_client.py:139] - SQL generation completed in 4.69s
2025-03-25 03:21:19 - INFO - [azure_client.py:139] - SQL generation completed in 4.69s
2025-03-25 03:21:19 - INFO - [azure_client.py:139] - SQL generation completed in 4.69s
2025-03-25 03:21:19 - INFO - [azure_client.py:139] - SQL generation completed in 4.69s
2025-03-25 03:21:19 - INFO - [azure_client.py:139] - SQL generation completed in 4.69s
2025-03-25 03:21:19 - INFO - [azure_client.py:139] - SQL generation completed in 4.69s
2025-03-25 03:21:19 - INFO - [azure_client.py:139] - SQL generation completed in 4.69s
2025-03-25 03:21:19 - INFO - [azure_client.py:139] - SQL generation completed in 4.69s
2025-03-25 03:21:19 - INFO - [azure_client.py:139] - SQL generation completed in 4.69s
2025-03-25 03:21:19 - INFO - [azure_client.py:139] - SQL generation completed in 4.69s
2025-03-25 03:21:19 - INFO - [azure_client.py:139] - SQL generation completed in 4.69s
2025-03-25 03:21:19 - INFO - [azure_client.py:139] - SQL generation completed in 4.69s
2025-03-25 03:21:19 - INFO - [azure_client.py:139] - SQL generation completed in 4.69s
2025-03-25 03:21:19 - INFO - [azure_client.py:139] - SQL generation completed in 4.69s
2025-03-25 03:21:19 - INFO - [azure_client.py:139] - SQL generation completed in 4.69s
2025-03-25 03:21:19 - INFO - [azure_client.py:139] - SQL generation completed in 4.69s
2025-03-25 03:21:19 - INFO - [azure_client.py:139] - SQL generation completed in 4.69s
2025-03-25 03:21:19 - INFO - [azure_client.py:139] - SQL generation completed in 4.69s
2025-03-25 03:21:19 - INFO - [azure_client.py:139] - SQL generation completed in 4.69s
2025-03-25 03:21:19 - INFO - [azure_client.py:139] - SQL generation completed in 4.69s
2025-03-25 03:21:19 - INFO - [azure_client.py:139] - SQL generation completed in 4.69s
2025-03-25 03:21:19 - INFO - [azure_client.py:139] - SQL generation completed in 4.69s
2025-03-25 03:21:19 - INFO - [azure_client.py:139] - SQL generation completed in 4.69s
2025-03-25 03:21:19 - INFO - [azure_client.py:139] - SQL generation completed in 4.69s
2025-03-25 03:21:19 - INFO - [azure_client.py:139] - SQL generation completed in 4.69s
2025-03-25 03:21:19 - INFO - [azure_client.py:139] - SQL generation completed in 4.69s
2025-03-25 03:21:19 - INFO - [azure_client.py:139] - SQL generation completed in 4.69s
2025-03-25 03:21:19 - INFO - [azure_client.py:139] - SQL generation completed in 4.69s
2025-03-25 03:21:19 - INFO - [azure_client.py:139] - SQL generation completed in 4.69s
2025-03-25 03:21:19 - INFO - [azure_client.py:139] - SQL generation completed in 4.69s
2025-03-25 03:21:19 - INFO - [azure_client.py:139] - SQL generation completed in 4.69s
2025-03-25 03:21:19 - INFO - [azure_client.py:139] - SQL generation completed in 4.69s
2025-03-25 03:21:19 - INFO - [azure_client.py:139] - SQL generation completed in 4.69s
2025-03-25 03:21:19 - INFO - [azure_client.py:139] - SQL generation completed in 4.69s
2025-03-25 03:21:19 - INFO - [azure_client.py:139] - SQL generation completed in 4.69s
2025-03-25 03:21:19 - INFO - [azure_client.py:139] - SQL generation completed in 4.69s
2025-03-25 03:21:19 - INFO - [azure_client.py:139] - SQL generation completed in 4.69s
2025-03-25 03:21:19 - INFO - [azure_client.py:139] - SQL generation completed in 4.69s
2025-03-25 03:21:19 - INFO - [azure_client.py:139] - SQL generation completed in 4.69s
2025-03-25 03:21:19 - INFO - [azure_client.py:139] - SQL generation completed in 4.69s
2025-03-25 03:21:19 - INFO - [azure_client.py:139] - SQL generation completed in 4.69s
2025-03-25 03:21:19 - INFO - [azure_client.py:139] - SQL generation completed in 4.69s
2025-03-25 03:21:19 - INFO - [azure_client.py:139] - SQL generation completed in 4.69s
2025-03-25 03:21:19 - INFO - [azure_client.py:139] - SQL generation completed in 4.69s
2025-03-25 03:21:19 - INFO - [azure_client.py:139] - SQL generation completed in 4.69s
2025-03-25 03:21:19 - INFO - [azure_client.py:139] - SQL generation completed in 4.69s
2025-03-25 03:21:19 - INFO - [azure_client.py:139] - SQL generation completed in 4.69s
2025-03-25 03:21:19 - INFO - [azure_client.py:139] - SQL generation completed in 4.69s
2025-03-25 03:21:19 - INFO - [azure_client.py:139] - SQL generation completed in 4.69s
2025-03-25 03:21:19 - INFO - [azure_client.py:139] - SQL generation completed in 4.69s
2025-03-25 03:21:19 - INFO - [azure_client.py:139] - SQL generation completed in 4.69s
2025-03-25 03:21:19 - INFO - [azure_client.py:139] - SQL generation completed in 4.69s
2025-03-25 03:21:19 - INFO - [azure_client.py:139] - SQL generation completed in 4.69s
2025-03-25 03:21:19 - INFO - [azure_client.py:139] - SQL generation completed in 4.69s
2025-03-25 03:21:19 - INFO - [azure_client.py:139] - SQL generation completed in 4.69s
2025-03-25 03:21:19 - INFO - [azure_client.py:139] - SQL generation completed in 4.69s
2025-03-25 03:21:19 - INFO - [azure_client.py:139] - SQL generation completed in 4.69s
2025-03-25 03:21:19 - INFO - [azure_client.py:139] - SQL generation completed in 4.69s
2025-03-25 03:21:19 - INFO - [azure_client.py:139] - SQL generation completed in 4.69s
2025-03-25 03:21:19 - INFO - [azure_client.py:139] - SQL generation completed in 4.69s
2025-03-25 03:21:19 - INFO - [azure_client.py:139] - SQL generation completed in 4.69s
2025-03-25 03:21:19 - INFO - [azure_client.py:139] - SQL generation completed in 4.69s
2025-03-25 03:21:19 - INFO - [azure_client.py:139] - SQL generation completed in 4.69s
2025-03-25 03:21:19 - INFO - [azure_client.py:139] - SQL generation completed in 4.69s
2025-03-25 03:21:19 - INFO - [azure_client.py:139] - SQL generation completed in 4.69s
2025-03-25 03:21:19 - INFO - [azure_client.py:139] - SQL generation completed in 4.69s
2025-03-25 03:21:19 - INFO - [azure_client.py:139] - SQL generation completed in 4.69s
2025-03-25 03:21:19 - INFO - [azure_client.py:139] - SQL generation completed in 4.69s
2025-03-25 03:21:19 - INFO - [azure_client.py:139] - SQL generation completed in 4.69s
2025-03-25 03:21:19 - INFO - [azure_client.py:139] - SQL generation completed in 4.69s
2025-03-25 03:21:19 - INFO - [azure_client.py:139] - SQL generation completed in 4.69s
2025-03-25 03:21:19 - INFO - [azure_client.py:139] - SQL generation completed in 4.69s
2025-03-25 03:21:19 - INFO - [azure_client.py:139] - SQL generation completed in 4.69s
2025-03-25 03:21:19 - INFO - [azure_client.py:139] - SQL generation completed in 4.69s
2025-03-25 03:21:19 - INFO - [azure_client.py:139] - SQL generation completed in 4.69s
2025-03-25 03:21:19 - INFO - [azure_client.py:139] - SQL generation completed in 4.69s
2025-03-25 03:21:19 - INFO - [azure_client.py:139] - SQL generation completed in 4.69s
2025-03-25 03:21:19 - INFO - [azure_client.py:139] - SQL generation completed in 4.69s
2025-03-25 03:21:19 - INFO - [azure_client.py:139] - SQL generation completed in 4.69s
2025-03-25 03:21:19 - INFO - [azure_client.py:139] - SQL generation completed in 4.69s
2025-03-25 03:21:19 - INFO - [azure_client.py:139] - SQL generation completed in 4.69s
2025-03-25 03:21:19 - INFO - [azure_client.py:139] - SQL generation completed in 4.69s
2025-03-25 03:21:19 - INFO - [azure_client.py:139] - SQL generation completed in 4.69s
2025-03-25 03:21:19 - INFO - [azure_client.py:139] - SQL generation completed in 4.69s
2025-03-25 03:21:19 - INFO - [azure_client.py:139] - SQL generation completed in 4.69s
2025-03-25 03:21:19 - INFO - [azure_client.py:139] - SQL generation completed in 4.69s
2025-03-25 03:21:19 - INFO - [azure_client.py:139] - SQL generation completed in 4.69s
2025-03-25 03:21:19 - INFO - [azure_client.py:139] - SQL generation completed in 4.69s
2025-03-25 03:21:19 - INFO - [azure_client.py:139] - SQL generation completed in 4.69s
2025-03-25 03:21:19 - INFO - [azure_client.py:139] - SQL generation completed in 4.69s
2025-03-25 03:21:19 - INFO - [azure_client.py:139] - SQL generation completed in 4.69s
2025-03-25 03:21:19 - INFO - [azure_client.py:139] - SQL generation completed in 4.69s
2025-03-25 03:21:19 - INFO - [azure_client.py:139] - SQL generation completed in 4.69s
2025-03-25 03:21:19 - INFO - [azure_client.py:139] - SQL generation completed in 4.69s
2025-03-25 03:21:19 - INFO - [azure_client.py:139] - SQL generation completed in 4.69s
2025-03-25 03:21:19 - INFO - [azure_client.py:139] - SQL generation completed in 4.69s
2025-03-25 03:21:19 - INFO - [azure_client.py:139] - SQL generation completed in 4.69s
2025-03-25 03:21:19 - INFO - [azure_client.py:139] - SQL generation completed in 4.69s
2025-03-25 03:21:19 - INFO - [azure_client.py:139] - SQL generation completed in 4.69s
2025-03-25 03:21:19 - INFO - [azure_client.py:139] - SQL generation completed in 4.69s
2025-03-25 03:21:19 - INFO - [azure_client.py:139] - SQL generation completed in 4.69s
2025-03-25 03:21:19 - INFO - [azure_client.py:139] - SQL generation completed in 4.69s
2025-03-25 03:21:19 - INFO - [azure_client.py:139] - SQL generation completed in 4.69s
2025-03-25 03:21:19 - INFO - [azure_client.py:139] - SQL generation completed in 4.69s
2025-03-25 03:21:19 - INFO - [azure_client.py:139] - SQL generation completed in 4.69s
2025-03-25 03:21:19 - INFO - [azure_client.py:139] - SQL generation completed in 4.69s
2025-03-25 03:21:19 - INFO - [azure_client.py:139] - SQL generation completed in 4.69s
2025-03-25 03:21:19 - INFO - [azure_client.py:139] - SQL generation completed in 4.69s
2025-03-25 03:21:19 - INFO - [azure_client.py:139] - SQL generation completed in 4.69s
2025-03-25 03:21:19 - INFO - [azure_client.py:139] - SQL generation completed in 4.69s
2025-03-25 03:21:19 - INFO - [azure_client.py:139] - SQL generation completed in 4.69s
2025-03-25 03:21:19 - INFO - [azure_client.py:139] - SQL generation completed in 4.69s
2025-03-25 03:21:19 - INFO - [azure_client.py:139] - SQL generation completed in 4.69s
2025-03-25 03:21:19 - INFO - [azure_client.py:139] - SQL generation completed in 4.69s
2025-03-25 03:21:19 - INFO - [azure_client.py:139] - SQL generation completed in 4.69s
2025-03-25 03:21:19 - INFO - [azure_client.py:139] - SQL generation completed in 4.69s
2025-03-25 03:21:19 - INFO - [azure_client.py:139] - SQL generation completed in 4.69s
2025-03-25 03:21:19 - INFO - [azure_client.py:139] - SQL generation completed in 4.69s
2025-03-25 03:21:19 - INFO - [azure_client.py:139] - SQL generation completed in 4.69s
2025-03-25 03:21:19 - INFO - [azure_client.py:139] - SQL generation completed in 4.69s
2025-03-25 03:21:19 - INFO - [azure_client.py:139] - SQL generation completed in 4.69s
2025-03-25 03:21:19 - INFO - [azure_client.py:139] - SQL generation completed in 4.69s
2025-03-25 03:21:19 - INFO - [azure_client.py:139] - SQL generation completed in 4.69s
2025-03-25 03:21:19 - INFO - [azure_client.py:139] - SQL generation completed in 4.69s
2025-03-25 03:21:19 - INFO - [azure_client.py:139] - SQL generation completed in 4.69s
2025-03-25 03:21:19 - INFO - [azure_client.py:139] - SQL generation completed in 4.69s
2025-03-25 03:21:19 - INFO - [azure_client.py:139] - SQL generation completed in 4.69s
2025-03-25 03:21:19 - INFO - [azure_client.py:139] - SQL generation completed in 4.69s
2025-03-25 03:21:19 - INFO - [azure_client.py:139] - SQL generation completed in 4.69s
2025-03-25 03:21:19 - INFO - [azure_client.py:139] - SQL generation completed in 4.69s
2025-03-25 03:21:19 - INFO - [azure_client.py:139] - SQL generation completed in 4.69s
2025-03-25 03:21:19 - INFO - [azure_client.py:139] - SQL generation completed in 4.69s
2025-03-25 03:21:19 - INFO - [azure_client.py:139] - SQL generation completed in 4.69s
2025-03-25 03:21:19 - INFO - [azure_client.py:139] - SQL generation completed in 4.69s
2025-03-25 03:21:19 - INFO - [azure_client.py:139] - SQL generation completed in 4.69s
2025-03-25 03:21:19 - INFO - [azure_client.py:139] - SQL generation completed in 4.69s
2025-03-25 03:21:19 - INFO - [azure_client.py:139] - SQL generation completed in 4.69s
2025-03-25 03:21:19 - INFO - [azure_client.py:139] - SQL generation completed in 4.69s
2025-03-25 03:21:19 - INFO - [azure_client.py:139] - SQL generation completed in 4.69s
2025-03-25 03:21:19 - INFO - [azure_client.py:139] - SQL generation completed in 4.69s
2025-03-25 03:21:19 - INFO - [azure_client.py:139] - SQL generation completed in 4.69s
2025-03-25 03:21:19 - INFO - [azure_client.py:139] - SQL generation completed in 4.69s
2025-03-25 03:21:19 - INFO - [azure_client.py:139] - SQL generation completed in 4.69s
2025-03-25 03:21:19 - INFO - [azure_client.py:139] - SQL generation completed in 4.69s
2025-03-25 03:21:19 - INFO - [azure_client.py:139] - SQL generation completed in 4.69s
2025-03-25 03:21:19 - INFO - [azure_client.py:139] - SQL generation completed in 4.69s
2025-03-25 03:21:19 - INFO - [azure_client.py:139] - SQL generation completed in 4.69s
2025-03-25 03:21:19 - INFO - [azure_client.py:139] - SQL generation completed in 4.69s
2025-03-25 03:21:19 - INFO - [azure_client.py:139] - SQL generation completed in 4.69s
2025-03-25 03:21:19 - INFO - [azure_client.py:139] - SQL generation completed in 4.69s
2025-03-25 03:21:19 - INFO - [azure_client.py:139] - SQL generation completed in 4.69s
2025-03-25 03:21:19 - INFO - [azure_client.py:139] - SQL generation completed in 4.69s
2025-03-25 03:21:19 - INFO - [azure_client.py:139] - SQL generation completed in 4.69s
2025-03-25 03:21:19 - INFO - [azure_client.py:139] - SQL generation completed in 4.69s
2025-03-25 03:21:21 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:21 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:21 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:21 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:21 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:21 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:21 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:21 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:21 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:21 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:21 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:21 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:21 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:21 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:21 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:21 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:21 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:21 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:21 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:21 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:21 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:21 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:21 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:21 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:21 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:21 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:21 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:21 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:21 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:21 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:21 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:21 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:21 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:21 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:21 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:21 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:21 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:21 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:21 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:21 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:21 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:21 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:21 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:21 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:21 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:21 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:21 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:21 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:21 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:21 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:21 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:21 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:21 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:21 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:21 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:21 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:21 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:21 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:21 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:21 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:21 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:21 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:21 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:21 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:21 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:21 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:21 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:21 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:21 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:21 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:21 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:21 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:21 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:21 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:21 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:21 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:21 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:21 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:21 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:21 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:21 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:21 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:21 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:21 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:21 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:21 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:21 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:21 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:21 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:21 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:21 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:21 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:21 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:21 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:21 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:21 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:21 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:21 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:21 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:21 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:21 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:21 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:21 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:21 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:21 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:21 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:21 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:21 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:21 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:21 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:21 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:21 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:21 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:21 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:21 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:21 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:21 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:21 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:21 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:21 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:21 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:21 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:21 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:21 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:21 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:21 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:21 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:21 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:21 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:21 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:21 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:21 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:21 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:21 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:21 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:21 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:21 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:21 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:21 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:21 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:21 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:21 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:21 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:21 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:21 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:21 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:21 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:21 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:21 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:21 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:21 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:21 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:21 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:21 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:21 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:21 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:21 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:21 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:21 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:21 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:21 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:21 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:21 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:21 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:21 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:21 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:21 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:21 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:21 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:21 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:21 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:21 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:21 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:21 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:21 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:21 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:21 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:21 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:21 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:21 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:21 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:21 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:21 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:21 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:21 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:21 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:21 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:21 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:21 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:21 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:21 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:21 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:21 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:21 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:21 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:21 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:21 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:21 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:21 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:21 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:21 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:21 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:21 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:21 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:21 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:21 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:21 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:21 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:21 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:21 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:21 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:21 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:21 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:21 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:21 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:21 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:21:23 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:21:23 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:21:23 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:21:23 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:21:23 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:21:23 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:21:23 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:21:23 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:21:23 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:21:23 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:21:23 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:21:23 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:21:23 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:21:23 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:21:23 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:21:23 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:21:23 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:21:23 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:21:23 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:21:23 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:21:23 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:21:23 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:21:23 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:21:23 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:21:23 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:21:23 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:21:23 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:21:23 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:21:23 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:21:23 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:21:23 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:21:23 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:21:23 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:21:23 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:21:23 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:21:23 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:21:23 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:21:23 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:21:23 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:21:23 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:21:23 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:21:23 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:21:23 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:21:23 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:21:23 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:21:23 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:21:23 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:21:23 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:21:23 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:21:23 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:21:23 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:21:23 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:21:23 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:21:23 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:21:23 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:21:23 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:21:23 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:21:23 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:21:23 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:21:23 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:21:23 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:21:23 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:21:23 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:21:23 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:21:23 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:21:23 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:21:23 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:21:23 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:21:23 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:21:23 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:21:23 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:21:23 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:21:23 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:21:23 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:21:23 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:21:23 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:21:23 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:21:23 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:21:23 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:21:23 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:21:23 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:21:23 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:21:23 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:21:23 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:21:23 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:21:23 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:21:23 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:21:23 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:21:23 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:21:23 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:21:23 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:21:23 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:21:23 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:21:23 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:21:23 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:21:23 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:21:23 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:21:23 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:21:23 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:21:23 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:21:23 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:21:23 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:21:23 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:21:23 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:21:23 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:21:23 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:21:23 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:21:23 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:21:23 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:21:23 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:21:23 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:21:23 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:21:23 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:21:23 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:21:23 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:21:23 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:21:23 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:21:23 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:21:23 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:21:23 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:21:23 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:21:23 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:21:23 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:21:23 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:21:23 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:21:23 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:21:23 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:21:23 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:21:23 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:21:23 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:21:23 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:21:23 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:21:23 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:21:23 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:21:23 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:21:23 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:21:23 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:21:23 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:21:23 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:21:23 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:21:23 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:21:23 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:21:23 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:21:23 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:21:23 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:21:23 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:21:23 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:21:23 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:21:23 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:21:23 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:21:23 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:21:23 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:21:23 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:21:23 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:21:23 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:21:23 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:21:23 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:21:23 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:21:23 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:21:23 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:21:23 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:21:23 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:21:23 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:21:23 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:21:23 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:21:23 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:21:23 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:21:23 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:21:23 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:21:23 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:21:23 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:21:23 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:21:23 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:21:23 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:21:23 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:21:23 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:21:23 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:21:23 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:21:23 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:21:23 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:21:23 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:21:23 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:21:23 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:21:23 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:21:23 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:21:23 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:21:23 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:21:23 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:21:23 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:21:23 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:21:23 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:21:23 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:21:23 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:21:23 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:21:23 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:21:23 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:21:23 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:21:23 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:21:23 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:21:23 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:21:23 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:21:23 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:21:23 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:21:23 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:21:23 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:21:23 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:21:23 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:21:23 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:21:23 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:21:23 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:21:23 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:21:23 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:21:23 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:21:23 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:21:23 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:21:23 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:21:23 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:21:23 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:21:23 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:21:23 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:21:23 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:21:23 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:21:23 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:21:25 - INFO - [database.py:75] - Query processing completed in 4.82s
2025-03-25 03:21:25 - INFO - [database.py:75] - Query processing completed in 4.82s
2025-03-25 03:21:25 - INFO - [database.py:75] - Query processing completed in 4.82s
2025-03-25 03:21:25 - INFO - [database.py:75] - Query processing completed in 4.82s
2025-03-25 03:21:25 - INFO - [database.py:75] - Query processing completed in 4.82s
2025-03-25 03:21:25 - INFO - [database.py:75] - Query processing completed in 4.82s
2025-03-25 03:21:25 - INFO - [database.py:75] - Query processing completed in 4.82s
2025-03-25 03:21:25 - INFO - [database.py:75] - Query processing completed in 4.82s
2025-03-25 03:21:25 - INFO - [database.py:75] - Query processing completed in 4.82s
2025-03-25 03:21:25 - INFO - [database.py:75] - Query processing completed in 4.82s
2025-03-25 03:21:25 - INFO - [database.py:75] - Query processing completed in 4.82s
2025-03-25 03:21:25 - INFO - [database.py:75] - Query processing completed in 4.82s
2025-03-25 03:21:25 - INFO - [database.py:75] - Query processing completed in 4.82s
2025-03-25 03:21:25 - INFO - [database.py:75] - Query processing completed in 4.82s
2025-03-25 03:21:25 - INFO - [database.py:75] - Query processing completed in 4.82s
2025-03-25 03:21:25 - INFO - [database.py:75] - Query processing completed in 4.82s
2025-03-25 03:21:25 - INFO - [database.py:75] - Query processing completed in 4.82s
2025-03-25 03:21:25 - INFO - [database.py:75] - Query processing completed in 4.82s
2025-03-25 03:21:25 - INFO - [database.py:75] - Query processing completed in 4.82s
2025-03-25 03:21:25 - INFO - [database.py:75] - Query processing completed in 4.82s
2025-03-25 03:21:25 - INFO - [database.py:75] - Query processing completed in 4.82s
2025-03-25 03:21:25 - INFO - [database.py:75] - Query processing completed in 4.82s
2025-03-25 03:21:25 - INFO - [database.py:75] - Query processing completed in 4.82s
2025-03-25 03:21:25 - INFO - [database.py:75] - Query processing completed in 4.82s
2025-03-25 03:21:25 - INFO - [database.py:75] - Query processing completed in 4.82s
2025-03-25 03:21:25 - INFO - [database.py:75] - Query processing completed in 4.82s
2025-03-25 03:21:25 - INFO - [database.py:75] - Query processing completed in 4.82s
2025-03-25 03:21:25 - INFO - [database.py:75] - Query processing completed in 4.82s
2025-03-25 03:21:25 - INFO - [database.py:75] - Query processing completed in 4.82s
2025-03-25 03:21:25 - INFO - [database.py:75] - Query processing completed in 4.82s
2025-03-25 03:21:25 - INFO - [database.py:75] - Query processing completed in 4.82s
2025-03-25 03:21:25 - INFO - [database.py:75] - Query processing completed in 4.82s
2025-03-25 03:21:25 - INFO - [database.py:75] - Query processing completed in 4.82s
2025-03-25 03:21:25 - INFO - [database.py:75] - Query processing completed in 4.82s
2025-03-25 03:21:25 - INFO - [database.py:75] - Query processing completed in 4.82s
2025-03-25 03:21:25 - INFO - [database.py:75] - Query processing completed in 4.82s
2025-03-25 03:21:25 - INFO - [database.py:75] - Query processing completed in 4.82s
2025-03-25 03:21:25 - INFO - [database.py:75] - Query processing completed in 4.82s
2025-03-25 03:21:25 - INFO - [database.py:75] - Query processing completed in 4.82s
2025-03-25 03:21:25 - INFO - [database.py:75] - Query processing completed in 4.82s
2025-03-25 03:21:25 - INFO - [database.py:75] - Query processing completed in 4.82s
2025-03-25 03:21:25 - INFO - [database.py:75] - Query processing completed in 4.82s
2025-03-25 03:21:25 - INFO - [database.py:75] - Query processing completed in 4.82s
2025-03-25 03:21:25 - INFO - [database.py:75] - Query processing completed in 4.82s
2025-03-25 03:21:25 - INFO - [database.py:75] - Query processing completed in 4.82s
2025-03-25 03:21:25 - INFO - [database.py:75] - Query processing completed in 4.82s
2025-03-25 03:21:25 - INFO - [database.py:75] - Query processing completed in 4.82s
2025-03-25 03:21:25 - INFO - [database.py:75] - Query processing completed in 4.82s
2025-03-25 03:21:25 - INFO - [database.py:75] - Query processing completed in 4.82s
2025-03-25 03:21:25 - INFO - [database.py:75] - Query processing completed in 4.82s
2025-03-25 03:21:25 - INFO - [database.py:75] - Query processing completed in 4.82s
2025-03-25 03:21:25 - INFO - [database.py:75] - Query processing completed in 4.82s
2025-03-25 03:21:25 - INFO - [database.py:75] - Query processing completed in 4.82s
2025-03-25 03:21:25 - INFO - [database.py:75] - Query processing completed in 4.82s
2025-03-25 03:21:25 - INFO - [database.py:75] - Query processing completed in 4.82s
2025-03-25 03:21:25 - INFO - [database.py:75] - Query processing completed in 4.82s
2025-03-25 03:21:25 - INFO - [database.py:75] - Query processing completed in 4.82s
2025-03-25 03:21:25 - INFO - [database.py:75] - Query processing completed in 4.82s
2025-03-25 03:21:25 - INFO - [database.py:75] - Query processing completed in 4.82s
2025-03-25 03:21:25 - INFO - [database.py:75] - Query processing completed in 4.82s
2025-03-25 03:21:25 - INFO - [database.py:75] - Query processing completed in 4.82s
2025-03-25 03:21:25 - INFO - [database.py:75] - Query processing completed in 4.82s
2025-03-25 03:21:25 - INFO - [database.py:75] - Query processing completed in 4.82s
2025-03-25 03:21:25 - INFO - [database.py:75] - Query processing completed in 4.82s
2025-03-25 03:21:25 - INFO - [database.py:75] - Query processing completed in 4.82s
2025-03-25 03:21:25 - INFO - [database.py:75] - Query processing completed in 4.82s
2025-03-25 03:21:25 - INFO - [database.py:75] - Query processing completed in 4.82s
2025-03-25 03:21:25 - INFO - [database.py:75] - Query processing completed in 4.82s
2025-03-25 03:21:25 - INFO - [database.py:75] - Query processing completed in 4.82s
2025-03-25 03:21:25 - INFO - [database.py:75] - Query processing completed in 4.82s
2025-03-25 03:21:25 - INFO - [database.py:75] - Query processing completed in 4.82s
2025-03-25 03:21:25 - INFO - [database.py:75] - Query processing completed in 4.82s
2025-03-25 03:21:25 - INFO - [database.py:75] - Query processing completed in 4.82s
2025-03-25 03:21:25 - INFO - [database.py:75] - Query processing completed in 4.82s
2025-03-25 03:21:25 - INFO - [database.py:75] - Query processing completed in 4.82s
2025-03-25 03:21:25 - INFO - [database.py:75] - Query processing completed in 4.82s
2025-03-25 03:21:25 - INFO - [database.py:75] - Query processing completed in 4.82s
2025-03-25 03:21:25 - INFO - [database.py:75] - Query processing completed in 4.82s
2025-03-25 03:21:25 - INFO - [database.py:75] - Query processing completed in 4.82s
2025-03-25 03:21:25 - INFO - [database.py:75] - Query processing completed in 4.82s
2025-03-25 03:21:25 - INFO - [database.py:75] - Query processing completed in 4.82s
2025-03-25 03:21:25 - INFO - [database.py:75] - Query processing completed in 4.82s
2025-03-25 03:21:25 - INFO - [database.py:75] - Query processing completed in 4.82s
2025-03-25 03:21:25 - INFO - [database.py:75] - Query processing completed in 4.82s
2025-03-25 03:21:25 - INFO - [database.py:75] - Query processing completed in 4.82s
2025-03-25 03:21:25 - INFO - [database.py:75] - Query processing completed in 4.82s
2025-03-25 03:21:25 - INFO - [database.py:75] - Query processing completed in 4.82s
2025-03-25 03:21:25 - INFO - [database.py:75] - Query processing completed in 4.82s
2025-03-25 03:21:25 - INFO - [database.py:75] - Query processing completed in 4.82s
2025-03-25 03:21:25 - INFO - [database.py:75] - Query processing completed in 4.82s
2025-03-25 03:21:25 - INFO - [database.py:75] - Query processing completed in 4.82s
2025-03-25 03:21:25 - INFO - [database.py:75] - Query processing completed in 4.82s
2025-03-25 03:21:25 - INFO - [database.py:75] - Query processing completed in 4.82s
2025-03-25 03:21:25 - INFO - [database.py:75] - Query processing completed in 4.82s
2025-03-25 03:21:25 - INFO - [database.py:75] - Query processing completed in 4.82s
2025-03-25 03:21:25 - INFO - [database.py:75] - Query processing completed in 4.82s
2025-03-25 03:21:25 - INFO - [database.py:75] - Query processing completed in 4.82s
2025-03-25 03:21:25 - INFO - [database.py:75] - Query processing completed in 4.82s
2025-03-25 03:21:25 - INFO - [database.py:75] - Query processing completed in 4.82s
2025-03-25 03:21:25 - INFO - [database.py:75] - Query processing completed in 4.82s
2025-03-25 03:21:25 - INFO - [database.py:75] - Query processing completed in 4.82s
2025-03-25 03:21:25 - INFO - [database.py:75] - Query processing completed in 4.82s
2025-03-25 03:21:25 - INFO - [database.py:75] - Query processing completed in 4.82s
2025-03-25 03:21:25 - INFO - [database.py:75] - Query processing completed in 4.82s
2025-03-25 03:21:25 - INFO - [database.py:75] - Query processing completed in 4.82s
2025-03-25 03:21:25 - INFO - [database.py:75] - Query processing completed in 4.82s
2025-03-25 03:21:25 - INFO - [database.py:75] - Query processing completed in 4.82s
2025-03-25 03:21:25 - INFO - [database.py:75] - Query processing completed in 4.82s
2025-03-25 03:21:25 - INFO - [database.py:75] - Query processing completed in 4.82s
2025-03-25 03:21:25 - INFO - [database.py:75] - Query processing completed in 4.82s
2025-03-25 03:21:25 - INFO - [database.py:75] - Query processing completed in 4.82s
2025-03-25 03:21:25 - INFO - [database.py:75] - Query processing completed in 4.82s
2025-03-25 03:21:25 - INFO - [database.py:75] - Query processing completed in 4.82s
2025-03-25 03:21:25 - INFO - [database.py:75] - Query processing completed in 4.82s
2025-03-25 03:21:25 - INFO - [database.py:75] - Query processing completed in 4.82s
2025-03-25 03:21:25 - INFO - [database.py:75] - Query processing completed in 4.82s
2025-03-25 03:21:25 - INFO - [database.py:75] - Query processing completed in 4.82s
2025-03-25 03:21:25 - INFO - [database.py:75] - Query processing completed in 4.82s
2025-03-25 03:21:25 - INFO - [database.py:75] - Query processing completed in 4.82s
2025-03-25 03:21:25 - INFO - [database.py:75] - Query processing completed in 4.82s
2025-03-25 03:21:25 - INFO - [database.py:75] - Query processing completed in 4.82s
2025-03-25 03:21:25 - INFO - [database.py:75] - Query processing completed in 4.82s
2025-03-25 03:21:25 - INFO - [database.py:75] - Query processing completed in 4.82s
2025-03-25 03:21:25 - INFO - [database.py:75] - Query processing completed in 4.82s
2025-03-25 03:21:25 - INFO - [database.py:75] - Query processing completed in 4.82s
2025-03-25 03:21:25 - INFO - [database.py:75] - Query processing completed in 4.82s
2025-03-25 03:21:25 - INFO - [database.py:75] - Query processing completed in 4.82s
2025-03-25 03:21:25 - INFO - [database.py:75] - Query processing completed in 4.82s
2025-03-25 03:21:25 - INFO - [database.py:75] - Query processing completed in 4.82s
2025-03-25 03:21:25 - INFO - [database.py:75] - Query processing completed in 4.82s
2025-03-25 03:21:25 - INFO - [database.py:75] - Query processing completed in 4.82s
2025-03-25 03:21:25 - INFO - [database.py:75] - Query processing completed in 4.82s
2025-03-25 03:21:25 - INFO - [database.py:75] - Query processing completed in 4.82s
2025-03-25 03:21:25 - INFO - [database.py:75] - Query processing completed in 4.82s
2025-03-25 03:21:25 - INFO - [database.py:75] - Query processing completed in 4.82s
2025-03-25 03:21:25 - INFO - [database.py:75] - Query processing completed in 4.82s
2025-03-25 03:21:25 - INFO - [database.py:75] - Query processing completed in 4.82s
2025-03-25 03:21:25 - INFO - [database.py:75] - Query processing completed in 4.82s
2025-03-25 03:21:25 - INFO - [database.py:75] - Query processing completed in 4.82s
2025-03-25 03:21:25 - INFO - [database.py:75] - Query processing completed in 4.82s
2025-03-25 03:21:25 - INFO - [database.py:75] - Query processing completed in 4.82s
2025-03-25 03:21:25 - INFO - [database.py:75] - Query processing completed in 4.82s
2025-03-25 03:21:25 - INFO - [database.py:75] - Query processing completed in 4.82s
2025-03-25 03:21:25 - INFO - [database.py:75] - Query processing completed in 4.82s
2025-03-25 03:21:25 - INFO - [database.py:75] - Query processing completed in 4.82s
2025-03-25 03:21:25 - INFO - [database.py:75] - Query processing completed in 4.82s
2025-03-25 03:21:25 - INFO - [database.py:75] - Query processing completed in 4.82s
2025-03-25 03:21:25 - INFO - [database.py:75] - Query processing completed in 4.82s
2025-03-25 03:21:25 - INFO - [database.py:75] - Query processing completed in 4.82s
2025-03-25 03:21:25 - INFO - [database.py:75] - Query processing completed in 4.82s
2025-03-25 03:21:25 - INFO - [database.py:75] - Query processing completed in 4.82s
2025-03-25 03:21:25 - INFO - [database.py:75] - Query processing completed in 4.82s
2025-03-25 03:21:25 - INFO - [database.py:75] - Query processing completed in 4.82s
2025-03-25 03:21:25 - INFO - [database.py:75] - Query processing completed in 4.82s
2025-03-25 03:21:25 - INFO - [database.py:75] - Query processing completed in 4.82s
2025-03-25 03:21:25 - INFO - [database.py:75] - Query processing completed in 4.82s
2025-03-25 03:21:25 - INFO - [database.py:75] - Query processing completed in 4.82s
2025-03-25 03:21:25 - INFO - [database.py:75] - Query processing completed in 4.82s
2025-03-25 03:21:25 - INFO - [database.py:75] - Query processing completed in 4.82s
2025-03-25 03:21:25 - INFO - [database.py:75] - Query processing completed in 4.82s
2025-03-25 03:21:25 - INFO - [database.py:75] - Query processing completed in 4.82s
2025-03-25 03:21:25 - INFO - [database.py:75] - Query processing completed in 4.82s
2025-03-25 03:21:25 - INFO - [database.py:75] - Query processing completed in 4.82s
2025-03-25 03:21:25 - INFO - [database.py:75] - Query processing completed in 4.82s
2025-03-25 03:21:25 - INFO - [database.py:75] - Query processing completed in 4.82s
2025-03-25 03:21:25 - INFO - [database.py:75] - Query processing completed in 4.82s
2025-03-25 03:21:25 - INFO - [database.py:75] - Query processing completed in 4.82s
2025-03-25 03:21:25 - INFO - [database.py:75] - Query processing completed in 4.82s
2025-03-25 03:21:25 - INFO - [database.py:75] - Query processing completed in 4.82s
2025-03-25 03:21:25 - INFO - [database.py:75] - Query processing completed in 4.82s
2025-03-25 03:21:25 - INFO - [database.py:75] - Query processing completed in 4.82s
2025-03-25 03:21:25 - INFO - [database.py:75] - Query processing completed in 4.82s
2025-03-25 03:21:25 - INFO - [database.py:75] - Query processing completed in 4.82s
2025-03-25 03:21:25 - INFO - [database.py:75] - Query processing completed in 4.82s
2025-03-25 03:21:25 - INFO - [database.py:75] - Query processing completed in 4.82s
2025-03-25 03:21:25 - INFO - [database.py:75] - Query processing completed in 4.82s
2025-03-25 03:21:25 - INFO - [database.py:75] - Query processing completed in 4.82s
2025-03-25 03:21:25 - INFO - [database.py:75] - Query processing completed in 4.82s
2025-03-25 03:21:25 - INFO - [database.py:75] - Query processing completed in 4.82s
2025-03-25 03:21:25 - INFO - [database.py:75] - Query processing completed in 4.82s
2025-03-25 03:21:25 - INFO - [database.py:75] - Query processing completed in 4.82s
2025-03-25 03:21:25 - INFO - [database.py:75] - Query processing completed in 4.82s
2025-03-25 03:21:25 - INFO - [database.py:75] - Query processing completed in 4.82s
2025-03-25 03:21:25 - INFO - [database.py:75] - Query processing completed in 4.82s
2025-03-25 03:21:25 - INFO - [database.py:75] - Query processing completed in 4.82s
2025-03-25 03:21:25 - INFO - [database.py:75] - Query processing completed in 4.82s
2025-03-25 03:21:25 - INFO - [database.py:75] - Query processing completed in 4.82s
2025-03-25 03:21:25 - INFO - [database.py:75] - Query processing completed in 4.82s
2025-03-25 03:21:25 - INFO - [database.py:75] - Query processing completed in 4.82s
2025-03-25 03:21:25 - INFO - [database.py:75] - Query processing completed in 4.82s
2025-03-25 03:21:25 - INFO - [database.py:75] - Query processing completed in 4.82s
2025-03-25 03:21:25 - INFO - [database.py:75] - Query processing completed in 4.82s
2025-03-25 03:21:25 - INFO - [database.py:75] - Query processing completed in 4.82s
2025-03-25 03:21:25 - INFO - [database.py:75] - Query processing completed in 4.82s
2025-03-25 03:21:25 - INFO - [database.py:75] - Query processing completed in 4.82s
2025-03-25 03:21:25 - INFO - [database.py:75] - Query processing completed in 4.82s
2025-03-25 03:21:25 - INFO - [database.py:75] - Query processing completed in 4.82s
2025-03-25 03:21:25 - INFO - [database.py:75] - Query processing completed in 4.82s
2025-03-25 03:21:25 - INFO - [database.py:75] - Query processing completed in 4.82s
2025-03-25 03:21:25 - INFO - [database.py:75] - Query processing completed in 4.82s
2025-03-25 03:21:25 - INFO - [database.py:75] - Query processing completed in 4.82s
2025-03-25 03:21:25 - INFO - [database.py:75] - Query processing completed in 4.82s
2025-03-25 03:21:25 - INFO - [database.py:75] - Query processing completed in 4.82s
2025-03-25 03:21:25 - INFO - [database.py:75] - Query processing completed in 4.82s
2025-03-25 03:21:25 - INFO - [database.py:75] - Query processing completed in 4.82s
2025-03-25 03:21:25 - INFO - [database.py:75] - Query processing completed in 4.82s
2025-03-25 03:21:25 - INFO - [database.py:75] - Query processing completed in 4.82s
2025-03-25 03:21:25 - INFO - [database.py:75] - Query processing completed in 4.82s
2025-03-25 03:21:25 - INFO - [database.py:75] - Query processing completed in 4.82s
2025-03-25 03:21:25 - INFO - [database.py:75] - Query processing completed in 4.82s
2025-03-25 03:21:25 - INFO - [database.py:75] - Query processing completed in 4.82s
2025-03-25 03:21:25 - INFO - [database.py:75] - Query processing completed in 4.82s
2025-03-25 03:21:25 - INFO - [database.py:75] - Query processing completed in 4.82s
2025-03-25 03:21:25 - INFO - [database.py:75] - Query processing completed in 4.82s
2025-03-25 03:21:25 - INFO - [database.py:75] - Query processing completed in 4.82s
2025-03-25 03:21:25 - INFO - [database.py:75] - Query processing completed in 4.82s
2025-03-25 03:21:25 - INFO - [database.py:75] - Query processing completed in 4.82s
2025-03-25 03:21:25 - INFO - [database.py:75] - Query processing completed in 4.82s
2025-03-25 03:21:25 - INFO - [database.py:75] - Query processing completed in 4.82s
2025-03-25 03:21:25 - INFO - [database.py:75] - Query processing completed in 4.82s
2025-03-25 03:21:25 - INFO - [database.py:75] - Query processing completed in 4.82s
2025-03-25 03:21:25 - INFO - [database.py:75] - Query processing completed in 4.82s
2025-03-25 03:21:25 - INFO - [database.py:75] - Query processing completed in 4.82s
2025-03-25 03:21:25 - INFO - [database.py:75] - Query processing completed in 4.82s
2025-03-25 03:21:25 - INFO - [database.py:75] - Query processing completed in 4.82s
2025-03-25 03:21:25 - INFO - [database.py:75] - Query processing completed in 4.82s
2025-03-25 03:21:25 - INFO - [database.py:75] - Query processing completed in 4.82s
2025-03-25 03:21:25 - INFO - [database.py:75] - Query processing completed in 4.82s
2025-03-25 03:21:25 - INFO - [database.py:75] - Query processing completed in 4.82s
2025-03-25 03:21:28 - INFO - [sql_generator.py:278] - SQL generation completed in 21.16s
2025-03-25 03:21:28 - INFO - [sql_generator.py:278] - SQL generation completed in 21.16s
2025-03-25 03:21:28 - INFO - [sql_generator.py:278] - SQL generation completed in 21.16s
2025-03-25 03:21:28 - INFO - [sql_generator.py:278] - SQL generation completed in 21.16s
2025-03-25 03:21:28 - INFO - [sql_generator.py:278] - SQL generation completed in 21.16s
2025-03-25 03:21:28 - INFO - [sql_generator.py:278] - SQL generation completed in 21.16s
2025-03-25 03:21:28 - INFO - [sql_generator.py:278] - SQL generation completed in 21.16s
2025-03-25 03:21:28 - INFO - [sql_generator.py:278] - SQL generation completed in 21.16s
2025-03-25 03:21:28 - INFO - [sql_generator.py:278] - SQL generation completed in 21.16s
2025-03-25 03:21:28 - INFO - [sql_generator.py:278] - SQL generation completed in 21.16s
2025-03-25 03:21:28 - INFO - [sql_generator.py:278] - SQL generation completed in 21.16s
2025-03-25 03:21:28 - INFO - [sql_generator.py:278] - SQL generation completed in 21.16s
2025-03-25 03:21:28 - INFO - [sql_generator.py:278] - SQL generation completed in 21.16s
2025-03-25 03:21:28 - INFO - [sql_generator.py:278] - SQL generation completed in 21.16s
2025-03-25 03:21:28 - INFO - [sql_generator.py:278] - SQL generation completed in 21.16s
2025-03-25 03:21:28 - INFO - [sql_generator.py:278] - SQL generation completed in 21.16s
2025-03-25 03:21:28 - INFO - [sql_generator.py:278] - SQL generation completed in 21.16s
2025-03-25 03:21:28 - INFO - [sql_generator.py:278] - SQL generation completed in 21.16s
2025-03-25 03:21:28 - INFO - [sql_generator.py:278] - SQL generation completed in 21.16s
2025-03-25 03:21:28 - INFO - [sql_generator.py:278] - SQL generation completed in 21.16s
2025-03-25 03:21:28 - INFO - [sql_generator.py:278] - SQL generation completed in 21.16s
2025-03-25 03:21:28 - INFO - [sql_generator.py:278] - SQL generation completed in 21.16s
2025-03-25 03:21:28 - INFO - [sql_generator.py:278] - SQL generation completed in 21.16s
2025-03-25 03:21:28 - INFO - [sql_generator.py:278] - SQL generation completed in 21.16s
2025-03-25 03:21:28 - INFO - [sql_generator.py:278] - SQL generation completed in 21.16s
2025-03-25 03:21:28 - INFO - [sql_generator.py:278] - SQL generation completed in 21.16s
2025-03-25 03:21:28 - INFO - [sql_generator.py:278] - SQL generation completed in 21.16s
2025-03-25 03:21:28 - INFO - [sql_generator.py:278] - SQL generation completed in 21.16s
2025-03-25 03:21:28 - INFO - [sql_generator.py:278] - SQL generation completed in 21.16s
2025-03-25 03:21:28 - INFO - [sql_generator.py:278] - SQL generation completed in 21.16s
2025-03-25 03:21:28 - INFO - [sql_generator.py:278] - SQL generation completed in 21.16s
2025-03-25 03:21:28 - INFO - [sql_generator.py:278] - SQL generation completed in 21.16s
2025-03-25 03:21:28 - INFO - [sql_generator.py:278] - SQL generation completed in 21.16s
2025-03-25 03:21:28 - INFO - [sql_generator.py:278] - SQL generation completed in 21.16s
2025-03-25 03:21:28 - INFO - [sql_generator.py:278] - SQL generation completed in 21.16s
2025-03-25 03:21:28 - INFO - [sql_generator.py:278] - SQL generation completed in 21.16s
2025-03-25 03:21:28 - INFO - [sql_generator.py:278] - SQL generation completed in 21.16s
2025-03-25 03:21:28 - INFO - [sql_generator.py:278] - SQL generation completed in 21.16s
2025-03-25 03:21:28 - INFO - [sql_generator.py:278] - SQL generation completed in 21.16s
2025-03-25 03:21:28 - INFO - [sql_generator.py:278] - SQL generation completed in 21.16s
2025-03-25 03:21:28 - INFO - [sql_generator.py:278] - SQL generation completed in 21.16s
2025-03-25 03:21:28 - INFO - [sql_generator.py:278] - SQL generation completed in 21.16s
2025-03-25 03:21:28 - INFO - [sql_generator.py:278] - SQL generation completed in 21.16s
2025-03-25 03:21:28 - INFO - [sql_generator.py:278] - SQL generation completed in 21.16s
2025-03-25 03:21:28 - INFO - [sql_generator.py:278] - SQL generation completed in 21.16s
2025-03-25 03:21:28 - INFO - [sql_generator.py:278] - SQL generation completed in 21.16s
2025-03-25 03:21:28 - INFO - [sql_generator.py:278] - SQL generation completed in 21.16s
2025-03-25 03:21:28 - INFO - [sql_generator.py:278] - SQL generation completed in 21.16s
2025-03-25 03:21:28 - INFO - [sql_generator.py:278] - SQL generation completed in 21.16s
2025-03-25 03:21:28 - INFO - [sql_generator.py:278] - SQL generation completed in 21.16s
2025-03-25 03:21:28 - INFO - [sql_generator.py:278] - SQL generation completed in 21.16s
2025-03-25 03:21:28 - INFO - [sql_generator.py:278] - SQL generation completed in 21.16s
2025-03-25 03:21:28 - INFO - [sql_generator.py:278] - SQL generation completed in 21.16s
2025-03-25 03:21:28 - INFO - [sql_generator.py:278] - SQL generation completed in 21.16s
2025-03-25 03:21:28 - INFO - [sql_generator.py:278] - SQL generation completed in 21.16s
2025-03-25 03:21:28 - INFO - [sql_generator.py:278] - SQL generation completed in 21.16s
2025-03-25 03:21:28 - INFO - [sql_generator.py:278] - SQL generation completed in 21.16s
2025-03-25 03:21:28 - INFO - [sql_generator.py:278] - SQL generation completed in 21.16s
2025-03-25 03:21:28 - INFO - [sql_generator.py:278] - SQL generation completed in 21.16s
2025-03-25 03:21:28 - INFO - [sql_generator.py:278] - SQL generation completed in 21.16s
2025-03-25 03:21:28 - INFO - [sql_generator.py:278] - SQL generation completed in 21.16s
2025-03-25 03:21:28 - INFO - [sql_generator.py:278] - SQL generation completed in 21.16s
2025-03-25 03:21:28 - INFO - [sql_generator.py:278] - SQL generation completed in 21.16s
2025-03-25 03:21:28 - INFO - [sql_generator.py:278] - SQL generation completed in 21.16s
2025-03-25 03:21:28 - INFO - [sql_generator.py:278] - SQL generation completed in 21.16s
2025-03-25 03:21:28 - INFO - [sql_generator.py:278] - SQL generation completed in 21.16s
2025-03-25 03:21:28 - INFO - [sql_generator.py:278] - SQL generation completed in 21.16s
2025-03-25 03:21:28 - INFO - [sql_generator.py:278] - SQL generation completed in 21.16s
2025-03-25 03:21:28 - INFO - [sql_generator.py:278] - SQL generation completed in 21.16s
2025-03-25 03:21:28 - INFO - [sql_generator.py:278] - SQL generation completed in 21.16s
2025-03-25 03:21:28 - INFO - [sql_generator.py:278] - SQL generation completed in 21.16s
2025-03-25 03:21:28 - INFO - [sql_generator.py:278] - SQL generation completed in 21.16s
2025-03-25 03:21:28 - INFO - [sql_generator.py:278] - SQL generation completed in 21.16s
2025-03-25 03:21:28 - INFO - [sql_generator.py:278] - SQL generation completed in 21.16s
2025-03-25 03:21:28 - INFO - [sql_generator.py:278] - SQL generation completed in 21.16s
2025-03-25 03:21:28 - INFO - [sql_generator.py:278] - SQL generation completed in 21.16s
2025-03-25 03:21:28 - INFO - [sql_generator.py:278] - SQL generation completed in 21.16s
2025-03-25 03:21:28 - INFO - [sql_generator.py:278] - SQL generation completed in 21.16s
2025-03-25 03:21:28 - INFO - [sql_generator.py:278] - SQL generation completed in 21.16s
2025-03-25 03:21:28 - INFO - [sql_generator.py:278] - SQL generation completed in 21.16s
2025-03-25 03:21:28 - INFO - [sql_generator.py:278] - SQL generation completed in 21.16s
2025-03-25 03:21:28 - INFO - [sql_generator.py:278] - SQL generation completed in 21.16s
2025-03-25 03:21:28 - INFO - [sql_generator.py:278] - SQL generation completed in 21.16s
2025-03-25 03:21:28 - INFO - [sql_generator.py:278] - SQL generation completed in 21.16s
2025-03-25 03:21:28 - INFO - [sql_generator.py:278] - SQL generation completed in 21.16s
2025-03-25 03:21:28 - INFO - [sql_generator.py:278] - SQL generation completed in 21.16s
2025-03-25 03:21:28 - INFO - [sql_generator.py:278] - SQL generation completed in 21.16s
2025-03-25 03:21:28 - INFO - [sql_generator.py:278] - SQL generation completed in 21.16s
2025-03-25 03:21:28 - INFO - [sql_generator.py:278] - SQL generation completed in 21.16s
2025-03-25 03:21:28 - INFO - [sql_generator.py:278] - SQL generation completed in 21.16s
2025-03-25 03:21:28 - INFO - [sql_generator.py:278] - SQL generation completed in 21.16s
2025-03-25 03:21:28 - INFO - [sql_generator.py:278] - SQL generation completed in 21.16s
2025-03-25 03:21:28 - INFO - [sql_generator.py:278] - SQL generation completed in 21.16s
2025-03-25 03:21:28 - INFO - [sql_generator.py:278] - SQL generation completed in 21.16s
2025-03-25 03:21:28 - INFO - [sql_generator.py:278] - SQL generation completed in 21.16s
2025-03-25 03:21:28 - INFO - [sql_generator.py:278] - SQL generation completed in 21.16s
2025-03-25 03:21:28 - INFO - [sql_generator.py:278] - SQL generation completed in 21.16s
2025-03-25 03:21:28 - INFO - [sql_generator.py:278] - SQL generation completed in 21.16s
2025-03-25 03:21:28 - INFO - [sql_generator.py:278] - SQL generation completed in 21.16s
2025-03-25 03:21:28 - INFO - [sql_generator.py:278] - SQL generation completed in 21.16s
2025-03-25 03:21:28 - INFO - [sql_generator.py:278] - SQL generation completed in 21.16s
2025-03-25 03:21:28 - INFO - [sql_generator.py:278] - SQL generation completed in 21.16s
2025-03-25 03:21:28 - INFO - [sql_generator.py:278] - SQL generation completed in 21.16s
2025-03-25 03:21:28 - INFO - [sql_generator.py:278] - SQL generation completed in 21.16s
2025-03-25 03:21:28 - INFO - [sql_generator.py:278] - SQL generation completed in 21.16s
2025-03-25 03:21:28 - INFO - [sql_generator.py:278] - SQL generation completed in 21.16s
2025-03-25 03:21:28 - INFO - [sql_generator.py:278] - SQL generation completed in 21.16s
2025-03-25 03:21:28 - INFO - [sql_generator.py:278] - SQL generation completed in 21.16s
2025-03-25 03:21:28 - INFO - [sql_generator.py:278] - SQL generation completed in 21.16s
2025-03-25 03:21:28 - INFO - [sql_generator.py:278] - SQL generation completed in 21.16s
2025-03-25 03:21:28 - INFO - [sql_generator.py:278] - SQL generation completed in 21.16s
2025-03-25 03:21:28 - INFO - [sql_generator.py:278] - SQL generation completed in 21.16s
2025-03-25 03:21:28 - INFO - [sql_generator.py:278] - SQL generation completed in 21.16s
2025-03-25 03:21:28 - INFO - [sql_generator.py:278] - SQL generation completed in 21.16s
2025-03-25 03:21:28 - INFO - [sql_generator.py:278] - SQL generation completed in 21.16s
2025-03-25 03:21:28 - INFO - [sql_generator.py:278] - SQL generation completed in 21.16s
2025-03-25 03:21:28 - INFO - [sql_generator.py:278] - SQL generation completed in 21.16s
2025-03-25 03:21:28 - INFO - [sql_generator.py:278] - SQL generation completed in 21.16s
2025-03-25 03:21:28 - INFO - [sql_generator.py:278] - SQL generation completed in 21.16s
2025-03-25 03:21:28 - INFO - [sql_generator.py:278] - SQL generation completed in 21.16s
2025-03-25 03:21:28 - INFO - [sql_generator.py:278] - SQL generation completed in 21.16s
2025-03-25 03:21:28 - INFO - [sql_generator.py:278] - SQL generation completed in 21.16s
2025-03-25 03:21:28 - INFO - [sql_generator.py:278] - SQL generation completed in 21.16s
2025-03-25 03:21:28 - INFO - [sql_generator.py:278] - SQL generation completed in 21.16s
2025-03-25 03:21:28 - INFO - [sql_generator.py:278] - SQL generation completed in 21.16s
2025-03-25 03:21:28 - INFO - [sql_generator.py:278] - SQL generation completed in 21.16s
2025-03-25 03:21:28 - INFO - [sql_generator.py:278] - SQL generation completed in 21.16s
2025-03-25 03:21:28 - INFO - [sql_generator.py:278] - SQL generation completed in 21.16s
2025-03-25 03:21:28 - INFO - [sql_generator.py:278] - SQL generation completed in 21.16s
2025-03-25 03:21:28 - INFO - [sql_generator.py:278] - SQL generation completed in 21.16s
2025-03-25 03:21:28 - INFO - [sql_generator.py:278] - SQL generation completed in 21.16s
2025-03-25 03:21:28 - INFO - [sql_generator.py:278] - SQL generation completed in 21.16s
2025-03-25 03:21:28 - INFO - [sql_generator.py:278] - SQL generation completed in 21.16s
2025-03-25 03:21:28 - INFO - [sql_generator.py:278] - SQL generation completed in 21.16s
2025-03-25 03:21:28 - INFO - [sql_generator.py:278] - SQL generation completed in 21.16s
2025-03-25 03:21:45 - INFO - [database.py:238] - Closing database connection
2025-03-25 03:21:46 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:21:46 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:21:46 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:21:46 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:21:46 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:21:46 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:21:46 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:21:46 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:21:46 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:21:46 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:21:46 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:21:46 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:21:46 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-25 03:22:00 - INFO - [streamlit_app.py:125] - Processing query: 'How many customers do we have?'
2025-03-25 03:22:00 - INFO - [streamlit_app.py:125] - Processing query: 'How many customers do we have?'
2025-03-25 03:22:00 - INFO - [streamlit_app.py:125] - Processing query: 'How many customers do we have?'
2025-03-25 03:22:00 - INFO - [streamlit_app.py:125] - Processing query: 'How many customers do we have?'
2025-03-25 03:22:00 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:22:00 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:22:00 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:22:00 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:22:00 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:22:00 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:22:00 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:22:00 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:22:00 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:22:00 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:22:00 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:22:00 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:22:00 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:22:00 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:22:00 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:22:00 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:22:00 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:22:00 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:22:00 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:22:00 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:22:00 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:22:00 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:22:00 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:22:00 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:22:00 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:22:00 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:22:00 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:22:00 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:22:00 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:22:00 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:22:00 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:22:00 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:22:00 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:22:00 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:22:00 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:22:00 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:22:00 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:22:00 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:22:00 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:22:00 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:22:00 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:22:00 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:22:00 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:22:00 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:22:00 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:22:00 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:22:00 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:22:00 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:22:00 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-25 03:22:00 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-25 03:22:00 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-25 03:22:00 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-25 03:22:00 - INFO - [sql_generator.py:35] - Processing query: 'How many customers do we have?'
2025-03-25 03:22:00 - INFO - [sql_generator.py:35] - Processing query: 'How many customers do we have?'
2025-03-25 03:22:00 - INFO - [sql_generator.py:35] - Processing query: 'How many customers do we have?'
2025-03-25 03:22:00 - INFO - [sql_generator.py:35] - Processing query: 'How many customers do we have?'
2025-03-25 03:22:03 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:22:03 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:22:03 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:22:03 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:22:03 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:22:03 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:22:03 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:22:03 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:22:03 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:22:03 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:22:03 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:22:03 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:22:03 - INFO - [database.py:28] - Database connection established in 0.02s
2025-03-25 03:22:03 - INFO - [database.py:28] - Database connection established in 0.02s
2025-03-25 03:22:03 - INFO - [database.py:28] - Database connection established in 0.02s
2025-03-25 03:22:03 - INFO - [database.py:28] - Database connection established in 0.02s
2025-03-25 03:22:07 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 03:22:07 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 03:22:07 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 03:22:07 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 03:22:09 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:22:09 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:22:09 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:22:09 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:22:09,797 - QUERY: 'How many customers do we have?' → SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:22:09 - INFO - [azure_client.py:139] - SQL generation completed in 2.51s
2025-03-25 03:22:09 - INFO - [azure_client.py:139] - SQL generation completed in 2.51s
2025-03-25 03:22:09 - INFO - [azure_client.py:139] - SQL generation completed in 2.51s
2025-03-25 03:22:09 - INFO - [azure_client.py:139] - SQL generation completed in 2.51s
2025-03-25 03:22:09 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:22:09 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:22:09 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:22:09 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:22:09 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:22:09 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:22:09 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:22:09 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:22:09 - INFO - [database.py:75] - Query processing completed in 0.01s
2025-03-25 03:22:09 - INFO - [database.py:75] - Query processing completed in 0.01s
2025-03-25 03:22:09 - INFO - [database.py:75] - Query processing completed in 0.01s
2025-03-25 03:22:09 - INFO - [database.py:75] - Query processing completed in 0.01s
2025-03-25 03:22:09 - INFO - [sql_generator.py:278] - SQL generation completed in 5.95s
2025-03-25 03:22:09 - INFO - [sql_generator.py:278] - SQL generation completed in 5.95s
2025-03-25 03:22:09 - INFO - [sql_generator.py:278] - SQL generation completed in 5.95s
2025-03-25 03:22:09 - INFO - [sql_generator.py:278] - SQL generation completed in 5.95s
2025-03-25 03:22:09 - INFO - [sql_generator.py:117] - Query processing completed in 9.43s
2025-03-25 03:22:09 - INFO - [sql_generator.py:117] - Query processing completed in 9.43s
2025-03-25 03:22:09 - INFO - [sql_generator.py:117] - Query processing completed in 9.43s
2025-03-25 03:22:09 - INFO - [sql_generator.py:117] - Query processing completed in 9.43s
2025-03-25 03:24:27 - INFO - [database.py:238] - Closing database connection
2025-03-25 03:24:28 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:24:28 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:24:28 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:24:28 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:24:28 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:24:28 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:24:28 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:24:28 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:24:28 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:24:28 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:24:28 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:24:28 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:24:28 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-25 03:25:06 - INFO - [database.py:238] - Closing database connection
2025-03-25 03:25:08 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:25:08 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:25:08 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:25:08 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:25:08 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:25:08 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:25:08 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:25:08 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:25:08 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:25:08 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:25:08 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:25:08 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:25:08 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-25 03:26:04 - INFO - [database.py:238] - Closing database connection
2025-03-25 03:26:05 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:26:05 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:26:05 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:26:05 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:26:05 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:26:05 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:26:05 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:26:05 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:26:05 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:26:05 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:26:05 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:26:05 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:26:05 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-25 03:26:17 - INFO - [database.py:238] - Closing database connection
2025-03-25 03:26:20 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:26:20 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:26:20 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:26:20 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:26:20 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:26:20 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:26:20 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:26:20 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:26:20 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:26:20 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:26:20 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:26:20 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:26:20 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-25 03:26:21 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:26:21 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:26:21 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:26:21 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:26:21 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:26:21 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:26:21 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:26:21 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:26:21 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:26:21 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:26:21 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:26:21 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:26:21 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-25 03:26:21 - INFO - [database.py:238] - Closing database connection
2025-03-25 03:26:21 - INFO - [database.py:238] - Closing database connection
2025-03-25 03:27:30 - INFO - [streamlit_app.py:125] - Processing query: 'How many customers do we have?'
2025-03-25 03:27:30 - INFO - [streamlit_app.py:125] - Processing query: 'How many customers do we have?'
2025-03-25 03:27:30 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:27:30 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:27:30 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:27:30 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:27:30 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:27:30 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:27:30 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:27:30 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:27:30 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:27:30 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:27:30 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:27:30 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:27:30 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:27:30 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:27:30 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:27:30 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:27:30 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:27:30 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:27:30 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:27:30 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:27:30 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:27:30 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:27:30 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:27:30 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:27:30 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-25 03:27:30 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-25 03:27:30 - INFO - [sql_generator.py:35] - Processing query: 'How many customers do we have?'
2025-03-25 03:27:30 - INFO - [sql_generator.py:35] - Processing query: 'How many customers do we have?'
2025-03-25 03:27:32 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:27:32 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:27:32 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:27:32 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:27:32 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:27:32 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:27:32 - INFO - [database.py:28] - Database connection established in 0.03s
2025-03-25 03:27:32 - INFO - [database.py:28] - Database connection established in 0.03s
2025-03-25 03:27:38 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 03:27:38 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 03:27:41 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:27:41 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:27:41,040 - QUERY: 'How many customers do we have?' → SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:27:41 - INFO - [azure_client.py:139] - SQL generation completed in 2.51s
2025-03-25 03:27:41 - INFO - [azure_client.py:139] - SQL generation completed in 2.51s
2025-03-25 03:27:41 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:27:41 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:27:41 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:27:41 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:27:41 - INFO - [database.py:75] - Query processing completed in 0.02s
2025-03-25 03:27:41 - INFO - [database.py:75] - Query processing completed in 0.02s
2025-03-25 03:27:41 - INFO - [sql_generator.py:278] - SQL generation completed in 8.42s
2025-03-25 03:27:41 - INFO - [sql_generator.py:278] - SQL generation completed in 8.42s
2025-03-25 03:27:41 - INFO - [sql_generator.py:117] - Query processing completed in 10.10s
2025-03-25 03:27:41 - INFO - [sql_generator.py:117] - Query processing completed in 10.10s
2025-03-25 03:27:51 - INFO - [streamlit_app.py:125] - Processing query: 'Get me all customer details'
2025-03-25 03:27:51 - INFO - [streamlit_app.py:125] - Processing query: 'Get me all customer details'
2025-03-25 03:27:51 - INFO - [streamlit_app.py:125] - Processing query: 'Get me all customer details'
2025-03-25 03:27:51 - INFO - [sql_generator.py:35] - Processing query: 'Get me all customer details'
2025-03-25 03:27:51 - INFO - [sql_generator.py:35] - Processing query: 'Get me all customer details'
2025-03-25 03:27:51 - INFO - [sql_generator.py:35] - Processing query: 'Get me all customer details'
2025-03-25 03:27:52 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:27:52 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:27:52 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:27:52 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:27:52 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:27:52 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:27:52 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:27:52 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:27:52 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:27:52 - INFO - [database.py:28] - Database connection established in 0.00s
2025-03-25 03:27:52 - INFO - [database.py:28] - Database connection established in 0.00s
2025-03-25 03:27:52 - INFO - [database.py:28] - Database connection established in 0.00s
2025-03-25 03:27:56 - INFO - [azure_client.py:46] - SQL generation started for query: 'Get me all customer details'
2025-03-25 03:27:56 - INFO - [azure_client.py:46] - SQL generation started for query: 'Get me all customer details'
2025-03-25 03:27:56 - INFO - [azure_client.py:46] - SQL generation started for query: 'Get me all customer details'
2025-03-25 03:27:58 - INFO - [azure_client.py:131] - Generated SQL: SELECT *
FROM customers;
2025-03-25 03:27:58 - INFO - [azure_client.py:131] - Generated SQL: SELECT *
FROM customers;
2025-03-25 03:27:58 - INFO - [azure_client.py:131] - Generated SQL: SELECT *
FROM customers;
2025-03-25 03:27:58,405 - QUERY: 'Get me all customer details' → SQL: SELECT *
FROM customers;
2025-03-25 03:27:58 - INFO - [azure_client.py:139] - SQL generation completed in 2.17s
2025-03-25 03:27:58 - INFO - [azure_client.py:139] - SQL generation completed in 2.17s
2025-03-25 03:27:58 - INFO - [azure_client.py:139] - SQL generation completed in 2.17s
2025-03-25 03:27:58 - INFO - [database.py:45] - Executing SQL query: SELECT *
FROM customers;
2025-03-25 03:27:58 - INFO - [database.py:45] - Executing SQL query: SELECT *
FROM customers;
2025-03-25 03:27:58 - INFO - [database.py:45] - Executing SQL query: SELECT *
FROM customers;
2025-03-25 03:27:58 - INFO - [database.py:66] - Query returned 5 rows with 11 columns
2025-03-25 03:27:58 - INFO - [database.py:66] - Query returned 5 rows with 11 columns
2025-03-25 03:27:58 - INFO - [database.py:66] - Query returned 5 rows with 11 columns
2025-03-25 03:27:58 - INFO - [database.py:75] - Query processing completed in 0.01s
2025-03-25 03:27:58 - INFO - [database.py:75] - Query processing completed in 0.01s
2025-03-25 03:27:58 - INFO - [database.py:75] - Query processing completed in 0.01s
2025-03-25 03:27:58 - INFO - [sql_generator.py:278] - SQL generation completed in 6.06s
2025-03-25 03:27:58 - INFO - [sql_generator.py:278] - SQL generation completed in 6.06s
2025-03-25 03:27:58 - INFO - [sql_generator.py:278] - SQL generation completed in 6.06s
2025-03-25 03:27:58 - INFO - [sql_generator.py:117] - Query processing completed in 6.76s
2025-03-25 03:27:58 - INFO - [sql_generator.py:117] - Query processing completed in 6.76s
2025-03-25 03:27:58 - INFO - [sql_generator.py:117] - Query processing completed in 6.76s
2025-03-25 03:28:20 - INFO - [streamlit_app.py:125] - Processing query: 'Get me all customer details'
2025-03-25 03:28:20 - INFO - [streamlit_app.py:125] - Processing query: 'Get me all customer details'
2025-03-25 03:28:20 - INFO - [streamlit_app.py:125] - Processing query: 'Get me all customer details'
2025-03-25 03:28:20 - INFO - [streamlit_app.py:125] - Processing query: 'Get me all customer details'
2025-03-25 03:28:20 - INFO - [sql_generator.py:35] - Processing query: 'Get me all customer details'
2025-03-25 03:28:20 - INFO - [sql_generator.py:35] - Processing query: 'Get me all customer details'
2025-03-25 03:28:20 - INFO - [sql_generator.py:35] - Processing query: 'Get me all customer details'
2025-03-25 03:28:20 - INFO - [sql_generator.py:35] - Processing query: 'Get me all customer details'
2025-03-25 03:28:21 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:28:21 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:28:21 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:28:21 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:28:21 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:28:21 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:28:21 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:28:21 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:28:21 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:28:21 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:28:21 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:28:21 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:28:21 - INFO - [database.py:28] - Database connection established in 0.03s
2025-03-25 03:28:21 - INFO - [database.py:28] - Database connection established in 0.03s
2025-03-25 03:28:21 - INFO - [database.py:28] - Database connection established in 0.03s
2025-03-25 03:28:21 - INFO - [database.py:28] - Database connection established in 0.03s
2025-03-25 03:28:36 - INFO - [azure_client.py:46] - SQL generation started for query: 'Get me all customer details'
2025-03-25 03:28:36 - INFO - [azure_client.py:46] - SQL generation started for query: 'Get me all customer details'
2025-03-25 03:28:36 - INFO - [azure_client.py:46] - SQL generation started for query: 'Get me all customer details'
2025-03-25 03:28:36 - INFO - [azure_client.py:46] - SQL generation started for query: 'Get me all customer details'
2025-03-25 03:28:39 - INFO - [azure_client.py:131] - Generated SQL: SELECT *
FROM customers;
2025-03-25 03:28:39 - INFO - [azure_client.py:131] - Generated SQL: SELECT *
FROM customers;
2025-03-25 03:28:39 - INFO - [azure_client.py:131] - Generated SQL: SELECT *
FROM customers;
2025-03-25 03:28:39 - INFO - [azure_client.py:131] - Generated SQL: SELECT *
FROM customers;
2025-03-25 03:28:39,856 - QUERY: 'Get me all customer details' → SQL: SELECT *
FROM customers;
2025-03-25 03:28:39 - INFO - [azure_client.py:139] - SQL generation completed in 3.78s
2025-03-25 03:28:39 - INFO - [azure_client.py:139] - SQL generation completed in 3.78s
2025-03-25 03:28:39 - INFO - [azure_client.py:139] - SQL generation completed in 3.78s
2025-03-25 03:28:39 - INFO - [azure_client.py:139] - SQL generation completed in 3.78s
2025-03-25 03:28:39 - INFO - [database.py:45] - Executing SQL query: SELECT *
FROM customers;
2025-03-25 03:28:39 - INFO - [database.py:45] - Executing SQL query: SELECT *
FROM customers;
2025-03-25 03:28:39 - INFO - [database.py:45] - Executing SQL query: SELECT *
FROM customers;
2025-03-25 03:28:39 - INFO - [database.py:45] - Executing SQL query: SELECT *
FROM customers;
2025-03-25 03:28:39 - INFO - [database.py:66] - Query returned 5 rows with 11 columns
2025-03-25 03:28:39 - INFO - [database.py:66] - Query returned 5 rows with 11 columns
2025-03-25 03:28:39 - INFO - [database.py:66] - Query returned 5 rows with 11 columns
2025-03-25 03:28:39 - INFO - [database.py:66] - Query returned 5 rows with 11 columns
2025-03-25 03:28:39 - INFO - [database.py:75] - Query processing completed in 0.02s
2025-03-25 03:28:39 - INFO - [database.py:75] - Query processing completed in 0.02s
2025-03-25 03:28:39 - INFO - [database.py:75] - Query processing completed in 0.02s
2025-03-25 03:28:39 - INFO - [database.py:75] - Query processing completed in 0.02s
2025-03-25 03:28:39 - INFO - [sql_generator.py:278] - SQL generation completed in 18.43s
2025-03-25 03:28:39 - INFO - [sql_generator.py:278] - SQL generation completed in 18.43s
2025-03-25 03:28:39 - INFO - [sql_generator.py:278] - SQL generation completed in 18.43s
2025-03-25 03:28:39 - INFO - [sql_generator.py:278] - SQL generation completed in 18.43s
2025-03-25 03:28:39 - INFO - [sql_generator.py:117] - Query processing completed in 19.17s
2025-03-25 03:28:39 - INFO - [sql_generator.py:117] - Query processing completed in 19.17s
2025-03-25 03:28:39 - INFO - [sql_generator.py:117] - Query processing completed in 19.17s
2025-03-25 03:28:39 - INFO - [sql_generator.py:117] - Query processing completed in 19.17s
2025-03-25 03:29:17 - INFO - [streamlit_app.py:125] - Processing query: 'Get me all customer details whose name starts with J'
2025-03-25 03:29:17 - INFO - [streamlit_app.py:125] - Processing query: 'Get me all customer details whose name starts with J'
2025-03-25 03:29:17 - INFO - [streamlit_app.py:125] - Processing query: 'Get me all customer details whose name starts with J'
2025-03-25 03:29:17 - INFO - [streamlit_app.py:125] - Processing query: 'Get me all customer details whose name starts with J'
2025-03-25 03:29:17 - INFO - [streamlit_app.py:125] - Processing query: 'Get me all customer details whose name starts with J'
2025-03-25 03:29:17 - INFO - [sql_generator.py:35] - Processing query: 'Get me all customer details whose name starts with J'
2025-03-25 03:29:17 - INFO - [sql_generator.py:35] - Processing query: 'Get me all customer details whose name starts with J'
2025-03-25 03:29:17 - INFO - [sql_generator.py:35] - Processing query: 'Get me all customer details whose name starts with J'
2025-03-25 03:29:17 - INFO - [sql_generator.py:35] - Processing query: 'Get me all customer details whose name starts with J'
2025-03-25 03:29:17 - INFO - [sql_generator.py:35] - Processing query: 'Get me all customer details whose name starts with J'
2025-03-25 03:29:18 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:29:18 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:29:18 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:29:18 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:29:18 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:29:18 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:29:18 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:29:18 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:29:18 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:29:18 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:29:18 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:29:18 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:29:18 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:29:18 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:29:18 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:29:18 - INFO - [database.py:28] - Database connection established in 0.00s
2025-03-25 03:29:18 - INFO - [database.py:28] - Database connection established in 0.00s
2025-03-25 03:29:18 - INFO - [database.py:28] - Database connection established in 0.00s
2025-03-25 03:29:18 - INFO - [database.py:28] - Database connection established in 0.00s
2025-03-25 03:29:18 - INFO - [database.py:28] - Database connection established in 0.00s
2025-03-25 03:31:33 - INFO - [streamlit_app.py:125] - Processing query: 'get me all the customers whose name start with J'
2025-03-25 03:31:33 - INFO - [streamlit_app.py:125] - Processing query: 'get me all the customers whose name start with J'
2025-03-25 03:31:33 - INFO - [streamlit_app.py:125] - Processing query: 'get me all the customers whose name start with J'
2025-03-25 03:31:33 - INFO - [streamlit_app.py:125] - Processing query: 'get me all the customers whose name start with J'
2025-03-25 03:31:33 - INFO - [streamlit_app.py:125] - Processing query: 'get me all the customers whose name start with J'
2025-03-25 03:31:33 - INFO - [streamlit_app.py:125] - Processing query: 'get me all the customers whose name start with J'
2025-03-25 03:31:33 - INFO - [streamlit_app.py:125] - Processing query: 'get me all the customers whose name start with J'
2025-03-25 03:31:33 - INFO - [streamlit_app.py:125] - Processing query: 'get me all the customers whose name start with J'
2025-03-25 03:31:33 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:31:33 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:31:33 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:31:33 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:31:33 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:31:33 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:31:33 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:31:33 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:31:33 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:31:33 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:31:33 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:31:33 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:31:33 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:31:33 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:31:33 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:31:33 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:31:33 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:31:33 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:31:33 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:31:33 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:31:33 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:31:33 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:31:33 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:31:33 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:31:33 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:31:33 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:31:33 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:31:33 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:31:33 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:31:33 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:31:33 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:31:33 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:31:33 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:31:33 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:31:33 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:31:33 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:31:33 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:31:33 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:31:33 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:31:33 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:31:33 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:31:33 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:31:33 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:31:33 - INFO - [azure_client.py:21] - Using model: gpt-4o
2025-03-25 03:31:34 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:31:34 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:31:34 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:31:34 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:31:34 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-25 03:31:34 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-25 03:31:34 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-25 03:31:34 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-25 03:31:34 - INFO - [sql_generator.py:35] - Processing query: 'get me all the customers whose name start with J'
2025-03-25 03:31:34 - INFO - [sql_generator.py:35] - Processing query: 'get me all the customers whose name start with J'
2025-03-25 03:31:34 - INFO - [sql_generator.py:35] - Processing query: 'get me all the customers whose name start with J'
2025-03-25 03:31:34 - INFO - [sql_generator.py:35] - Processing query: 'get me all the customers whose name start with J'
2025-03-25 03:32:36 - INFO - [streamlit_app.py:125] - Processing query: 'get me all the customers whose name start with J'
2025-03-25 03:32:36 - INFO - [streamlit_app.py:125] - Processing query: 'get me all the customers whose name start with J'
2025-03-25 03:32:36 - INFO - [streamlit_app.py:125] - Processing query: 'get me all the customers whose name start with J'
2025-03-25 03:32:36 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:32:36 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:32:36 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:32:36 - INFO - [azure_client.py:21] - Using model: Phi-3-mini-128k-instruct
2025-03-25 03:32:36 - INFO - [azure_client.py:21] - Using model: Phi-3-mini-128k-instruct
2025-03-25 03:32:36 - INFO - [azure_client.py:21] - Using model: Phi-3-mini-128k-instruct
2025-03-25 03:32:36 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:32:36 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:32:36 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:32:36 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:32:36 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:32:36 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:32:36 - INFO - [azure_client.py:21] - Using model: Phi-3-mini-128k-instruct
2025-03-25 03:32:36 - INFO - [azure_client.py:21] - Using model: Phi-3-mini-128k-instruct
2025-03-25 03:32:36 - INFO - [azure_client.py:21] - Using model: Phi-3-mini-128k-instruct
2025-03-25 03:32:36 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:32:36 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:32:36 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:32:36 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:32:36 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:32:36 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:32:36 - INFO - [azure_client.py:21] - Using model: Phi-3-mini-128k-instruct
2025-03-25 03:32:36 - INFO - [azure_client.py:21] - Using model: Phi-3-mini-128k-instruct
2025-03-25 03:32:36 - INFO - [azure_client.py:21] - Using model: Phi-3-mini-128k-instruct
2025-03-25 03:32:36 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:32:36 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:32:36 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:32:36 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:32:36 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:32:36 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:32:36 - INFO - [azure_client.py:21] - Using model: Phi-3-mini-128k-instruct
2025-03-25 03:32:36 - INFO - [azure_client.py:21] - Using model: Phi-3-mini-128k-instruct
2025-03-25 03:32:36 - INFO - [azure_client.py:21] - Using model: Phi-3-mini-128k-instruct
2025-03-25 03:32:36 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:32:36 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:32:36 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:32:36 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-25 03:32:36 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-25 03:32:36 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-25 03:32:36 - INFO - [sql_generator.py:35] - Processing query: 'get me all the customers whose name start with J'
2025-03-25 03:32:36 - INFO - [sql_generator.py:35] - Processing query: 'get me all the customers whose name start with J'
2025-03-25 03:32:36 - INFO - [sql_generator.py:35] - Processing query: 'get me all the customers whose name start with J'
2025-03-25 03:32:39 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:32:39 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:32:39 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:32:39 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:32:39 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:32:39 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:32:39 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:32:39 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:32:39 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:32:39 - INFO - [database.py:28] - Database connection established in 0.02s
2025-03-25 03:32:39 - INFO - [database.py:28] - Database connection established in 0.02s
2025-03-25 03:32:39 - INFO - [database.py:28] - Database connection established in 0.02s
2025-03-25 03:32:42 - INFO - [azure_client.py:46] - SQL generation started for query: 'get me all the customers whose name start with J'
2025-03-25 03:32:42 - INFO - [azure_client.py:46] - SQL generation started for query: 'get me all the customers whose name start with J'
2025-03-25 03:32:42 - INFO - [azure_client.py:46] - SQL generation started for query: 'get me all the customers whose name start with J'
2025-03-25 03:32:44 - INFO - [azure_client.py:131] - Generated SQL: SELECT first_name, last_name FROM customers WHERE first_name LIKE 'J%'
2025-03-25 03:32:44 - INFO - [azure_client.py:131] - Generated SQL: SELECT first_name, last_name FROM customers WHERE first_name LIKE 'J%'
2025-03-25 03:32:44 - INFO - [azure_client.py:131] - Generated SQL: SELECT first_name, last_name FROM customers WHERE first_name LIKE 'J%'
2025-03-25 03:32:44,942 - QUERY: 'get me all the customers whose name start with J' → SQL: SELECT first_name, last_name FROM customers WHERE first_name LIKE 'J%'
2025-03-25 03:32:44 - INFO - [azure_client.py:139] - SQL generation completed in 2.58s
2025-03-25 03:32:44 - INFO - [azure_client.py:139] - SQL generation completed in 2.58s
2025-03-25 03:32:44 - INFO - [azure_client.py:139] - SQL generation completed in 2.58s
2025-03-25 03:32:44 - INFO - [database.py:45] - Executing SQL query: SELECT first_name, last_name FROM customers WHERE first_name LIKE 'J%'
2025-03-25 03:32:44 - INFO - [database.py:45] - Executing SQL query: SELECT first_name, last_name FROM customers WHERE first_name LIKE 'J%'
2025-03-25 03:32:44 - INFO - [database.py:45] - Executing SQL query: SELECT first_name, last_name FROM customers WHERE first_name LIKE 'J%'
2025-03-25 03:32:44 - INFO - [database.py:66] - Query returned 2 rows with 2 columns
2025-03-25 03:32:44 - INFO - [database.py:66] - Query returned 2 rows with 2 columns
2025-03-25 03:32:44 - INFO - [database.py:66] - Query returned 2 rows with 2 columns
2025-03-25 03:32:44 - INFO - [database.py:75] - Query processing completed in 0.02s
2025-03-25 03:32:44 - INFO - [database.py:75] - Query processing completed in 0.02s
2025-03-25 03:32:44 - INFO - [database.py:75] - Query processing completed in 0.02s
2025-03-25 03:32:44 - INFO - [sql_generator.py:278] - SQL generation completed in 5.92s
2025-03-25 03:32:44 - INFO - [sql_generator.py:278] - SQL generation completed in 5.92s
2025-03-25 03:32:44 - INFO - [sql_generator.py:278] - SQL generation completed in 5.92s
2025-03-25 03:32:44 - INFO - [sql_generator.py:117] - Query processing completed in 8.21s
2025-03-25 03:32:44 - INFO - [sql_generator.py:117] - Query processing completed in 8.21s
2025-03-25 03:32:44 - INFO - [sql_generator.py:117] - Query processing completed in 8.21s
2025-03-25 03:33:23 - INFO - [streamlit_app.py:125] - Processing query: 'get me all the customers whose name start with J'
2025-03-25 03:33:23 - INFO - [streamlit_app.py:125] - Processing query: 'get me all the customers whose name start with J'
2025-03-25 03:33:23 - INFO - [streamlit_app.py:125] - Processing query: 'get me all the customers whose name start with J'
2025-03-25 03:33:23 - INFO - [streamlit_app.py:125] - Processing query: 'get me all the customers whose name start with J'
2025-03-25 03:33:23 - INFO - [sql_generator.py:35] - Processing query: 'get me all the customers whose name start with J'
2025-03-25 03:33:23 - INFO - [sql_generator.py:35] - Processing query: 'get me all the customers whose name start with J'
2025-03-25 03:33:23 - INFO - [sql_generator.py:35] - Processing query: 'get me all the customers whose name start with J'
2025-03-25 03:33:23 - INFO - [sql_generator.py:35] - Processing query: 'get me all the customers whose name start with J'
2025-03-25 03:33:24 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:33:24 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:33:24 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:33:24 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:33:24 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:33:24 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:33:24 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:33:24 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:33:24 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:33:24 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:33:24 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:33:24 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:33:24 - INFO - [database.py:28] - Database connection established in 0.00s
2025-03-25 03:33:24 - INFO - [database.py:28] - Database connection established in 0.00s
2025-03-25 03:33:24 - INFO - [database.py:28] - Database connection established in 0.00s
2025-03-25 03:33:24 - INFO - [database.py:28] - Database connection established in 0.00s
2025-03-25 03:33:25 - INFO - [azure_client.py:46] - SQL generation started for query: 'get me all the customers whose name start with J'
2025-03-25 03:33:25 - INFO - [azure_client.py:46] - SQL generation started for query: 'get me all the customers whose name start with J'
2025-03-25 03:33:25 - INFO - [azure_client.py:46] - SQL generation started for query: 'get me all the customers whose name start with J'
2025-03-25 03:33:25 - INFO - [azure_client.py:46] - SQL generation started for query: 'get me all the customers whose name start with J'
2025-03-25 03:33:28 - INFO - [azure_client.py:131] - Generated SQL: SELECT customer_id, first_name, last_name 
FROM customers 
WHERE first_name LIKE 'J%'
2025-03-25 03:33:28 - INFO - [azure_client.py:131] - Generated SQL: SELECT customer_id, first_name, last_name 
FROM customers 
WHERE first_name LIKE 'J%'
2025-03-25 03:33:28 - INFO - [azure_client.py:131] - Generated SQL: SELECT customer_id, first_name, last_name 
FROM customers 
WHERE first_name LIKE 'J%'
2025-03-25 03:33:28 - INFO - [azure_client.py:131] - Generated SQL: SELECT customer_id, first_name, last_name 
FROM customers 
WHERE first_name LIKE 'J%'
2025-03-25 03:33:28,095 - QUERY: 'get me all the customers whose name start with J' → SQL: SELECT customer_id, first_name, last_name 
FROM customers 
WHERE first_name LIKE 'J%'
2025-03-25 03:33:28 - INFO - [azure_client.py:139] - SQL generation completed in 2.33s
2025-03-25 03:33:28 - INFO - [azure_client.py:139] - SQL generation completed in 2.33s
2025-03-25 03:33:28 - INFO - [azure_client.py:139] - SQL generation completed in 2.33s
2025-03-25 03:33:28 - INFO - [azure_client.py:139] - SQL generation completed in 2.33s
2025-03-25 03:33:28 - INFO - [database.py:45] - Executing SQL query: SELECT customer_id, first_name, last_name 
FROM customers 
WHERE first_name LIKE 'J%'
2025-03-25 03:33:28 - INFO - [database.py:45] - Executing SQL query: SELECT customer_id, first_name, last_name 
FROM customers 
WHERE first_name LIKE 'J%'
2025-03-25 03:33:28 - INFO - [database.py:45] - Executing SQL query: SELECT customer_id, first_name, last_name 
FROM customers 
WHERE first_name LIKE 'J%'
2025-03-25 03:33:28 - INFO - [database.py:45] - Executing SQL query: SELECT customer_id, first_name, last_name 
FROM customers 
WHERE first_name LIKE 'J%'
2025-03-25 03:33:28 - INFO - [database.py:66] - Query returned 2 rows with 3 columns
2025-03-25 03:33:28 - INFO - [database.py:66] - Query returned 2 rows with 3 columns
2025-03-25 03:33:28 - INFO - [database.py:66] - Query returned 2 rows with 3 columns
2025-03-25 03:33:28 - INFO - [database.py:66] - Query returned 2 rows with 3 columns
2025-03-25 03:33:28 - INFO - [database.py:75] - Query processing completed in 0.01s
2025-03-25 03:33:28 - INFO - [database.py:75] - Query processing completed in 0.01s
2025-03-25 03:33:28 - INFO - [database.py:75] - Query processing completed in 0.01s
2025-03-25 03:33:28 - INFO - [database.py:75] - Query processing completed in 0.01s
2025-03-25 03:33:28 - INFO - [sql_generator.py:278] - SQL generation completed in 3.85s
2025-03-25 03:33:28 - INFO - [sql_generator.py:278] - SQL generation completed in 3.85s
2025-03-25 03:33:28 - INFO - [sql_generator.py:278] - SQL generation completed in 3.85s
2025-03-25 03:33:28 - INFO - [sql_generator.py:278] - SQL generation completed in 3.85s
2025-03-25 03:33:28 - INFO - [sql_generator.py:117] - Query processing completed in 4.49s
2025-03-25 03:33:28 - INFO - [sql_generator.py:117] - Query processing completed in 4.49s
2025-03-25 03:33:28 - INFO - [sql_generator.py:117] - Query processing completed in 4.49s
2025-03-25 03:33:28 - INFO - [sql_generator.py:117] - Query processing completed in 4.49s
2025-03-25 03:33:48 - INFO - [streamlit_app.py:125] - Processing query: 'get me all the customers '
2025-03-25 03:33:48 - INFO - [streamlit_app.py:125] - Processing query: 'get me all the customers '
2025-03-25 03:33:48 - INFO - [streamlit_app.py:125] - Processing query: 'get me all the customers '
2025-03-25 03:33:48 - INFO - [streamlit_app.py:125] - Processing query: 'get me all the customers '
2025-03-25 03:33:48 - INFO - [streamlit_app.py:125] - Processing query: 'get me all the customers '
2025-03-25 03:33:48 - INFO - [sql_generator.py:35] - Processing query: 'get me all the customers '
2025-03-25 03:33:48 - INFO - [sql_generator.py:35] - Processing query: 'get me all the customers '
2025-03-25 03:33:48 - INFO - [sql_generator.py:35] - Processing query: 'get me all the customers '
2025-03-25 03:33:48 - INFO - [sql_generator.py:35] - Processing query: 'get me all the customers '
2025-03-25 03:33:48 - INFO - [sql_generator.py:35] - Processing query: 'get me all the customers '
2025-03-25 03:33:49 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:33:49 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:33:49 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:33:49 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:33:49 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:33:49 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:33:49 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:33:49 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:33:49 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:33:49 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:33:49 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:33:49 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:33:49 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:33:49 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:33:49 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:33:49 - INFO - [database.py:28] - Database connection established in 0.00s
2025-03-25 03:33:49 - INFO - [database.py:28] - Database connection established in 0.00s
2025-03-25 03:33:49 - INFO - [database.py:28] - Database connection established in 0.00s
2025-03-25 03:33:49 - INFO - [database.py:28] - Database connection established in 0.00s
2025-03-25 03:33:49 - INFO - [database.py:28] - Database connection established in 0.00s
2025-03-25 03:33:50 - INFO - [azure_client.py:46] - SQL generation started for query: 'get me all the customers '
2025-03-25 03:33:50 - INFO - [azure_client.py:46] - SQL generation started for query: 'get me all the customers '
2025-03-25 03:33:50 - INFO - [azure_client.py:46] - SQL generation started for query: 'get me all the customers '
2025-03-25 03:33:50 - INFO - [azure_client.py:46] - SQL generation started for query: 'get me all the customers '
2025-03-25 03:33:50 - INFO - [azure_client.py:46] - SQL generation started for query: 'get me all the customers '
2025-03-25 03:33:51 - INFO - [azure_client.py:131] - Generated SQL: SELECT * FROM customers
2025-03-25 03:33:51 - INFO - [azure_client.py:131] - Generated SQL: SELECT * FROM customers
2025-03-25 03:33:51 - INFO - [azure_client.py:131] - Generated SQL: SELECT * FROM customers
2025-03-25 03:33:51 - INFO - [azure_client.py:131] - Generated SQL: SELECT * FROM customers
2025-03-25 03:33:51 - INFO - [azure_client.py:131] - Generated SQL: SELECT * FROM customers
2025-03-25 03:33:51,603 - QUERY: 'get me all the customers ' → SQL: SELECT * FROM customers
2025-03-25 03:33:51 - INFO - [azure_client.py:139] - SQL generation completed in 1.03s
2025-03-25 03:33:51 - INFO - [azure_client.py:139] - SQL generation completed in 1.03s
2025-03-25 03:33:51 - INFO - [azure_client.py:139] - SQL generation completed in 1.03s
2025-03-25 03:33:51 - INFO - [azure_client.py:139] - SQL generation completed in 1.03s
2025-03-25 03:33:51 - INFO - [azure_client.py:139] - SQL generation completed in 1.03s
2025-03-25 03:33:51 - INFO - [database.py:45] - Executing SQL query: SELECT * FROM customers
2025-03-25 03:33:51 - INFO - [database.py:45] - Executing SQL query: SELECT * FROM customers
2025-03-25 03:33:51 - INFO - [database.py:45] - Executing SQL query: SELECT * FROM customers
2025-03-25 03:33:51 - INFO - [database.py:45] - Executing SQL query: SELECT * FROM customers
2025-03-25 03:33:51 - INFO - [database.py:45] - Executing SQL query: SELECT * FROM customers
2025-03-25 03:33:51 - INFO - [database.py:66] - Query returned 5 rows with 11 columns
2025-03-25 03:33:51 - INFO - [database.py:66] - Query returned 5 rows with 11 columns
2025-03-25 03:33:51 - INFO - [database.py:66] - Query returned 5 rows with 11 columns
2025-03-25 03:33:51 - INFO - [database.py:66] - Query returned 5 rows with 11 columns
2025-03-25 03:33:51 - INFO - [database.py:66] - Query returned 5 rows with 11 columns
2025-03-25 03:33:51 - INFO - [database.py:75] - Query processing completed in 0.02s
2025-03-25 03:33:51 - INFO - [database.py:75] - Query processing completed in 0.02s
2025-03-25 03:33:51 - INFO - [database.py:75] - Query processing completed in 0.02s
2025-03-25 03:33:51 - INFO - [database.py:75] - Query processing completed in 0.02s
2025-03-25 03:33:51 - INFO - [database.py:75] - Query processing completed in 0.02s
2025-03-25 03:33:51 - INFO - [sql_generator.py:278] - SQL generation completed in 2.35s
2025-03-25 03:33:51 - INFO - [sql_generator.py:278] - SQL generation completed in 2.35s
2025-03-25 03:33:51 - INFO - [sql_generator.py:278] - SQL generation completed in 2.35s
2025-03-25 03:33:51 - INFO - [sql_generator.py:278] - SQL generation completed in 2.35s
2025-03-25 03:33:51 - INFO - [sql_generator.py:278] - SQL generation completed in 2.35s
2025-03-25 03:33:51 - INFO - [sql_generator.py:117] - Query processing completed in 3.29s
2025-03-25 03:33:51 - INFO - [sql_generator.py:117] - Query processing completed in 3.29s
2025-03-25 03:33:51 - INFO - [sql_generator.py:117] - Query processing completed in 3.29s
2025-03-25 03:33:51 - INFO - [sql_generator.py:117] - Query processing completed in 3.29s
2025-03-25 03:33:51 - INFO - [sql_generator.py:117] - Query processing completed in 3.29s
2025-03-25 03:34:20 - INFO - [streamlit_app.py:79] - Schema requested for workspace: Default
2025-03-25 03:34:20 - INFO - [streamlit_app.py:79] - Schema requested for workspace: Default
2025-03-25 03:34:20 - INFO - [streamlit_app.py:79] - Schema requested for workspace: Default
2025-03-25 03:34:20 - INFO - [streamlit_app.py:79] - Schema requested for workspace: Default
2025-03-25 03:34:20 - INFO - [streamlit_app.py:79] - Schema requested for workspace: Default
2025-03-25 03:34:20 - INFO - [streamlit_app.py:79] - Schema requested for workspace: Default
2025-03-25 03:34:45 - INFO - [streamlit_app.py:79] - Schema requested for workspace: Default
2025-03-25 03:34:45 - INFO - [streamlit_app.py:79] - Schema requested for workspace: Default
2025-03-25 03:34:45 - INFO - [streamlit_app.py:79] - Schema requested for workspace: Default
2025-03-25 03:34:45 - INFO - [streamlit_app.py:79] - Schema requested for workspace: Default
2025-03-25 03:34:45 - INFO - [streamlit_app.py:79] - Schema requested for workspace: Default
2025-03-25 03:34:45 - INFO - [streamlit_app.py:79] - Schema requested for workspace: Default
2025-03-25 03:34:45 - INFO - [streamlit_app.py:79] - Schema requested for workspace: Default
2025-03-25 03:34:45 - INFO - [streamlit_app.py:125] - Processing query: 'get me all the customers whose name starts with J'
2025-03-25 03:34:45 - INFO - [streamlit_app.py:125] - Processing query: 'get me all the customers whose name starts with J'
2025-03-25 03:34:45 - INFO - [streamlit_app.py:125] - Processing query: 'get me all the customers whose name starts with J'
2025-03-25 03:34:45 - INFO - [streamlit_app.py:125] - Processing query: 'get me all the customers whose name starts with J'
2025-03-25 03:34:45 - INFO - [streamlit_app.py:125] - Processing query: 'get me all the customers whose name starts with J'
2025-03-25 03:34:45 - INFO - [streamlit_app.py:125] - Processing query: 'get me all the customers whose name starts with J'
2025-03-25 03:34:45 - INFO - [streamlit_app.py:125] - Processing query: 'get me all the customers whose name starts with J'
2025-03-25 03:34:45 - INFO - [sql_generator.py:35] - Processing query: 'get me all the customers whose name starts with J'
2025-03-25 03:34:45 - INFO - [sql_generator.py:35] - Processing query: 'get me all the customers whose name starts with J'
2025-03-25 03:34:45 - INFO - [sql_generator.py:35] - Processing query: 'get me all the customers whose name starts with J'
2025-03-25 03:34:45 - INFO - [sql_generator.py:35] - Processing query: 'get me all the customers whose name starts with J'
2025-03-25 03:34:45 - INFO - [sql_generator.py:35] - Processing query: 'get me all the customers whose name starts with J'
2025-03-25 03:34:45 - INFO - [sql_generator.py:35] - Processing query: 'get me all the customers whose name starts with J'
2025-03-25 03:34:45 - INFO - [sql_generator.py:35] - Processing query: 'get me all the customers whose name starts with J'
2025-03-25 03:34:45 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:34:45 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:34:45 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:34:45 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:34:45 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:34:45 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:34:45 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:34:45 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:34:45 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:34:45 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:34:45 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:34:45 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:34:45 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:34:45 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:34:45 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:34:45 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:34:45 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:34:45 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:34:45 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:34:45 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:34:45 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:34:45 - INFO - [database.py:28] - Database connection established in 0.00s
2025-03-25 03:34:45 - INFO - [database.py:28] - Database connection established in 0.00s
2025-03-25 03:34:45 - INFO - [database.py:28] - Database connection established in 0.00s
2025-03-25 03:34:45 - INFO - [database.py:28] - Database connection established in 0.00s
2025-03-25 03:34:45 - INFO - [database.py:28] - Database connection established in 0.00s
2025-03-25 03:34:45 - INFO - [database.py:28] - Database connection established in 0.00s
2025-03-25 03:34:45 - INFO - [database.py:28] - Database connection established in 0.00s
2025-03-25 03:34:46 - INFO - [azure_client.py:46] - SQL generation started for query: 'get me all the customers whose name starts with J'
2025-03-25 03:34:46 - INFO - [azure_client.py:46] - SQL generation started for query: 'get me all the customers whose name starts with J'
2025-03-25 03:34:46 - INFO - [azure_client.py:46] - SQL generation started for query: 'get me all the customers whose name starts with J'
2025-03-25 03:34:46 - INFO - [azure_client.py:46] - SQL generation started for query: 'get me all the customers whose name starts with J'
2025-03-25 03:34:46 - INFO - [azure_client.py:46] - SQL generation started for query: 'get me all the customers whose name starts with J'
2025-03-25 03:34:46 - INFO - [azure_client.py:46] - SQL generation started for query: 'get me all the customers whose name starts with J'
2025-03-25 03:34:46 - INFO - [azure_client.py:46] - SQL generation started for query: 'get me all the customers whose name starts with J'
2025-03-25 03:34:48 - INFO - [azure_client.py:131] - Generated SQL: SELECT * FROM customers WHERE first_name LIKE 'J%' OR last_name LIKE 'J%'
2025-03-25 03:34:48 - INFO - [azure_client.py:131] - Generated SQL: SELECT * FROM customers WHERE first_name LIKE 'J%' OR last_name LIKE 'J%'
2025-03-25 03:34:48 - INFO - [azure_client.py:131] - Generated SQL: SELECT * FROM customers WHERE first_name LIKE 'J%' OR last_name LIKE 'J%'
2025-03-25 03:34:48 - INFO - [azure_client.py:131] - Generated SQL: SELECT * FROM customers WHERE first_name LIKE 'J%' OR last_name LIKE 'J%'
2025-03-25 03:34:48 - INFO - [azure_client.py:131] - Generated SQL: SELECT * FROM customers WHERE first_name LIKE 'J%' OR last_name LIKE 'J%'
2025-03-25 03:34:48 - INFO - [azure_client.py:131] - Generated SQL: SELECT * FROM customers WHERE first_name LIKE 'J%' OR last_name LIKE 'J%'
2025-03-25 03:34:48 - INFO - [azure_client.py:131] - Generated SQL: SELECT * FROM customers WHERE first_name LIKE 'J%' OR last_name LIKE 'J%'
2025-03-25 03:34:48,640 - QUERY: 'get me all the customers whose name starts with J' → SQL: SELECT * FROM customers WHERE first_name LIKE 'J%' OR last_name LIKE 'J%'
2025-03-25 03:34:48 - INFO - [azure_client.py:139] - SQL generation completed in 1.96s
2025-03-25 03:34:48 - INFO - [azure_client.py:139] - SQL generation completed in 1.96s
2025-03-25 03:34:48 - INFO - [azure_client.py:139] - SQL generation completed in 1.96s
2025-03-25 03:34:48 - INFO - [azure_client.py:139] - SQL generation completed in 1.96s
2025-03-25 03:34:48 - INFO - [azure_client.py:139] - SQL generation completed in 1.96s
2025-03-25 03:34:48 - INFO - [azure_client.py:139] - SQL generation completed in 1.96s
2025-03-25 03:34:48 - INFO - [azure_client.py:139] - SQL generation completed in 1.96s
2025-03-25 03:34:48 - INFO - [database.py:45] - Executing SQL query: SELECT * FROM customers WHERE first_name LIKE 'J%' OR last_name LIKE 'J%'
2025-03-25 03:34:48 - INFO - [database.py:45] - Executing SQL query: SELECT * FROM customers WHERE first_name LIKE 'J%' OR last_name LIKE 'J%'
2025-03-25 03:34:48 - INFO - [database.py:45] - Executing SQL query: SELECT * FROM customers WHERE first_name LIKE 'J%' OR last_name LIKE 'J%'
2025-03-25 03:34:48 - INFO - [database.py:45] - Executing SQL query: SELECT * FROM customers WHERE first_name LIKE 'J%' OR last_name LIKE 'J%'
2025-03-25 03:34:48 - INFO - [database.py:45] - Executing SQL query: SELECT * FROM customers WHERE first_name LIKE 'J%' OR last_name LIKE 'J%'
2025-03-25 03:34:48 - INFO - [database.py:45] - Executing SQL query: SELECT * FROM customers WHERE first_name LIKE 'J%' OR last_name LIKE 'J%'
2025-03-25 03:34:48 - INFO - [database.py:45] - Executing SQL query: SELECT * FROM customers WHERE first_name LIKE 'J%' OR last_name LIKE 'J%'
2025-03-25 03:34:48 - INFO - [database.py:66] - Query returned 3 rows with 11 columns
2025-03-25 03:34:48 - INFO - [database.py:66] - Query returned 3 rows with 11 columns
2025-03-25 03:34:48 - INFO - [database.py:66] - Query returned 3 rows with 11 columns
2025-03-25 03:34:48 - INFO - [database.py:66] - Query returned 3 rows with 11 columns
2025-03-25 03:34:48 - INFO - [database.py:66] - Query returned 3 rows with 11 columns
2025-03-25 03:34:48 - INFO - [database.py:66] - Query returned 3 rows with 11 columns
2025-03-25 03:34:48 - INFO - [database.py:66] - Query returned 3 rows with 11 columns
2025-03-25 03:34:48 - INFO - [database.py:75] - Query processing completed in 0.01s
2025-03-25 03:34:48 - INFO - [database.py:75] - Query processing completed in 0.01s
2025-03-25 03:34:48 - INFO - [database.py:75] - Query processing completed in 0.01s
2025-03-25 03:34:48 - INFO - [database.py:75] - Query processing completed in 0.01s
2025-03-25 03:34:48 - INFO - [database.py:75] - Query processing completed in 0.01s
2025-03-25 03:34:48 - INFO - [database.py:75] - Query processing completed in 0.01s
2025-03-25 03:34:48 - INFO - [database.py:75] - Query processing completed in 0.01s
2025-03-25 03:34:48 - INFO - [sql_generator.py:278] - SQL generation completed in 3.04s
2025-03-25 03:34:48 - INFO - [sql_generator.py:278] - SQL generation completed in 3.04s
2025-03-25 03:34:48 - INFO - [sql_generator.py:278] - SQL generation completed in 3.04s
2025-03-25 03:34:48 - INFO - [sql_generator.py:278] - SQL generation completed in 3.04s
2025-03-25 03:34:48 - INFO - [sql_generator.py:278] - SQL generation completed in 3.04s
2025-03-25 03:34:48 - INFO - [sql_generator.py:278] - SQL generation completed in 3.04s
2025-03-25 03:34:48 - INFO - [sql_generator.py:278] - SQL generation completed in 3.04s
2025-03-25 03:34:48 - INFO - [sql_generator.py:117] - Query processing completed in 3.46s
2025-03-25 03:34:48 - INFO - [sql_generator.py:117] - Query processing completed in 3.46s
2025-03-25 03:34:48 - INFO - [sql_generator.py:117] - Query processing completed in 3.46s
2025-03-25 03:34:48 - INFO - [sql_generator.py:117] - Query processing completed in 3.46s
2025-03-25 03:34:48 - INFO - [sql_generator.py:117] - Query processing completed in 3.46s
2025-03-25 03:34:48 - INFO - [sql_generator.py:117] - Query processing completed in 3.46s
2025-03-25 03:34:48 - INFO - [sql_generator.py:117] - Query processing completed in 3.46s
2025-03-25 03:35:02 - INFO - [streamlit_app.py:79] - Schema requested for workspace: Default
2025-03-25 03:35:02 - INFO - [streamlit_app.py:79] - Schema requested for workspace: Default
2025-03-25 03:35:02 - INFO - [streamlit_app.py:79] - Schema requested for workspace: Default
2025-03-25 03:35:02 - INFO - [streamlit_app.py:79] - Schema requested for workspace: Default
2025-03-25 03:35:02 - INFO - [streamlit_app.py:79] - Schema requested for workspace: Default
2025-03-25 03:35:02 - INFO - [streamlit_app.py:79] - Schema requested for workspace: Default
2025-03-25 03:35:02 - INFO - [streamlit_app.py:79] - Schema requested for workspace: Default
2025-03-25 03:35:02 - INFO - [streamlit_app.py:79] - Schema requested for workspace: Default
2025-03-25 03:35:07 - INFO - [streamlit_app.py:125] - Processing query: 'get me all the customers whose name starts with J'
2025-03-25 03:35:07 - INFO - [streamlit_app.py:125] - Processing query: 'get me all the customers whose name starts with J'
2025-03-25 03:35:07 - INFO - [streamlit_app.py:125] - Processing query: 'get me all the customers whose name starts with J'
2025-03-25 03:35:07 - INFO - [streamlit_app.py:125] - Processing query: 'get me all the customers whose name starts with J'
2025-03-25 03:35:07 - INFO - [streamlit_app.py:125] - Processing query: 'get me all the customers whose name starts with J'
2025-03-25 03:35:07 - INFO - [streamlit_app.py:125] - Processing query: 'get me all the customers whose name starts with J'
2025-03-25 03:35:07 - INFO - [streamlit_app.py:125] - Processing query: 'get me all the customers whose name starts with J'
2025-03-25 03:35:07 - INFO - [streamlit_app.py:125] - Processing query: 'get me all the customers whose name starts with J'
2025-03-25 03:35:07 - INFO - [streamlit_app.py:125] - Processing query: 'get me all the customers whose name starts with J'
2025-03-25 03:35:07 - INFO - [streamlit_app.py:125] - Processing query: 'get me all the customers whose name starts with J'
2025-03-25 03:35:07 - INFO - [sql_generator.py:35] - Processing query: 'get me all the customers whose name starts with J'
2025-03-25 03:35:07 - INFO - [sql_generator.py:35] - Processing query: 'get me all the customers whose name starts with J'
2025-03-25 03:35:07 - INFO - [sql_generator.py:35] - Processing query: 'get me all the customers whose name starts with J'
2025-03-25 03:35:07 - INFO - [sql_generator.py:35] - Processing query: 'get me all the customers whose name starts with J'
2025-03-25 03:35:07 - INFO - [sql_generator.py:35] - Processing query: 'get me all the customers whose name starts with J'
2025-03-25 03:35:07 - INFO - [sql_generator.py:35] - Processing query: 'get me all the customers whose name starts with J'
2025-03-25 03:35:07 - INFO - [sql_generator.py:35] - Processing query: 'get me all the customers whose name starts with J'
2025-03-25 03:35:07 - INFO - [sql_generator.py:35] - Processing query: 'get me all the customers whose name starts with J'
2025-03-25 03:35:07 - INFO - [sql_generator.py:35] - Processing query: 'get me all the customers whose name starts with J'
2025-03-25 03:35:07 - INFO - [sql_generator.py:35] - Processing query: 'get me all the customers whose name starts with J'
2025-03-25 03:35:08 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:35:08 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:35:08 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:35:08 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:35:08 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:35:08 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:35:08 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:35:08 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:35:08 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:35:08 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:35:08 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:35:08 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:35:08 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:35:08 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:35:08 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:35:08 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:35:08 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:35:08 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:35:08 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:35:08 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:35:08 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:35:08 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:35:08 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:35:08 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:35:08 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:35:08 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:35:08 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:35:08 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:35:08 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:35:08 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:35:08 - INFO - [database.py:28] - Database connection established in 0.01s
2025-03-25 03:35:08 - INFO - [database.py:28] - Database connection established in 0.01s
2025-03-25 03:35:08 - INFO - [database.py:28] - Database connection established in 0.01s
2025-03-25 03:35:08 - INFO - [database.py:28] - Database connection established in 0.01s
2025-03-25 03:35:08 - INFO - [database.py:28] - Database connection established in 0.01s
2025-03-25 03:35:08 - INFO - [database.py:28] - Database connection established in 0.01s
2025-03-25 03:35:08 - INFO - [database.py:28] - Database connection established in 0.01s
2025-03-25 03:35:08 - INFO - [database.py:28] - Database connection established in 0.01s
2025-03-25 03:35:08 - INFO - [database.py:28] - Database connection established in 0.01s
2025-03-25 03:35:08 - INFO - [database.py:28] - Database connection established in 0.01s
2025-03-25 03:35:09 - INFO - [azure_client.py:46] - SQL generation started for query: 'get me all the customers whose name starts with J'
2025-03-25 03:35:09 - INFO - [azure_client.py:46] - SQL generation started for query: 'get me all the customers whose name starts with J'
2025-03-25 03:35:09 - INFO - [azure_client.py:46] - SQL generation started for query: 'get me all the customers whose name starts with J'
2025-03-25 03:35:09 - INFO - [azure_client.py:46] - SQL generation started for query: 'get me all the customers whose name starts with J'
2025-03-25 03:35:09 - INFO - [azure_client.py:46] - SQL generation started for query: 'get me all the customers whose name starts with J'
2025-03-25 03:35:09 - INFO - [azure_client.py:46] - SQL generation started for query: 'get me all the customers whose name starts with J'
2025-03-25 03:35:09 - INFO - [azure_client.py:46] - SQL generation started for query: 'get me all the customers whose name starts with J'
2025-03-25 03:35:09 - INFO - [azure_client.py:46] - SQL generation started for query: 'get me all the customers whose name starts with J'
2025-03-25 03:35:09 - INFO - [azure_client.py:46] - SQL generation started for query: 'get me all the customers whose name starts with J'
2025-03-25 03:35:09 - INFO - [azure_client.py:46] - SQL generation started for query: 'get me all the customers whose name starts with J'
2025-03-25 03:35:11 - INFO - [azure_client.py:131] - Generated SQL: SELECT *
FROM customers
WHERE first_name LIKE 'J%'
2025-03-25 03:35:11 - INFO - [azure_client.py:131] - Generated SQL: SELECT *
FROM customers
WHERE first_name LIKE 'J%'
2025-03-25 03:35:11 - INFO - [azure_client.py:131] - Generated SQL: SELECT *
FROM customers
WHERE first_name LIKE 'J%'
2025-03-25 03:35:11 - INFO - [azure_client.py:131] - Generated SQL: SELECT *
FROM customers
WHERE first_name LIKE 'J%'
2025-03-25 03:35:11 - INFO - [azure_client.py:131] - Generated SQL: SELECT *
FROM customers
WHERE first_name LIKE 'J%'
2025-03-25 03:35:11 - INFO - [azure_client.py:131] - Generated SQL: SELECT *
FROM customers
WHERE first_name LIKE 'J%'
2025-03-25 03:35:11 - INFO - [azure_client.py:131] - Generated SQL: SELECT *
FROM customers
WHERE first_name LIKE 'J%'
2025-03-25 03:35:11 - INFO - [azure_client.py:131] - Generated SQL: SELECT *
FROM customers
WHERE first_name LIKE 'J%'
2025-03-25 03:35:11 - INFO - [azure_client.py:131] - Generated SQL: SELECT *
FROM customers
WHERE first_name LIKE 'J%'
2025-03-25 03:35:11 - INFO - [azure_client.py:131] - Generated SQL: SELECT *
FROM customers
WHERE first_name LIKE 'J%'
2025-03-25 03:35:11,742 - QUERY: 'get me all the customers whose name starts with J' → SQL: SELECT *
FROM customers
WHERE first_name LIKE 'J%'
2025-03-25 03:35:11 - INFO - [azure_client.py:139] - SQL generation completed in 1.96s
2025-03-25 03:35:11 - INFO - [azure_client.py:139] - SQL generation completed in 1.96s
2025-03-25 03:35:11 - INFO - [azure_client.py:139] - SQL generation completed in 1.96s
2025-03-25 03:35:11 - INFO - [azure_client.py:139] - SQL generation completed in 1.96s
2025-03-25 03:35:11 - INFO - [azure_client.py:139] - SQL generation completed in 1.96s
2025-03-25 03:35:11 - INFO - [azure_client.py:139] - SQL generation completed in 1.96s
2025-03-25 03:35:11 - INFO - [azure_client.py:139] - SQL generation completed in 1.96s
2025-03-25 03:35:11 - INFO - [azure_client.py:139] - SQL generation completed in 1.96s
2025-03-25 03:35:11 - INFO - [azure_client.py:139] - SQL generation completed in 1.96s
2025-03-25 03:35:11 - INFO - [azure_client.py:139] - SQL generation completed in 1.96s
2025-03-25 03:35:11 - INFO - [database.py:45] - Executing SQL query: SELECT *
FROM customers
WHERE first_name LIKE 'J%'
2025-03-25 03:35:11 - INFO - [database.py:45] - Executing SQL query: SELECT *
FROM customers
WHERE first_name LIKE 'J%'
2025-03-25 03:35:11 - INFO - [database.py:45] - Executing SQL query: SELECT *
FROM customers
WHERE first_name LIKE 'J%'
2025-03-25 03:35:11 - INFO - [database.py:45] - Executing SQL query: SELECT *
FROM customers
WHERE first_name LIKE 'J%'
2025-03-25 03:35:11 - INFO - [database.py:45] - Executing SQL query: SELECT *
FROM customers
WHERE first_name LIKE 'J%'
2025-03-25 03:35:11 - INFO - [database.py:45] - Executing SQL query: SELECT *
FROM customers
WHERE first_name LIKE 'J%'
2025-03-25 03:35:11 - INFO - [database.py:45] - Executing SQL query: SELECT *
FROM customers
WHERE first_name LIKE 'J%'
2025-03-25 03:35:11 - INFO - [database.py:45] - Executing SQL query: SELECT *
FROM customers
WHERE first_name LIKE 'J%'
2025-03-25 03:35:11 - INFO - [database.py:45] - Executing SQL query: SELECT *
FROM customers
WHERE first_name LIKE 'J%'
2025-03-25 03:35:11 - INFO - [database.py:45] - Executing SQL query: SELECT *
FROM customers
WHERE first_name LIKE 'J%'
2025-03-25 03:35:11 - INFO - [database.py:66] - Query returned 2 rows with 11 columns
2025-03-25 03:35:11 - INFO - [database.py:66] - Query returned 2 rows with 11 columns
2025-03-25 03:35:11 - INFO - [database.py:66] - Query returned 2 rows with 11 columns
2025-03-25 03:35:11 - INFO - [database.py:66] - Query returned 2 rows with 11 columns
2025-03-25 03:35:11 - INFO - [database.py:66] - Query returned 2 rows with 11 columns
2025-03-25 03:35:11 - INFO - [database.py:66] - Query returned 2 rows with 11 columns
2025-03-25 03:35:11 - INFO - [database.py:66] - Query returned 2 rows with 11 columns
2025-03-25 03:35:11 - INFO - [database.py:66] - Query returned 2 rows with 11 columns
2025-03-25 03:35:11 - INFO - [database.py:66] - Query returned 2 rows with 11 columns
2025-03-25 03:35:11 - INFO - [database.py:66] - Query returned 2 rows with 11 columns
2025-03-25 03:35:11 - INFO - [database.py:75] - Query processing completed in 0.02s
2025-03-25 03:35:11 - INFO - [database.py:75] - Query processing completed in 0.02s
2025-03-25 03:35:11 - INFO - [database.py:75] - Query processing completed in 0.02s
2025-03-25 03:35:11 - INFO - [database.py:75] - Query processing completed in 0.02s
2025-03-25 03:35:11 - INFO - [database.py:75] - Query processing completed in 0.02s
2025-03-25 03:35:11 - INFO - [database.py:75] - Query processing completed in 0.02s
2025-03-25 03:35:11 - INFO - [database.py:75] - Query processing completed in 0.02s
2025-03-25 03:35:11 - INFO - [database.py:75] - Query processing completed in 0.02s
2025-03-25 03:35:11 - INFO - [database.py:75] - Query processing completed in 0.02s
2025-03-25 03:35:11 - INFO - [database.py:75] - Query processing completed in 0.02s
2025-03-25 03:35:11 - INFO - [sql_generator.py:278] - SQL generation completed in 3.56s
2025-03-25 03:35:11 - INFO - [sql_generator.py:278] - SQL generation completed in 3.56s
2025-03-25 03:35:11 - INFO - [sql_generator.py:278] - SQL generation completed in 3.56s
2025-03-25 03:35:11 - INFO - [sql_generator.py:278] - SQL generation completed in 3.56s
2025-03-25 03:35:11 - INFO - [sql_generator.py:278] - SQL generation completed in 3.56s
2025-03-25 03:35:11 - INFO - [sql_generator.py:278] - SQL generation completed in 3.56s
2025-03-25 03:35:11 - INFO - [sql_generator.py:278] - SQL generation completed in 3.56s
2025-03-25 03:35:11 - INFO - [sql_generator.py:278] - SQL generation completed in 3.56s
2025-03-25 03:35:11 - INFO - [sql_generator.py:278] - SQL generation completed in 3.56s
2025-03-25 03:35:11 - INFO - [sql_generator.py:278] - SQL generation completed in 3.56s
2025-03-25 03:35:11 - INFO - [sql_generator.py:117] - Query processing completed in 4.13s
2025-03-25 03:35:11 - INFO - [sql_generator.py:117] - Query processing completed in 4.13s
2025-03-25 03:35:11 - INFO - [sql_generator.py:117] - Query processing completed in 4.13s
2025-03-25 03:35:11 - INFO - [sql_generator.py:117] - Query processing completed in 4.13s
2025-03-25 03:35:11 - INFO - [sql_generator.py:117] - Query processing completed in 4.13s
2025-03-25 03:35:11 - INFO - [sql_generator.py:117] - Query processing completed in 4.13s
2025-03-25 03:35:11 - INFO - [sql_generator.py:117] - Query processing completed in 4.13s
2025-03-25 03:35:11 - INFO - [sql_generator.py:117] - Query processing completed in 4.13s
2025-03-25 03:35:11 - INFO - [sql_generator.py:117] - Query processing completed in 4.13s
2025-03-25 03:35:11 - INFO - [sql_generator.py:117] - Query processing completed in 4.13s
2025-03-25 03:35:19 - INFO - [streamlit_app.py:125] - Processing query: 'get me all the customers'
2025-03-25 03:35:19 - INFO - [streamlit_app.py:125] - Processing query: 'get me all the customers'
2025-03-25 03:35:19 - INFO - [streamlit_app.py:125] - Processing query: 'get me all the customers'
2025-03-25 03:35:19 - INFO - [streamlit_app.py:125] - Processing query: 'get me all the customers'
2025-03-25 03:35:19 - INFO - [streamlit_app.py:125] - Processing query: 'get me all the customers'
2025-03-25 03:35:19 - INFO - [streamlit_app.py:125] - Processing query: 'get me all the customers'
2025-03-25 03:35:19 - INFO - [streamlit_app.py:125] - Processing query: 'get me all the customers'
2025-03-25 03:35:19 - INFO - [streamlit_app.py:125] - Processing query: 'get me all the customers'
2025-03-25 03:35:19 - INFO - [streamlit_app.py:125] - Processing query: 'get me all the customers'
2025-03-25 03:35:19 - INFO - [streamlit_app.py:125] - Processing query: 'get me all the customers'
2025-03-25 03:35:19 - INFO - [streamlit_app.py:125] - Processing query: 'get me all the customers'
2025-03-25 03:35:19 - INFO - [sql_generator.py:35] - Processing query: 'get me all the customers'
2025-03-25 03:35:19 - INFO - [sql_generator.py:35] - Processing query: 'get me all the customers'
2025-03-25 03:35:19 - INFO - [sql_generator.py:35] - Processing query: 'get me all the customers'
2025-03-25 03:35:19 - INFO - [sql_generator.py:35] - Processing query: 'get me all the customers'
2025-03-25 03:35:19 - INFO - [sql_generator.py:35] - Processing query: 'get me all the customers'
2025-03-25 03:35:19 - INFO - [sql_generator.py:35] - Processing query: 'get me all the customers'
2025-03-25 03:35:19 - INFO - [sql_generator.py:35] - Processing query: 'get me all the customers'
2025-03-25 03:35:19 - INFO - [sql_generator.py:35] - Processing query: 'get me all the customers'
2025-03-25 03:35:19 - INFO - [sql_generator.py:35] - Processing query: 'get me all the customers'
2025-03-25 03:35:19 - INFO - [sql_generator.py:35] - Processing query: 'get me all the customers'
2025-03-25 03:35:19 - INFO - [sql_generator.py:35] - Processing query: 'get me all the customers'
2025-03-25 03:35:20 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:35:20 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:35:20 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:35:20 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:35:20 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:35:20 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:35:20 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:35:20 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:35:20 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:35:20 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:35:20 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:35:20 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:35:20 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:35:20 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:35:20 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:35:20 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:35:20 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:35:20 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:35:20 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:35:20 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:35:20 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:35:20 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:35:20 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:35:20 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:35:20 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:35:20 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:35:20 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:35:20 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:35:20 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:35:20 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:35:20 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:35:20 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:35:20 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:35:20 - INFO - [database.py:28] - Database connection established in 0.01s
2025-03-25 03:35:20 - INFO - [database.py:28] - Database connection established in 0.01s
2025-03-25 03:35:20 - INFO - [database.py:28] - Database connection established in 0.01s
2025-03-25 03:35:20 - INFO - [database.py:28] - Database connection established in 0.01s
2025-03-25 03:35:20 - INFO - [database.py:28] - Database connection established in 0.01s
2025-03-25 03:35:20 - INFO - [database.py:28] - Database connection established in 0.01s
2025-03-25 03:35:20 - INFO - [database.py:28] - Database connection established in 0.01s
2025-03-25 03:35:20 - INFO - [database.py:28] - Database connection established in 0.01s
2025-03-25 03:35:20 - INFO - [database.py:28] - Database connection established in 0.01s
2025-03-25 03:35:20 - INFO - [database.py:28] - Database connection established in 0.01s
2025-03-25 03:35:20 - INFO - [database.py:28] - Database connection established in 0.01s
2025-03-25 03:35:22 - INFO - [azure_client.py:46] - SQL generation started for query: 'get me all the customers'
2025-03-25 03:35:22 - INFO - [azure_client.py:46] - SQL generation started for query: 'get me all the customers'
2025-03-25 03:35:22 - INFO - [azure_client.py:46] - SQL generation started for query: 'get me all the customers'
2025-03-25 03:35:22 - INFO - [azure_client.py:46] - SQL generation started for query: 'get me all the customers'
2025-03-25 03:35:22 - INFO - [azure_client.py:46] - SQL generation started for query: 'get me all the customers'
2025-03-25 03:35:22 - INFO - [azure_client.py:46] - SQL generation started for query: 'get me all the customers'
2025-03-25 03:35:22 - INFO - [azure_client.py:46] - SQL generation started for query: 'get me all the customers'
2025-03-25 03:35:22 - INFO - [azure_client.py:46] - SQL generation started for query: 'get me all the customers'
2025-03-25 03:35:22 - INFO - [azure_client.py:46] - SQL generation started for query: 'get me all the customers'
2025-03-25 03:35:22 - INFO - [azure_client.py:46] - SQL generation started for query: 'get me all the customers'
2025-03-25 03:35:22 - INFO - [azure_client.py:46] - SQL generation started for query: 'get me all the customers'
2025-03-25 03:35:22 - INFO - [azure_client.py:131] - Generated SQL: SELECT * FROM customers;
2025-03-25 03:35:22 - INFO - [azure_client.py:131] - Generated SQL: SELECT * FROM customers;
2025-03-25 03:35:22 - INFO - [azure_client.py:131] - Generated SQL: SELECT * FROM customers;
2025-03-25 03:35:22 - INFO - [azure_client.py:131] - Generated SQL: SELECT * FROM customers;
2025-03-25 03:35:22 - INFO - [azure_client.py:131] - Generated SQL: SELECT * FROM customers;
2025-03-25 03:35:22 - INFO - [azure_client.py:131] - Generated SQL: SELECT * FROM customers;
2025-03-25 03:35:22 - INFO - [azure_client.py:131] - Generated SQL: SELECT * FROM customers;
2025-03-25 03:35:22 - INFO - [azure_client.py:131] - Generated SQL: SELECT * FROM customers;
2025-03-25 03:35:22 - INFO - [azure_client.py:131] - Generated SQL: SELECT * FROM customers;
2025-03-25 03:35:22 - INFO - [azure_client.py:131] - Generated SQL: SELECT * FROM customers;
2025-03-25 03:35:22 - INFO - [azure_client.py:131] - Generated SQL: SELECT * FROM customers;
2025-03-25 03:35:22,950 - QUERY: 'get me all the customers' → SQL: SELECT * FROM customers;
2025-03-25 03:35:22 - INFO - [azure_client.py:139] - SQL generation completed in 0.71s
2025-03-25 03:35:22 - INFO - [azure_client.py:139] - SQL generation completed in 0.71s
2025-03-25 03:35:22 - INFO - [azure_client.py:139] - SQL generation completed in 0.71s
2025-03-25 03:35:22 - INFO - [azure_client.py:139] - SQL generation completed in 0.71s
2025-03-25 03:35:22 - INFO - [azure_client.py:139] - SQL generation completed in 0.71s
2025-03-25 03:35:22 - INFO - [azure_client.py:139] - SQL generation completed in 0.71s
2025-03-25 03:35:22 - INFO - [azure_client.py:139] - SQL generation completed in 0.71s
2025-03-25 03:35:22 - INFO - [azure_client.py:139] - SQL generation completed in 0.71s
2025-03-25 03:35:22 - INFO - [azure_client.py:139] - SQL generation completed in 0.71s
2025-03-25 03:35:22 - INFO - [azure_client.py:139] - SQL generation completed in 0.71s
2025-03-25 03:35:22 - INFO - [azure_client.py:139] - SQL generation completed in 0.71s
2025-03-25 03:35:22 - INFO - [database.py:45] - Executing SQL query: SELECT * FROM customers;
2025-03-25 03:35:22 - INFO - [database.py:45] - Executing SQL query: SELECT * FROM customers;
2025-03-25 03:35:22 - INFO - [database.py:45] - Executing SQL query: SELECT * FROM customers;
2025-03-25 03:35:22 - INFO - [database.py:45] - Executing SQL query: SELECT * FROM customers;
2025-03-25 03:35:22 - INFO - [database.py:45] - Executing SQL query: SELECT * FROM customers;
2025-03-25 03:35:22 - INFO - [database.py:45] - Executing SQL query: SELECT * FROM customers;
2025-03-25 03:35:22 - INFO - [database.py:45] - Executing SQL query: SELECT * FROM customers;
2025-03-25 03:35:22 - INFO - [database.py:45] - Executing SQL query: SELECT * FROM customers;
2025-03-25 03:35:22 - INFO - [database.py:45] - Executing SQL query: SELECT * FROM customers;
2025-03-25 03:35:22 - INFO - [database.py:45] - Executing SQL query: SELECT * FROM customers;
2025-03-25 03:35:22 - INFO - [database.py:45] - Executing SQL query: SELECT * FROM customers;
2025-03-25 03:35:22 - INFO - [database.py:66] - Query returned 5 rows with 11 columns
2025-03-25 03:35:22 - INFO - [database.py:66] - Query returned 5 rows with 11 columns
2025-03-25 03:35:22 - INFO - [database.py:66] - Query returned 5 rows with 11 columns
2025-03-25 03:35:22 - INFO - [database.py:66] - Query returned 5 rows with 11 columns
2025-03-25 03:35:22 - INFO - [database.py:66] - Query returned 5 rows with 11 columns
2025-03-25 03:35:22 - INFO - [database.py:66] - Query returned 5 rows with 11 columns
2025-03-25 03:35:22 - INFO - [database.py:66] - Query returned 5 rows with 11 columns
2025-03-25 03:35:22 - INFO - [database.py:66] - Query returned 5 rows with 11 columns
2025-03-25 03:35:22 - INFO - [database.py:66] - Query returned 5 rows with 11 columns
2025-03-25 03:35:22 - INFO - [database.py:66] - Query returned 5 rows with 11 columns
2025-03-25 03:35:22 - INFO - [database.py:66] - Query returned 5 rows with 11 columns
2025-03-25 03:35:22 - INFO - [database.py:75] - Query processing completed in 0.02s
2025-03-25 03:35:22 - INFO - [database.py:75] - Query processing completed in 0.02s
2025-03-25 03:35:22 - INFO - [database.py:75] - Query processing completed in 0.02s
2025-03-25 03:35:22 - INFO - [database.py:75] - Query processing completed in 0.02s
2025-03-25 03:35:22 - INFO - [database.py:75] - Query processing completed in 0.02s
2025-03-25 03:35:22 - INFO - [database.py:75] - Query processing completed in 0.02s
2025-03-25 03:35:22 - INFO - [database.py:75] - Query processing completed in 0.02s
2025-03-25 03:35:22 - INFO - [database.py:75] - Query processing completed in 0.02s
2025-03-25 03:35:22 - INFO - [database.py:75] - Query processing completed in 0.02s
2025-03-25 03:35:22 - INFO - [database.py:75] - Query processing completed in 0.02s
2025-03-25 03:35:22 - INFO - [database.py:75] - Query processing completed in 0.02s
2025-03-25 03:35:22 - INFO - [sql_generator.py:278] - SQL generation completed in 2.59s
2025-03-25 03:35:22 - INFO - [sql_generator.py:278] - SQL generation completed in 2.59s
2025-03-25 03:35:22 - INFO - [sql_generator.py:278] - SQL generation completed in 2.59s
2025-03-25 03:35:22 - INFO - [sql_generator.py:278] - SQL generation completed in 2.59s
2025-03-25 03:35:22 - INFO - [sql_generator.py:278] - SQL generation completed in 2.59s
2025-03-25 03:35:22 - INFO - [sql_generator.py:278] - SQL generation completed in 2.59s
2025-03-25 03:35:22 - INFO - [sql_generator.py:278] - SQL generation completed in 2.59s
2025-03-25 03:35:22 - INFO - [sql_generator.py:278] - SQL generation completed in 2.59s
2025-03-25 03:35:22 - INFO - [sql_generator.py:278] - SQL generation completed in 2.59s
2025-03-25 03:35:22 - INFO - [sql_generator.py:278] - SQL generation completed in 2.59s
2025-03-25 03:35:22 - INFO - [sql_generator.py:278] - SQL generation completed in 2.59s
2025-03-25 03:35:22 - INFO - [sql_generator.py:117] - Query processing completed in 3.10s
2025-03-25 03:35:22 - INFO - [sql_generator.py:117] - Query processing completed in 3.10s
2025-03-25 03:35:22 - INFO - [sql_generator.py:117] - Query processing completed in 3.10s
2025-03-25 03:35:22 - INFO - [sql_generator.py:117] - Query processing completed in 3.10s
2025-03-25 03:35:22 - INFO - [sql_generator.py:117] - Query processing completed in 3.10s
2025-03-25 03:35:22 - INFO - [sql_generator.py:117] - Query processing completed in 3.10s
2025-03-25 03:35:22 - INFO - [sql_generator.py:117] - Query processing completed in 3.10s
2025-03-25 03:35:22 - INFO - [sql_generator.py:117] - Query processing completed in 3.10s
2025-03-25 03:35:22 - INFO - [sql_generator.py:117] - Query processing completed in 3.10s
2025-03-25 03:35:22 - INFO - [sql_generator.py:117] - Query processing completed in 3.10s
2025-03-25 03:35:22 - INFO - [sql_generator.py:117] - Query processing completed in 3.10s
2025-03-25 03:39:50 - INFO - [streamlit_app.py:135] - Processing query: 'How many customers do we have?'
2025-03-25 03:39:50 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:39:50 - INFO - [azure_client.py:21] - Using model: Phi-3-mini-128k-instruct
2025-03-25 03:39:50 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:39:50 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:39:50 - INFO - [azure_client.py:21] - Using model: Phi-3-mini-128k-instruct
2025-03-25 03:39:50 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:39:50 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:39:50 - INFO - [azure_client.py:21] - Using model: Phi-3-mini-128k-instruct
2025-03-25 03:39:50 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:39:50 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:39:50 - INFO - [azure_client.py:21] - Using model: Phi-3-mini-128k-instruct
2025-03-25 03:39:50 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:39:50 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-25 03:39:50 - INFO - [sql_generator.py:35] - Processing query: 'How many customers do we have?'
2025-03-25 03:39:51 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:39:51 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:39:51 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:39:51 - INFO - [database.py:28] - Database connection established in 0.03s
2025-03-25 03:40:02 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 03:40:04 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS number_of_customers FROM customers;
2025-03-25 03:40:04,164 - QUERY: 'How many customers do we have?' → SQL: SELECT COUNT(*) AS number_of_customers FROM customers;
2025-03-25 03:40:04 - INFO - [azure_client.py:139] - SQL generation completed in 1.89s
2025-03-25 03:40:04 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS number_of_customers FROM customers;
2025-03-25 03:40:04 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:40:04 - INFO - [database.py:75] - Query processing completed in 0.01s
2025-03-25 03:40:04 - INFO - [sql_generator.py:278] - SQL generation completed in 12.50s
2025-03-25 03:40:04 - INFO - [sql_generator.py:117] - Query processing completed in 13.88s
2025-03-25 03:40:12 - INFO - [streamlit_app.py:135] - Processing query: 'How many customers do we have?'
2025-03-25 03:40:12 - INFO - [sql_generator.py:35] - Processing query: 'How many customers do we have?'
2025-03-25 03:40:13 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:40:13 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:40:13 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:40:13 - INFO - [database.py:28] - Database connection established in 0.01s
2025-03-25 03:40:14 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 03:40:15 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:40:15,698 - QUERY: 'How many customers do we have?' → SQL: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:40:15 - INFO - [azure_client.py:139] - SQL generation completed in 1.41s
2025-03-25 03:40:15 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers
FROM customers;
2025-03-25 03:40:15 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:40:15 - INFO - [database.py:75] - Query processing completed in 0.01s
2025-03-25 03:40:15 - INFO - [sql_generator.py:278] - SQL generation completed in 2.55s
2025-03-25 03:40:15 - INFO - [sql_generator.py:117] - Query processing completed in 3.44s
2025-03-25 03:40:55 - INFO - [streamlit_app.py:135] - Processing query: 'Get me all customers details whose name starts with J'
2025-03-25 03:40:55 - INFO - [sql_generator.py:35] - Processing query: 'Get me all customers details whose name starts with J'
2025-03-25 03:40:55 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:40:55 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:40:55 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:40:55 - INFO - [database.py:28] - Database connection established in 0.00s
2025-03-25 03:40:57 - INFO - [azure_client.py:46] - SQL generation started for query: 'Get me all customers details whose name starts with J'
2025-03-25 03:40:58 - INFO - [azure_client.py:131] - Generated SQL: SELECT * FROM customers WHERE first_name LIKE 'J%'
2025-03-25 03:40:58,615 - QUERY: 'Get me all customers details whose name starts with J' → SQL: SELECT * FROM customers WHERE first_name LIKE 'J%'
2025-03-25 03:40:58 - INFO - [azure_client.py:139] - SQL generation completed in 1.56s
2025-03-25 03:40:58 - INFO - [database.py:45] - Executing SQL query: SELECT * FROM customers WHERE first_name LIKE 'J%'
2025-03-25 03:40:58 - INFO - [database.py:66] - Query returned 2 rows with 11 columns
2025-03-25 03:40:58 - INFO - [database.py:75] - Query processing completed in 0.01s
2025-03-25 03:40:58 - INFO - [sql_generator.py:278] - SQL generation completed in 3.04s
2025-03-25 03:40:58 - INFO - [sql_generator.py:117] - Query processing completed in 3.60s
2025-03-25 03:41:18 - INFO - [streamlit_app.py:135] - Processing query: 'Get me all customers details whose name starts with J'
2025-03-25 03:41:18 - INFO - [sql_generator.py:35] - Processing query: 'Get me all customers details whose name starts with J'
2025-03-25 03:41:18 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:41:18 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:41:18 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:41:18 - INFO - [database.py:28] - Database connection established in 0.00s
2025-03-25 03:41:20 - INFO - [azure_client.py:46] - SQL generation started for query: 'Get me all customers details whose name starts with J'
2025-03-25 03:41:22 - INFO - [azure_client.py:131] - Generated SQL: SELECT customer_id, first_name, last_name, email, phone, address, city, state, country, postal_code, registration_date
FROM customers
WHERE first_name LIKE 'J%'
2025-03-25 03:41:22,787 - QUERY: 'Get me all customers details whose name starts with J' → SQL: SELECT customer_id, first_name, last_name, email, phone, address, city, state, country, postal_code, registration_date
FROM customers
WHERE first_name LIKE 'J%'
2025-03-25 03:41:22 - INFO - [azure_client.py:139] - SQL generation completed in 2.43s
2025-03-25 03:41:22 - INFO - [database.py:45] - Executing SQL query: SELECT customer_id, first_name, last_name, email, phone, address, city, state, country, postal_code, registration_date
FROM customers
WHERE first_name LIKE 'J%'
2025-03-25 03:41:22 - INFO - [database.py:66] - Query returned 2 rows with 11 columns
2025-03-25 03:41:22 - INFO - [database.py:75] - Query processing completed in 0.01s
2025-03-25 03:41:22 - INFO - [sql_generator.py:278] - SQL generation completed in 3.85s
2025-03-25 03:41:22 - INFO - [sql_generator.py:117] - Query processing completed in 4.26s
2025-03-25 03:43:50 - INFO - [streamlit_app.py:135] - Processing query: 'How many customers do we have?'
2025-03-25 03:43:50 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:43:50 - INFO - [azure_client.py:21] - Using model: Phi-3-mini-128k-instruct
2025-03-25 03:43:50 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:43:50 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:43:50 - INFO - [azure_client.py:21] - Using model: Phi-3-mini-128k-instruct
2025-03-25 03:43:50 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:43:50 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:43:50 - INFO - [azure_client.py:21] - Using model: Phi-3-mini-128k-instruct
2025-03-25 03:43:50 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:43:50 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 03:43:50 - INFO - [azure_client.py:21] - Using model: Phi-3-mini-128k-instruct
2025-03-25 03:43:50 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 03:43:50 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-25 03:43:50 - INFO - [sql_generator.py:35] - Processing query: 'How many customers do we have?'
2025-03-25 03:43:52 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:43:52 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:43:52 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:43:52 - INFO - [database.py:28] - Database connection established in 0.02s
2025-03-25 03:43:55 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 03:43:57 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers FROM customers;
2025-03-25 03:43:57,131 - QUERY: 'How many customers do we have?' → SQL: SELECT COUNT(*) AS total_customers FROM customers;
2025-03-25 03:43:57 - INFO - [azure_client.py:139] - SQL generation completed in 1.53s
2025-03-25 03:43:57 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers FROM customers;
2025-03-25 03:43:57 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 03:43:57 - INFO - [database.py:75] - Query processing completed in 0.01s
2025-03-25 03:43:57 - INFO - [sql_generator.py:278] - SQL generation completed in 4.78s
2025-03-25 03:43:57 - INFO - [sql_generator.py:117] - Query processing completed in 6.57s
2025-03-25 03:44:03 - INFO - [streamlit_app.py:89] - Schema requested for workspace: Default
2025-03-25 03:44:05 - INFO - [streamlit_app.py:89] - Schema requested for workspace: Default
2025-03-25 03:44:30 - INFO - [streamlit_app.py:135] - Processing query: 'get me all the customers whose name starts with J'
2025-03-25 03:44:30 - INFO - [sql_generator.py:35] - Processing query: 'get me all the customers whose name starts with J'
2025-03-25 03:44:30 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:44:30 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:44:30 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:44:30 - INFO - [database.py:28] - Database connection established in 0.00s
2025-03-25 03:44:32 - INFO - [azure_client.py:46] - SQL generation started for query: 'get me all the customers whose name starts with J'
2025-03-25 03:44:33 - INFO - [azure_client.py:131] - Generated SQL: SELECT *
FROM customers
WHERE first_name LIKE 'J%'
2025-03-25 03:44:33,879 - QUERY: 'get me all the customers whose name starts with J' → SQL: SELECT *
FROM customers
WHERE first_name LIKE 'J%'
2025-03-25 03:44:33 - INFO - [azure_client.py:139] - SQL generation completed in 1.46s
2025-03-25 03:44:33 - INFO - [database.py:45] - Executing SQL query: SELECT *
FROM customers
WHERE first_name LIKE 'J%'
2025-03-25 03:44:33 - INFO - [database.py:66] - Query returned 2 rows with 11 columns
2025-03-25 03:44:33 - INFO - [database.py:75] - Query processing completed in 0.01s
2025-03-25 03:44:33 - INFO - [sql_generator.py:278] - SQL generation completed in 2.96s
2025-03-25 03:44:33 - INFO - [sql_generator.py:117] - Query processing completed in 3.37s
2025-03-25 03:47:17 - INFO - [streamlit_app.py:135] - Processing query: 'get me all the customers whose name starts with J'
2025-03-25 03:47:17 - INFO - [sql_generator.py:35] - Processing query: 'get me all the customers whose name starts with J'
2025-03-25 03:47:18 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:47:18 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:47:18 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:47:18 - INFO - [database.py:28] - Database connection established in 0.00s
2025-03-25 03:47:19 - INFO - [azure_client.py:46] - SQL generation started for query: 'get me all the customers whose name starts with J'
2025-03-25 03:47:21 - INFO - [azure_client.py:131] - Generated SQL: SELECT first_name, last_name
FROM customers
WHERE first_name LIKE 'J%'
2025-03-25 03:47:21,469 - QUERY: 'get me all the customers whose name starts with J' → SQL: SELECT first_name, last_name
FROM customers
WHERE first_name LIKE 'J%'
2025-03-25 03:47:21 - INFO - [azure_client.py:139] - SQL generation completed in 1.66s
2025-03-25 03:47:21 - INFO - [database.py:45] - Executing SQL query: SELECT first_name, last_name
FROM customers
WHERE first_name LIKE 'J%'
2025-03-25 03:47:21 - INFO - [database.py:66] - Query returned 2 rows with 2 columns
2025-03-25 03:47:21 - INFO - [database.py:75] - Query processing completed in 0.01s
2025-03-25 03:47:21 - INFO - [sql_generator.py:278] - SQL generation completed in 3.21s
2025-03-25 03:47:21 - INFO - [sql_generator.py:117] - Query processing completed in 4.14s
2025-03-25 03:47:45 - INFO - [streamlit_app.py:135] - Processing query: 'get me customers who placed most of the orders'
2025-03-25 03:47:45 - INFO - [sql_generator.py:35] - Processing query: 'get me customers who placed most of the orders'
2025-03-25 03:47:46 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:47:46 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:47:46 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:47:46 - INFO - [database.py:28] - Database connection established in 0.00s
2025-03-25 03:47:47 - INFO - [azure_client.py:46] - SQL generation started for query: 'get me customers who placed most of the orders'
2025-03-25 03:47:52 - INFO - [azure_client.py:131] - Generated SQL: SELECT 

    c.customer_id,

    COUNT(o.order_id) AS order_count

FROM 

    customers c

JOIN 

    orders o ON c.customer_id = o.customer_id

GROUP BY 

    c.customer_id

ORDER BY 

    order_count DESC

LIMIT 1;
2025-03-25 03:47:52,744 - QUERY: 'get me customers who placed most of the orders' → SQL: SELECT 

    c.customer_id,

    COUNT(o.order_id) AS order_count

FROM 

    customers c

JOIN 

    orders o ON c.customer_id = o.customer_id

GROUP BY 

    c.customer_id

ORDER BY 

    order_count DESC

LIMIT 1;
2025-03-25 03:47:52 - INFO - [azure_client.py:139] - SQL generation completed in 5.39s
2025-03-25 03:47:52 - INFO - [database.py:45] - Executing SQL query: SELECT 

    c.customer_id,

    COUNT(o.order_id) AS order_count

FROM 

    customers c

JOIN 

    orders o ON c.customer_id = o.customer_id

GROUP BY 

    c.customer_id

ORDER BY 

    order_count DESC

LIMIT 1;
2025-03-25 03:47:52 - INFO - [database.py:66] - Query returned 1 rows with 2 columns
2025-03-25 03:47:52 - INFO - [database.py:75] - Query processing completed in 0.01s
2025-03-25 03:47:52 - INFO - [sql_generator.py:278] - SQL generation completed in 6.61s
2025-03-25 03:47:52 - INFO - [sql_generator.py:117] - Query processing completed in 7.42s
2025-03-25 03:48:20 - INFO - [streamlit_app.py:135] - Processing query: 'get me customers who placed most of the orders'
2025-03-25 03:48:20 - INFO - [sql_generator.py:35] - Processing query: 'get me customers who placed most of the orders'
2025-03-25 03:48:21 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:48:21 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:48:21 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:48:21 - INFO - [database.py:28] - Database connection established in 0.00s
2025-03-25 03:48:23 - INFO - [azure_client.py:46] - SQL generation started for query: 'get me customers who placed most of the orders'
2025-03-25 03:48:29 - INFO - [azure_client.py:131] - Generated SQL: WITH OrderCounts AS (
    SELECT
        o.customer_id,
        COUNT(o.order_id) AS order_count
    FROM
        orders o
    GROUP BY
        o.customer_id
),
MaxOrderCount AS (
    SELECT
        MAX(order_count) AS max_order_count
    FROM
        OrderCounts
)
SELECT
    c.customer_id,
    c.customer_id AS alias_customer_id,
    c.customer_name,
    oc.order_count
FROM
    customers c
JOIN
    OrderCounts oc ON c.customer_id = oc.customer_id
JOIN
    MaxOrderCount moc ON oc.order_count = moc.max_order_count;
2025-03-25 03:48:29,485 - QUERY: 'get me customers who placed most of the orders' → SQL: WITH OrderCounts AS (
    SELECT
        o.customer_id,
        COUNT(o.order_id) AS order_count
    FROM
        orders o
    GROUP BY
        o.customer_id
),
MaxOrderCount AS (
    SELECT
        MAX(order_count) AS max_order_count
    FROM
        OrderCounts
)
SELECT
    c.customer_id,
    c.customer_id AS alias_customer_id,
    c.customer_name,
    oc.order_count
FROM
    customers c
JOIN
    OrderCounts oc ON c.customer_id = oc.customer_id
JOIN
    MaxOrderCount moc ON oc.order_count = moc.max_order_count;
2025-03-25 03:48:29 - INFO - [azure_client.py:139] - SQL generation completed in 6.02s
2025-03-25 03:48:29 - INFO - [database.py:45] - Executing SQL query: WITH OrderCounts AS (
    SELECT
        o.customer_id,
        COUNT(o.order_id) AS order_count
    FROM
        orders o
    GROUP BY
        o.customer_id
),
MaxOrderCount AS (
    SELECT
        MAX(order_count) AS max_order_count
    FROM
        OrderCounts
)
SELECT
    c.customer_id,
    c.customer_id AS alias_customer_id,
    c.customer_name,
    oc.order_count
FROM
    customers c
JOIN
    OrderCounts oc ON c.customer_id = oc.customer_id
JOIN
    MaxOrderCount moc ON oc.order_count = moc.max_order_count;
2025-03-25 03:48:29 - ERROR - [database.py:102] - SQL error after 0.00s: (sqlite3.OperationalError) no such column: c.customer_name
[SQL: WITH OrderCounts AS (
    SELECT
        o.customer_id,
        COUNT(o.order_id) AS order_count
    FROM
        orders o
    GROUP BY
        o.customer_id
),
MaxOrderCount AS (
    SELECT
        MAX(order_count) AS max_order_count
    FROM
        OrderCounts
)
SELECT
    c.customer_id,
    c.customer_id AS alias_customer_id,
    c.customer_name,
    oc.order_count
FROM
    customers c
JOIN
    OrderCounts oc ON c.customer_id = oc.customer_id
JOIN
    MaxOrderCount moc ON oc.order_count = moc.max_order_count;]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/sqlalchemy/engine/default.py", line 748, in do_execute
    cursor.execute(statement, parameters)
sqlite3.OperationalError: no such column: c.customer_name

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/vijay/text2sql/src/utils/database.py", line 58, in execute_query
    result = conn.execute(text(sql_query))
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 1414, in execute
    return meth(
           ^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/sqlalchemy/sql/elements.py", line 486, in _execute_on_connection
    return connection._execute_clauseelement(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
          ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 1842, in _execute_context
    return self._exec_single_context(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 2326, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/sqlalchemy/engine/default.py", line 748, in do_execute
    cursor.execute(statement, parameters)
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such column: c.customer_name
[SQL: WITH OrderCounts AS (
    SELECT
        o.customer_id,
        COUNT(o.order_id) AS order_count
    FROM
        orders o
    GROUP BY
        o.customer_id
),
MaxOrderCount AS (
    SELECT
        MAX(order_count) AS max_order_count
    FROM
        OrderCounts
)
SELECT
    c.customer_id,
    c.customer_id AS alias_customer_id,
    c.customer_name,
    oc.order_count
FROM
    customers c
JOIN
    OrderCounts oc ON c.customer_id = oc.customer_id
JOIN
    MaxOrderCount moc ON oc.order_count = moc.max_order_count;]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-25 03:48:29 - INFO - [sql_generator.py:278] - SQL generation completed in 8.11s
2025-03-25 03:48:29 - INFO - [sql_generator.py:117] - Query processing completed in 8.75s
2025-03-25 03:48:53 - INFO - [streamlit_app.py:135] - Processing query: 'get me customers who placed most of the orders along with their details'
2025-03-25 03:48:53 - INFO - [sql_generator.py:35] - Processing query: 'get me customers who placed most of the orders along with their details'
2025-03-25 03:48:53 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:48:53 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:48:53 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:48:53 - INFO - [database.py:28] - Database connection established in 0.00s
2025-03-25 03:48:55 - INFO - [azure_client.py:46] - SQL generation started for query: 'get me customers who placed most of the orders along with their details'
2025-03-25 03:48:59 - INFO - [azure_client.py:131] - Generated SQL: SELECT c.customer_id, c.first_name, c.last_name, c.email, c.phone, c.address, c.city, c.state, c.country, c.postal_code, COUNT(o.order_id) AS order_count
FROM customers AS c
JOIN orders AS o ON c.customer_id = o.customer_id
GROUP BY c.customer_id
ORDER BY order_count DESC
LIMIT 1;
2025-03-25 03:48:59,912 - QUERY: 'get me customers who placed most of the orders along with their details' → SQL: SELECT c.customer_id, c.first_name, c.last_name, c.email, c.phone, c.address, c.city, c.state, c.country, c.postal_code, COUNT(o.order_id) AS order_count
FROM customers AS c
JOIN orders AS o ON c.customer_id = o.customer_id
GROUP BY c.customer_id
ORDER BY order_count DESC
LIMIT 1;
2025-03-25 03:48:59 - INFO - [azure_client.py:139] - SQL generation completed in 4.35s
2025-03-25 03:48:59 - INFO - [database.py:45] - Executing SQL query: SELECT c.customer_id, c.first_name, c.last_name, c.email, c.phone, c.address, c.city, c.state, c.country, c.postal_code, COUNT(o.order_id) AS order_count
FROM customers AS c
JOIN orders AS o ON c.customer_id = o.customer_id
GROUP BY c.customer_id
ORDER BY order_count DESC
LIMIT 1;
2025-03-25 03:48:59 - INFO - [database.py:66] - Query returned 1 rows with 11 columns
2025-03-25 03:48:59 - INFO - [database.py:75] - Query processing completed in 0.02s
2025-03-25 03:48:59 - INFO - [sql_generator.py:278] - SQL generation completed in 6.46s
2025-03-25 03:48:59 - INFO - [sql_generator.py:117] - Query processing completed in 6.88s
2025-03-25 03:50:17 - INFO - [streamlit_app.py:135] - Processing query: 'get me customers who placed most of the orders along with their details'
2025-03-25 03:50:17 - INFO - [sql_generator.py:35] - Processing query: 'get me customers who placed most of the orders along with their details'
2025-03-25 03:50:18 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:50:18 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:50:18 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:50:18 - INFO - [database.py:28] - Database connection established in 0.00s
2025-03-25 03:50:20 - INFO - [azure_client.py:46] - SQL generation started for query: 'get me customers who placed most of the orders along with their details'
2025-03-25 03:50:24 - INFO - [azure_client.py:131] - Generated SQL: WITH OrderCounts AS (
    SELECT o.customer_id, COUNT(*) AS order_count
    FROM orders o
    GROUP BY o.customer_id
),
MaxOrderCount AS (
    SELECT MAX(order_count) AS max_order_count
    FROM OrderCounts
)

SELECT c.*, oc.order_count
FROM customers c
JOIN OrderCounts oc ON c.customer_id = oc.customer_id
JOIN MaxOrderCount moc ON oc.order_count = moc.max_order_count
ORDER BY c.customer_id;
2025-03-25 03:50:24,408 - QUERY: 'get me customers who placed most of the orders along with their details' → SQL: WITH OrderCounts AS (
    SELECT o.customer_id, COUNT(*) AS order_count
    FROM orders o
    GROUP BY o.customer_id
),
MaxOrderCount AS (
    SELECT MAX(order_count) AS max_order_count
    FROM OrderCounts
)

SELECT c.*, oc.order_count
FROM customers c
JOIN OrderCounts oc ON c.customer_id = oc.customer_id
JOIN MaxOrderCount moc ON oc.order_count = moc.max_order_count
ORDER BY c.customer_id;
2025-03-25 03:50:24 - INFO - [azure_client.py:139] - SQL generation completed in 4.16s
2025-03-25 03:50:24 - INFO - [database.py:45] - Executing SQL query: WITH OrderCounts AS (
    SELECT o.customer_id, COUNT(*) AS order_count
    FROM orders o
    GROUP BY o.customer_id
),
MaxOrderCount AS (
    SELECT MAX(order_count) AS max_order_count
    FROM OrderCounts
)

SELECT c.*, oc.order_count
FROM customers c
JOIN OrderCounts oc ON c.customer_id = oc.customer_id
JOIN MaxOrderCount moc ON oc.order_count = moc.max_order_count
ORDER BY c.customer_id;
2025-03-25 03:50:24 - INFO - [database.py:66] - Query returned 3 rows with 12 columns
2025-03-25 03:50:24 - INFO - [database.py:75] - Query processing completed in 0.01s
2025-03-25 03:50:24 - INFO - [sql_generator.py:278] - SQL generation completed in 5.96s
2025-03-25 03:50:24 - INFO - [sql_generator.py:117] - Query processing completed in 6.90s
2025-03-25 03:52:36 - INFO - [streamlit_app.py:135] - Processing query: 'get me customers who placed most of the orders along with their details'
2025-03-25 03:52:36 - INFO - [sql_generator.py:35] - Processing query: 'get me customers who placed most of the orders along with their details'
2025-03-25 03:52:36 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 03:52:36 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 03:52:36 - INFO - [database.py:24] - Attempting database connection
2025-03-25 03:52:36 - INFO - [database.py:28] - Database connection established in 0.00s
2025-03-25 03:52:41 - INFO - [azure_client.py:46] - SQL generation started for query: 'get me customers who placed most of the orders along with their details'
2025-03-25 03:52:46 - INFO - [azure_client.py:131] - Generated SQL: SELECT c.customer_id, c.first_name, c.last_name, c.email, c.phone, c.address, c.city, c.state, c.country, c.postal_code, c.registration_date, COUNT(o.order_id) AS order_count
FROM customers AS c
JOIN orders AS o ON c.customer_id = o.customer_id
GROUP BY c.customer_id
ORDER BY order_count DESC
LIMIT 1;
2025-03-25 03:52:46,061 - QUERY: 'get me customers who placed most of the orders along with their details' → SQL: SELECT c.customer_id, c.first_name, c.last_name, c.email, c.phone, c.address, c.city, c.state, c.country, c.postal_code, c.registration_date, COUNT(o.order_id) AS order_count
FROM customers AS c
JOIN orders AS o ON c.customer_id = o.customer_id
GROUP BY c.customer_id
ORDER BY order_count DESC
LIMIT 1;
2025-03-25 03:52:46 - INFO - [azure_client.py:139] - SQL generation completed in 4.98s
2025-03-25 03:52:46 - INFO - [database.py:45] - Executing SQL query: SELECT c.customer_id, c.first_name, c.last_name, c.email, c.phone, c.address, c.city, c.state, c.country, c.postal_code, c.registration_date, COUNT(o.order_id) AS order_count
FROM customers AS c
JOIN orders AS o ON c.customer_id = o.customer_id
GROUP BY c.customer_id
ORDER BY order_count DESC
LIMIT 1;
2025-03-25 03:52:46 - INFO - [database.py:66] - Query returned 1 rows with 12 columns
2025-03-25 03:52:46 - INFO - [database.py:75] - Query processing completed in 0.01s
2025-03-25 03:52:46 - INFO - [sql_generator.py:278] - SQL generation completed in 9.54s
2025-03-25 03:52:46 - INFO - [sql_generator.py:117] - Query processing completed in 10.06s
2025-03-25 09:15:23 - INFO - [streamlit_app.py:135] - Processing query: 'get me details of alice'
2025-03-25 09:15:23 - INFO - [sql_generator.py:35] - Processing query: 'get me details of alice'
2025-03-25 09:15:23 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 09:15:23 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 09:15:23 - INFO - [database.py:24] - Attempting database connection
2025-03-25 09:15:23 - INFO - [database.py:28] - Database connection established in 0.01s
2025-03-25 09:15:26 - INFO - [azure_client.py:46] - SQL generation started for query: 'get me details of alice'
2025-03-25 09:15:26 - ERROR - [azure_client.py:145] - SQL generation error after 0.01s: ('Connection aborted.', RemoteDisconnected('Remote end closed connection without response'))
Traceback (most recent call last):
  File "/home/vijay/text2sql/src/utils/azure_client.py", line 108, in generate_sql
    response = self.client.complete(
               ^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/ai/inference/_patch.py", line 728, in complete
    pipeline_response: PipelineResponse = self._client._pipeline.run(  # pylint: disable=protected-access
                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/_base.py", line 240, in run
    return first_node.send(pipeline_request)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/_base.py", line 96, in send
    response = self.next.send(request)
               ^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/_base.py", line 96, in send
    response = self.next.send(request)
               ^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/_base.py", line 96, in send
    response = self.next.send(request)
               ^^^^^^^^^^^^^^^^^^^^^^^
  [Previous line repeated 2 more times]
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/policies/_redirect.py", line 204, in send
    response = self.next.send(request)
               ^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/policies/_retry.py", line 573, in send
    raise err
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/policies/_retry.py", line 551, in send
    response = self.next.send(request)
               ^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/_base.py", line 96, in send
    response = self.next.send(request)
               ^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/_base.py", line 96, in send
    response = self.next.send(request)
               ^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/_base.py", line 96, in send
    response = self.next.send(request)
               ^^^^^^^^^^^^^^^^^^^^^^^
  [Previous line repeated 3 more times]
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/_base.py", line 128, in send
    self._sender.send(request.http_request, **request.context.options),
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/transport/_requests_basic.py", line 409, in send
    raise error
azure.core.exceptions.ServiceResponseError: ('Connection aborted.', RemoteDisconnected('Remote end closed connection without response'))
2025-03-25 09:15:26 - INFO - [sql_generator.py:278] - SQL generation completed in 2.39s
2025-03-25 09:15:26 - INFO - [sql_generator.py:117] - Query processing completed in 2.49s
2025-03-25 09:15:53 - INFO - [streamlit_app.py:135] - Processing query: 'get me details of alice'
2025-03-25 09:15:53 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 09:15:53 - INFO - [azure_client.py:21] - Using model: Phi-3-mini-128k-instruct
2025-03-25 09:15:53 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 09:15:53 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 09:15:53 - INFO - [azure_client.py:21] - Using model: Phi-3-mini-128k-instruct
2025-03-25 09:15:53 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 09:15:53 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 09:15:53 - INFO - [azure_client.py:21] - Using model: Phi-3-mini-128k-instruct
2025-03-25 09:15:53 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 09:15:53 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 09:15:53 - INFO - [azure_client.py:21] - Using model: Phi-3-mini-128k-instruct
2025-03-25 09:15:53 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 09:15:53 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-25 09:15:53 - INFO - [sql_generator.py:35] - Processing query: 'get me details of alice'
2025-03-25 09:15:55 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 09:15:55 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 09:15:55 - INFO - [database.py:24] - Attempting database connection
2025-03-25 09:15:55 - INFO - [database.py:28] - Database connection established in 0.02s
2025-03-25 09:15:58 - INFO - [azure_client.py:46] - SQL generation started for query: 'get me details of alice'
2025-03-25 09:16:03 - INFO - [azure_client.py:131] - Generated SQL: SELECT *
FROM customers
WHERE first_name = 'Alice';
2025-03-25 09:16:03,062 - QUERY: 'get me details of alice' → SQL: SELECT *
FROM customers
WHERE first_name = 'Alice';
2025-03-25 09:16:03 - INFO - [azure_client.py:139] - SQL generation completed in 4.32s
2025-03-25 09:16:03 - INFO - [database.py:45] - Executing SQL query: SELECT *
FROM customers
WHERE first_name = 'Alice';
2025-03-25 09:16:03 - INFO - [database.py:66] - Query returned 1 rows with 11 columns
2025-03-25 09:16:03 - INFO - [database.py:75] - Query processing completed in 0.02s
2025-03-25 09:16:03 - INFO - [sql_generator.py:278] - SQL generation completed in 7.98s
2025-03-25 09:16:03 - INFO - [sql_generator.py:117] - Query processing completed in 9.19s
2025-03-25 09:16:45 - INFO - [streamlit_app.py:135] - Processing query: 'What was our revenue in January?'
2025-03-25 09:16:45 - INFO - [sql_generator.py:35] - Processing query: 'What was our revenue in January?'
2025-03-25 09:16:46 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 09:16:46 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 09:16:46 - INFO - [database.py:24] - Attempting database connection
2025-03-25 09:16:46 - INFO - [database.py:28] - Database connection established in 0.00s
2025-03-25 09:16:47 - INFO - [azure_client.py:46] - SQL generation started for query: 'What was our revenue in January?'
2025-03-25 09:16:51 - INFO - [azure_client.py:131] - Generated SQL: SELECT SUM(revenue) AS total_revenue
FROM sales_metrics
WHERE date >= '2023-01-01' AND date < '2023-02-01';
2025-03-25 09:16:51,601 - QUERY: 'What was our revenue in January?' → SQL: SELECT SUM(revenue) AS total_revenue
FROM sales_metrics
WHERE date >= '2023-01-01' AND date < '2023-02-01';
2025-03-25 09:16:51 - INFO - [azure_client.py:139] - SQL generation completed in 4.08s
2025-03-25 09:16:51 - INFO - [database.py:45] - Executing SQL query: SELECT SUM(revenue) AS total_revenue
FROM sales_metrics
WHERE date >= '2023-01-01' AND date < '2023-02-01';
2025-03-25 09:16:51 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 09:16:51 - INFO - [database.py:75] - Query processing completed in 0.03s
2025-03-25 09:16:51 - INFO - [sql_generator.py:278] - SQL generation completed in 5.40s
2025-03-25 09:16:51 - INFO - [sql_generator.py:117] - Query processing completed in 5.92s
2025-03-25 09:17:55 - INFO - [streamlit_app.py:135] - Processing query: 'What was our revenue in January?'
2025-03-25 09:17:55 - INFO - [sql_generator.py:35] - Processing query: 'What was our revenue in January?'
2025-03-25 09:17:55 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 09:17:55 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 09:17:55 - INFO - [database.py:24] - Attempting database connection
2025-03-25 09:17:55 - INFO - [database.py:28] - Database connection established in 0.00s
2025-03-25 09:17:56 - INFO - [azure_client.py:46] - SQL generation started for query: 'What was our revenue in January?'
2025-03-25 09:17:59 - INFO - [azure_client.py:131] - Generated SQL: SELECT SUM(revenue) AS january_revenue
FROM sales_metrics
WHERE strftime('%m', date) = '01';
2025-03-25 09:17:59,076 - QUERY: 'What was our revenue in January?' → SQL: SELECT SUM(revenue) AS january_revenue
FROM sales_metrics
WHERE strftime('%m', date) = '01';
2025-03-25 09:17:59 - INFO - [azure_client.py:139] - SQL generation completed in 2.11s
2025-03-25 09:17:59 - INFO - [database.py:45] - Executing SQL query: SELECT SUM(revenue) AS january_revenue
FROM sales_metrics
WHERE strftime('%m', date) = '01';
2025-03-25 09:17:59 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 09:17:59 - INFO - [database.py:75] - Query processing completed in 0.01s
2025-03-25 09:17:59 - INFO - [sql_generator.py:278] - SQL generation completed in 3.55s
2025-03-25 09:17:59 - INFO - [sql_generator.py:117] - Query processing completed in 4.06s
2025-03-25 09:18:52 - INFO - [streamlit_app.py:135] - Processing query: 'What was our revenue in January?'
2025-03-25 09:18:52 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 09:18:52 - INFO - [azure_client.py:21] - Using model: Phi-3-mini-128k-instruct
2025-03-25 09:18:52 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 09:18:52 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 09:18:52 - INFO - [azure_client.py:21] - Using model: Phi-3-mini-128k-instruct
2025-03-25 09:18:52 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 09:18:52 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 09:18:52 - INFO - [azure_client.py:21] - Using model: Phi-3-mini-128k-instruct
2025-03-25 09:18:52 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 09:18:52 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 09:18:52 - INFO - [azure_client.py:21] - Using model: Phi-3-mini-128k-instruct
2025-03-25 09:18:52 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 09:18:52 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-25 09:18:52 - INFO - [sql_generator.py:35] - Processing query: 'What was our revenue in January?'
2025-03-25 09:18:53 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 09:18:53 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 09:18:53 - INFO - [database.py:24] - Attempting database connection
2025-03-25 09:18:53 - INFO - [database.py:28] - Database connection established in 0.01s
2025-03-25 09:18:57 - INFO - [azure_client.py:46] - SQL generation started for query: 'What was our revenue in January?'
2025-03-25 09:19:00 - INFO - [azure_client.py:131] - Generated SQL: SELECT SUM(sales_metrics.revenue) AS total_revenue
FROM sales_metrics
WHERE strftime('%Y-%m', sales_metrics.date) = '2022-01';
2025-03-25 09:19:00,633 - QUERY: 'What was our revenue in January?' → SQL: SELECT SUM(sales_metrics.revenue) AS total_revenue
FROM sales_metrics
WHERE strftime('%Y-%m', sales_metrics.date) = '2022-01';
2025-03-25 09:19:00 - INFO - [azure_client.py:139] - SQL generation completed in 3.21s
2025-03-25 09:19:00 - INFO - [database.py:45] - Executing SQL query: SELECT SUM(sales_metrics.revenue) AS total_revenue
FROM sales_metrics
WHERE strftime('%Y-%m', sales_metrics.date) = '2022-01';
2025-03-25 09:19:00 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 09:19:00 - INFO - [database.py:75] - Query processing completed in 0.01s
2025-03-25 09:19:00 - INFO - [sql_generator.py:278] - SQL generation completed in 6.68s
2025-03-25 09:19:00 - INFO - [sql_generator.py:117] - Query processing completed in 8.27s
2025-03-25 09:19:51 - INFO - [streamlit_app.py:135] - Processing query: 'What was our revenue in January?'
2025-03-25 09:19:51 - INFO - [sql_generator.py:35] - Processing query: 'What was our revenue in January?'
2025-03-25 09:19:52 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 09:19:52 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 09:19:52 - INFO - [database.py:24] - Attempting database connection
2025-03-25 09:19:52 - INFO - [database.py:28] - Database connection established in 0.00s
2025-03-25 09:19:53 - INFO - [azure_client.py:46] - SQL generation started for query: 'What was our revenue in January?'
2025-03-25 09:19:55 - INFO - [azure_client.py:131] - Generated SQL: SELECT SUM(revenue) AS total_revenue
FROM sales_metrics
WHERE strftime('%Y-%m', date) = '2023-01';
2025-03-25 09:19:55,143 - QUERY: 'What was our revenue in January?' → SQL: SELECT SUM(revenue) AS total_revenue
FROM sales_metrics
WHERE strftime('%Y-%m', date) = '2023-01';
2025-03-25 09:19:55 - INFO - [azure_client.py:139] - SQL generation completed in 1.89s
2025-03-25 09:19:55 - INFO - [database.py:45] - Executing SQL query: SELECT SUM(revenue) AS total_revenue
FROM sales_metrics
WHERE strftime('%Y-%m', date) = '2023-01';
2025-03-25 09:19:55 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 09:19:55 - INFO - [database.py:75] - Query processing completed in 0.01s
2025-03-25 09:19:55 - INFO - [sql_generator.py:278] - SQL generation completed in 3.10s
2025-03-25 09:19:55 - INFO - [sql_generator.py:117] - Query processing completed in 3.89s
2025-03-25 09:20:10 - INFO - [streamlit_app.py:135] - Processing query: 'Get me details of alice'
2025-03-25 09:20:10 - INFO - [sql_generator.py:35] - Processing query: 'Get me details of alice'
2025-03-25 09:20:11 - INFO - [sql_generator.py:40] - Detected intent: metadata_request
2025-03-25 09:20:11 - INFO - [sql_generator.py:83] - Processing metadata request
2025-03-25 09:20:11 - INFO - [sql_generator.py:117] - Query processing completed in 0.53s
2025-03-25 09:20:34 - INFO - [streamlit_app.py:135] - Processing query: 'Get me details of alice'
2025-03-25 09:20:34 - INFO - [sql_generator.py:35] - Processing query: 'Get me details of alice'
2025-03-25 09:20:35 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 09:20:35 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 09:20:35 - INFO - [database.py:24] - Attempting database connection
2025-03-25 09:20:35 - INFO - [database.py:28] - Database connection established in 0.00s
2025-03-25 09:20:37 - INFO - [azure_client.py:46] - SQL generation started for query: 'Get me details of alice'
2025-03-25 09:20:38 - INFO - [azure_client.py:131] - Generated SQL: SELECT *
FROM customers
WHERE first_name = 'Alice';
2025-03-25 09:20:38,648 - QUERY: 'Get me details of alice' → SQL: SELECT *
FROM customers
WHERE first_name = 'Alice';
2025-03-25 09:20:38 - INFO - [azure_client.py:139] - SQL generation completed in 1.03s
2025-03-25 09:20:38 - INFO - [database.py:45] - Executing SQL query: SELECT *
FROM customers
WHERE first_name = 'Alice';
2025-03-25 09:20:38 - INFO - [database.py:66] - Query returned 1 rows with 11 columns
2025-03-25 09:20:38 - INFO - [database.py:75] - Query processing completed in 0.01s
2025-03-25 09:20:38 - INFO - [sql_generator.py:278] - SQL generation completed in 3.54s
2025-03-25 09:20:38 - INFO - [sql_generator.py:117] - Query processing completed in 4.02s
2025-03-25 09:20:56 - INFO - [streamlit_app.py:135] - Processing query: 'Get me details of alice along with their order information'
2025-03-25 09:20:56 - INFO - [sql_generator.py:35] - Processing query: 'Get me details of alice along with their order information'
2025-03-25 09:20:56 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 09:20:56 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 09:20:56 - INFO - [database.py:24] - Attempting database connection
2025-03-25 09:20:56 - INFO - [database.py:28] - Database connection established in 0.00s
2025-03-25 09:20:58 - INFO - [azure_client.py:46] - SQL generation started for query: 'Get me details of alice along with their order information'
2025-03-25 09:21:02 - INFO - [azure_client.py:131] - Generated SQL: SELECT c.customer_id, c.first_name, c.last_name, o.order_id, o.order_date, o.status, o.total_amount

FROM customers c

JOIN orders o ON c.customer_id = o.customer_id

WHERE c.first_name = 'Alice' AND c.last_name = 'Smith'
2025-03-25 09:21:02,222 - QUERY: 'Get me details of alice along with their order information' → SQL: SELECT c.customer_id, c.first_name, c.last_name, o.order_id, o.order_date, o.status, o.total_amount

FROM customers c

JOIN orders o ON c.customer_id = o.customer_id

WHERE c.first_name = 'Alice' AND c.last_name = 'Smith'
2025-03-25 09:21:02 - INFO - [azure_client.py:139] - SQL generation completed in 3.54s
2025-03-25 09:21:02 - INFO - [database.py:45] - Executing SQL query: SELECT c.customer_id, c.first_name, c.last_name, o.order_id, o.order_date, o.status, o.total_amount

FROM customers c

JOIN orders o ON c.customer_id = o.customer_id

WHERE c.first_name = 'Alice' AND c.last_name = 'Smith'
2025-03-25 09:21:02 - INFO - [database.py:86] - Query executed successfully but returned no rows
2025-03-25 09:21:02 - INFO - [database.py:88] - Query processing completed in 0.01s
2025-03-25 09:21:02 - INFO - [sql_generator.py:278] - SQL generation completed in 5.43s
2025-03-25 09:21:02 - INFO - [sql_generator.py:117] - Query processing completed in 5.83s
2025-03-25 09:22:31 - INFO - [streamlit_app.py:135] - Processing query: 'Get me details of alice along with their order information'
2025-03-25 09:22:31 - INFO - [sql_generator.py:35] - Processing query: 'Get me details of alice along with their order information'
2025-03-25 09:22:31 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 09:22:31 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 09:22:31 - INFO - [database.py:24] - Attempting database connection
2025-03-25 09:22:31 - INFO - [database.py:28] - Database connection established in 0.00s
2025-03-25 09:22:33 - INFO - [azure_client.py:46] - SQL generation started for query: 'Get me details of alice along with their order information'
2025-03-25 09:22:37 - INFO - [azure_client.py:131] - Generated SQL: SELECT 
    c.customer_id,
    c.first_name,
    c.last_name,
    c.email,
    c.phone,
    c.address,
    c.city,
    c.state,
    c.country,
    c.postal_code,
    c.registration_date,
    o.order_id,
    o.order_date,
    o.status,
    o.total_amount
FROM 
    customers AS c
JOIN 
    orders AS o ON c.customer_id = o.customer_id
WHERE 
    c.first_name = 'Alice';
2025-03-25 09:22:37,740 - QUERY: 'Get me details of alice along with their order information' → SQL: SELECT 
    c.customer_id,
    c.first_name,
    c.last_name,
    c.email,
    c.phone,
    c.address,
    c.city,
    c.state,
    c.country,
    c.postal_code,
    c.registration_date,
    o.order_id,
    o.order_date,
    o.status,
    o.total_amount
FROM 
    customers AS c
JOIN 
    orders AS o ON c.customer_id = o.customer_id
WHERE 
    c.first_name = 'Alice';
2025-03-25 09:22:37 - INFO - [azure_client.py:139] - SQL generation completed in 3.85s
2025-03-25 09:22:37 - INFO - [database.py:45] - Executing SQL query: SELECT 
    c.customer_id,
    c.first_name,
    c.last_name,
    c.email,
    c.phone,
    c.address,
    c.city,
    c.state,
    c.country,
    c.postal_code,
    c.registration_date,
    o.order_id,
    o.order_date,
    o.status,
    o.total_amount
FROM 
    customers AS c
JOIN 
    orders AS o ON c.customer_id = o.customer_id
WHERE 
    c.first_name = 'Alice';
2025-03-25 09:22:37 - INFO - [database.py:66] - Query returned 2 rows with 15 columns
2025-03-25 09:22:37 - INFO - [database.py:75] - Query processing completed in 0.01s
2025-03-25 09:22:37 - INFO - [sql_generator.py:278] - SQL generation completed in 6.17s
2025-03-25 09:22:37 - INFO - [sql_generator.py:117] - Query processing completed in 6.69s
2025-03-25 09:23:09 - INFO - [streamlit_app.py:135] - Processing query: 'Get me details of alice along with their order information'
2025-03-25 09:23:09 - INFO - [sql_generator.py:35] - Processing query: 'Get me details of alice along with their order information'
2025-03-25 09:23:09 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 09:23:09 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 09:23:09 - INFO - [database.py:24] - Attempting database connection
2025-03-25 09:23:09 - INFO - [database.py:28] - Database connection established in 0.00s
2025-03-25 09:23:11 - INFO - [azure_client.py:46] - SQL generation started for query: 'Get me details of alice along with their order information'
2025-03-25 09:23:18 - INFO - [azure_client.py:131] - Generated SQL: SELECT 
    c.customer_id, 
    c.first_name, 
    c.last_name, 
    c.email, 
    o.order_id, 
    o.order_date, 
    o.status, 
    o.total_amount
FROM 
    customers AS c
JOIN 
    orders AS o ON c.customer_id = o.customer_id
WHERE 
    c.first_name = 'Alice' OR c.last_name = 'Alice'
2025-03-25 09:23:18,043 - QUERY: 'Get me details of alice along with their order information' → SQL: SELECT 
    c.customer_id, 
    c.first_name, 
    c.last_name, 
    c.email, 
    o.order_id, 
    o.order_date, 
    o.status, 
    o.total_amount
FROM 
    customers AS c
JOIN 
    orders AS o ON c.customer_id = o.customer_id
WHERE 
    c.first_name = 'Alice' OR c.last_name = 'Alice'
2025-03-25 09:23:18 - INFO - [azure_client.py:139] - SQL generation completed in 6.62s
2025-03-25 09:23:18 - INFO - [database.py:45] - Executing SQL query: SELECT 
    c.customer_id, 
    c.first_name, 
    c.last_name, 
    c.email, 
    o.order_id, 
    o.order_date, 
    o.status, 
    o.total_amount
FROM 
    customers AS c
JOIN 
    orders AS o ON c.customer_id = o.customer_id
WHERE 
    c.first_name = 'Alice' OR c.last_name = 'Alice'
2025-03-25 09:23:18 - INFO - [database.py:66] - Query returned 2 rows with 8 columns
2025-03-25 09:23:18 - INFO - [database.py:75] - Query processing completed in 0.01s
2025-03-25 09:23:18 - INFO - [sql_generator.py:278] - SQL generation completed in 8.44s
2025-03-25 09:23:18 - INFO - [sql_generator.py:117] - Query processing completed in 8.92s
2025-03-25 09:23:50 - INFO - [streamlit_app.py:135] - Processing query: 'Which customers made the most orders?'
2025-03-25 09:23:50 - INFO - [sql_generator.py:35] - Processing query: 'Which customers made the most orders?'
2025-03-25 09:23:51 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 09:23:51 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 09:23:51 - INFO - [database.py:24] - Attempting database connection
2025-03-25 09:23:51 - INFO - [database.py:28] - Database connection established in 0.00s
2025-03-25 09:23:53 - INFO - [azure_client.py:46] - SQL generation started for query: 'Which customers made the most orders?'
2025-03-25 09:23:55 - INFO - [azure_client.py:131] - Generated SQL: SELECT c.customer_id, c.first_name, c.last_name, COUNT(o.order_id) AS order_count

FROM customers AS c

JOIN orders AS o ON c.customer_id = o.customer_id

GROUP BY c.customer_id, c.first_name, c.last_name

ORDER BY order_count DESC

LIMIT 5;
2025-03-25 09:23:55,900 - QUERY: 'Which customers made the most orders?' → SQL: SELECT c.customer_id, c.first_name, c.last_name, COUNT(o.order_id) AS order_count

FROM customers AS c

JOIN orders AS o ON c.customer_id = o.customer_id

GROUP BY c.customer_id, c.first_name, c.last_name

ORDER BY order_count DESC

LIMIT 5;
2025-03-25 09:23:55 - INFO - [azure_client.py:139] - SQL generation completed in 2.86s
2025-03-25 09:23:55 - INFO - [database.py:45] - Executing SQL query: SELECT c.customer_id, c.first_name, c.last_name, COUNT(o.order_id) AS order_count

FROM customers AS c

JOIN orders AS o ON c.customer_id = o.customer_id

GROUP BY c.customer_id, c.first_name, c.last_name

ORDER BY order_count DESC

LIMIT 5;
2025-03-25 09:23:55 - INFO - [database.py:66] - Query returned 5 rows with 4 columns
2025-03-25 09:23:55 - INFO - [database.py:75] - Query processing completed in 0.01s
2025-03-25 09:23:55 - INFO - [sql_generator.py:278] - SQL generation completed in 4.77s
2025-03-25 09:23:55 - INFO - [sql_generator.py:117] - Query processing completed in 5.35s
2025-03-25 09:28:58 - INFO - [streamlit_app.py:89] - Schema requested for workspace: Default
2025-03-25 09:28:58 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 09:28:58 - INFO - [azure_client.py:21] - Using model: Phi-3-mini-128k-instruct
2025-03-25 09:28:58 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 09:28:58 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 09:28:58 - INFO - [azure_client.py:21] - Using model: Phi-3-mini-128k-instruct
2025-03-25 09:28:58 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 09:28:58 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 09:28:58 - INFO - [azure_client.py:21] - Using model: Phi-3-mini-128k-instruct
2025-03-25 09:28:58 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 09:28:58 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 09:28:58 - INFO - [azure_client.py:21] - Using model: Phi-3-mini-128k-instruct
2025-03-25 09:28:58 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 09:28:58 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-25 09:29:06 - INFO - [streamlit_app.py:89] - Schema requested for workspace: Default
2025-03-25 09:29:29 - INFO - [streamlit_app.py:89] - Schema requested for workspace: Default
2025-03-25 09:30:28 - INFO - [streamlit_app.py:89] - Schema requested for workspace: Default
2025-03-25 09:30:44 - INFO - [streamlit_app.py:89] - Schema requested for workspace: Default
2025-03-25 09:30:48 - INFO - [streamlit_app.py:135] - Processing query: 'How many customers do we have?'
2025-03-25 09:30:48 - INFO - [sql_generator.py:35] - Processing query: 'How many customers do we have?'
2025-03-25 09:30:50 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 09:30:50 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 09:30:50 - INFO - [database.py:24] - Attempting database connection
2025-03-25 09:30:50 - INFO - [database.py:28] - Database connection established in 0.02s
2025-03-25 09:30:54 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 09:30:56 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS number_of_customers FROM customers;
2025-03-25 09:30:56,635 - QUERY: 'How many customers do we have?' → SQL: SELECT COUNT(*) AS number_of_customers FROM customers;
2025-03-25 09:30:56 - INFO - [azure_client.py:139] - SQL generation completed in 2.12s
2025-03-25 09:30:56 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS number_of_customers FROM customers;
2025-03-25 09:30:56 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 09:30:56 - INFO - [database.py:75] - Query processing completed in 0.01s
2025-03-25 09:30:56 - INFO - [sql_generator.py:278] - SQL generation completed in 5.92s
2025-03-25 09:30:56 - INFO - [sql_generator.py:117] - Query processing completed in 8.18s
2025-03-25 09:31:17 - INFO - [streamlit_app.py:135] - Processing query: 'Get me details of all customers'
2025-03-25 09:31:17 - INFO - [sql_generator.py:35] - Processing query: 'Get me details of all customers'
2025-03-25 09:31:19 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 09:31:19 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 09:31:19 - INFO - [database.py:24] - Attempting database connection
2025-03-25 09:31:19 - INFO - [database.py:28] - Database connection established in 0.01s
2025-03-25 09:31:20 - INFO - [azure_client.py:46] - SQL generation started for query: 'Get me details of all customers'
2025-03-25 09:31:22 - INFO - [azure_client.py:131] - Generated SQL: SELECT customer_id, first_name, last_name, email, phone, address, city, state, country, postal_code, registration_date 
FROM customers;
2025-03-25 09:31:22,444 - QUERY: 'Get me details of all customers' → SQL: SELECT customer_id, first_name, last_name, email, phone, address, city, state, country, postal_code, registration_date 
FROM customers;
2025-03-25 09:31:22 - INFO - [azure_client.py:139] - SQL generation completed in 1.74s
2025-03-25 09:31:22 - INFO - [database.py:45] - Executing SQL query: SELECT customer_id, first_name, last_name, email, phone, address, city, state, country, postal_code, registration_date 
FROM customers;
2025-03-25 09:31:22 - INFO - [database.py:66] - Query returned 5 rows with 11 columns
2025-03-25 09:31:22 - INFO - [database.py:75] - Query processing completed in 0.01s
2025-03-25 09:31:22 - INFO - [sql_generator.py:278] - SQL generation completed in 3.28s
2025-03-25 09:31:22 - INFO - [sql_generator.py:117] - Query processing completed in 5.25s
2025-03-25 09:31:40 - INFO - [streamlit_app.py:135] - Processing query: 'Get me details of all customers'
2025-03-25 09:31:40 - INFO - [sql_generator.py:35] - Processing query: 'Get me details of all customers'
2025-03-25 09:31:41 - INFO - [sql_generator.py:40] - Detected intent: metadata_request
2025-03-25 09:31:41 - INFO - [sql_generator.py:83] - Processing metadata request
2025-03-25 09:31:41 - INFO - [sql_generator.py:117] - Query processing completed in 0.40s
2025-03-25 09:33:13 - INFO - [streamlit_app.py:135] - Processing query: 'Get me details of all customers'
2025-03-25 09:33:13 - INFO - [sql_generator.py:35] - Processing query: 'Get me details of all customers'
2025-03-25 09:33:14 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 09:33:14 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 09:33:14 - INFO - [database.py:24] - Attempting database connection
2025-03-25 09:33:14 - INFO - [database.py:28] - Database connection established in 0.00s
2025-03-25 09:33:16 - INFO - [azure_client.py:46] - SQL generation started for query: 'Get me details of all customers'
2025-03-25 09:33:18 - INFO - [azure_client.py:131] - Generated SQL: SELECT first_name, last_name, email, phone, address, city, state, country, postal_code, registration_date 
FROM customers
2025-03-25 09:33:18,406 - QUERY: 'Get me details of all customers' → SQL: SELECT first_name, last_name, email, phone, address, city, state, country, postal_code, registration_date 
FROM customers
2025-03-25 09:33:18 - INFO - [azure_client.py:139] - SQL generation completed in 1.82s
2025-03-25 09:33:18 - INFO - [database.py:45] - Executing SQL query: SELECT first_name, last_name, email, phone, address, city, state, country, postal_code, registration_date 
FROM customers
2025-03-25 09:33:18 - INFO - [database.py:66] - Query returned 5 rows with 10 columns
2025-03-25 09:33:18 - INFO - [database.py:75] - Query processing completed in 0.01s
2025-03-25 09:33:18 - INFO - [sql_generator.py:278] - SQL generation completed in 3.66s
2025-03-25 09:33:18 - INFO - [sql_generator.py:117] - Query processing completed in 4.56s
2025-03-25 09:33:27 - INFO - [streamlit_app.py:135] - Processing query: 'Get me details of all customers who is living in New York'
2025-03-25 09:33:27 - INFO - [sql_generator.py:35] - Processing query: 'Get me details of all customers who is living in New York'
2025-03-25 09:33:28 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 09:33:28 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 09:33:28 - INFO - [database.py:24] - Attempting database connection
2025-03-25 09:33:28 - INFO - [database.py:28] - Database connection established in 0.00s
2025-03-25 09:33:29 - INFO - [azure_client.py:46] - SQL generation started for query: 'Get me details of all customers who is living in New York'
2025-03-25 09:33:31 - INFO - [azure_client.py:131] - Generated SQL: SELECT c.customer_id, c.first_name, c.last_name, c.email
FROM customers c
WHERE c.city = 'New York'
2025-03-25 09:33:31,281 - QUERY: 'Get me details of all customers who is living in New York' → SQL: SELECT c.customer_id, c.first_name, c.last_name, c.email
FROM customers c
WHERE c.city = 'New York'
2025-03-25 09:33:31 - INFO - [azure_client.py:139] - SQL generation completed in 1.71s
2025-03-25 09:33:31 - INFO - [database.py:45] - Executing SQL query: SELECT c.customer_id, c.first_name, c.last_name, c.email
FROM customers c
WHERE c.city = 'New York'
2025-03-25 09:33:31 - INFO - [database.py:66] - Query returned 1 rows with 4 columns
2025-03-25 09:33:31 - INFO - [database.py:75] - Query processing completed in 0.01s
2025-03-25 09:33:31 - INFO - [sql_generator.py:278] - SQL generation completed in 3.00s
2025-03-25 09:33:31 - INFO - [sql_generator.py:117] - Query processing completed in 3.49s
2025-03-25 09:33:45 - INFO - [streamlit_app.py:135] - Processing query: 'Get me details of all customers who is living in New York'
2025-03-25 09:33:45 - INFO - [sql_generator.py:35] - Processing query: 'Get me details of all customers who is living in New York'
2025-03-25 09:33:45 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 09:33:45 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 09:33:45 - INFO - [database.py:24] - Attempting database connection
2025-03-25 09:33:45 - INFO - [database.py:28] - Database connection established in 0.00s
2025-03-25 09:33:46 - INFO - [azure_client.py:46] - SQL generation started for query: 'Get me details of all customers who is living in New York'
2025-03-25 09:33:50 - INFO - [azure_client.py:131] - Generated SQL: SELECT customer_id, first_name, last_name, address, city, state
FROM customers
WHERE city = 'New York';
2025-03-25 09:33:50,444 - QUERY: 'Get me details of all customers who is living in New York' → SQL: SELECT customer_id, first_name, last_name, address, city, state
FROM customers
WHERE city = 'New York';
2025-03-25 09:33:50 - INFO - [azure_client.py:139] - SQL generation completed in 3.74s
2025-03-25 09:33:50 - INFO - [database.py:45] - Executing SQL query: SELECT customer_id, first_name, last_name, address, city, state
FROM customers
WHERE city = 'New York';
2025-03-25 09:33:50 - INFO - [database.py:66] - Query returned 1 rows with 6 columns
2025-03-25 09:33:50 - INFO - [database.py:75] - Query processing completed in 0.00s
2025-03-25 09:33:50 - INFO - [sql_generator.py:278] - SQL generation completed in 5.02s
2025-03-25 09:33:50 - INFO - [sql_generator.py:117] - Query processing completed in 5.44s
2025-03-25 09:35:01 - INFO - [streamlit_app.py:135] - Processing query: 'Get me details of all customers who is living in New York'
2025-03-25 09:35:01 - INFO - [sql_generator.py:35] - Processing query: 'Get me details of all customers who is living in New York'
2025-03-25 09:35:02 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 09:35:02 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 09:35:02 - INFO - [database.py:24] - Attempting database connection
2025-03-25 09:35:02 - INFO - [database.py:28] - Database connection established in 0.00s
2025-03-25 09:35:03 - INFO - [azure_client.py:46] - SQL generation started for query: 'Get me details of all customers who is living in New York'
2025-03-25 09:35:05 - INFO - [azure_client.py:131] - Generated SQL: SELECT c.customer_id, c.first_name, c.last_name, c.email, c.phone, c.address, c.city, c.state, c.country, c.postal_code
FROM customers c
WHERE c.city = 'New York';
2025-03-25 09:35:05,886 - QUERY: 'Get me details of all customers who is living in New York' → SQL: SELECT c.customer_id, c.first_name, c.last_name, c.email, c.phone, c.address, c.city, c.state, c.country, c.postal_code
FROM customers c
WHERE c.city = 'New York';
2025-03-25 09:35:05 - INFO - [azure_client.py:139] - SQL generation completed in 2.18s
2025-03-25 09:35:05 - INFO - [database.py:45] - Executing SQL query: SELECT c.customer_id, c.first_name, c.last_name, c.email, c.phone, c.address, c.city, c.state, c.country, c.postal_code
FROM customers c
WHERE c.city = 'New York';
2025-03-25 09:35:05 - INFO - [database.py:66] - Query returned 1 rows with 10 columns
2025-03-25 09:35:05 - INFO - [database.py:75] - Query processing completed in 0.01s
2025-03-25 09:35:05 - INFO - [sql_generator.py:278] - SQL generation completed in 3.65s
2025-03-25 09:35:05 - INFO - [sql_generator.py:117] - Query processing completed in 4.54s
2025-03-25 09:35:19 - INFO - [streamlit_app.py:135] - Processing query: 'Get me details of all customers who is living in New York'
2025-03-25 09:35:19 - INFO - [sql_generator.py:35] - Processing query: 'Get me details of all customers who is living in New York'
2025-03-25 09:35:19 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 09:35:19 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 09:35:19 - INFO - [database.py:24] - Attempting database connection
2025-03-25 09:35:19 - INFO - [database.py:28] - Database connection established in 0.00s
2025-03-25 09:35:21 - INFO - [azure_client.py:46] - SQL generation started for query: 'Get me details of all customers who is living in New York'
2025-03-25 09:35:24 - INFO - [azure_client.py:131] - Generated SQL: SELECT c.*
FROM customers c
JOIN orders o ON c.customer_id = o.customer_id
WHERE c.city = 'New York';
2025-03-25 09:35:24,076 - QUERY: 'Get me details of all customers who is living in New York' → SQL: SELECT c.*
FROM customers c
JOIN orders o ON c.customer_id = o.customer_id
WHERE c.city = 'New York';
2025-03-25 09:35:24 - INFO - [azure_client.py:139] - SQL generation completed in 2.38s
2025-03-25 09:35:24 - INFO - [database.py:45] - Executing SQL query: SELECT c.*
FROM customers c
JOIN orders o ON c.customer_id = o.customer_id
WHERE c.city = 'New York';
2025-03-25 09:35:24 - INFO - [database.py:66] - Query returned 2 rows with 11 columns
2025-03-25 09:35:24 - INFO - [database.py:75] - Query processing completed in 0.01s
2025-03-25 09:35:24 - INFO - [sql_generator.py:278] - SQL generation completed in 4.11s
2025-03-25 09:35:24 - INFO - [sql_generator.py:117] - Query processing completed in 4.60s
2025-03-25 09:37:29 - INFO - [streamlit_app.py:135] - Processing query: 'Get me details of all customers who is living in New York'
2025-03-25 09:37:29 - INFO - [sql_generator.py:35] - Processing query: 'Get me details of all customers who is living in New York'
2025-03-25 09:37:30 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 09:37:30 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 09:37:30 - INFO - [database.py:24] - Attempting database connection
2025-03-25 09:37:30 - INFO - [database.py:28] - Database connection established in 0.00s
2025-03-25 09:37:31 - INFO - [azure_client.py:46] - SQL generation started for query: 'Get me details of all customers who is living in New York'
2025-03-25 09:37:34 - INFO - [azure_client.py:131] - Generated SQL: SELECT c.customer_id, c.first_name, c.last_name, c.email, c.city, c.state
FROM customers c
WHERE c.city = 'New York' AND c.state = 'New York'
2025-03-25 09:37:34,277 - QUERY: 'Get me details of all customers who is living in New York' → SQL: SELECT c.customer_id, c.first_name, c.last_name, c.email, c.city, c.state
FROM customers c
WHERE c.city = 'New York' AND c.state = 'New York'
2025-03-25 09:37:34 - INFO - [azure_client.py:139] - SQL generation completed in 2.29s
2025-03-25 09:37:34 - INFO - [database.py:45] - Executing SQL query: SELECT c.customer_id, c.first_name, c.last_name, c.email, c.city, c.state
FROM customers c
WHERE c.city = 'New York' AND c.state = 'New York'
2025-03-25 09:37:34 - INFO - [database.py:86] - Query executed successfully but returned no rows
2025-03-25 09:37:34 - INFO - [database.py:88] - Query processing completed in 0.01s
2025-03-25 09:37:34 - INFO - [sql_generator.py:278] - SQL generation completed in 4.07s
2025-03-25 09:37:34 - INFO - [sql_generator.py:117] - Query processing completed in 4.59s
2025-03-25 09:37:50 - INFO - [streamlit_app.py:135] - Processing query: 'Get me details of all customers who is living in New York'
2025-03-25 09:37:50 - INFO - [sql_generator.py:35] - Processing query: 'Get me details of all customers who is living in New York'
2025-03-25 09:37:50 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 09:37:50 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 09:37:50 - INFO - [database.py:24] - Attempting database connection
2025-03-25 09:37:50 - INFO - [database.py:28] - Database connection established in 0.01s
2025-03-25 09:37:52 - INFO - [azure_client.py:46] - SQL generation started for query: 'Get me details of all customers who is living in New York'
2025-03-25 09:39:25 - INFO - [streamlit_app.py:135] - Processing query: 'What was our revenue in January?'
2025-03-25 09:39:25 - INFO - [sql_generator.py:35] - Processing query: 'What was our revenue in January?'
2025-03-25 09:47:38 - INFO - [streamlit_app.py:135] - Processing query: 'How many customers do we have?'
2025-03-25 09:47:38 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 09:47:38 - INFO - [azure_client.py:21] - Using model: Phi-3-small-8k-instruct
2025-03-25 09:47:38 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 09:47:38 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 09:47:38 - INFO - [azure_client.py:21] - Using model: Phi-3-small-8k-instruct
2025-03-25 09:47:38 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 09:47:38 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 09:47:38 - INFO - [azure_client.py:21] - Using model: Phi-3-small-8k-instruct
2025-03-25 09:47:38 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 09:47:38 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 09:47:38 - INFO - [azure_client.py:21] - Using model: Phi-3-small-8k-instruct
2025-03-25 09:47:38 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 09:47:38 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-25 09:47:38 - INFO - [sql_generator.py:35] - Processing query: 'How many customers do we have?'
2025-03-25 09:47:46 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 09:47:46 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 09:47:46 - INFO - [database.py:24] - Attempting database connection
2025-03-25 09:47:46 - INFO - [database.py:28] - Database connection established in 0.01s
2025-03-25 09:47:56 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have?'
2025-03-25 09:47:58 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS total_customers FROM customers
2025-03-25 09:47:58,737 - QUERY: 'How many customers do we have?' → SQL: SELECT COUNT(*) AS total_customers FROM customers
2025-03-25 09:47:58 - INFO - [azure_client.py:139] - SQL generation completed in 2.39s
2025-03-25 09:47:58 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS total_customers FROM customers
2025-03-25 09:47:58 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 09:47:58 - INFO - [database.py:75] - Query processing completed in 0.01s
2025-03-25 09:47:58 - INFO - [sql_generator.py:278] - SQL generation completed in 11.89s
2025-03-25 09:47:58 - INFO - [sql_generator.py:117] - Query processing completed in 20.19s
2025-03-25 09:48:10 - INFO - [streamlit_app.py:135] - Processing query: 'How many customers do we have whose name starts with J?'
2025-03-25 09:48:10 - INFO - [sql_generator.py:35] - Processing query: 'How many customers do we have whose name starts with J?'
2025-03-25 09:48:11 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 09:48:11 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 09:48:11 - INFO - [database.py:24] - Attempting database connection
2025-03-25 09:48:11 - INFO - [database.py:28] - Database connection established in 0.00s
2025-03-25 09:48:12 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have whose name starts with J?'
2025-03-25 09:48:14 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS customers_starting_with_j
FROM customers
WHERE first_name LIKE 'J%';
2025-03-25 09:48:14,987 - QUERY: 'How many customers do we have whose name starts with J?' → SQL: SELECT COUNT(*) AS customers_starting_with_j
FROM customers
WHERE first_name LIKE 'J%';
2025-03-25 09:48:14 - INFO - [azure_client.py:139] - SQL generation completed in 2.84s
2025-03-25 09:48:14 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS customers_starting_with_j
FROM customers
WHERE first_name LIKE 'J%';
2025-03-25 09:48:14 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 09:48:14 - INFO - [database.py:75] - Query processing completed in 0.01s
2025-03-25 09:48:15 - INFO - [sql_generator.py:278] - SQL generation completed in 3.84s
2025-03-25 09:48:15 - INFO - [sql_generator.py:117] - Query processing completed in 4.26s
2025-03-25 09:49:40 - INFO - [streamlit_app.py:135] - Processing query: 'How many customers do we have whose name starts with J?'
2025-03-25 09:49:40 - INFO - [sql_generator.py:35] - Processing query: 'How many customers do we have whose name starts with J?'
2025-03-25 09:49:41 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 09:49:41 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 09:49:41 - INFO - [database.py:24] - Attempting database connection
2025-03-25 09:49:41 - INFO - [database.py:28] - Database connection established in 0.00s
2025-03-25 09:49:42 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have whose name starts with J?'
2025-03-25 09:49:44 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS customers_with_J
FROM customers
WHERE first_name LIKE 'J%';
2025-03-25 09:49:44,121 - QUERY: 'How many customers do we have whose name starts with J?' → SQL: SELECT COUNT(*) AS customers_with_J
FROM customers
WHERE first_name LIKE 'J%';
2025-03-25 09:49:44 - INFO - [azure_client.py:139] - SQL generation completed in 1.84s
2025-03-25 09:49:44 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS customers_with_J
FROM customers
WHERE first_name LIKE 'J%';
2025-03-25 09:49:44 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 09:49:44 - INFO - [database.py:75] - Query processing completed in 0.01s
2025-03-25 09:49:44 - INFO - [sql_generator.py:278] - SQL generation completed in 2.85s
2025-03-25 09:49:44 - INFO - [sql_generator.py:117] - Query processing completed in 3.58s
2025-03-25 09:51:24 - INFO - [streamlit_app.py:135] - Processing query: 'How many customers do we have whose name starts with J?'
2025-03-25 09:51:24 - INFO - [sql_generator.py:35] - Processing query: 'How many customers do we have whose name starts with J?'
2025-03-25 09:51:25 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 09:51:25 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 09:51:25 - INFO - [database.py:24] - Attempting database connection
2025-03-25 09:51:25 - INFO - [database.py:28] - Database connection established in 0.00s
2025-03-25 09:51:26 - INFO - [azure_client.py:46] - SQL generation started for query: 'How many customers do we have whose name starts with J?'
2025-03-25 09:51:28 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS customers_with_J
FROM customers
WHERE first_name LIKE 'J%';
2025-03-25 09:51:28,462 - QUERY: 'How many customers do we have whose name starts with J?' → SQL: SELECT COUNT(*) AS customers_with_J
FROM customers
WHERE first_name LIKE 'J%';
2025-03-25 09:51:28 - INFO - [azure_client.py:139] - SQL generation completed in 2.01s
2025-03-25 09:51:28 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS customers_with_J
FROM customers
WHERE first_name LIKE 'J%';
2025-03-25 09:51:28 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 09:51:28 - INFO - [database.py:75] - Query processing completed in 0.00s
2025-03-25 09:51:28 - INFO - [sql_generator.py:278] - SQL generation completed in 3.14s
2025-03-25 09:51:28 - INFO - [sql_generator.py:117] - Query processing completed in 3.69s
2025-03-25 09:51:38 - INFO - [streamlit_app.py:135] - Processing query: 'Get me details of all customers'
2025-03-25 09:51:38 - INFO - [sql_generator.py:35] - Processing query: 'Get me details of all customers'
2025-03-25 09:51:39 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 09:51:39 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 09:51:39 - INFO - [database.py:24] - Attempting database connection
2025-03-25 09:51:39 - INFO - [database.py:28] - Database connection established in 0.00s
2025-03-25 09:51:41 - INFO - [azure_client.py:46] - SQL generation started for query: 'Get me details of all customers'
2025-03-25 09:51:42 - INFO - [azure_client.py:131] - Generated SQL: SELECT * FROM customers;
2025-03-25 09:51:42,390 - QUERY: 'Get me details of all customers' → SQL: SELECT * FROM customers;
2025-03-25 09:51:42 - INFO - [azure_client.py:139] - SQL generation completed in 1.27s
2025-03-25 09:51:42 - INFO - [database.py:45] - Executing SQL query: SELECT * FROM customers;
2025-03-25 09:51:42 - INFO - [database.py:66] - Query returned 5 rows with 11 columns
2025-03-25 09:51:42 - INFO - [database.py:75] - Query processing completed in 0.01s
2025-03-25 09:51:42 - INFO - [sql_generator.py:278] - SQL generation completed in 2.99s
2025-03-25 09:51:42 - INFO - [sql_generator.py:117] - Query processing completed in 3.42s
2025-03-25 09:51:56 - INFO - [streamlit_app.py:135] - Processing query: 'Get me details of all customers'
2025-03-25 09:51:56 - INFO - [sql_generator.py:35] - Processing query: 'Get me details of all customers'
2025-03-25 09:51:56 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 09:51:56 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 09:51:56 - INFO - [database.py:24] - Attempting database connection
2025-03-25 09:51:56 - INFO - [database.py:28] - Database connection established in 0.00s
2025-03-25 09:51:58 - INFO - [azure_client.py:46] - SQL generation started for query: 'Get me details of all customers'
2025-03-25 09:51:59 - INFO - [azure_client.py:131] - Generated SQL: SELECT * FROM customers;
2025-03-25 09:51:59,576 - QUERY: 'Get me details of all customers' → SQL: SELECT * FROM customers;
2025-03-25 09:51:59 - INFO - [azure_client.py:139] - SQL generation completed in 1.16s
2025-03-25 09:51:59 - INFO - [database.py:45] - Executing SQL query: SELECT * FROM customers;
2025-03-25 09:51:59 - INFO - [database.py:66] - Query returned 5 rows with 11 columns
2025-03-25 09:51:59 - INFO - [database.py:75] - Query processing completed in 0.01s
2025-03-25 09:51:59 - INFO - [sql_generator.py:278] - SQL generation completed in 2.75s
2025-03-25 09:51:59 - INFO - [sql_generator.py:117] - Query processing completed in 3.16s
2025-03-25 09:54:02 - INFO - [streamlit_app.py:135] - Processing query: 'Get me details of all customers'
2025-03-25 09:54:02 - INFO - [sql_generator.py:35] - Processing query: 'Get me details of all customers'
2025-03-25 09:54:02 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 09:54:02 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 09:54:02 - INFO - [database.py:24] - Attempting database connection
2025-03-25 09:54:02 - INFO - [database.py:28] - Database connection established in 0.00s
2025-03-25 09:54:04 - INFO - [azure_client.py:46] - SQL generation started for query: 'Get me details of all customers'
2025-03-25 09:54:05 - INFO - [azure_client.py:131] - Generated SQL: SELECT *
FROM customers;
2025-03-25 09:54:05,413 - QUERY: 'Get me details of all customers' → SQL: SELECT *
FROM customers;
2025-03-25 09:54:05 - INFO - [azure_client.py:139] - SQL generation completed in 1.16s
2025-03-25 09:54:05 - INFO - [database.py:45] - Executing SQL query: SELECT *
FROM customers;
2025-03-25 09:54:05 - INFO - [database.py:66] - Query returned 5 rows with 11 columns
2025-03-25 09:54:05 - INFO - [database.py:75] - Query processing completed in 0.02s
2025-03-25 09:54:05 - INFO - [sql_generator.py:278] - SQL generation completed in 2.66s
2025-03-25 09:54:05 - INFO - [sql_generator.py:117] - Query processing completed in 3.17s
2025-03-25 09:54:13 - INFO - [streamlit_app.py:135] - Processing query: 'Get me details of all customers'
2025-03-25 09:54:13 - INFO - [sql_generator.py:35] - Processing query: 'Get me details of all customers'
2025-03-25 09:54:13 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 09:54:13 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 09:54:13 - INFO - [database.py:24] - Attempting database connection
2025-03-25 09:54:13 - INFO - [database.py:28] - Database connection established in 0.00s
2025-03-25 09:54:15 - INFO - [azure_client.py:46] - SQL generation started for query: 'Get me details of all customers'
2025-03-25 09:54:16 - INFO - [azure_client.py:131] - Generated SQL: SELECT * FROM customers;
2025-03-25 09:54:16,127 - QUERY: 'Get me details of all customers' → SQL: SELECT * FROM customers;
2025-03-25 09:54:16 - INFO - [azure_client.py:139] - SQL generation completed in 1.07s
2025-03-25 09:54:16 - INFO - [database.py:45] - Executing SQL query: SELECT * FROM customers;
2025-03-25 09:54:16 - INFO - [database.py:66] - Query returned 5 rows with 11 columns
2025-03-25 09:54:16 - INFO - [database.py:75] - Query processing completed in 0.01s
2025-03-25 09:54:16 - INFO - [sql_generator.py:278] - SQL generation completed in 2.53s
2025-03-25 09:54:16 - INFO - [sql_generator.py:117] - Query processing completed in 2.94s
2025-03-25 09:58:00 - INFO - [streamlit_app.py:135] - Processing query: 'Get me details of the customers'
2025-03-25 09:58:00 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 09:58:00 - INFO - [azure_client.py:21] - Using model: Phi-3-small-8k-instruct
2025-03-25 09:58:01 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 09:58:01 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 09:58:01 - INFO - [azure_client.py:21] - Using model: Phi-3-small-8k-instruct
2025-03-25 09:58:01 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 09:58:01 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 09:58:01 - INFO - [azure_client.py:21] - Using model: Phi-3-small-8k-instruct
2025-03-25 09:58:01 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 09:58:01 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 09:58:01 - INFO - [azure_client.py:21] - Using model: Phi-3-small-8k-instruct
2025-03-25 09:58:01 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 09:58:01 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-25 09:58:01 - INFO - [sql_generator.py:35] - Processing query: 'Get me details of the customers'
2025-03-25 09:58:02 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 09:58:02 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 09:58:02 - INFO - [database.py:24] - Attempting database connection
2025-03-25 09:58:02 - INFO - [database.py:28] - Database connection established in 0.02s
2025-03-25 09:58:05 - INFO - [azure_client.py:46] - SQL generation started for query: 'Get me details of the customers'
2025-03-25 09:58:08 - INFO - [azure_client.py:131] - Generated SQL: SELECT * FROM customers;
2025-03-25 09:58:08,357 - QUERY: 'Get me details of the customers' → SQL: SELECT * FROM customers;
2025-03-25 09:58:08 - INFO - [azure_client.py:139] - SQL generation completed in 2.48s
2025-03-25 09:58:08 - INFO - [database.py:45] - Executing SQL query: SELECT * FROM customers;
2025-03-25 09:58:08 - INFO - [database.py:66] - Query returned 5 rows with 11 columns
2025-03-25 09:58:08 - INFO - [database.py:75] - Query processing completed in 0.02s
2025-03-25 09:58:08 - INFO - [sql_generator.py:278] - SQL generation completed in 5.74s
2025-03-25 09:58:08 - INFO - [sql_generator.py:117] - Query processing completed in 7.34s
2025-03-25 09:58:13 - INFO - [streamlit_app.py:135] - Processing query: 'Get me details of the customers whose name starts with J'
2025-03-25 09:58:13 - INFO - [sql_generator.py:35] - Processing query: 'Get me details of the customers whose name starts with J'
2025-03-25 09:58:13 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 09:58:13 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 09:58:13 - INFO - [database.py:24] - Attempting database connection
2025-03-25 09:58:13 - INFO - [database.py:28] - Database connection established in 0.01s
2025-03-25 09:58:14 - INFO - [azure_client.py:46] - SQL generation started for query: 'Get me details of the customers whose name starts with J'
2025-03-25 09:58:17 - INFO - [azure_client.py:131] - Generated SQL: SELECT *
FROM customers
WHERE first_name LIKE 'J%' OR last_name LIKE 'J%'
2025-03-25 09:58:17,523 - QUERY: 'Get me details of the customers whose name starts with J' → SQL: SELECT *
FROM customers
WHERE first_name LIKE 'J%' OR last_name LIKE 'J%'
2025-03-25 09:58:17 - INFO - [azure_client.py:139] - SQL generation completed in 2.83s
2025-03-25 09:58:17 - INFO - [database.py:45] - Executing SQL query: SELECT *
FROM customers
WHERE first_name LIKE 'J%' OR last_name LIKE 'J%'
2025-03-25 09:58:17 - INFO - [database.py:66] - Query returned 3 rows with 11 columns
2025-03-25 09:58:17 - INFO - [database.py:75] - Query processing completed in 0.04s
2025-03-25 09:58:17 - INFO - [sql_generator.py:278] - SQL generation completed in 4.01s
2025-03-25 09:58:17 - INFO - [sql_generator.py:117] - Query processing completed in 4.45s
2025-03-25 09:58:30 - INFO - [streamlit_app.py:135] - Processing query: 'Get me details of the customers whose name starts with J and leave in New York city'
2025-03-25 09:58:30 - INFO - [sql_generator.py:35] - Processing query: 'Get me details of the customers whose name starts with J and leave in New York city'
2025-03-25 09:58:30 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 09:58:30 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 09:58:30 - INFO - [database.py:24] - Attempting database connection
2025-03-25 09:58:30 - INFO - [database.py:28] - Database connection established in 0.00s
2025-03-25 09:58:32 - INFO - [azure_client.py:46] - SQL generation started for query: 'Get me details of the customers whose name starts with J and leave in New York city'
2025-03-25 09:58:34 - INFO - [azure_client.py:131] - Generated SQL: SELECT *
FROM customers
WHERE first_name LIKE 'J%' OR last_name LIKE 'J%'
AND city = 'New York';
2025-03-25 09:58:34,943 - QUERY: 'Get me details of the customers whose name starts with J and leave in New York city' → SQL: SELECT *
FROM customers
WHERE first_name LIKE 'J%' OR last_name LIKE 'J%'
AND city = 'New York';
2025-03-25 09:58:34 - INFO - [azure_client.py:139] - SQL generation completed in 2.48s
2025-03-25 09:58:34 - INFO - [database.py:45] - Executing SQL query: SELECT *
FROM customers
WHERE first_name LIKE 'J%' OR last_name LIKE 'J%'
AND city = 'New York';
2025-03-25 09:58:34 - INFO - [database.py:66] - Query returned 2 rows with 11 columns
2025-03-25 09:58:34 - INFO - [database.py:75] - Query processing completed in 0.04s
2025-03-25 09:58:35 - INFO - [sql_generator.py:278] - SQL generation completed in 4.29s
2025-03-25 09:58:35 - INFO - [sql_generator.py:117] - Query processing completed in 4.74s
2025-03-25 09:58:44 - INFO - [streamlit_app.py:135] - Processing query: 'Get me details of the customers whose name starts with J and live in New York city'
2025-03-25 09:58:44 - INFO - [sql_generator.py:35] - Processing query: 'Get me details of the customers whose name starts with J and live in New York city'
2025-03-25 09:58:44 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 09:58:44 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 09:58:44 - INFO - [database.py:24] - Attempting database connection
2025-03-25 09:58:44 - INFO - [database.py:28] - Database connection established in 0.00s
2025-03-25 09:58:46 - INFO - [azure_client.py:46] - SQL generation started for query: 'Get me details of the customers whose name starts with J and live in New York city'
2025-03-25 09:59:06 - INFO - [azure_client.py:131] - Generated SQL: SELECT *
FROM customers
WHERE first_name LIKE 'J%' AND city = 'New York City';
2025-03-25 09:59:06,290 - QUERY: 'Get me details of the customers whose name starts with J and live in New York city' → SQL: SELECT *
FROM customers
WHERE first_name LIKE 'J%' AND city = 'New York City';
2025-03-25 09:59:06 - INFO - [azure_client.py:139] - SQL generation completed in 19.70s
2025-03-25 09:59:06 - INFO - [database.py:45] - Executing SQL query: SELECT *
FROM customers
WHERE first_name LIKE 'J%' AND city = 'New York City';
2025-03-25 09:59:06 - INFO - [database.py:86] - Query executed successfully but returned no rows
2025-03-25 09:59:06 - INFO - [database.py:88] - Query processing completed in 0.01s
2025-03-25 09:59:06 - INFO - [sql_generator.py:278] - SQL generation completed in 21.43s
2025-03-25 09:59:06 - INFO - [sql_generator.py:117] - Query processing completed in 21.85s
2025-03-25 09:59:19 - INFO - [streamlit_app.py:135] - Processing query: 'Get me details of the customers whose name starts with J'
2025-03-25 09:59:19 - INFO - [sql_generator.py:35] - Processing query: 'Get me details of the customers whose name starts with J'
2025-03-25 09:59:20 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 09:59:20 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 09:59:20 - INFO - [database.py:24] - Attempting database connection
2025-03-25 09:59:20 - INFO - [database.py:28] - Database connection established in 0.01s
2025-03-25 09:59:21 - INFO - [azure_client.py:46] - SQL generation started for query: 'Get me details of the customers whose name starts with J'
2025-03-25 09:59:23 - INFO - [azure_client.py:131] - Generated SQL: SELECT *
FROM customers
WHERE first_name LIKE 'J%'
2025-03-25 09:59:23,249 - QUERY: 'Get me details of the customers whose name starts with J' → SQL: SELECT *
FROM customers
WHERE first_name LIKE 'J%'
2025-03-25 09:59:23 - INFO - [azure_client.py:139] - SQL generation completed in 1.47s
2025-03-25 09:59:23 - INFO - [database.py:45] - Executing SQL query: SELECT *
FROM customers
WHERE first_name LIKE 'J%'
2025-03-25 09:59:23 - INFO - [database.py:66] - Query returned 2 rows with 11 columns
2025-03-25 09:59:23 - INFO - [database.py:75] - Query processing completed in 0.04s
2025-03-25 09:59:23 - INFO - [sql_generator.py:278] - SQL generation completed in 3.01s
2025-03-25 09:59:23 - INFO - [sql_generator.py:117] - Query processing completed in 3.47s
2025-03-25 10:02:41 - INFO - [streamlit_app.py:135] - Processing query: 'Get me details of the customers who lives in new york city'
2025-03-25 10:02:41 - INFO - [sql_generator.py:35] - Processing query: 'Get me details of the customers who lives in new york city'
2025-03-25 10:02:41 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 10:02:41 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 10:02:41 - INFO - [database.py:24] - Attempting database connection
2025-03-25 10:02:41 - INFO - [database.py:28] - Database connection established in 0.00s
2025-03-25 10:02:42 - INFO - [azure_client.py:46] - SQL generation started for query: 'Get me details of the customers who lives in new york city'
2025-03-25 10:02:45 - INFO - [azure_client.py:131] - Generated SQL: SELECT
    c.customer_id,
    c.first_name,
    c.last_name,
    c.city
FROM
    customers c
WHERE
    c.city = 'New York City';
2025-03-25 10:02:45,190 - QUERY: 'Get me details of the customers who lives in new york city' → SQL: SELECT
    c.customer_id,
    c.first_name,
    c.last_name,
    c.city
FROM
    customers c
WHERE
    c.city = 'New York City';
2025-03-25 10:02:45 - INFO - [azure_client.py:139] - SQL generation completed in 2.54s
2025-03-25 10:02:45 - INFO - [database.py:45] - Executing SQL query: SELECT
    c.customer_id,
    c.first_name,
    c.last_name,
    c.city
FROM
    customers c
WHERE
    c.city = 'New York City';
2025-03-25 10:02:45 - INFO - [database.py:86] - Query executed successfully but returned no rows
2025-03-25 10:02:45 - INFO - [database.py:88] - Query processing completed in 0.01s
2025-03-25 10:02:45 - INFO - [sql_generator.py:278] - SQL generation completed in 3.70s
2025-03-25 10:02:45 - INFO - [sql_generator.py:117] - Query processing completed in 4.22s
2025-03-25 10:03:03 - INFO - [streamlit_app.py:135] - Processing query: 'Get me details of the customers who lives in new york city'
2025-03-25 10:03:03 - INFO - [sql_generator.py:35] - Processing query: 'Get me details of the customers who lives in new york city'
2025-03-25 10:03:03 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 10:03:03 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 10:03:03 - INFO - [database.py:24] - Attempting database connection
2025-03-25 10:03:03 - INFO - [database.py:28] - Database connection established in 0.00s
2025-03-25 10:03:04 - INFO - [azure_client.py:46] - SQL generation started for query: 'Get me details of the customers who lives in new york city'
2025-03-25 10:03:06 - INFO - [azure_client.py:131] - Generated SQL: SELECT *
FROM customers
WHERE city = 'New York City';
2025-03-25 10:03:06,544 - QUERY: 'Get me details of the customers who lives in new york city' → SQL: SELECT *
FROM customers
WHERE city = 'New York City';
2025-03-25 10:03:06 - INFO - [azure_client.py:139] - SQL generation completed in 1.72s
2025-03-25 10:03:06 - INFO - [database.py:45] - Executing SQL query: SELECT *
FROM customers
WHERE city = 'New York City';
2025-03-25 10:03:06 - INFO - [database.py:86] - Query executed successfully but returned no rows
2025-03-25 10:03:06 - INFO - [database.py:88] - Query processing completed in 0.01s
2025-03-25 10:03:06 - INFO - [sql_generator.py:278] - SQL generation completed in 2.96s
2025-03-25 10:03:06 - INFO - [sql_generator.py:117] - Query processing completed in 3.39s
2025-03-25 10:03:33 - INFO - [streamlit_app.py:135] - Processing query: 'Get me details of the customers who lives in city named new york'
2025-03-25 10:03:33 - INFO - [sql_generator.py:35] - Processing query: 'Get me details of the customers who lives in city named new york'
2025-03-25 10:03:34 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 10:03:34 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 10:03:34 - INFO - [database.py:24] - Attempting database connection
2025-03-25 10:03:34 - INFO - [database.py:28] - Database connection established in 0.01s
2025-03-25 10:03:35 - INFO - [azure_client.py:46] - SQL generation started for query: 'Get me details of the customers who lives in city named new york'
2025-03-25 10:03:37 - INFO - [azure_client.py:131] - Generated SQL: SELECT c.customer_id, c.first_name, c.last_name, c.city
FROM customers c
WHERE c.city = 'New York';
2025-03-25 10:03:37,177 - QUERY: 'Get me details of the customers who lives in city named new york' → SQL: SELECT c.customer_id, c.first_name, c.last_name, c.city
FROM customers c
WHERE c.city = 'New York';
2025-03-25 10:03:37 - INFO - [azure_client.py:139] - SQL generation completed in 1.94s
2025-03-25 10:03:37 - INFO - [database.py:45] - Executing SQL query: SELECT c.customer_id, c.first_name, c.last_name, c.city
FROM customers c
WHERE c.city = 'New York';
2025-03-25 10:03:37 - INFO - [database.py:66] - Query returned 1 rows with 4 columns
2025-03-25 10:03:37 - INFO - [database.py:75] - Query processing completed in 0.01s
2025-03-25 10:03:37 - INFO - [sql_generator.py:278] - SQL generation completed in 3.17s
2025-03-25 10:03:37 - INFO - [sql_generator.py:117] - Query processing completed in 3.62s
2025-03-25 14:02:09 - INFO - [streamlit_app.py:135] - Processing query: 'Get me details of the customers who lives in city named new york'
2025-03-25 14:02:09 - INFO - [sql_generator.py:35] - Processing query: 'Get me details of the customers who lives in city named new york'
2025-03-25 14:02:09 - INFO - [sql_generator.py:40] - Detected intent: data_retrieval
2025-03-25 14:02:09 - INFO - [sql_generator.py:132] - Starting SQL generation process
2025-03-25 14:02:09 - INFO - [database.py:24] - Attempting database connection
2025-03-25 14:02:09 - INFO - [database.py:28] - Database connection established in 0.00s
2025-03-25 14:02:09 - INFO - [azure_client.py:46] - SQL generation started for query: 'Get me details of the customers who lives in city named new york'
2025-03-25 14:02:09 - ERROR - [azure_client.py:145] - SQL generation error after 0.01s: ('Connection aborted.', RemoteDisconnected('Remote end closed connection without response'))
Traceback (most recent call last):
  File "/home/vijay/text2sql/src/utils/azure_client.py", line 108, in generate_sql
    response = self.client.complete(
               ^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/ai/inference/_patch.py", line 728, in complete
    pipeline_response: PipelineResponse = self._client._pipeline.run(  # pylint: disable=protected-access
                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/_base.py", line 240, in run
    return first_node.send(pipeline_request)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/_base.py", line 96, in send
    response = self.next.send(request)
               ^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/_base.py", line 96, in send
    response = self.next.send(request)
               ^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/_base.py", line 96, in send
    response = self.next.send(request)
               ^^^^^^^^^^^^^^^^^^^^^^^
  [Previous line repeated 2 more times]
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/policies/_redirect.py", line 204, in send
    response = self.next.send(request)
               ^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/policies/_retry.py", line 573, in send
    raise err
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/policies/_retry.py", line 551, in send
    response = self.next.send(request)
               ^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/_base.py", line 96, in send
    response = self.next.send(request)
               ^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/_base.py", line 96, in send
    response = self.next.send(request)
               ^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/_base.py", line 96, in send
    response = self.next.send(request)
               ^^^^^^^^^^^^^^^^^^^^^^^
  [Previous line repeated 3 more times]
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/_base.py", line 128, in send
    self._sender.send(request.http_request, **request.context.options),
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/transport/_requests_basic.py", line 409, in send
    raise error
azure.core.exceptions.ServiceResponseError: ('Connection aborted.', RemoteDisconnected('Remote end closed connection without response'))
2025-03-25 14:02:09 - INFO - [sql_generator.py:278] - SQL generation completed in 0.08s
2025-03-25 14:02:09 - INFO - [sql_generator.py:117] - Query processing completed in 0.13s
2025-03-25 23:00:54 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 23:00:54 - INFO - [azure_client.py:21] - Using model: Phi-3-small-8k-instruct
2025-03-25 23:00:54 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 23:00:54 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 23:00:54 - INFO - [azure_client.py:21] - Using model: Phi-3-small-8k-instruct
2025-03-25 23:00:54 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 23:00:54 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 23:00:54 - INFO - [azure_client.py:21] - Using model: Phi-3-small-8k-instruct
2025-03-25 23:00:54 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 23:00:54 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 23:00:54 - INFO - [azure_client.py:21] - Using model: Phi-3-small-8k-instruct
2025-03-25 23:00:54 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 23:00:54 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-25 23:00:55 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 23:00:55 - INFO - [azure_client.py:21] - Using model: Phi-3-small-8k-instruct
2025-03-25 23:00:55 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 23:00:55 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 23:00:55 - INFO - [azure_client.py:21] - Using model: Phi-3-small-8k-instruct
2025-03-25 23:00:55 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 23:00:55 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 23:00:55 - INFO - [azure_client.py:21] - Using model: Phi-3-small-8k-instruct
2025-03-25 23:00:55 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 23:00:55 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 23:00:55 - INFO - [azure_client.py:21] - Using model: Phi-3-small-8k-instruct
2025-03-25 23:00:55 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 23:00:55 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-25 23:02:26 - INFO - [app.py:99] - User explicitly specified tables: customers
2025-03-25 23:02:26 - INFO - [sql_generator.py:36] - Processing query: 'get me list of customers'
2025-03-25 23:02:26 - INFO - [sql_generator.py:39] - User explicitly selected tables: customers
2025-03-25 23:02:27 - INFO - [sql_generator.py:44] - Detected intent: data_retrieval
2025-03-25 23:02:27 - INFO - [sql_generator.py:137] - Starting SQL generation process
2025-03-25 23:02:27 - INFO - [database.py:24] - Attempting database connection
2025-03-25 23:02:27 - INFO - [database.py:28] - Database connection established in 0.02s
2025-03-25 23:02:29 - INFO - [azure_client.py:46] - SQL generation started for query: 'get me list of customers'
2025-03-25 23:02:33 - INFO - [azure_client.py:131] - Generated SQL: SELECT * FROM customers;
2025-03-25 23:02:33,594 - QUERY: 'get me list of customers' → SQL: SELECT * FROM customers;
2025-03-25 23:02:33 - INFO - [azure_client.py:139] - SQL generation completed in 4.36s
2025-03-25 23:02:33 - INFO - [database.py:45] - Executing SQL query: SELECT * FROM customers;
2025-03-25 23:02:33 - INFO - [database.py:66] - Query returned 5 rows with 11 columns
2025-03-25 23:02:33 - INFO - [database.py:75] - Query processing completed in 0.03s
2025-03-25 23:02:33 - INFO - [sql_generator.py:297] - SQL generation completed in 6.17s
2025-03-25 23:02:33 - INFO - [sql_generator.py:121] - Query processing completed in 7.45s
2025-03-25 23:04:41 - INFO - [app.py:99] - User explicitly specified tables: customers, orders
2025-03-25 23:04:41 - INFO - [sql_generator.py:36] - Processing query: 'get me list of customers'
2025-03-25 23:04:41 - INFO - [sql_generator.py:39] - User explicitly selected tables: customers, orders
2025-03-25 23:04:42 - INFO - [sql_generator.py:44] - Detected intent: data_retrieval
2025-03-25 23:04:42 - INFO - [sql_generator.py:137] - Starting SQL generation process
2025-03-25 23:04:42 - INFO - [database.py:24] - Attempting database connection
2025-03-25 23:04:42 - INFO - [database.py:28] - Database connection established in 0.00s
2025-03-25 23:04:43 - INFO - [azure_client.py:46] - SQL generation started for query: 'get me list of customers'
2025-03-25 23:04:45 - INFO - [azure_client.py:131] - Generated SQL: SELECT 
    c.customer_id,
    c.first_name || ' ' || c.last_name AS full_name
FROM 
    customers c;
2025-03-25 23:04:45,146 - QUERY: 'get me list of customers' → SQL: SELECT 
    c.customer_id,
    c.first_name || ' ' || c.last_name AS full_name
FROM 
    customers c;
2025-03-25 23:04:45 - INFO - [azure_client.py:139] - SQL generation completed in 2.05s
2025-03-25 23:04:45 - INFO - [database.py:45] - Executing SQL query: SELECT 
    c.customer_id,
    c.first_name || ' ' || c.last_name AS full_name
FROM 
    customers c;
2025-03-25 23:04:45 - INFO - [database.py:66] - Query returned 5 rows with 2 columns
2025-03-25 23:04:45 - INFO - [database.py:75] - Query processing completed in 0.02s
2025-03-25 23:04:45 - INFO - [sql_generator.py:297] - SQL generation completed in 2.75s
2025-03-25 23:04:45 - INFO - [sql_generator.py:121] - Query processing completed in 3.26s
2025-03-25 23:08:54 - INFO - [sql_generator.py:36] - Processing query: '@customers'
2025-03-25 23:08:54 - INFO - [sql_generator.py:44] - Detected intent: schema_exploration
2025-03-25 23:08:54 - INFO - [sql_generator.py:72] - Processing schema exploration request
2025-03-25 23:08:54 - INFO - [sql_generator.py:121] - Query processing completed in 0.53s
2025-03-25 23:17:06 - INFO - [app.py:99] - User explicitly specified tables: order_items
2025-03-25 23:17:06 - INFO - [sql_generator.py:36] - Processing query: '@order_items count of item'
2025-03-25 23:17:06 - INFO - [sql_generator.py:39] - User explicitly selected tables: order_items
2025-03-25 23:17:06 - INFO - [sql_generator.py:44] - Detected intent: data_retrieval
2025-03-25 23:17:06 - INFO - [sql_generator.py:137] - Starting SQL generation process
2025-03-25 23:17:06 - INFO - [database.py:24] - Attempting database connection
2025-03-25 23:17:06 - INFO - [database.py:28] - Database connection established in 0.00s
2025-03-25 23:17:07 - INFO - [azure_client.py:46] - SQL generation started for query: '@order_items count of item'
2025-03-25 23:17:07 - ERROR - [azure_client.py:145] - SQL generation error after 0.03s: ('Connection aborted.', RemoteDisconnected('Remote end closed connection without response'))
Traceback (most recent call last):
  File "/home/vijay/text2sql/src/utils/azure_client.py", line 108, in generate_sql
    response = self.client.complete(
               ^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/ai/inference/_patch.py", line 728, in complete
    pipeline_response: PipelineResponse = self._client._pipeline.run(  # pylint: disable=protected-access
                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/_base.py", line 240, in run
    return first_node.send(pipeline_request)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/_base.py", line 96, in send
    response = self.next.send(request)
               ^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/_base.py", line 96, in send
    response = self.next.send(request)
               ^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/_base.py", line 96, in send
    response = self.next.send(request)
               ^^^^^^^^^^^^^^^^^^^^^^^
  [Previous line repeated 2 more times]
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/policies/_redirect.py", line 204, in send
    response = self.next.send(request)
               ^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/policies/_retry.py", line 573, in send
    raise err
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/policies/_retry.py", line 551, in send
    response = self.next.send(request)
               ^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/_base.py", line 96, in send
    response = self.next.send(request)
               ^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/_base.py", line 96, in send
    response = self.next.send(request)
               ^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/_base.py", line 96, in send
    response = self.next.send(request)
               ^^^^^^^^^^^^^^^^^^^^^^^
  [Previous line repeated 3 more times]
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/_base.py", line 128, in send
    self._sender.send(request.http_request, **request.context.options),
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/transport/_requests_basic.py", line 409, in send
    raise error
azure.core.exceptions.ServiceResponseError: ('Connection aborted.', RemoteDisconnected('Remote end closed connection without response'))
2025-03-25 23:17:07 - INFO - [sql_generator.py:297] - SQL generation completed in 0.26s
2025-03-25 23:17:07 - INFO - [sql_generator.py:121] - Query processing completed in 0.30s
2025-03-25 23:19:49 - INFO - [database.py:238] - Closing database connection
2025-03-25 23:19:51 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 23:19:51 - INFO - [azure_client.py:21] - Using model: Phi-3-small-8k-instruct
2025-03-25 23:19:51 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 23:19:51 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 23:19:51 - INFO - [azure_client.py:21] - Using model: Phi-3-small-8k-instruct
2025-03-25 23:19:51 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 23:19:51 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 23:19:51 - INFO - [azure_client.py:21] - Using model: Phi-3-small-8k-instruct
2025-03-25 23:19:51 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 23:19:51 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 23:19:51 - INFO - [azure_client.py:21] - Using model: Phi-3-small-8k-instruct
2025-03-25 23:19:51 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 23:19:51 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-25 23:19:52 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 23:19:52 - INFO - [azure_client.py:21] - Using model: Phi-3-small-8k-instruct
2025-03-25 23:19:52 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 23:19:52 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 23:19:52 - INFO - [azure_client.py:21] - Using model: Phi-3-small-8k-instruct
2025-03-25 23:19:52 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 23:19:52 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 23:19:52 - INFO - [azure_client.py:21] - Using model: Phi-3-small-8k-instruct
2025-03-25 23:19:52 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 23:19:52 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-25 23:19:52 - INFO - [azure_client.py:21] - Using model: Phi-3-small-8k-instruct
2025-03-25 23:19:52 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-25 23:19:52 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-25 23:20:11 - INFO - [app.py:99] - User explicitly specified tables: order_items
2025-03-25 23:20:11 - INFO - [sql_generator.py:36] - Processing query: 'count items from @order_items'
2025-03-25 23:20:11 - INFO - [sql_generator.py:39] - User explicitly selected tables: order_items
2025-03-25 23:20:13 - INFO - [sql_generator.py:44] - Detected intent: data_retrieval
2025-03-25 23:20:13 - INFO - [sql_generator.py:137] - Starting SQL generation process
2025-03-25 23:20:13 - INFO - [database.py:24] - Attempting database connection
2025-03-25 23:20:13 - INFO - [database.py:28] - Database connection established in 0.01s
2025-03-25 23:20:15 - INFO - [azure_client.py:46] - SQL generation started for query: 'count items from @order_items'
2025-03-25 23:20:19 - INFO - [azure_client.py:131] - Generated SQL: SELECT COUNT(*) AS item_count FROM order_items;
2025-03-25 23:20:19,343 - QUERY: 'count items from @order_items' → SQL: SELECT COUNT(*) AS item_count FROM order_items;
2025-03-25 23:20:19 - INFO - [azure_client.py:139] - SQL generation completed in 4.23s
2025-03-25 23:20:19 - INFO - [database.py:45] - Executing SQL query: SELECT COUNT(*) AS item_count FROM order_items;
2025-03-25 23:20:19 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-25 23:20:19 - INFO - [database.py:75] - Query processing completed in 0.03s
2025-03-25 23:20:19 - INFO - [sql_generator.py:297] - SQL generation completed in 6.17s
2025-03-25 23:20:19 - INFO - [sql_generator.py:121] - Query processing completed in 7.88s
2025-03-25 23:20:30 - INFO - [app.py:99] - User explicitly specified tables: order_items, customers
2025-03-25 23:20:30 - INFO - [sql_generator.py:36] - Processing query: 'count items from @order_items and @customers'
2025-03-25 23:20:30 - INFO - [sql_generator.py:39] - User explicitly selected tables: order_items, customers
2025-03-25 23:20:30 - INFO - [sql_generator.py:44] - Detected intent: data_retrieval
2025-03-25 23:20:30 - INFO - [sql_generator.py:137] - Starting SQL generation process
2025-03-25 23:20:30 - INFO - [database.py:24] - Attempting database connection
2025-03-25 23:20:30 - INFO - [database.py:28] - Database connection established in 0.00s
2025-03-25 23:20:31 - INFO - [azure_client.py:46] - SQL generation started for query: 'count items from @order_items and @customers'
2025-03-25 23:20:35 - INFO - [azure_client.py:131] - Generated SQL: SELECT c.customer_id, SUM(oi.quantity) AS total_items
FROM customers c
JOIN order_items oi ON c.customer_id = oi.order_id
GROUP BY c.customer_id;
2025-03-25 23:20:35,273 - QUERY: 'count items from @order_items and @customers' → SQL: SELECT c.customer_id, SUM(oi.quantity) AS total_items
FROM customers c
JOIN order_items oi ON c.customer_id = oi.order_id
GROUP BY c.customer_id;
2025-03-25 23:20:35 - INFO - [azure_client.py:139] - SQL generation completed in 3.78s
2025-03-25 23:20:35 - INFO - [database.py:45] - Executing SQL query: SELECT c.customer_id, SUM(oi.quantity) AS total_items
FROM customers c
JOIN order_items oi ON c.customer_id = oi.order_id
GROUP BY c.customer_id;
2025-03-25 23:20:35 - INFO - [database.py:66] - Query returned 5 rows with 2 columns
2025-03-25 23:20:35 - INFO - [database.py:75] - Query processing completed in 0.01s
2025-03-25 23:20:35 - INFO - [sql_generator.py:297] - SQL generation completed in 4.55s
2025-03-25 23:20:35 - INFO - [sql_generator.py:121] - Query processing completed in 4.94s
2025-03-25 23:21:43 - INFO - [app.py:99] - User explicitly specified tables: customers
2025-03-25 23:21:43 - INFO - [sql_generator.py:36] - Processing query: 'get me items from @customers'
2025-03-25 23:21:43 - INFO - [sql_generator.py:39] - User explicitly selected tables: customers
2025-03-25 23:21:43 - INFO - [app.py:99] - User explicitly specified tables: customers
2025-03-25 23:21:43 - INFO - [sql_generator.py:36] - Processing query: 'get me items from @customers'
2025-03-25 23:21:43 - INFO - [sql_generator.py:39] - User explicitly selected tables: customers
2025-03-25 23:21:44 - INFO - [sql_generator.py:44] - Detected intent: data_retrieval
2025-03-25 23:21:44 - INFO - [sql_generator.py:137] - Starting SQL generation process
2025-03-25 23:21:44 - INFO - [database.py:24] - Attempting database connection
2025-03-25 23:21:44 - INFO - [database.py:28] - Database connection established in 0.00s
2025-03-25 23:21:44 - INFO - [azure_client.py:46] - SQL generation started for query: 'get me items from @customers'
2025-03-25 23:21:44 - INFO - [sql_generator.py:44] - Detected intent: data_retrieval
2025-03-25 23:21:44 - INFO - [sql_generator.py:137] - Starting SQL generation process
2025-03-25 23:21:44 - INFO - [database.py:24] - Attempting database connection
2025-03-25 23:21:44 - INFO - [database.py:28] - Database connection established in 0.01s
2025-03-25 23:21:45 - INFO - [azure_client.py:46] - SQL generation started for query: 'get me items from @customers'
2025-03-25 23:21:47 - INFO - [azure_client.py:131] - Generated SQL: SELECT i.*
FROM items i;
2025-03-25 23:21:47,783 - QUERY: 'get me items from @customers' → SQL: SELECT i.*
FROM items i;
2025-03-25 23:21:47 - INFO - [azure_client.py:139] - SQL generation completed in 3.23s
2025-03-25 23:21:47 - INFO - [database.py:45] - Executing SQL query: SELECT i.*
FROM items i;
2025-03-25 23:21:47 - ERROR - [database.py:102] - SQL error after 0.00s: (sqlite3.OperationalError) no such table: items
[SQL: SELECT i.*
FROM items i;]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/sqlalchemy/engine/default.py", line 748, in do_execute
    cursor.execute(statement, parameters)
sqlite3.OperationalError: no such table: items

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/vijay/text2sql/src/utils/database.py", line 58, in execute_query
    result = conn.execute(text(sql_query))
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 1414, in execute
    return meth(
           ^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/sqlalchemy/sql/elements.py", line 486, in _execute_on_connection
    return connection._execute_clauseelement(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
          ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 1842, in _execute_context
    return self._exec_single_context(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 2326, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/sqlalchemy/engine/default.py", line 748, in do_execute
    cursor.execute(statement, parameters)
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: items
[SQL: SELECT i.*
FROM items i;]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-25 23:21:47 - INFO - [sql_generator.py:297] - SQL generation completed in 3.74s
2025-03-25 23:21:47 - INFO - [sql_generator.py:121] - Query processing completed in 4.25s
2025-03-25 23:21:47 - INFO - [azure_client.py:131] - Generated SQL: It seems like there might be a misunderstanding in the request. Based on the schema and information provided, we only have access to the 'customers' table. To proceed accurately, I'll need the schema details for any additional tables, such as a table containing 'items' or 'orders' that are associated with the 'customers' table. Could you please provide the schema for the additional tables or clarify the table structure containing the 'items' data?
2025-03-25 23:21:47,888 - QUERY: 'get me items from @customers' → SQL: It seems like there might be a misunderstanding in the request. Based on the schema and information provided, we only have access to the 'customers' table. To proceed accurately, I'll need the schema details for any additional tables, such as a table containing 'items' or 'orders' that are associated with the 'customers' table. Could you please provide the schema for the additional tables or clarify the table structure containing the 'items' data?
2025-03-25 23:21:47 - INFO - [azure_client.py:139] - SQL generation completed in 2.37s
2025-03-25 23:21:47 - INFO - [database.py:45] - Executing SQL query: It seems like there might be a misunderstanding in the request. Based on the schema and information provided, we only have access to the 'customers' table. To proceed accurately, I'll need the schema details for any additional tables, such as a table containing 'items' or 'orders' that are associated with the 'customers' table. Could you please provide the schema for the additional tables or clarify the table structure containing the 'items' data?
2025-03-25 23:21:47 - ERROR - [database.py:102] - SQL error after 0.00s: (sqlite3.OperationalError) near "It": syntax error
[SQL: It seems like there might be a misunderstanding in the request. Based on the schema and information provided, we only have access to the 'customers' table. To proceed accurately, I'll need the schema details for any additional tables, such as a table containing 'items' or 'orders' that are associated with the 'customers' table. Could you please provide the schema for the additional tables or clarify the table structure containing the 'items' data?]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/sqlalchemy/engine/default.py", line 748, in do_execute
    cursor.execute(statement, parameters)
sqlite3.OperationalError: near "It": syntax error

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/vijay/text2sql/src/utils/database.py", line 58, in execute_query
    result = conn.execute(text(sql_query))
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 1414, in execute
    return meth(
           ^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/sqlalchemy/sql/elements.py", line 486, in _execute_on_connection
    return connection._execute_clauseelement(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
          ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 1842, in _execute_context
    return self._exec_single_context(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 2326, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/sqlalchemy/engine/default.py", line 748, in do_execute
    cursor.execute(statement, parameters)
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) near "It": syntax error
[SQL: It seems like there might be a misunderstanding in the request. Based on the schema and information provided, we only have access to the 'customers' table. To proceed accurately, I'll need the schema details for any additional tables, such as a table containing 'items' or 'orders' that are associated with the 'customers' table. Could you please provide the schema for the additional tables or clarify the table structure containing the 'items' data?]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-25 23:21:47 - INFO - [sql_generator.py:297] - SQL generation completed in 2.95s
2025-03-25 23:21:47 - INFO - [sql_generator.py:121] - Query processing completed in 4.06s
2025-03-25 23:26:14 - INFO - [app.py:196] - Schema requested for workspace: Default
2025-03-26 00:02:27 - INFO - [database.py:238] - Closing database connection
2025-03-26 00:02:29 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-26 00:02:29 - INFO - [azure_client.py:21] - Using model: Phi-3-small-8k-instruct
2025-03-26 00:02:29 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-26 00:02:29 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-26 00:02:29 - INFO - [azure_client.py:21] - Using model: Phi-3-small-8k-instruct
2025-03-26 00:02:29 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-26 00:02:29 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-26 00:02:29 - INFO - [azure_client.py:21] - Using model: Phi-3-small-8k-instruct
2025-03-26 00:02:29 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-26 00:02:29 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-26 00:02:29 - INFO - [azure_client.py:21] - Using model: Phi-3-small-8k-instruct
2025-03-26 00:02:29 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-26 00:02:29 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-26 00:02:30 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-26 00:02:30 - INFO - [azure_client.py:21] - Using model: Phi-3-small-8k-instruct
2025-03-26 00:02:30 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-26 00:02:30 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-26 00:02:30 - INFO - [azure_client.py:21] - Using model: Phi-3-small-8k-instruct
2025-03-26 00:02:30 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-26 00:02:30 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-26 00:02:30 - INFO - [azure_client.py:21] - Using model: Phi-3-small-8k-instruct
2025-03-26 00:02:30 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-26 00:02:30 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-26 00:02:30 - INFO - [azure_client.py:21] - Using model: Phi-3-small-8k-instruct
2025-03-26 00:02:30 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-26 00:02:30 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-26 00:02:57 - INFO - [app.py:99] - User explicitly specified tables: customers
2025-03-26 00:02:57 - INFO - [sql_generator.py:36] - Processing query: '@customers list of items'
2025-03-26 00:02:57 - INFO - [sql_generator.py:39] - User explicitly selected tables: customers
2025-03-26 00:02:58 - INFO - [sql_generator.py:44] - Detected intent: schema_exploration
2025-03-26 00:02:58 - INFO - [sql_generator.py:72] - Processing schema exploration request
2025-03-26 00:02:58 - INFO - [sql_generator.py:121] - Query processing completed in 1.26s
2025-03-26 00:03:52 - INFO - [app.py:99] - User explicitly specified tables: customers
2025-03-26 00:03:52 - INFO - [sql_generator.py:36] - Processing query: 'get me list of items from @customers'
2025-03-26 00:03:52 - INFO - [sql_generator.py:39] - User explicitly selected tables: customers
2025-03-26 00:03:52 - INFO - [app.py:99] - User explicitly specified tables: customers
2025-03-26 00:03:52 - INFO - [sql_generator.py:36] - Processing query: 'get me list of items from @customers'
2025-03-26 00:03:52 - INFO - [sql_generator.py:39] - User explicitly selected tables: customers
2025-03-26 00:03:52 - INFO - [sql_generator.py:44] - Detected intent: data_retrieval
2025-03-26 00:03:52 - INFO - [sql_generator.py:137] - Starting SQL generation process
2025-03-26 00:03:52 - INFO - [database.py:24] - Attempting database connection
2025-03-26 00:03:52 - INFO - [database.py:28] - Database connection established in 0.01s
2025-03-26 00:03:53 - INFO - [sql_generator.py:44] - Detected intent: data_retrieval
2025-03-26 00:03:53 - INFO - [sql_generator.py:137] - Starting SQL generation process
2025-03-26 00:03:53 - INFO - [database.py:24] - Attempting database connection
2025-03-26 00:03:53 - INFO - [database.py:28] - Database connection established in 0.00s
2025-03-26 00:03:54 - INFO - [azure_client.py:46] - SQL generation started for query: 'get me list of items from @customers'
2025-03-26 00:03:55 - INFO - [azure_client.py:46] - SQL generation started for query: 'get me list of items from @customers'
2025-03-26 00:03:59 - INFO - [azure_client.py:131] - Generated SQL: To provide a SQL query for the request "get me list of items from @customers," I would need more information about what constitutes an "item" in this context and how it relates to the `customers` table. Could you please clarify if there is a separate table that contains the items associated with customers, and if so, could you describe the schema for that table, including the relationship between the items and customers?
2025-03-26 00:03:59,179 - QUERY: 'get me list of items from @customers' → SQL: To provide a SQL query for the request "get me list of items from @customers," I would need more information about what constitutes an "item" in this context and how it relates to the `customers` table. Could you please clarify if there is a separate table that contains the items associated with customers, and if so, could you describe the schema for that table, including the relationship between the items and customers?
2025-03-26 00:03:59 - INFO - [azure_client.py:139] - SQL generation completed in 4.58s
2025-03-26 00:03:59 - INFO - [database.py:45] - Executing SQL query: To provide a SQL query for the request "get me list of items from @customers," I would need more information about what constitutes an "item" in this context and how it relates to the `customers` table. Could you please clarify if there is a separate table that contains the items associated with customers, and if so, could you describe the schema for that table, including the relationship between the items and customers?
2025-03-26 00:03:59 - ERROR - [database.py:102] - SQL error after 0.00s: (sqlite3.OperationalError) near "To": syntax error
[SQL: To provide a SQL query for the request "get me list of items from @customers," I would need more information about what constitutes an "item" in this context and how it relates to the `customers` table. Could you please clarify if there is a separate table that contains the items associated with customers, and if so, could you describe the schema for that table, including the relationship between the items and customers?]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/sqlalchemy/engine/default.py", line 748, in do_execute
    cursor.execute(statement, parameters)
sqlite3.OperationalError: near "To": syntax error

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/vijay/text2sql/src/utils/database.py", line 58, in execute_query
    result = conn.execute(text(sql_query))
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 1414, in execute
    return meth(
           ^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/sqlalchemy/sql/elements.py", line 486, in _execute_on_connection
    return connection._execute_clauseelement(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
          ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 1842, in _execute_context
    return self._exec_single_context(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 2326, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/sqlalchemy/engine/default.py", line 748, in do_execute
    cursor.execute(statement, parameters)
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) near "To": syntax error
[SQL: To provide a SQL query for the request "get me list of items from @customers," I would need more information about what constitutes an "item" in this context and how it relates to the `customers` table. Could you please clarify if there is a separate table that contains the items associated with customers, and if so, could you describe the schema for that table, including the relationship between the items and customers?]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-26 00:03:59 - INFO - [sql_generator.py:297] - SQL generation completed in 6.29s
2025-03-26 00:03:59 - INFO - [sql_generator.py:121] - Query processing completed in 6.70s
2025-03-26 00:04:00 - INFO - [azure_client.py:131] - Generated SQL: SELECT * FROM customers;
2025-03-26 00:04:00,108 - QUERY: 'get me list of items from @customers' → SQL: SELECT * FROM customers;
2025-03-26 00:04:00 - INFO - [azure_client.py:139] - SQL generation completed in 4.44s
2025-03-26 00:04:00 - INFO - [database.py:45] - Executing SQL query: SELECT * FROM customers;
2025-03-26 00:04:00 - INFO - [database.py:66] - Query returned 5 rows with 11 columns
2025-03-26 00:04:00 - INFO - [database.py:75] - Query processing completed in 0.01s
2025-03-26 00:04:00 - INFO - [sql_generator.py:297] - SQL generation completed in 6.19s
2025-03-26 00:04:00 - INFO - [sql_generator.py:121] - Query processing completed in 7.31s
2025-03-26 00:06:00 - INFO - [app.py:99] - User explicitly specified tables: customers
2025-03-26 00:06:00 - INFO - [sql_generator.py:36] - Processing query: 'get me list of items from @customers table'
2025-03-26 00:06:00 - INFO - [sql_generator.py:39] - User explicitly selected tables: customers
2025-03-26 00:06:00 - INFO - [sql_generator.py:44] - Detected intent: data_retrieval
2025-03-26 00:06:00 - INFO - [sql_generator.py:137] - Starting SQL generation process
2025-03-26 00:06:00 - INFO - [database.py:24] - Attempting database connection
2025-03-26 00:06:00 - INFO - [database.py:28] - Database connection established in 0.00s
2025-03-26 00:06:01 - INFO - [azure_client.py:46] - SQL generation started for query: 'get me list of items from @customers table'
2025-03-26 00:06:02 - INFO - [azure_client.py:131] - Generated SQL: SELECT * FROM customers;
2025-03-26 00:06:02,074 - QUERY: 'get me list of items from @customers table' → SQL: SELECT * FROM customers;
2025-03-26 00:06:02 - INFO - [azure_client.py:139] - SQL generation completed in 0.99s
2025-03-26 00:06:02 - INFO - [database.py:45] - Executing SQL query: SELECT * FROM customers;
2025-03-26 00:06:02 - INFO - [database.py:66] - Query returned 5 rows with 11 columns
2025-03-26 00:06:02 - INFO - [database.py:75] - Query processing completed in 0.01s
2025-03-26 00:06:02 - INFO - [sql_generator.py:297] - SQL generation completed in 1.50s
2025-03-26 00:06:02 - INFO - [sql_generator.py:121] - Query processing completed in 2.02s
2025-03-26 00:06:38 - INFO - [app.py:99] - User explicitly specified tables: customers
2025-03-26 00:06:38 - INFO - [sql_generator.py:36] - Processing query: 'get me list of items from @customers'
2025-03-26 00:06:38 - INFO - [sql_generator.py:39] - User explicitly selected tables: customers
2025-03-26 00:06:39 - INFO - [sql_generator.py:44] - Detected intent: data_retrieval
2025-03-26 00:06:39 - INFO - [sql_generator.py:137] - Starting SQL generation process
2025-03-26 00:06:39 - INFO - [database.py:24] - Attempting database connection
2025-03-26 00:06:39 - INFO - [database.py:28] - Database connection established in 0.00s
2025-03-26 00:06:40 - INFO - [azure_client.py:46] - SQL generation started for query: 'get me list of items from @customers'
2025-03-26 00:06:44 - INFO - [azure_client.py:131] - Generated SQL: SELECT i.*, c.first_name AS "First Name", c.last_name AS "Last Name", c.email AS "Email"
FROM items i
JOIN customers c ON i.customer_id = c.customer_id
WHERE i.customer_id IN (@customer_ids);
2025-03-26 00:06:44,304 - QUERY: 'get me list of items from @customers' → SQL: SELECT i.*, c.first_name AS "First Name", c.last_name AS "Last Name", c.email AS "Email"
FROM items i
JOIN customers c ON i.customer_id = c.customer_id
WHERE i.customer_id IN (@customer_ids);
2025-03-26 00:06:44 - INFO - [azure_client.py:139] - SQL generation completed in 4.31s
2025-03-26 00:06:44 - INFO - [database.py:45] - Executing SQL query: SELECT i.*, c.first_name AS "First Name", c.last_name AS "Last Name", c.email AS "Email"
FROM items i
JOIN customers c ON i.customer_id = c.customer_id
WHERE i.customer_id IN (@customer_ids);
2025-03-26 00:06:44 - ERROR - [database.py:102] - SQL error after 0.01s: (sqlite3.OperationalError) no such table: items
[SQL: SELECT i.*, c.first_name AS "First Name", c.last_name AS "Last Name", c.email AS "Email"
FROM items i
JOIN customers c ON i.customer_id = c.customer_id
WHERE i.customer_id IN (@customer_ids);]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/sqlalchemy/engine/default.py", line 748, in do_execute
    cursor.execute(statement, parameters)
sqlite3.OperationalError: no such table: items

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/vijay/text2sql/src/utils/database.py", line 58, in execute_query
    result = conn.execute(text(sql_query))
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 1414, in execute
    return meth(
           ^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/sqlalchemy/sql/elements.py", line 486, in _execute_on_connection
    return connection._execute_clauseelement(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
          ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 1842, in _execute_context
    return self._exec_single_context(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 2326, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/sqlalchemy/engine/default.py", line 748, in do_execute
    cursor.execute(statement, parameters)
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: items
[SQL: SELECT i.*, c.first_name AS "First Name", c.last_name AS "Last Name", c.email AS "Email"
FROM items i
JOIN customers c ON i.customer_id = c.customer_id
WHERE i.customer_id IN (@customer_ids);]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-26 00:06:44 - INFO - [sql_generator.py:297] - SQL generation completed in 5.31s
2025-03-26 00:06:44 - INFO - [sql_generator.py:121] - Query processing completed in 5.70s
2025-03-26 00:10:04 - INFO - [app.py:196] - Schema requested for workspace: Default
2025-03-26 00:10:11 - INFO - [app.py:196] - Schema requested for workspace: Default
2025-03-26 00:10:55 - INFO - [database.py:238] - Closing database connection
2025-03-26 00:10:55 - INFO - [database.py:238] - Closing database connection
2025-03-26 00:10:57 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-26 00:10:57 - INFO - [azure_client.py:21] - Using model: Phi-3-small-8k-instruct
2025-03-26 00:10:57 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-26 00:10:57 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-26 00:10:57 - INFO - [azure_client.py:21] - Using model: Phi-3-small-8k-instruct
2025-03-26 00:10:57 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-26 00:10:57 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-26 00:10:57 - INFO - [azure_client.py:21] - Using model: Phi-3-small-8k-instruct
2025-03-26 00:10:57 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-26 00:10:57 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-26 00:10:57 - INFO - [azure_client.py:21] - Using model: Phi-3-small-8k-instruct
2025-03-26 00:10:57 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-26 00:10:57 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-26 00:10:57 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-26 00:10:57 - INFO - [azure_client.py:21] - Using model: Phi-3-small-8k-instruct
2025-03-26 00:10:57 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-26 00:10:57 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-26 00:10:57 - INFO - [azure_client.py:21] - Using model: Phi-3-small-8k-instruct
2025-03-26 00:10:57 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-26 00:10:57 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-26 00:10:57 - INFO - [azure_client.py:21] - Using model: Phi-3-small-8k-instruct
2025-03-26 00:10:57 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-26 00:10:57 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-26 00:10:57 - INFO - [azure_client.py:21] - Using model: Phi-3-small-8k-instruct
2025-03-26 00:10:57 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-26 00:10:57 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-26 00:11:10 - INFO - [app.py:196] - Schema requested for workspace: Default
2025-03-26 00:13:52 - INFO - [database.py:238] - Closing database connection
2025-03-26 00:13:53 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-26 00:13:53 - INFO - [azure_client.py:21] - Using model: Phi-3-small-8k-instruct
2025-03-26 00:13:53 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-26 00:13:53 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-26 00:13:53 - INFO - [azure_client.py:21] - Using model: Phi-3-small-8k-instruct
2025-03-26 00:13:53 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-26 00:13:53 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-26 00:13:53 - INFO - [azure_client.py:21] - Using model: Phi-3-small-8k-instruct
2025-03-26 00:13:53 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-26 00:13:53 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-26 00:13:53 - INFO - [azure_client.py:21] - Using model: Phi-3-small-8k-instruct
2025-03-26 00:13:53 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-26 00:13:53 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-26 00:14:06 - INFO - [app.py:99] - User explicitly specified tables: customers
2025-03-26 00:14:06 - INFO - [sql_generator.py:36] - Processing query: 'table customers items'
2025-03-26 00:14:06 - INFO - [sql_generator.py:39] - User explicitly selected tables: customers
2025-03-26 00:14:07 - INFO - [sql_generator.py:44] - Detected intent: schema_exploration
2025-03-26 00:14:07 - INFO - [sql_generator.py:72] - Processing schema exploration request
2025-03-26 00:14:07 - INFO - [sql_generator.py:121] - Query processing completed in 1.25s
2025-03-26 00:14:37 - INFO - [app.py:99] - User explicitly specified tables: customers
2025-03-26 00:14:37 - INFO - [sql_generator.py:36] - Processing query: 'table customers values'
2025-03-26 00:14:37 - INFO - [sql_generator.py:39] - User explicitly selected tables: customers
2025-03-26 00:14:37 - INFO - [sql_generator.py:44] - Detected intent: schema_exploration
2025-03-26 00:14:37 - INFO - [sql_generator.py:72] - Processing schema exploration request
2025-03-26 00:14:37 - INFO - [sql_generator.py:121] - Query processing completed in 0.41s
2025-03-26 00:15:07 - INFO - [app.py:99] - User explicitly specified tables: customers
2025-03-26 00:15:07 - INFO - [sql_generator.py:36] - Processing query: 'get me items from table customers'
2025-03-26 00:15:07 - INFO - [sql_generator.py:39] - User explicitly selected tables: customers
2025-03-26 00:15:07 - INFO - [sql_generator.py:44] - Detected intent: data_retrieval
2025-03-26 00:15:07 - INFO - [sql_generator.py:137] - Starting SQL generation process
2025-03-26 00:15:07 - INFO - [database.py:24] - Attempting database connection
2025-03-26 00:15:07 - INFO - [database.py:28] - Database connection established in 0.02s
2025-03-26 00:15:08 - INFO - [azure_client.py:46] - SQL generation started for query: 'get me items from table customers'
2025-03-26 00:15:11 - INFO - [azure_client.py:131] - Generated SQL: SELECT * FROM customers;
2025-03-26 00:15:11,759 - QUERY: 'get me items from table customers' → SQL: SELECT * FROM customers;
2025-03-26 00:15:11 - INFO - [azure_client.py:139] - SQL generation completed in 2.82s
2025-03-26 00:15:11 - INFO - [database.py:45] - Executing SQL query: SELECT * FROM customers;
2025-03-26 00:15:11 - INFO - [database.py:66] - Query returned 5 rows with 11 columns
2025-03-26 00:15:11 - INFO - [database.py:75] - Query processing completed in 0.01s
2025-03-26 00:15:11 - INFO - [sql_generator.py:297] - SQL generation completed in 4.22s
2025-03-26 00:15:11 - INFO - [sql_generator.py:121] - Query processing completed in 4.62s
2025-03-26 00:15:23 - INFO - [app.py:99] - User explicitly specified tables: customers, order_items
2025-03-26 00:15:23 - INFO - [sql_generator.py:36] - Processing query: 'get me items from table customers table order_items'
2025-03-26 00:15:23 - INFO - [sql_generator.py:39] - User explicitly selected tables: customers, order_items
2025-03-26 00:15:24 - INFO - [sql_generator.py:44] - Detected intent: data_retrieval
2025-03-26 00:15:24 - INFO - [sql_generator.py:137] - Starting SQL generation process
2025-03-26 00:15:24 - INFO - [database.py:24] - Attempting database connection
2025-03-26 00:15:24 - INFO - [database.py:28] - Database connection established in 0.00s
2025-03-26 00:15:25 - INFO - [azure_client.py:46] - SQL generation started for query: 'get me items from table customers table order_items'
2025-03-26 00:15:31 - INFO - [azure_client.py:131] - Generated SQL: SELECT oi.*
FROM order_items oi
JOIN orders o ON oi.item_id = o.item_id
WHERE o.customer_id = ?; -- Replace ? with the desired customer_id
2025-03-26 00:15:31,784 - QUERY: 'get me items from table customers table order_items' → SQL: SELECT oi.*
FROM order_items oi
JOIN orders o ON oi.item_id = o.item_id
WHERE o.customer_id = ?; -- Replace ? with the desired customer_id
2025-03-26 00:15:31 - INFO - [azure_client.py:139] - SQL generation completed in 6.77s
2025-03-26 00:15:31 - INFO - [database.py:45] - Executing SQL query: SELECT oi.*
FROM order_items oi
JOIN orders o ON oi.item_id = o.item_id
WHERE o.customer_id = ?; -- Replace ? with the desired customer_id
2025-03-26 00:15:31 - ERROR - [database.py:102] - SQL error after 0.00s: (sqlite3.OperationalError) no such column: o.item_id
[SQL: SELECT oi.*
FROM order_items oi
JOIN orders o ON oi.item_id = o.item_id
WHERE o.customer_id = ?; -- Replace ? with the desired customer_id]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/sqlalchemy/engine/default.py", line 748, in do_execute
    cursor.execute(statement, parameters)
sqlite3.OperationalError: no such column: o.item_id

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/vijay/text2sql/src/utils/database.py", line 58, in execute_query
    result = conn.execute(text(sql_query))
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 1414, in execute
    return meth(
           ^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/sqlalchemy/sql/elements.py", line 486, in _execute_on_connection
    return connection._execute_clauseelement(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
          ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 1842, in _execute_context
    return self._exec_single_context(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 2326, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/sqlalchemy/engine/default.py", line 748, in do_execute
    cursor.execute(statement, parameters)
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such column: o.item_id
[SQL: SELECT oi.*
FROM order_items oi
JOIN orders o ON oi.item_id = o.item_id
WHERE o.customer_id = ?; -- Replace ? with the desired customer_id]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-26 00:15:31 - INFO - [sql_generator.py:297] - SQL generation completed in 7.47s
2025-03-26 00:15:31 - INFO - [sql_generator.py:121] - Query processing completed in 7.86s
2025-03-26 00:16:28 - INFO - [database.py:238] - Closing database connection
2025-03-26 00:16:28 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-26 00:16:28 - INFO - [azure_client.py:21] - Using model: Phi-3-small-8k-instruct
2025-03-26 00:16:28 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-26 00:16:28 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-26 00:16:28 - INFO - [azure_client.py:21] - Using model: Phi-3-small-8k-instruct
2025-03-26 00:16:28 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-26 00:16:28 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-26 00:16:28 - INFO - [azure_client.py:21] - Using model: Phi-3-small-8k-instruct
2025-03-26 00:16:28 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-26 00:16:28 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-26 00:16:28 - INFO - [azure_client.py:21] - Using model: Phi-3-small-8k-instruct
2025-03-26 00:16:28 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-26 00:16:28 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-26 00:16:45 - INFO - [app.py:99] - User explicitly specified tables: customers, order_items, orders
2025-03-26 00:16:45 - INFO - [sql_generator.py:36] - Processing query: 'how many items are in table orders'
2025-03-26 00:16:45 - INFO - [sql_generator.py:39] - User explicitly selected tables: customers, order_items, orders
2025-03-26 00:16:46 - INFO - [sql_generator.py:44] - Detected intent: metadata_request
2025-03-26 00:16:46 - INFO - [sql_generator.py:87] - Processing metadata request
2025-03-26 00:16:46 - INFO - [sql_generator.py:121] - Query processing completed in 1.21s
2025-03-26 00:17:14 - INFO - [app.py:99] - User explicitly specified tables: customers, order_items, orders
2025-03-26 00:17:14 - INFO - [sql_generator.py:36] - Processing query: 'get me items from in table orders'
2025-03-26 00:17:14 - INFO - [sql_generator.py:39] - User explicitly selected tables: customers, order_items, orders
2025-03-26 00:17:14 - INFO - [sql_generator.py:44] - Detected intent: data_retrieval
2025-03-26 00:17:14 - INFO - [sql_generator.py:137] - Starting SQL generation process
2025-03-26 00:17:14 - INFO - [database.py:24] - Attempting database connection
2025-03-26 00:17:14 - INFO - [database.py:28] - Database connection established in 0.01s
2025-03-26 00:17:16 - INFO - [azure_client.py:46] - SQL generation started for query: 'get me items from in table orders'
2025-03-26 00:17:18 - INFO - [azure_client.py:131] - Generated SQL: SELECT * FROM order_items;
2025-03-26 00:17:18,425 - QUERY: 'get me items from in table orders' → SQL: SELECT * FROM order_items;
2025-03-26 00:17:18 - INFO - [azure_client.py:139] - SQL generation completed in 2.03s
2025-03-26 00:17:18 - INFO - [database.py:45] - Executing SQL query: SELECT * FROM order_items;
2025-03-26 00:17:18 - INFO - [database.py:66] - Query returned 11 rows with 5 columns
2025-03-26 00:17:18 - INFO - [database.py:75] - Query processing completed in 0.02s
2025-03-26 00:17:18 - INFO - [sql_generator.py:297] - SQL generation completed in 3.53s
2025-03-26 00:17:18 - INFO - [sql_generator.py:121] - Query processing completed in 3.92s
2025-03-26 00:18:15 - INFO - [app.py:99] - User explicitly specified tables: customers
2025-03-26 00:18:15 - INFO - [sql_generator.py:36] - Processing query: 'get me all rows table customers'
2025-03-26 00:18:15 - INFO - [sql_generator.py:39] - User explicitly selected tables: customers
2025-03-26 00:18:16 - INFO - [sql_generator.py:44] - Detected intent: data_retrieval
2025-03-26 00:18:16 - INFO - [sql_generator.py:137] - Starting SQL generation process
2025-03-26 00:18:16 - INFO - [database.py:24] - Attempting database connection
2025-03-26 00:18:16 - INFO - [database.py:28] - Database connection established in 0.00s
2025-03-26 00:18:16 - INFO - [azure_client.py:46] - SQL generation started for query: 'get me all rows table customers'
2025-03-26 00:18:17 - INFO - [azure_client.py:131] - Generated SQL: SELECT * FROM customers;
2025-03-26 00:18:17,485 - QUERY: 'get me all rows table customers' → SQL: SELECT * FROM customers;
2025-03-26 00:18:17 - INFO - [azure_client.py:139] - SQL generation completed in 0.94s
2025-03-26 00:18:17 - INFO - [database.py:45] - Executing SQL query: SELECT * FROM customers;
2025-03-26 00:18:17 - INFO - [database.py:66] - Query returned 5 rows with 11 columns
2025-03-26 00:18:17 - INFO - [database.py:75] - Query processing completed in 0.01s
2025-03-26 00:18:17 - INFO - [sql_generator.py:297] - SQL generation completed in 1.44s
2025-03-26 00:18:17 - INFO - [sql_generator.py:121] - Query processing completed in 1.96s
2025-03-26 00:18:26 - INFO - [app.py:99] - User explicitly specified tables: customers
2025-03-26 00:18:26 - INFO - [sql_generator.py:36] - Processing query: 'get me all rows'
2025-03-26 00:18:26 - INFO - [sql_generator.py:39] - User explicitly selected tables: customers
2025-03-26 00:18:27 - INFO - [sql_generator.py:44] - Detected intent: data_retrieval
2025-03-26 00:18:27 - INFO - [sql_generator.py:137] - Starting SQL generation process
2025-03-26 00:18:27 - INFO - [database.py:24] - Attempting database connection
2025-03-26 00:18:27 - INFO - [database.py:28] - Database connection established in 0.00s
2025-03-26 00:18:27 - INFO - [azure_client.py:46] - SQL generation started for query: 'get me all rows'
2025-03-26 00:18:29 - INFO - [azure_client.py:131] - Generated SQL: SELECT *
FROM customers;
2025-03-26 00:18:29,362 - QUERY: 'get me all rows' → SQL: SELECT *
FROM customers;
2025-03-26 00:18:29 - INFO - [azure_client.py:139] - SQL generation completed in 1.53s
2025-03-26 00:18:29 - INFO - [database.py:45] - Executing SQL query: SELECT *
FROM customers;
2025-03-26 00:18:29 - INFO - [database.py:66] - Query returned 5 rows with 11 columns
2025-03-26 00:18:29 - INFO - [database.py:75] - Query processing completed in 0.01s
2025-03-26 00:18:29 - INFO - [sql_generator.py:297] - SQL generation completed in 2.04s
2025-03-26 00:18:29 - INFO - [sql_generator.py:121] - Query processing completed in 2.45s
2025-03-26 00:19:14 - INFO - [app.py:99] - User explicitly specified tables: customers, sales_metrics
2025-03-26 00:19:14 - INFO - [sql_generator.py:36] - Processing query: 'get me all rows table sales_metrics'
2025-03-26 00:19:14 - INFO - [sql_generator.py:39] - User explicitly selected tables: customers, sales_metrics
2025-03-26 00:19:14 - INFO - [sql_generator.py:44] - Detected intent: data_retrieval
2025-03-26 00:19:14 - INFO - [sql_generator.py:137] - Starting SQL generation process
2025-03-26 00:19:14 - INFO - [database.py:24] - Attempting database connection
2025-03-26 00:19:14 - INFO - [database.py:28] - Database connection established in 0.00s
2025-03-26 00:19:15 - INFO - [azure_client.py:46] - SQL generation started for query: 'get me all rows table sales_metrics'
2025-03-26 00:19:16 - INFO - [azure_client.py:131] - Generated SQL: SELECT * FROM sales_metrics;
2025-03-26 00:19:16,777 - QUERY: 'get me all rows table sales_metrics' → SQL: SELECT * FROM sales_metrics;
2025-03-26 00:19:16 - INFO - [azure_client.py:139] - SQL generation completed in 1.36s
2025-03-26 00:19:16 - INFO - [database.py:45] - Executing SQL query: SELECT * FROM sales_metrics;
2025-03-26 00:19:16 - INFO - [database.py:66] - Query returned 10 rows with 6 columns
2025-03-26 00:19:16 - INFO - [database.py:75] - Query processing completed in 0.01s
2025-03-26 00:19:16 - INFO - [sql_generator.py:297] - SQL generation completed in 2.13s
2025-03-26 00:19:16 - INFO - [sql_generator.py:121] - Query processing completed in 2.51s
2025-03-26 00:20:19 - INFO - [app.py:99] - User explicitly specified tables: customers, sales_metrics
2025-03-26 00:20:19 - INFO - [sql_generator.py:36] - Processing query: 'get me all rows table sales_metrics table customers'
2025-03-26 00:20:19 - INFO - [sql_generator.py:39] - User explicitly selected tables: customers, sales_metrics
2025-03-26 00:20:20 - INFO - [sql_generator.py:44] - Detected intent: data_retrieval
2025-03-26 00:20:20 - INFO - [sql_generator.py:137] - Starting SQL generation process
2025-03-26 00:20:20 - INFO - [database.py:24] - Attempting database connection
2025-03-26 00:20:20 - INFO - [database.py:28] - Database connection established in 0.00s
2025-03-26 00:20:21 - INFO - [azure_client.py:46] - SQL generation started for query: 'get me all rows table sales_metrics table customers'
2025-03-26 00:20:22 - INFO - [azure_client.py:131] - Generated SQL: SELECT * 
FROM sales_metrics 
CROSS JOIN customers;
2025-03-26 00:20:22,634 - QUERY: 'get me all rows table sales_metrics table customers' → SQL: SELECT * 
FROM sales_metrics 
CROSS JOIN customers;
2025-03-26 00:20:22 - INFO - [azure_client.py:139] - SQL generation completed in 1.64s
2025-03-26 00:20:22 - INFO - [database.py:45] - Executing SQL query: SELECT * 
FROM sales_metrics 
CROSS JOIN customers;
2025-03-26 00:20:22 - INFO - [database.py:66] - Query returned 50 rows with 17 columns
2025-03-26 00:20:22 - INFO - [database.py:75] - Query processing completed in 0.01s
2025-03-26 00:20:22 - INFO - [sql_generator.py:297] - SQL generation completed in 2.55s
2025-03-26 00:20:22 - INFO - [sql_generator.py:121] - Query processing completed in 3.04s
2025-03-26 00:21:02 - INFO - [app.py:99] - User explicitly specified tables: orders
2025-03-26 00:21:02 - INFO - [sql_generator.py:36] - Processing query: 'get me first name table orders'
2025-03-26 00:21:02 - INFO - [sql_generator.py:39] - User explicitly selected tables: orders
2025-03-26 00:21:02 - INFO - [app.py:99] - User explicitly specified tables: orders
2025-03-26 00:21:02 - INFO - [sql_generator.py:36] - Processing query: 'get me first name table orders'
2025-03-26 00:21:02 - INFO - [sql_generator.py:39] - User explicitly selected tables: orders
2025-03-26 00:21:02 - INFO - [sql_generator.py:44] - Detected intent: schema_exploration
2025-03-26 00:21:02 - INFO - [sql_generator.py:72] - Processing schema exploration request
2025-03-26 00:21:02 - INFO - [sql_generator.py:121] - Query processing completed in 0.40s
2025-03-26 00:21:03 - INFO - [sql_generator.py:44] - Detected intent: schema_exploration
2025-03-26 00:21:03 - INFO - [sql_generator.py:72] - Processing schema exploration request
2025-03-26 00:21:03 - INFO - [sql_generator.py:121] - Query processing completed in 1.11s
2025-03-26 00:21:21 - INFO - [app.py:196] - Schema requested for workspace: Default
2025-03-26 00:22:16 - INFO - [sql_generator.py:36] - Processing query: 'get me customer and their order details'
2025-03-26 00:22:16 - INFO - [sql_generator.py:36] - Processing query: 'get me customer and their order details'
2025-03-26 00:22:16 - INFO - [sql_generator.py:44] - Detected intent: data_retrieval
2025-03-26 00:22:16 - INFO - [sql_generator.py:137] - Starting SQL generation process
2025-03-26 00:22:16 - INFO - [database.py:24] - Attempting database connection
2025-03-26 00:22:16 - INFO - [database.py:28] - Database connection established in 0.01s
2025-03-26 00:22:16 - INFO - [sql_generator.py:44] - Detected intent: data_retrieval
2025-03-26 00:22:16 - INFO - [sql_generator.py:137] - Starting SQL generation process
2025-03-26 00:22:16 - INFO - [database.py:24] - Attempting database connection
2025-03-26 00:22:16 - INFO - [database.py:28] - Database connection established in 0.01s
2025-03-26 00:22:19 - INFO - [sql_generator.py:36] - Processing query: 'get me customer and their order details'
2025-03-26 00:22:19 - INFO - [azure_client.py:46] - SQL generation started for query: 'get me customer and their order details'
2025-03-26 00:22:19 - INFO - [sql_generator.py:44] - Detected intent: data_retrieval
2025-03-26 00:22:19 - INFO - [sql_generator.py:137] - Starting SQL generation process
2025-03-26 00:22:19 - INFO - [database.py:24] - Attempting database connection
2025-03-26 00:22:19 - INFO - [database.py:28] - Database connection established in 0.01s
2025-03-26 00:22:19 - INFO - [azure_client.py:46] - SQL generation started for query: 'get me customer and their order details'
2025-03-26 00:22:23 - INFO - [azure_client.py:46] - SQL generation started for query: 'get me customer and their order details'
2025-03-26 00:22:26 - INFO - [azure_client.py:131] - Generated SQL: SELECT
  c.first_name AS customer_first_name,
  c.last_name AS customer_last_name,
  o.order_id AS order_id,
  o.order_date AS order_date,
  o.status AS order_status,
  o.total_amount AS order_total
FROM
  customers c
INNER JOIN
  orders o ON c.customer_id = o.customer_id;
2025-03-26 00:22:26,030 - QUERY: 'get me customer and their order details' → SQL: SELECT
  c.first_name AS customer_first_name,
  c.last_name AS customer_last_name,
  o.order_id AS order_id,
  o.order_date AS order_date,
  o.status AS order_status,
  o.total_amount AS order_total
FROM
  customers c
INNER JOIN
  orders o ON c.customer_id = o.customer_id;
2025-03-26 00:22:26 - INFO - [azure_client.py:139] - SQL generation completed in 6.06s
2025-03-26 00:22:26 - INFO - [database.py:45] - Executing SQL query: SELECT
  c.first_name AS customer_first_name,
  c.last_name AS customer_last_name,
  o.order_id AS order_id,
  o.order_date AS order_date,
  o.status AS order_status,
  o.total_amount AS order_total
FROM
  customers c
INNER JOIN
  orders o ON c.customer_id = o.customer_id;
2025-03-26 00:22:26 - INFO - [database.py:66] - Query returned 8 rows with 6 columns
2025-03-26 00:22:26 - INFO - [database.py:75] - Query processing completed in 0.01s
2025-03-26 00:22:26 - INFO - [sql_generator.py:297] - SQL generation completed in 9.08s
2025-03-26 00:22:26 - INFO - [sql_generator.py:121] - Query processing completed in 9.51s
2025-03-26 00:22:26 - INFO - [azure_client.py:131] - Generated SQL: SELECT
  c.customer_id,
  CONCAT(c.first_name, ' ', c.last_name) AS full_name,
  c.email,
  c.phone,
  c.address,
  c.city,
  c.state,
  c.country,
  c.postal_code,
  o.order_id,
  o.order_date,
  o.status AS order_status,
  o.total_amount
FROM
  customers c
LEFT JOIN
  orders o ON c.customer_id = o.customer_id
ORDER BY
  c.customer_id, o.order_date;
2025-03-26 00:22:26,214 - QUERY: 'get me customer and their order details' → SQL: SELECT
  c.customer_id,
  CONCAT(c.first_name, ' ', c.last_name) AS full_name,
  c.email,
  c.phone,
  c.address,
  c.city,
  c.state,
  c.country,
  c.postal_code,
  o.order_id,
  o.order_date,
  o.status AS order_status,
  o.total_amount
FROM
  customers c
LEFT JOIN
  orders o ON c.customer_id = o.customer_id
ORDER BY
  c.customer_id, o.order_date;
2025-03-26 00:22:26 - INFO - [azure_client.py:139] - SQL generation completed in 6.85s
2025-03-26 00:22:26 - INFO - [database.py:45] - Executing SQL query: SELECT
  c.customer_id,
  CONCAT(c.first_name, ' ', c.last_name) AS full_name,
  c.email,
  c.phone,
  c.address,
  c.city,
  c.state,
  c.country,
  c.postal_code,
  o.order_id,
  o.order_date,
  o.status AS order_status,
  o.total_amount
FROM
  customers c
LEFT JOIN
  orders o ON c.customer_id = o.customer_id
ORDER BY
  c.customer_id, o.order_date;
2025-03-26 00:22:26 - ERROR - [database.py:102] - SQL error after 0.01s: (sqlite3.OperationalError) no such function: CONCAT
[SQL: SELECT
  c.customer_id,
  CONCAT(c.first_name, ' ', c.last_name) AS full_name,
  c.email,
  c.phone,
  c.address,
  c.city,
  c.state,
  c.country,
  c.postal_code,
  o.order_id,
  o.order_date,
  o.status AS order_status,
  o.total_amount
FROM
  customers c
LEFT JOIN
  orders o ON c.customer_id = o.customer_id
ORDER BY
  c.customer_id, o.order_date;]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/sqlalchemy/engine/default.py", line 748, in do_execute
    cursor.execute(statement, parameters)
sqlite3.OperationalError: no such function: CONCAT

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/vijay/text2sql/src/utils/database.py", line 58, in execute_query
    result = conn.execute(text(sql_query))
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 1414, in execute
    return meth(
           ^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/sqlalchemy/sql/elements.py", line 486, in _execute_on_connection
    return connection._execute_clauseelement(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
          ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 1842, in _execute_context
    return self._exec_single_context(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 2326, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/sqlalchemy/engine/default.py", line 748, in do_execute
    cursor.execute(statement, parameters)
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such function: CONCAT
[SQL: SELECT
  c.customer_id,
  CONCAT(c.first_name, ' ', c.last_name) AS full_name,
  c.email,
  c.phone,
  c.address,
  c.city,
  c.state,
  c.country,
  c.postal_code,
  o.order_id,
  o.order_date,
  o.status AS order_status,
  o.total_amount
FROM
  customers c
LEFT JOIN
  orders o ON c.customer_id = o.customer_id
ORDER BY
  c.customer_id, o.order_date;]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-26 00:22:26 - INFO - [sql_generator.py:297] - SQL generation completed in 9.41s
2025-03-26 00:22:26 - INFO - [sql_generator.py:121] - Query processing completed in 9.96s
2025-03-26 00:22:26 - INFO - [azure_client.py:131] - Generated SQL: SELECT c.first_name, c.last_name, o.order_date, o.status, o.total_amount
FROM customers c
JOIN orders o ON c.customer_id = o.customer_id;
2025-03-26 00:22:26,714 - QUERY: 'get me customer and their order details' → SQL: SELECT c.first_name, c.last_name, o.order_date, o.status, o.total_amount
FROM customers c
JOIN orders o ON c.customer_id = o.customer_id;
2025-03-26 00:22:26 - INFO - [azure_client.py:139] - SQL generation completed in 3.54s
2025-03-26 00:22:26 - INFO - [database.py:45] - Executing SQL query: SELECT c.first_name, c.last_name, o.order_date, o.status, o.total_amount
FROM customers c
JOIN orders o ON c.customer_id = o.customer_id;
2025-03-26 00:22:26 - INFO - [database.py:66] - Query returned 8 rows with 5 columns
2025-03-26 00:22:26 - INFO - [database.py:75] - Query processing completed in 0.01s
2025-03-26 00:22:26 - INFO - [sql_generator.py:297] - SQL generation completed in 7.28s
2025-03-26 00:22:26 - INFO - [sql_generator.py:121] - Query processing completed in 7.69s
2025-03-26 00:22:47 - INFO - [app.py:99] - User explicitly specified tables: order_items, customers, orders
2025-03-26 00:22:47 - INFO - [sql_generator.py:36] - Processing query: 'get me customer and their order details table order_items  table customers  table orders'
2025-03-26 00:22:47 - INFO - [sql_generator.py:39] - User explicitly selected tables: order_items, customers, orders
2025-03-26 00:22:47 - INFO - [sql_generator.py:44] - Detected intent: data_retrieval
2025-03-26 00:22:47 - INFO - [sql_generator.py:137] - Starting SQL generation process
2025-03-26 00:22:47 - INFO - [database.py:24] - Attempting database connection
2025-03-26 00:22:47 - INFO - [database.py:28] - Database connection established in 0.01s
2025-03-26 00:22:49 - INFO - [azure_client.py:46] - SQL generation started for query: 'get me customer and their order details table order_items  table customers  table orders'
2025-03-26 00:22:52 - INFO - [azure_client.py:131] - Generated SQL: SELECT 
    c.customer_id, 
    c.first_name, 
    c.last_name, 
    o.order_id, 
    o.order_date, 
    oi.item_id, 
    oi.product_id, 
    oi.quantity, 
    oi.price
FROM 
    customers AS c
JOIN 
    orders AS o ON c.customer_id = o.customer_id
JOIN 
    order_items AS oi ON o.order_id = oi.order_id
ORDER BY 
    c.customer_id, 
    o.order_date;
2025-03-26 00:22:52,667 - QUERY: 'get me customer and their order details table order_items  table customers  table orders' → SQL: SELECT 
    c.customer_id, 
    c.first_name, 
    c.last_name, 
    o.order_id, 
    o.order_date, 
    oi.item_id, 
    oi.product_id, 
    oi.quantity, 
    oi.price
FROM 
    customers AS c
JOIN 
    orders AS o ON c.customer_id = o.customer_id
JOIN 
    order_items AS oi ON o.order_id = oi.order_id
ORDER BY 
    c.customer_id, 
    o.order_date;
2025-03-26 00:22:52 - INFO - [azure_client.py:139] - SQL generation completed in 3.53s
2025-03-26 00:22:52 - INFO - [database.py:45] - Executing SQL query: SELECT 
    c.customer_id, 
    c.first_name, 
    c.last_name, 
    o.order_id, 
    o.order_date, 
    oi.item_id, 
    oi.product_id, 
    oi.quantity, 
    oi.price
FROM 
    customers AS c
JOIN 
    orders AS o ON c.customer_id = o.customer_id
JOIN 
    order_items AS oi ON o.order_id = oi.order_id
ORDER BY 
    c.customer_id, 
    o.order_date;
2025-03-26 00:22:52 - INFO - [database.py:66] - Query returned 11 rows with 9 columns
2025-03-26 00:22:52 - INFO - [database.py:75] - Query processing completed in 0.01s
2025-03-26 00:22:52 - INFO - [sql_generator.py:297] - SQL generation completed in 4.91s
2025-03-26 00:22:52 - INFO - [sql_generator.py:121] - Query processing completed in 5.39s
2025-03-26 00:28:19 - INFO - [database.py:238] - Closing database connection
2025-03-26 00:46:48 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-26 00:46:48 - INFO - [azure_client.py:21] - Using model: Phi-3-small-8k-instruct
2025-03-26 00:46:48 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-26 00:46:48 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-26 00:46:48 - INFO - [azure_client.py:21] - Using model: Phi-3-small-8k-instruct
2025-03-26 00:46:48 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-26 00:46:48 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-26 00:46:48 - INFO - [azure_client.py:21] - Using model: Phi-3-small-8k-instruct
2025-03-26 00:46:48 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-26 00:46:48 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-26 00:46:48 - INFO - [azure_client.py:21] - Using model: Phi-3-small-8k-instruct
2025-03-26 00:46:48 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-26 00:46:48 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-26 00:46:49 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-26 00:46:49 - INFO - [azure_client.py:21] - Using model: Phi-3-small-8k-instruct
2025-03-26 00:46:49 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-26 00:46:49 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-26 00:46:49 - INFO - [azure_client.py:21] - Using model: Phi-3-small-8k-instruct
2025-03-26 00:46:49 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-26 00:46:49 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-26 00:46:49 - INFO - [azure_client.py:21] - Using model: Phi-3-small-8k-instruct
2025-03-26 00:46:49 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-26 00:46:49 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-26 00:46:49 - INFO - [azure_client.py:21] - Using model: Phi-3-small-8k-instruct
2025-03-26 00:46:49 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-26 00:46:49 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-26 00:47:16 - INFO - [app.py:99] - User explicitly specified tables: order_items, orders, customers
2025-03-26 00:47:16 - INFO - [sql_generator.py:35] - Processing query: 'get me customer and their order details table order_items table orders  table customers'
2025-03-26 00:47:16 - INFO - [sql_generator.py:38] - User explicitly selected tables: order_items, orders, customers
2025-03-26 00:47:18 - INFO - [sql_generator.py:43] - Detected intent: data_retrieval
2025-03-26 00:47:18 - INFO - [sql_generator.py:136] - Starting SQL generation process
2025-03-26 00:47:18 - INFO - [database.py:24] - Attempting database connection
2025-03-26 00:47:18 - INFO - [database.py:28] - Database connection established in 0.02s
2025-03-26 00:47:20 - INFO - [sql_generator.py:232] - Found 2 join conditions for the relevant tables
2025-03-26 00:47:20 - INFO - [azure_client.py:47] - SQL generation started for query: 'get me customer and their order details table order_items table orders  table customers'
2025-03-26 00:47:23 - INFO - [azure_client.py:147] - Generated SQL: SELECT 
    customers.first_name,
    customers.last_name,
    orders.order_id,
    orders.order_date,
    orders.status,
    order_items.product_id,
    order_items.quantity,
    order_items.price
FROM 
    customers
INNER JOIN orders ON customers.customer_id = orders.customer_id
INNER JOIN order_items ON orders.order_id = order_items.order_id
2025-03-26 00:47:23,199 - QUERY: 'get me customer and their order details table order_items table orders  table customers' → SQL: SELECT 
    customers.first_name,
    customers.last_name,
    orders.order_id,
    orders.order_date,
    orders.status,
    order_items.product_id,
    order_items.quantity,
    order_items.price
FROM 
    customers
INNER JOIN orders ON customers.customer_id = orders.customer_id
INNER JOIN order_items ON orders.order_id = order_items.order_id
2025-03-26 00:47:23 - INFO - [azure_client.py:155] - SQL generation completed in 3.01s
2025-03-26 00:47:23 - INFO - [database.py:45] - Executing SQL query: SELECT 
    customers.first_name,
    customers.last_name,
    orders.order_id,
    orders.order_date,
    orders.status,
    order_items.product_id,
    order_items.quantity,
    order_items.price
FROM 
    customers
INNER JOIN orders ON customers.customer_id = orders.customer_id
INNER JOIN order_items ON orders.order_id = order_items.order_id
2025-03-26 00:47:23 - INFO - [database.py:66] - Query returned 11 rows with 8 columns
2025-03-26 00:47:23 - INFO - [database.py:75] - Query processing completed in 0.03s
2025-03-26 00:47:23 - INFO - [sql_generator.py:327] - SQL generation completed in 5.11s
2025-03-26 00:47:23 - INFO - [sql_generator.py:120] - Query processing completed in 6.38s
2025-03-26 00:49:33 - INFO - [database.py:238] - Closing database connection
2025-03-26 00:49:34 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-26 00:49:34 - INFO - [azure_client.py:21] - Using model: Phi-3-small-8k-instruct
2025-03-26 00:49:34 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-26 00:49:34 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-26 00:49:34 - INFO - [azure_client.py:21] - Using model: Phi-3-small-8k-instruct
2025-03-26 00:49:34 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-26 00:49:34 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-26 00:49:34 - INFO - [azure_client.py:21] - Using model: Phi-3-small-8k-instruct
2025-03-26 00:49:34 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-26 00:49:34 - INFO - [azure_client.py:20] - Initializing Azure AI Client with endpoint: https://models.inference.ai.azure.com
2025-03-26 00:49:34 - INFO - [azure_client.py:21] - Using model: Phi-3-small-8k-instruct
2025-03-26 00:49:34 - INFO - [azure_client.py:29] - Azure AI Client initialized successfully
2025-03-26 00:49:34 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-26 00:49:40 - INFO - [app.py:99] - User explicitly specified tables: order_items, orders, customers
2025-03-26 00:49:40 - INFO - [sql_generator.py:35] - Processing query: 'get me customer and their order details table order_items table orders  table customers'
2025-03-26 00:49:40 - INFO - [sql_generator.py:38] - User explicitly selected tables: order_items, orders, customers
2025-03-26 00:49:45 - INFO - [sql_generator.py:43] - Detected intent: data_retrieval
2025-03-26 00:49:45 - INFO - [sql_generator.py:136] - Starting SQL generation process
2025-03-26 00:49:45 - INFO - [database.py:24] - Attempting database connection
2025-03-26 00:49:45 - INFO - [database.py:28] - Database connection established in 0.01s
2025-03-26 00:49:47 - INFO - [sql_generator.py:232] - Found 2 join conditions for the relevant tables
2025-03-26 00:49:47 - INFO - [azure_client.py:47] - SQL generation started for query: 'get me customer and their order details table order_items table orders  table customers'
2025-03-26 00:49:47 - INFO - [azure_client.py:123] - Prompt: [{'role': 'system', 'content': "You are an expert SQL assistant. Convert natural language questions into precise, executable SQL queries.\nYour task is to:\n1. Analyze the provided schema carefully, noting table relationships and column types\n2. Generate a SQL query that accurately answers the user's question\n3. Consider performance by selecting only necessary columns\n4. Use appropriate JOIN conditions based on primary/foreign key relationships or provided join conditions\n5. Include a brief explanation of your query\n\nRules:\n- Include table names and column references exactly as provided in the schema\n- Use appropriate SQL functions based on column data types\n- Consider NULL values in your conditions\n- Use table aliases for better readability when joining multiple tables\n- Add column aliases for computed values\n- Format the SQL query with proper indentation\n- Return the SQL inside a code block tagged with ```sql\n\nExample output format:\nHere's a query that will [explanation]...\n\n```sql\nSELECT ...\nFROM ...\nWHERE ...\n```"}, {'role': 'user', 'content': "Here's the database schema:\nTable: order_items\nDescription: Individual items within each order\nColumns: item_id (INTEGER), order_id (INTEGER), product_id (INTEGER), quantity (INTEGER), price (REAL)\nPrimary Key(s): item_id\n\nTable: orders\nDescription: Customer orders and transactions\nColumns: order_id (INTEGER), customer_id (INTEGER), order_date (TEXT), status (TEXT), total_amount (REAL)\nPrimary Key(s): order_id\n\nTable: customers\nDescription: Customer information and profiles\nColumns: customer_id (INTEGER), first_name (TEXT), last_name (TEXT), email (TEXT)\nPrimary Key(s): customer_id\n"}, {'role': 'user', 'content': 'Use the following pre-defined join conditions when joining these tables:\n- When joining customers with orders, use: INNER JOIN orders ON customers.customer_id = orders.customer_id\n- When joining orders with order_items, use: INNER JOIN order_items ON orders.order_id = order_items.order_id\n'}, {'role': 'user', 'content': 'Here are some example queries and their SQL:\nQuestion: How many records are in the order_items table?\nSQL: SELECT COUNT(*) AS record_count FROM order_items\n\nQuestion: Get all columns from order_items\nSQL: SELECT * FROM order_items LIMIT 5\n\nQuestion: Get record from order_items by item_id\nSQL: SELECT * FROM order_items WHERE item_id = 1\n\nQuestion: Show some data from customers and orders\nSQL: SELECT customers.first_name, orders.customer_id\nFROM customers\nINNER JOIN orders ON customers.customer_id = orders.customer_id\nLIMIT 5\n\n'}, {'role': 'user', 'content': 'Convert this question to SQL: get me customer and their order details table order_items table orders  table customers'}]
2025-03-26 00:49:51 - INFO - [azure_client.py:147] - Generated SQL: SELECT 
    customers.first_name, 
    customers.last_name, 
    customers.email,
    orders.order_id, 
    orders.order_date, 
    orders.status, 
    orders.total_amount, 
    order_items.item_id, 
    order_items.product_id, 
    order_items.quantity, 
    order_items.price
FROM 
    customers
INNER JOIN 
    orders ON customers.customer_id = orders.customer_id
INNER JOIN 
    order_items ON orders.order_id = order_items.order_id;
2025-03-26 00:49:51,060 - QUERY: 'get me customer and their order details table order_items table orders  table customers' → SQL: SELECT 
    customers.first_name, 
    customers.last_name, 
    customers.email,
    orders.order_id, 
    orders.order_date, 
    orders.status, 
    orders.total_amount, 
    order_items.item_id, 
    order_items.product_id, 
    order_items.quantity, 
    order_items.price
FROM 
    customers
INNER JOIN 
    orders ON customers.customer_id = orders.customer_id
INNER JOIN 
    order_items ON orders.order_id = order_items.order_id;
2025-03-26 00:49:51 - INFO - [azure_client.py:155] - SQL generation completed in 3.85s
2025-03-26 00:49:51 - INFO - [database.py:45] - Executing SQL query: SELECT 
    customers.first_name, 
    customers.last_name, 
    customers.email,
    orders.order_id, 
    orders.order_date, 
    orders.status, 
    orders.total_amount, 
    order_items.item_id, 
    order_items.product_id, 
    order_items.quantity, 
    order_items.price
FROM 
    customers
INNER JOIN 
    orders ON customers.customer_id = orders.customer_id
INNER JOIN 
    order_items ON orders.order_id = order_items.order_id;
2025-03-26 00:49:51 - INFO - [database.py:66] - Query returned 11 rows with 11 columns
2025-03-26 00:49:51 - INFO - [database.py:75] - Query processing completed in 0.01s
2025-03-26 00:49:51 - INFO - [sql_generator.py:327] - SQL generation completed in 6.01s
2025-03-26 00:49:51 - INFO - [sql_generator.py:120] - Query processing completed in 11.07s
2025-03-26 00:51:33 - INFO - [database.py:238] - Closing database connection
2025-03-26 09:14:03 - CRITICAL - [llm_engine.py:23] - GITHUB_TOKEN environment variable not set
2025-03-26 09:14:35 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-26 09:14:35 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-26 09:14:35 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-26 09:14:35 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-26 09:14:35 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-26 09:14:35 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-26 09:14:35 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-26 09:14:35 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-26 09:14:35 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-26 09:14:35 - INFO - [azure_client.py:11] - Initializing Azure AI Client using LLM Engine
2025-03-26 09:14:35 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-26 09:14:35 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-26 09:14:35 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-26 09:14:35 - INFO - [azure_client.py:17] - Azure AI Client initialized successfully
2025-03-26 09:14:35 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-26 09:14:36 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-26 09:14:36 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-26 09:14:36 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-26 09:14:36 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-26 09:14:36 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-26 09:14:36 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-26 09:14:36 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-26 09:14:36 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-26 09:14:36 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-26 09:14:36 - INFO - [azure_client.py:11] - Initializing Azure AI Client using LLM Engine
2025-03-26 09:14:36 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-26 09:14:36 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-26 09:14:36 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-26 09:14:36 - INFO - [azure_client.py:17] - Azure AI Client initialized successfully
2025-03-26 09:14:36 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-26 09:14:48 - INFO - [sql_generator.py:35] - Processing query: 'test'
2025-03-26 09:14:48 - INFO - [llm_engine.py:55] - [INTENT] Completion generation started
2025-03-26 09:15:54 - INFO - [database.py:238] - Closing database connection
2025-03-26 09:15:57 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-26 09:15:57 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-26 09:15:57 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-26 09:15:57 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-26 09:15:57 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-26 09:15:57 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-26 09:15:57 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-26 09:15:57 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-26 09:15:57 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-26 09:15:57 - INFO - [azure_client.py:11] - Initializing Azure AI Client using LLM Engine
2025-03-26 09:15:57 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-26 09:15:57 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-26 09:15:57 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-26 09:15:57 - INFO - [azure_client.py:17] - Azure AI Client initialized successfully
2025-03-26 09:15:57 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-26 09:15:57 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-26 09:15:57 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-26 09:15:57 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-26 09:15:57 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-26 09:15:57 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-26 09:15:57 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-26 09:15:57 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-26 09:15:57 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-26 09:15:57 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-26 09:15:57 - INFO - [azure_client.py:11] - Initializing Azure AI Client using LLM Engine
2025-03-26 09:15:57 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-26 09:15:57 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-26 09:15:57 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-26 09:15:57 - INFO - [azure_client.py:17] - Azure AI Client initialized successfully
2025-03-26 09:15:57 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-26 09:16:13 - INFO - [sql_generator.py:35] - Processing query: 'get me all customers details'
2025-03-26 09:16:13 - INFO - [llm_engine.py:55] - [INTENT] Completion generation started
2025-03-26 09:16:36 - INFO - [database.py:238] - Closing database connection
2025-03-26 09:17:41 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-26 09:17:41 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-26 09:17:41 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-26 09:17:41 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-26 09:17:41 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-26 09:17:41 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-26 09:17:41 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-26 09:17:41 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-26 09:17:41 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-26 09:17:41 - INFO - [azure_client.py:11] - Initializing Azure AI Client using LLM Engine
2025-03-26 09:17:41 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-26 09:17:41 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-26 09:17:41 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-26 09:17:41 - INFO - [azure_client.py:17] - Azure AI Client initialized successfully
2025-03-26 09:17:41 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-26 09:17:42 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-26 09:17:42 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-26 09:17:42 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-26 09:17:42 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-26 09:17:42 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-26 09:17:42 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-26 09:17:42 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-26 09:17:42 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-26 09:17:42 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-26 09:17:42 - INFO - [azure_client.py:11] - Initializing Azure AI Client using LLM Engine
2025-03-26 09:17:42 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-26 09:17:42 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-26 09:17:42 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-26 09:17:42 - INFO - [azure_client.py:17] - Azure AI Client initialized successfully
2025-03-26 09:17:42 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-26 09:17:53 - INFO - [sql_generator.py:35] - Processing query: 'get me all customers'
2025-03-26 09:17:53 - INFO - [llm_engine.py:55] - [INTENT] Completion generation started
2025-03-26 09:19:53 - WARNING - [app.py:190] - Query 2bfd5b49-1b83-49a9-9d3c-8fcd41361fe4 timed out after 2 minutes
2025-03-26 09:27:11 - INFO - [sql_generator.py:35] - Processing query: 'test'
2025-03-26 09:27:11 - INFO - [llm_engine.py:55] - [INTENT] Completion generation started
2025-03-26 09:27:11 - ERROR - [llm_engine.py:98] - [INTENT] Completion generation error after 0.23s: ('Connection aborted.', RemoteDisconnected('Remote end closed connection without response'))
Traceback (most recent call last):
  File "/home/vijay/text2sql/src/utils/llm_engine.py", line 72, in generate_completion
    response = self.client.complete(
               ^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/ai/inference/_patch.py", line 728, in complete
    pipeline_response: PipelineResponse = self._client._pipeline.run(  # pylint: disable=protected-access
                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/_base.py", line 240, in run
    return first_node.send(pipeline_request)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/_base.py", line 96, in send
    response = self.next.send(request)
               ^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/_base.py", line 96, in send
    response = self.next.send(request)
               ^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/_base.py", line 96, in send
    response = self.next.send(request)
               ^^^^^^^^^^^^^^^^^^^^^^^
  [Previous line repeated 2 more times]
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/policies/_redirect.py", line 204, in send
    response = self.next.send(request)
               ^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/policies/_retry.py", line 573, in send
    raise err
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/policies/_retry.py", line 551, in send
    response = self.next.send(request)
               ^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/_base.py", line 96, in send
    response = self.next.send(request)
               ^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/_base.py", line 96, in send
    response = self.next.send(request)
               ^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/_base.py", line 96, in send
    response = self.next.send(request)
               ^^^^^^^^^^^^^^^^^^^^^^^
  [Previous line repeated 3 more times]
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/_base.py", line 128, in send
    self._sender.send(request.http_request, **request.context.options),
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/transport/_requests_basic.py", line 409, in send
    raise error
azure.core.exceptions.ServiceResponseError: ('Connection aborted.', RemoteDisconnected('Remote end closed connection without response'))
2025-03-26 09:27:11 - INFO - [sql_generator.py:43] - Detected intent: data_retrieval
2025-03-26 09:27:11 - INFO - [sql_generator.py:136] - Starting SQL generation process
2025-03-26 09:27:11 - INFO - [database.py:24] - Attempting database connection
2025-03-26 09:27:11 - INFO - [database.py:28] - Database connection established in 0.01s
2025-03-26 09:27:11 - INFO - [llm_engine.py:55] - [TABLE] Completion generation started
2025-03-26 09:29:11 - WARNING - [app.py:190] - Query f1eb0fce-3b08-4cb7-9956-12bc062441e1 timed out after 2 minutes
2025-03-26 09:32:20 - INFO - [database.py:238] - Closing database connection
2025-03-26 23:25:58 - CRITICAL - [llm_engine.py:23] - GITHUB_TOKEN environment variable not set
2025-03-26 23:28:33 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-26 23:28:33 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-26 23:28:33 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-26 23:28:33 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-26 23:28:33 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-26 23:28:33 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-26 23:28:33 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-26 23:28:33 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-26 23:28:33 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-26 23:28:33 - INFO - [azure_client.py:11] - Initializing Azure AI Client using LLM Engine
2025-03-26 23:28:33 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-26 23:28:33 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-26 23:28:33 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-26 23:28:33 - INFO - [azure_client.py:17] - Azure AI Client initialized successfully
2025-03-26 23:28:33 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-26 23:28:34 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-26 23:28:34 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-26 23:28:34 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-26 23:28:34 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-26 23:28:34 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-26 23:28:34 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-26 23:28:34 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-26 23:28:34 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-26 23:28:34 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-26 23:28:34 - INFO - [azure_client.py:11] - Initializing Azure AI Client using LLM Engine
2025-03-26 23:28:34 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-26 23:28:34 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-26 23:28:34 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-26 23:28:34 - INFO - [azure_client.py:17] - Azure AI Client initialized successfully
2025-03-26 23:28:34 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-26 23:29:21 - INFO - [database.py:238] - Closing database connection
2025-03-26 23:29:23 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-26 23:29:23 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-26 23:29:23 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-26 23:29:23 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-26 23:29:23 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-26 23:29:23 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-26 23:29:23 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-26 23:29:23 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-26 23:29:23 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-26 23:29:23 - INFO - [azure_client.py:11] - Initializing Azure AI Client using LLM Engine
2025-03-26 23:29:23 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-26 23:29:23 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-26 23:29:23 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-26 23:29:23 - INFO - [azure_client.py:17] - Azure AI Client initialized successfully
2025-03-26 23:29:23 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-26 23:29:48 - INFO - [database.py:238] - Closing database connection
2025-03-26 23:29:50 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-26 23:29:50 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-26 23:29:50 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-26 23:29:50 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-26 23:29:50 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-26 23:29:50 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-26 23:29:50 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-26 23:29:50 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-26 23:29:50 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-26 23:29:50 - INFO - [azure_client.py:11] - Initializing Azure AI Client using LLM Engine
2025-03-26 23:29:50 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-26 23:29:50 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-26 23:29:50 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-26 23:29:50 - INFO - [azure_client.py:17] - Azure AI Client initialized successfully
2025-03-26 23:29:50 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-26 23:29:50 - INFO - [feedback_manager.py:29] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-03-26 23:31:00 - INFO - [database.py:238] - Closing database connection
2025-03-26 23:31:03 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-26 23:31:03 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-26 23:31:03 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-26 23:31:03 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-26 23:31:03 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-26 23:31:03 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-26 23:31:03 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-26 23:31:03 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-26 23:31:03 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-26 23:31:03 - INFO - [azure_client.py:11] - Initializing Azure AI Client using LLM Engine
2025-03-26 23:31:03 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-26 23:31:03 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-26 23:31:03 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-26 23:31:03 - INFO - [azure_client.py:17] - Azure AI Client initialized successfully
2025-03-26 23:31:03 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-26 23:31:03 - INFO - [feedback_manager.py:29] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-03-26 23:31:25 - INFO - [database.py:238] - Closing database connection
2025-03-26 23:31:28 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-26 23:31:28 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-26 23:31:28 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-26 23:31:28 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-26 23:31:28 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-26 23:31:28 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-26 23:31:28 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-26 23:31:28 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-26 23:31:28 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-26 23:31:28 - INFO - [azure_client.py:11] - Initializing Azure AI Client using LLM Engine
2025-03-26 23:31:28 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-26 23:31:28 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-26 23:31:28 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-26 23:31:28 - INFO - [azure_client.py:17] - Azure AI Client initialized successfully
2025-03-26 23:31:28 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-26 23:31:28 - INFO - [feedback_manager.py:29] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-03-26 23:35:08 - INFO - [database.py:238] - Closing database connection
2025-03-26 23:35:08 - INFO - [feedback_manager.py:209] - Closing database connection
2025-03-26 23:35:09 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-26 23:35:09 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-26 23:35:09 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-26 23:35:09 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-26 23:35:09 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-26 23:35:09 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-26 23:35:09 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-26 23:35:09 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-26 23:35:09 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-26 23:35:09 - INFO - [azure_client.py:11] - Initializing Azure AI Client using LLM Engine
2025-03-26 23:35:09 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-26 23:35:09 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-26 23:35:09 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-26 23:35:09 - INFO - [azure_client.py:17] - Azure AI Client initialized successfully
2025-03-26 23:35:09 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-26 23:35:09 - INFO - [feedback_manager.py:29] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-03-26 23:37:59 - INFO - [database.py:238] - Closing database connection
2025-03-26 23:37:59 - INFO - [feedback_manager.py:209] - Closing database connection
2025-03-26 23:38:00 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-26 23:38:00 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-26 23:38:00 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-26 23:38:00 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-26 23:38:00 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-26 23:38:00 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-26 23:38:00 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-26 23:38:00 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-26 23:38:00 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-26 23:38:00 - INFO - [azure_client.py:11] - Initializing Azure AI Client using LLM Engine
2025-03-26 23:38:00 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-26 23:38:00 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-26 23:38:00 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-26 23:38:00 - INFO - [azure_client.py:17] - Azure AI Client initialized successfully
2025-03-26 23:38:00 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-26 23:38:00 - INFO - [feedback_manager.py:29] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-03-26 23:46:48 - INFO - [database.py:238] - Closing database connection
2025-03-26 23:46:48 - INFO - [feedback_manager.py:209] - Closing database connection
2025-03-26 23:46:50 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-26 23:46:50 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-26 23:46:50 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-26 23:46:50 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-26 23:46:50 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-26 23:46:50 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-26 23:46:50 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-26 23:46:50 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-26 23:46:50 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-26 23:46:50 - INFO - [azure_client.py:11] - Initializing Azure AI Client using LLM Engine
2025-03-26 23:46:50 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-26 23:46:50 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-26 23:46:50 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-26 23:46:50 - INFO - [azure_client.py:17] - Azure AI Client initialized successfully
2025-03-26 23:46:50 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-26 23:46:50 - INFO - [feedback_manager.py:29] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-03-26 23:46:52 - INFO - [database.py:238] - Closing database connection
2025-03-26 23:46:55 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-26 23:46:55 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-26 23:46:55 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-26 23:46:55 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-26 23:46:55 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-26 23:46:55 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-26 23:46:55 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-26 23:46:55 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-26 23:46:55 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-26 23:46:55 - INFO - [azure_client.py:11] - Initializing Azure AI Client using LLM Engine
2025-03-26 23:46:55 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-26 23:46:55 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-26 23:46:55 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-26 23:46:55 - INFO - [azure_client.py:17] - Azure AI Client initialized successfully
2025-03-26 23:46:55 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-26 23:46:55 - INFO - [feedback_manager.py:29] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-03-26 23:46:56 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-26 23:46:56 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-26 23:46:56 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-26 23:46:56 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-26 23:46:56 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-26 23:46:56 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-26 23:46:56 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-26 23:46:56 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-26 23:46:56 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-26 23:46:56 - INFO - [azure_client.py:11] - Initializing Azure AI Client using LLM Engine
2025-03-26 23:46:56 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-26 23:46:56 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-26 23:46:56 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-26 23:46:56 - INFO - [azure_client.py:17] - Azure AI Client initialized successfully
2025-03-26 23:46:56 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-26 23:46:56 - INFO - [feedback_manager.py:29] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-03-26 23:47:36 - INFO - [sql_generator.py:37] - Processing query: 'get me all customers'
2025-03-26 23:47:36 - INFO - [llm_engine.py:55] - [INTENT] Completion generation started
2025-03-26 23:47:37 - INFO - [llm_engine.py:92] - [INTENT] Completion generation completed in 1.31s
2025-03-26 23:47:37 - INFO - [sql_generator.py:45] - Detected intent: data_retrieval
2025-03-26 23:47:37 - INFO - [sql_generator.py:138] - Starting SQL generation process
2025-03-26 23:47:37 - INFO - [database.py:24] - Attempting database connection
2025-03-26 23:47:37 - INFO - [database.py:28] - Database connection established in 0.02s
2025-03-26 23:47:37 - INFO - [llm_engine.py:55] - [TABLE] Completion generation started
2025-03-26 23:47:38 - INFO - [llm_engine.py:92] - [TABLE] Completion generation completed in 1.18s
2025-03-26 23:47:38 - INFO - [llm_engine.py:55] - [COLUMN] Completion generation started
2025-03-26 23:47:40 - INFO - [llm_engine.py:92] - [COLUMN] Completion generation completed in 1.87s
2025-03-26 23:47:40 - INFO - [feedback_manager.py:39] - Attempting database connection
2025-03-26 23:47:40 - INFO - [feedback_manager.py:43] - Database connection established in 0.00s
2025-03-26 23:47:40 - INFO - [feedback_manager.py:166] - Found 0 similar queries for 'get me all customers...'
2025-03-26 23:47:40 - INFO - [azure_client.py:35] - SQL generation started for query: 'get me all customers'
2025-03-26 23:47:40 - INFO - [llm_engine.py:55] - [SQL_GEN] Completion generation started
2025-03-26 23:47:42 - INFO - [llm_engine.py:92] - [SQL_GEN] Completion generation completed in 1.84s
2025-03-26 23:47:42 - INFO - [azure_client.py:110] - Generated SQL: SELECT * FROM customers;
2025-03-26 23:47:42,433 - QUERY: 'get me all customers' → SQL: SELECT * FROM customers;
2025-03-26 23:47:42 - INFO - [azure_client.py:118] - SQL generation completed in 1.85s
2025-03-26 23:47:42 - INFO - [database.py:45] - Executing SQL query: SELECT * FROM customers;
2025-03-26 23:47:42 - INFO - [database.py:66] - Query returned 5 rows with 11 columns
2025-03-26 23:47:42 - INFO - [database.py:75] - Query processing completed in 0.04s
2025-03-26 23:47:42 - INFO - [sql_generator.py:353] - SQL generation completed in 5.01s
2025-03-26 23:47:42 - INFO - [sql_generator.py:122] - Query processing completed in 6.34s
2025-03-26 23:50:39 - INFO - [database.py:238] - Closing database connection
2025-03-26 23:50:39 - INFO - [feedback_manager.py:209] - Closing database connection
2025-03-26 23:50:42 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-26 23:50:42 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-26 23:50:42 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-26 23:50:42 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-26 23:50:42 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-26 23:50:42 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-26 23:50:42 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-26 23:50:42 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-26 23:50:42 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-26 23:50:42 - INFO - [azure_client.py:11] - Initializing Azure AI Client using LLM Engine
2025-03-26 23:50:42 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-26 23:50:42 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-26 23:50:42 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-26 23:50:42 - INFO - [azure_client.py:17] - Azure AI Client initialized successfully
2025-03-26 23:50:42 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-26 23:50:42 - INFO - [feedback_manager.py:29] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-03-26 23:50:43 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-26 23:50:43 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-26 23:50:43 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-26 23:50:43 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-26 23:50:43 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-26 23:50:43 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-26 23:50:43 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-26 23:50:43 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-26 23:50:43 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-26 23:50:43 - INFO - [azure_client.py:11] - Initializing Azure AI Client using LLM Engine
2025-03-26 23:50:43 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-26 23:50:43 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-26 23:50:43 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-26 23:50:43 - INFO - [azure_client.py:17] - Azure AI Client initialized successfully
2025-03-26 23:50:43 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-26 23:50:43 - INFO - [feedback_manager.py:29] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-03-26 23:50:52 - INFO - [sql_generator.py:37] - Processing query: 'get me all the customers'
2025-03-26 23:50:52 - INFO - [llm_engine.py:55] - [INTENT] Completion generation started
2025-03-26 23:50:54 - INFO - [llm_engine.py:92] - [INTENT] Completion generation completed in 1.25s
2025-03-26 23:50:54 - INFO - [sql_generator.py:45] - Detected intent: data_retrieval
2025-03-26 23:50:54 - INFO - [sql_generator.py:138] - Starting SQL generation process
2025-03-26 23:50:54 - INFO - [database.py:24] - Attempting database connection
2025-03-26 23:50:54 - INFO - [database.py:28] - Database connection established in 0.02s
2025-03-26 23:50:54 - INFO - [llm_engine.py:55] - [TABLE] Completion generation started
2025-03-26 23:50:55 - INFO - [llm_engine.py:92] - [TABLE] Completion generation completed in 1.12s
2025-03-26 23:50:55 - INFO - [llm_engine.py:55] - [COLUMN] Completion generation started
2025-03-26 23:50:56 - INFO - [llm_engine.py:92] - [COLUMN] Completion generation completed in 1.77s
2025-03-26 23:50:56 - INFO - [feedback_manager.py:39] - Attempting database connection
2025-03-26 23:50:56 - INFO - [feedback_manager.py:43] - Database connection established in 0.00s
2025-03-26 23:50:57 - INFO - [feedback_manager.py:166] - Found 0 similar queries for 'get me all the customers...'
2025-03-26 23:50:57 - INFO - [azure_client.py:35] - SQL generation started for query: 'get me all the customers'
2025-03-26 23:50:57 - INFO - [llm_engine.py:55] - [SQL_GEN] Completion generation started
2025-03-26 23:50:58 - INFO - [llm_engine.py:92] - [SQL_GEN] Completion generation completed in 1.80s
2025-03-26 23:50:58 - INFO - [azure_client.py:110] - Generated SQL: SELECT * FROM customers;
2025-03-26 23:50:58,808 - QUERY: 'get me all the customers' → SQL: SELECT * FROM customers;
2025-03-26 23:50:58 - INFO - [azure_client.py:118] - SQL generation completed in 1.80s
2025-03-26 23:50:58 - INFO - [database.py:45] - Executing SQL query: SELECT * FROM customers;
2025-03-26 23:50:58 - INFO - [database.py:66] - Query returned 5 rows with 11 columns
2025-03-26 23:50:58 - INFO - [database.py:75] - Query processing completed in 0.02s
2025-03-26 23:50:58 - INFO - [sql_generator.py:353] - SQL generation completed in 4.77s
2025-03-26 23:50:58 - INFO - [sql_generator.py:122] - Query processing completed in 6.04s
2025-03-26 23:50:59 - INFO - [feedback_manager.py:29] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-03-26 23:50:59 - INFO - [feedback_manager.py:39] - Attempting database connection
2025-03-26 23:50:59 - INFO - [feedback_manager.py:43] - Database connection established in 0.00s
2025-03-26 23:50:59 - INFO - [feedback_manager.py:200] - Feedback stats: 0 total, 0 positive, 0 negative
2025-03-26 23:51:10 - INFO - [app.py:268] - Feedback received for query: 'get me all the customers...' - Rating: 1
2025-03-26 23:51:10 - INFO - [feedback_manager.py:29] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-03-26 23:51:10 - INFO - [feedback_manager.py:39] - Attempting database connection
2025-03-26 23:51:10 - INFO - [feedback_manager.py:43] - Database connection established in 0.00s
2025-03-26 23:51:10 - INFO - [feedback_manager.py:94] - Saved feedback for query: 'get me all the customers...' with rating 1
2025-03-26 23:51:10 - INFO - [feedback_manager.py:29] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-03-26 23:51:10 - INFO - [feedback_manager.py:39] - Attempting database connection
2025-03-26 23:51:10 - INFO - [feedback_manager.py:43] - Database connection established in 0.00s
2025-03-26 23:51:10 - INFO - [feedback_manager.py:200] - Feedback stats: 1 total, 1 positive, 0 negative
2025-03-26 23:51:51 - INFO - [app.py:268] - Feedback received for query: 'get me all the customers...' - Rating: 0
2025-03-26 23:51:51 - INFO - [feedback_manager.py:29] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-03-26 23:51:51 - INFO - [feedback_manager.py:29] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-03-26 23:51:51 - INFO - [feedback_manager.py:39] - Attempting database connection
2025-03-26 23:51:51 - INFO - [feedback_manager.py:39] - Attempting database connection
2025-03-26 23:51:51 - INFO - [feedback_manager.py:43] - Database connection established in 0.00s
2025-03-26 23:51:51 - INFO - [feedback_manager.py:43] - Database connection established in 0.01s
2025-03-26 23:51:51 - INFO - [feedback_manager.py:94] - Saved feedback for query: 'get me all the customers...' with rating 0
2025-03-26 23:51:51 - INFO - [feedback_manager.py:200] - Feedback stats: 2 total, 1 positive, 1 negative
2025-03-26 23:51:52 - INFO - [app.py:268] - Feedback received for query: 'get me all the customers...' - Rating: 1
2025-03-26 23:51:52 - INFO - [feedback_manager.py:29] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-03-26 23:51:52 - INFO - [feedback_manager.py:39] - Attempting database connection
2025-03-26 23:51:52 - INFO - [feedback_manager.py:43] - Database connection established in 0.00s
2025-03-26 23:51:52 - INFO - [feedback_manager.py:94] - Saved feedback for query: 'get me all the customers...' with rating 1
2025-03-26 23:51:53 - INFO - [feedback_manager.py:29] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-03-26 23:51:53 - INFO - [feedback_manager.py:39] - Attempting database connection
2025-03-26 23:51:53 - INFO - [feedback_manager.py:43] - Database connection established in 0.00s
2025-03-26 23:51:53 - INFO - [feedback_manager.py:200] - Feedback stats: 3 total, 2 positive, 1 negative
2025-03-26 23:51:54 - INFO - [app.py:268] - Feedback received for query: 'get me all the customers...' - Rating: 1
2025-03-26 23:51:54 - INFO - [feedback_manager.py:29] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-03-26 23:51:54 - INFO - [feedback_manager.py:29] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-03-26 23:51:54 - INFO - [feedback_manager.py:39] - Attempting database connection
2025-03-26 23:51:54 - INFO - [feedback_manager.py:39] - Attempting database connection
2025-03-26 23:51:54 - INFO - [feedback_manager.py:43] - Database connection established in 0.00s
2025-03-26 23:51:54 - INFO - [feedback_manager.py:43] - Database connection established in 0.01s
2025-03-26 23:51:54 - INFO - [feedback_manager.py:200] - Feedback stats: 3 total, 2 positive, 1 negative
2025-03-26 23:51:54 - INFO - [feedback_manager.py:94] - Saved feedback for query: 'get me all the customers...' with rating 1
2025-03-26 23:54:24 - INFO - [sql_generator.py:37] - Processing query: 'get me all customers'
2025-03-26 23:54:24 - INFO - [llm_engine.py:55] - [INTENT] Completion generation started
2025-03-26 23:54:24 - INFO - [llm_engine.py:92] - [INTENT] Completion generation completed in 0.55s
2025-03-26 23:54:24 - INFO - [sql_generator.py:45] - Detected intent: data_retrieval
2025-03-26 23:54:24 - INFO - [sql_generator.py:138] - Starting SQL generation process
2025-03-26 23:54:24 - INFO - [database.py:24] - Attempting database connection
2025-03-26 23:54:24 - INFO - [database.py:28] - Database connection established in 0.00s
2025-03-26 23:54:24 - INFO - [llm_engine.py:55] - [TABLE] Completion generation started
2025-03-26 23:54:25 - INFO - [llm_engine.py:92] - [TABLE] Completion generation completed in 0.36s
2025-03-26 23:54:25 - INFO - [llm_engine.py:55] - [COLUMN] Completion generation started
2025-03-26 23:54:26 - INFO - [llm_engine.py:92] - [COLUMN] Completion generation completed in 1.11s
2025-03-26 23:54:26 - INFO - [feedback_manager.py:166] - Found 3 similar queries for 'get me all customers...'
2025-03-26 23:54:26 - INFO - [sql_generator.py:276] - Found 3 similar queries with positive feedback
2025-03-26 23:54:26 - INFO - [azure_client.py:35] - SQL generation started for query: 'get me all customers'
2025-03-26 23:54:26 - INFO - [llm_engine.py:55] - [SQL_GEN] Completion generation started
2025-03-26 23:54:27 - INFO - [llm_engine.py:92] - [SQL_GEN] Completion generation completed in 1.24s
2025-03-26 23:54:27 - INFO - [azure_client.py:110] - Generated SQL: SELECT * FROM customers;
2025-03-26 23:54:27,521 - QUERY: 'get me all customers' → SQL: SELECT * FROM customers;
2025-03-26 23:54:27 - INFO - [azure_client.py:118] - SQL generation completed in 1.25s
2025-03-26 23:54:27 - INFO - [database.py:45] - Executing SQL query: SELECT * FROM customers;
2025-03-26 23:54:27 - INFO - [database.py:66] - Query returned 5 rows with 11 columns
2025-03-26 23:54:27 - INFO - [database.py:75] - Query processing completed in 0.02s
2025-03-26 23:54:27 - INFO - [sql_generator.py:353] - SQL generation completed in 2.77s
2025-03-26 23:54:27 - INFO - [sql_generator.py:122] - Query processing completed in 3.33s
2025-03-26 23:54:32 - INFO - [app.py:268] - Feedback received for query: 'get me all customers...' - Rating: 1
2025-03-26 23:54:32 - INFO - [feedback_manager.py:29] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-03-26 23:54:32 - INFO - [feedback_manager.py:39] - Attempting database connection
2025-03-26 23:54:32 - INFO - [feedback_manager.py:43] - Database connection established in 0.00s
2025-03-26 23:54:32 - INFO - [feedback_manager.py:94] - Saved feedback for query: 'get me all customers...' with rating 1
2025-03-26 23:55:06 - INFO - [sql_generator.py:37] - Processing query: 'get me all the customers'
2025-03-26 23:55:06 - INFO - [llm_engine.py:55] - [INTENT] Completion generation started
2025-03-26 23:55:07 - INFO - [llm_engine.py:92] - [INTENT] Completion generation completed in 0.40s
2025-03-26 23:55:07 - INFO - [sql_generator.py:45] - Detected intent: data_retrieval
2025-03-26 23:55:07 - INFO - [sql_generator.py:138] - Starting SQL generation process
2025-03-26 23:55:07 - INFO - [database.py:24] - Attempting database connection
2025-03-26 23:55:07 - INFO - [database.py:28] - Database connection established in 0.00s
2025-03-26 23:55:07 - INFO - [llm_engine.py:55] - [TABLE] Completion generation started
2025-03-26 23:55:07 - INFO - [llm_engine.py:92] - [TABLE] Completion generation completed in 0.34s
2025-03-26 23:55:07 - INFO - [llm_engine.py:55] - [COLUMN] Completion generation started
2025-03-26 23:55:08 - INFO - [llm_engine.py:92] - [COLUMN] Completion generation completed in 1.05s
2025-03-26 23:55:08 - INFO - [feedback_manager.py:166] - Found 3 similar queries for 'get me all the customers...'
2025-03-26 23:55:08 - INFO - [sql_generator.py:276] - Found 3 similar queries with positive feedback
2025-03-26 23:55:08 - INFO - [azure_client.py:35] - SQL generation started for query: 'get me all the customers'
2025-03-26 23:55:08 - INFO - [llm_engine.py:55] - [SQL_GEN] Completion generation started
2025-03-26 23:55:09 - INFO - [llm_engine.py:92] - [SQL_GEN] Completion generation completed in 1.10s
2025-03-26 23:55:09 - INFO - [azure_client.py:110] - Generated SQL: SELECT * FROM customers;
2025-03-26 23:55:09,804 - QUERY: 'get me all the customers' → SQL: SELECT * FROM customers;
2025-03-26 23:55:09 - INFO - [azure_client.py:118] - SQL generation completed in 1.11s
2025-03-26 23:55:09 - INFO - [database.py:45] - Executing SQL query: SELECT * FROM customers;
2025-03-26 23:55:09 - INFO - [database.py:66] - Query returned 5 rows with 11 columns
2025-03-26 23:55:09 - INFO - [database.py:75] - Query processing completed in 0.01s
2025-03-26 23:55:09 - INFO - [sql_generator.py:353] - SQL generation completed in 2.55s
2025-03-26 23:55:09 - INFO - [sql_generator.py:122] - Query processing completed in 2.97s
2025-03-26 23:55:10 - INFO - [feedback_manager.py:29] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-03-26 23:55:10 - INFO - [feedback_manager.py:39] - Attempting database connection
2025-03-26 23:55:10 - INFO - [feedback_manager.py:43] - Database connection established in 0.00s
2025-03-26 23:55:10 - INFO - [feedback_manager.py:200] - Feedback stats: 5 total, 4 positive, 1 negative
2025-03-26 23:55:15 - INFO - [app.py:268] - Feedback received for query: 'get me all the customers...' - Rating: 0
2025-03-26 23:55:15 - INFO - [feedback_manager.py:29] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-03-26 23:55:15 - INFO - [feedback_manager.py:39] - Attempting database connection
2025-03-26 23:55:15 - INFO - [feedback_manager.py:43] - Database connection established in 0.00s
2025-03-26 23:55:15 - INFO - [feedback_manager.py:94] - Saved feedback for query: 'get me all the customers...' with rating 0
2025-03-26 23:55:15 - INFO - [feedback_manager.py:29] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-03-26 23:55:15 - INFO - [feedback_manager.py:39] - Attempting database connection
2025-03-26 23:55:15 - INFO - [feedback_manager.py:43] - Database connection established in 0.00s
2025-03-26 23:55:15 - INFO - [feedback_manager.py:200] - Feedback stats: 6 total, 4 positive, 2 negative
2025-03-27 00:00:35 - INFO - [database.py:238] - Closing database connection
2025-03-27 00:00:35 - INFO - [feedback_manager.py:209] - Closing database connection
2025-03-27 00:00:47 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-27 00:00:47 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-27 00:00:47 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-27 00:00:47 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-27 00:00:47 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-27 00:00:47 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-27 00:00:47 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-27 00:00:47 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-27 00:00:47 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-27 00:00:47 - INFO - [azure_client.py:11] - Initializing Azure AI Client using LLM Engine
2025-03-27 00:00:47 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-27 00:00:47 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-27 00:00:47 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-27 00:00:47 - INFO - [azure_client.py:17] - Azure AI Client initialized successfully
2025-03-27 00:00:47 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-27 00:00:47 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-03-27 00:00:55 - INFO - [database.py:238] - Closing database connection
2025-03-27 00:00:55 - INFO - [feedback_manager.py:327] - Closing database connection
2025-03-27 00:01:03 - INFO - [database.py:238] - Closing database connection
2025-03-27 00:01:03 - INFO - [feedback_manager.py:209] - Closing database connection
2025-03-27 00:01:10 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-27 00:01:10 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-27 00:01:10 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-27 00:01:10 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-27 00:01:10 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-27 00:01:10 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-27 00:01:10 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-27 00:01:10 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-27 00:01:10 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-27 00:01:10 - INFO - [azure_client.py:11] - Initializing Azure AI Client using LLM Engine
2025-03-27 00:01:10 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-27 00:01:10 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-27 00:01:10 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-27 00:01:10 - INFO - [azure_client.py:17] - Azure AI Client initialized successfully
2025-03-27 00:01:10 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-27 00:01:10 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-03-27 00:01:16 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-27 00:01:16 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-27 00:01:16 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-27 00:01:16 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-27 00:01:16 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-27 00:01:16 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-27 00:01:16 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-27 00:01:16 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-27 00:01:16 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-27 00:01:16 - INFO - [azure_client.py:11] - Initializing Azure AI Client using LLM Engine
2025-03-27 00:01:16 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-27 00:01:16 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-27 00:01:16 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-27 00:01:16 - INFO - [azure_client.py:17] - Azure AI Client initialized successfully
2025-03-27 00:01:16 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-27 00:01:16 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-03-27 00:01:51 - INFO - [sql_generator.py:37] - Processing query: 'get me all the customers'
2025-03-27 00:01:51 - INFO - [llm_engine.py:55] - [INTENT] Completion generation started
2025-03-27 00:01:53 - INFO - [llm_engine.py:92] - [INTENT] Completion generation completed in 1.31s
2025-03-27 00:01:53 - INFO - [sql_generator.py:45] - Detected intent: data_retrieval
2025-03-27 00:01:53 - INFO - [sql_generator.py:138] - Starting SQL generation process
2025-03-27 00:01:53 - INFO - [database.py:24] - Attempting database connection
2025-03-27 00:01:53 - INFO - [database.py:28] - Database connection established in 0.02s
2025-03-27 00:01:53 - INFO - [llm_engine.py:55] - [TABLE] Completion generation started
2025-03-27 00:01:54 - INFO - [llm_engine.py:92] - [TABLE] Completion generation completed in 1.13s
2025-03-27 00:01:54 - INFO - [llm_engine.py:55] - [COLUMN] Completion generation started
2025-03-27 00:01:56 - INFO - [llm_engine.py:92] - [COLUMN] Completion generation completed in 1.79s
2025-03-27 00:01:56 - INFO - [feedback_manager.py:43] - Attempting database connection
2025-03-27 00:01:56 - INFO - [feedback_manager.py:47] - Database connection established in 0.00s
2025-03-27 00:01:56 - INFO - [feedback_manager.py:62] - Loading embedding model 'sentence-transformers/all-MiniLM-L12-v2'
2025-03-27 00:02:15 - INFO - [feedback_manager.py:65] - Embedding model loaded in 19.55s
2025-03-27 00:02:15 - INFO - [feedback_manager.py:219] - Found 0 similar queries using vector similarity for 'get me all the customers...'
2025-03-27 00:02:15 - INFO - [azure_client.py:35] - SQL generation started for query: 'get me all the customers'
2025-03-27 00:02:15 - INFO - [llm_engine.py:55] - [SQL_GEN] Completion generation started
2025-03-27 00:02:17 - INFO - [llm_engine.py:92] - [SQL_GEN] Completion generation completed in 1.83s
2025-03-27 00:02:17 - INFO - [azure_client.py:110] - Generated SQL: SELECT * FROM customers;
2025-03-27 00:02:17,582 - QUERY: 'get me all the customers' → SQL: SELECT * FROM customers;
2025-03-27 00:02:17 - INFO - [azure_client.py:118] - SQL generation completed in 1.84s
2025-03-27 00:02:17 - INFO - [database.py:45] - Executing SQL query: SELECT * FROM customers;
2025-03-27 00:02:17 - INFO - [database.py:66] - Query returned 5 rows with 11 columns
2025-03-27 00:02:17 - INFO - [database.py:75] - Query processing completed in 0.01s
2025-03-27 00:02:17 - INFO - [sql_generator.py:353] - SQL generation completed in 24.49s
2025-03-27 00:02:17 - INFO - [sql_generator.py:122] - Query processing completed in 25.81s
2025-03-27 00:02:18 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-03-27 00:02:18 - INFO - [feedback_manager.py:43] - Attempting database connection
2025-03-27 00:02:18 - INFO - [feedback_manager.py:47] - Database connection established in 0.00s
2025-03-27 00:02:18 - INFO - [feedback_manager.py:318] - Feedback stats: 6 total, 4 positive, 2 negative
2025-03-27 00:02:40 - INFO - [sql_generator.py:37] - Processing query: 'get me all the customers'
2025-03-27 00:02:40 - INFO - [llm_engine.py:55] - [INTENT] Completion generation started
2025-03-27 00:02:40 - INFO - [llm_engine.py:92] - [INTENT] Completion generation completed in 0.40s
2025-03-27 00:02:40 - INFO - [sql_generator.py:45] - Detected intent: data_retrieval
2025-03-27 00:02:40 - INFO - [sql_generator.py:138] - Starting SQL generation process
2025-03-27 00:02:40 - INFO - [database.py:24] - Attempting database connection
2025-03-27 00:02:40 - INFO - [database.py:28] - Database connection established in 0.00s
2025-03-27 00:02:40 - INFO - [llm_engine.py:55] - [TABLE] Completion generation started
2025-03-27 00:02:41 - INFO - [llm_engine.py:92] - [TABLE] Completion generation completed in 0.35s
2025-03-27 00:02:41 - INFO - [llm_engine.py:55] - [COLUMN] Completion generation started
2025-03-27 00:02:42 - INFO - [llm_engine.py:92] - [COLUMN] Completion generation completed in 1.09s
2025-03-27 00:02:42 - INFO - [feedback_manager.py:219] - Found 0 similar queries using vector similarity for 'get me all the customers...'
2025-03-27 00:02:42 - INFO - [azure_client.py:35] - SQL generation started for query: 'get me all the customers'
2025-03-27 00:02:42 - INFO - [llm_engine.py:55] - [SQL_GEN] Completion generation started
2025-03-27 00:02:43 - INFO - [llm_engine.py:92] - [SQL_GEN] Completion generation completed in 1.23s
2025-03-27 00:02:43 - INFO - [azure_client.py:110] - Generated SQL: SELECT * FROM customers;
2025-03-27 00:02:43,617 - QUERY: 'get me all the customers' → SQL: SELECT * FROM customers;
2025-03-27 00:02:43 - INFO - [azure_client.py:118] - SQL generation completed in 1.23s
2025-03-27 00:02:43 - INFO - [database.py:45] - Executing SQL query: SELECT * FROM customers;
2025-03-27 00:02:43 - INFO - [database.py:66] - Query returned 5 rows with 11 columns
2025-03-27 00:02:43 - INFO - [database.py:75] - Query processing completed in 0.01s
2025-03-27 00:02:43 - INFO - [sql_generator.py:353] - SQL generation completed in 2.74s
2025-03-27 00:02:43 - INFO - [sql_generator.py:122] - Query processing completed in 3.16s
2025-03-27 00:02:44 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-03-27 00:02:44 - INFO - [feedback_manager.py:43] - Attempting database connection
2025-03-27 00:02:44 - INFO - [feedback_manager.py:47] - Database connection established in 0.00s
2025-03-27 00:02:44 - INFO - [feedback_manager.py:318] - Feedback stats: 6 total, 4 positive, 2 negative
2025-03-27 00:03:24 - INFO - [app.py:268] - Feedback received for query: 'get me all the customers...' - Rating: 1
2025-03-27 00:03:24 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-03-27 00:03:24 - INFO - [feedback_manager.py:43] - Attempting database connection
2025-03-27 00:03:24 - INFO - [feedback_manager.py:47] - Database connection established in 0.00s
2025-03-27 00:03:24 - INFO - [feedback_manager.py:62] - Loading embedding model 'sentence-transformers/all-MiniLM-L12-v2'
2025-03-27 00:03:24 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-03-27 00:03:24 - INFO - [feedback_manager.py:43] - Attempting database connection
2025-03-27 00:03:24 - INFO - [feedback_manager.py:47] - Database connection established in 0.00s
2025-03-27 00:03:24 - INFO - [feedback_manager.py:318] - Feedback stats: 6 total, 4 positive, 2 negative
2025-03-27 00:03:26 - INFO - [app.py:268] - Feedback received for query: 'get me all the customers...' - Rating: 1
2025-03-27 00:03:26 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-03-27 00:03:26 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-03-27 00:03:26 - INFO - [feedback_manager.py:43] - Attempting database connection
2025-03-27 00:03:26 - INFO - [feedback_manager.py:43] - Attempting database connection
2025-03-27 00:03:26 - INFO - [feedback_manager.py:47] - Database connection established in 0.00s
2025-03-27 00:03:26 - INFO - [feedback_manager.py:47] - Database connection established in 0.01s
2025-03-27 00:03:26 - INFO - [feedback_manager.py:62] - Loading embedding model 'sentence-transformers/all-MiniLM-L12-v2'
2025-03-27 00:03:26 - INFO - [feedback_manager.py:318] - Feedback stats: 6 total, 4 positive, 2 negative
2025-03-27 00:03:26 - INFO - [feedback_manager.py:65] - Embedding model loaded in 2.55s
2025-03-27 00:03:27 - INFO - [feedback_manager.py:146] - Saved feedback for query: 'get me all the customers...' with rating 1
2025-03-27 00:03:29 - INFO - [feedback_manager.py:65] - Embedding model loaded in 2.48s
2025-03-27 00:03:29 - INFO - [app.py:268] - Feedback received for query: 'get me all the customers...' - Rating: 1
2025-03-27 00:03:29 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-03-27 00:03:29 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-03-27 00:03:29 - INFO - [feedback_manager.py:43] - Attempting database connection
2025-03-27 00:03:29 - INFO - [feedback_manager.py:146] - Saved feedback for query: 'get me all the customers...' with rating 1
2025-03-27 00:03:29 - INFO - [feedback_manager.py:43] - Attempting database connection
2025-03-27 00:03:29 - INFO - [feedback_manager.py:47] - Database connection established in 0.01s
2025-03-27 00:03:29 - INFO - [feedback_manager.py:47] - Database connection established in 0.01s
2025-03-27 00:03:29 - INFO - [feedback_manager.py:62] - Loading embedding model 'sentence-transformers/all-MiniLM-L12-v2'
2025-03-27 00:03:29 - INFO - [feedback_manager.py:318] - Feedback stats: 8 total, 6 positive, 2 negative
2025-03-27 00:03:31 - INFO - [feedback_manager.py:65] - Embedding model loaded in 2.49s
2025-03-27 00:03:31 - INFO - [feedback_manager.py:146] - Saved feedback for query: 'get me all the customers...' with rating 1
2025-03-27 00:03:42 - INFO - [sql_generator.py:37] - Processing query: 'get me all the customers'
2025-03-27 00:03:42 - INFO - [llm_engine.py:55] - [INTENT] Completion generation started
2025-03-27 00:03:43 - INFO - [llm_engine.py:92] - [INTENT] Completion generation completed in 0.54s
2025-03-27 00:03:43 - INFO - [sql_generator.py:45] - Detected intent: data_retrieval
2025-03-27 00:03:43 - INFO - [sql_generator.py:138] - Starting SQL generation process
2025-03-27 00:03:43 - INFO - [database.py:24] - Attempting database connection
2025-03-27 00:03:43 - INFO - [database.py:28] - Database connection established in 0.00s
2025-03-27 00:03:43 - INFO - [llm_engine.py:55] - [TABLE] Completion generation started
2025-03-27 00:03:43 - INFO - [llm_engine.py:92] - [TABLE] Completion generation completed in 0.38s
2025-03-27 00:03:43 - INFO - [llm_engine.py:55] - [COLUMN] Completion generation started
2025-03-27 00:03:45 - INFO - [llm_engine.py:92] - [COLUMN] Completion generation completed in 1.93s
2025-03-27 00:03:45 - INFO - [feedback_manager.py:219] - Found 3 similar queries using vector similarity for 'get me all the customers...'
2025-03-27 00:03:45 - INFO - [sql_generator.py:276] - Found 3 similar queries with positive feedback
2025-03-27 00:03:45 - INFO - [azure_client.py:35] - SQL generation started for query: 'get me all the customers'
2025-03-27 00:03:45 - INFO - [llm_engine.py:55] - [SQL_GEN] Completion generation started
2025-03-27 00:03:46 - INFO - [llm_engine.py:92] - [SQL_GEN] Completion generation completed in 1.06s
2025-03-27 00:03:46 - INFO - [azure_client.py:110] - Generated SQL: SELECT * FROM customers;
2025-03-27 00:03:46,634 - QUERY: 'get me all the customers' → SQL: SELECT * FROM customers;
2025-03-27 00:03:46 - INFO - [azure_client.py:118] - SQL generation completed in 1.06s
2025-03-27 00:03:46 - INFO - [database.py:45] - Executing SQL query: SELECT * FROM customers;
2025-03-27 00:03:46 - INFO - [database.py:66] - Query returned 5 rows with 11 columns
2025-03-27 00:03:46 - INFO - [database.py:75] - Query processing completed in 0.01s
2025-03-27 00:03:46 - INFO - [sql_generator.py:353] - SQL generation completed in 3.45s
2025-03-27 00:03:46 - INFO - [sql_generator.py:122] - Query processing completed in 4.01s
2025-03-27 00:03:47 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-03-27 00:03:47 - INFO - [feedback_manager.py:43] - Attempting database connection
2025-03-27 00:03:47 - INFO - [feedback_manager.py:47] - Database connection established in 0.00s
2025-03-27 00:03:47 - INFO - [feedback_manager.py:318] - Feedback stats: 9 total, 7 positive, 2 negative
2025-03-27 00:06:15 - INFO - [database.py:238] - Closing database connection
2025-03-27 00:06:15 - INFO - [feedback_manager.py:327] - Closing database connection
2025-03-27 00:06:23 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-27 00:06:23 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-27 00:06:23 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-27 00:06:23 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-27 00:06:23 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-27 00:06:23 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-27 00:06:23 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-27 00:06:23 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-27 00:06:23 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-27 00:06:23 - INFO - [azure_client.py:11] - Initializing Azure AI Client using LLM Engine
2025-03-27 00:06:23 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-27 00:06:23 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-27 00:06:23 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-27 00:06:23 - INFO - [azure_client.py:17] - Azure AI Client initialized successfully
2025-03-27 00:06:23 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-27 00:06:23 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-03-27 00:11:17 - INFO - [database.py:238] - Closing database connection
2025-03-27 00:11:17 - INFO - [feedback_manager.py:327] - Closing database connection
2025-03-27 00:11:17 - INFO - [database.py:238] - Closing database connection
2025-03-27 00:11:17 - INFO - [feedback_manager.py:327] - Closing database connection
2025-03-27 00:11:27 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-27 00:11:27 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-27 00:11:27 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-27 00:11:27 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-27 00:11:27 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-27 00:11:27 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-27 00:11:27 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-27 00:11:27 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-27 00:11:27 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-27 00:11:27 - INFO - [azure_client.py:11] - Initializing Azure AI Client using LLM Engine
2025-03-27 00:11:27 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-27 00:11:27 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-27 00:11:27 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-27 00:11:27 - INFO - [azure_client.py:17] - Azure AI Client initialized successfully
2025-03-27 00:11:27 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-27 00:11:27 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-03-27 00:11:37 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-27 00:11:37 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-27 00:11:37 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-27 00:11:37 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-27 00:11:37 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-27 00:11:37 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-27 00:11:37 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-27 00:11:37 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-27 00:11:37 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-27 00:11:37 - INFO - [azure_client.py:11] - Initializing Azure AI Client using LLM Engine
2025-03-27 00:11:37 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-27 00:11:37 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-27 00:11:37 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-27 00:11:37 - INFO - [azure_client.py:17] - Azure AI Client initialized successfully
2025-03-27 00:11:37 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-27 00:11:37 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-03-27 00:11:44 - INFO - [llm_engine.py:55] - [INTENT] Completion generation started
2025-03-27 00:11:45 - INFO - [llm_engine.py:92] - [INTENT] Completion generation completed in 1.31s
2025-03-27 00:11:45 - INFO - [database.py:24] - Attempting database connection
2025-03-27 00:11:45 - INFO - [database.py:28] - Database connection established in 0.02s
2025-03-27 00:11:45 - INFO - [llm_engine.py:55] - [TABLE] Completion generation started
2025-03-27 00:11:47 - INFO - [llm_engine.py:92] - [TABLE] Completion generation completed in 1.14s
2025-03-27 00:11:47 - INFO - [llm_engine.py:55] - [COLUMN] Completion generation started
2025-03-27 00:11:49 - INFO - [llm_engine.py:92] - [COLUMN] Completion generation completed in 1.96s
2025-03-27 00:11:49 - INFO - [feedback_manager.py:43] - Attempting database connection
2025-03-27 00:11:49 - INFO - [feedback_manager.py:47] - Database connection established in 0.00s
2025-03-27 00:11:49 - INFO - [feedback_manager.py:62] - Loading embedding model 'sentence-transformers/all-MiniLM-L12-v2'
2025-03-27 00:11:52 - INFO - [feedback_manager.py:65] - Embedding model loaded in 3.57s
2025-03-27 00:11:53 - INFO - [feedback_manager.py:219] - Found 3 similar queries using vector similarity for 'get me all the customers...'
2025-03-27 00:11:53 - INFO - [azure_client.py:35] - SQL generation started for query: 'get me all the customers'
2025-03-27 00:11:53 - INFO - [llm_engine.py:55] - [SQL_GEN] Completion generation started
2025-03-27 00:11:55 - INFO - [llm_engine.py:92] - [SQL_GEN] Completion generation completed in 2.35s
2025-03-27 00:11:55 - INFO - [azure_client.py:110] - Generated SQL: SELECT * FROM customers;
2025-03-27 00:11:55,433 - QUERY: 'get me all the customers' → SQL: SELECT * FROM customers;
2025-03-27 00:11:55 - INFO - [azure_client.py:118] - SQL generation completed in 2.36s
2025-03-27 00:11:55 - INFO - [database.py:45] - Executing SQL query: SELECT * FROM customers;
2025-03-27 00:11:55 - INFO - [database.py:66] - Query returned 5 rows with 11 columns
2025-03-27 00:11:55 - INFO - [database.py:75] - Query processing completed in 0.05s
2025-03-27 00:11:56 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-03-27 00:11:56 - INFO - [feedback_manager.py:43] - Attempting database connection
2025-03-27 00:11:56 - INFO - [feedback_manager.py:47] - Database connection established in 0.00s
2025-03-27 00:11:56 - INFO - [feedback_manager.py:318] - Feedback stats: 9 total, 7 positive, 2 negative
2025-03-27 00:12:02 - INFO - [llm_engine.py:55] - [INTENT] Completion generation started
2025-03-27 00:12:02 - INFO - [llm_engine.py:92] - [INTENT] Completion generation completed in 0.41s
2025-03-27 00:12:02 - INFO - [database.py:24] - Attempting database connection
2025-03-27 00:12:02 - INFO - [database.py:28] - Database connection established in 0.01s
2025-03-27 00:12:02 - INFO - [llm_engine.py:55] - [TABLE] Completion generation started
2025-03-27 00:12:03 - INFO - [llm_engine.py:92] - [TABLE] Completion generation completed in 0.40s
2025-03-27 00:12:03 - INFO - [llm_engine.py:55] - [COLUMN] Completion generation started
2025-03-27 00:12:04 - INFO - [llm_engine.py:92] - [COLUMN] Completion generation completed in 1.07s
2025-03-27 00:12:04 - INFO - [feedback_manager.py:219] - Found 3 similar queries using vector similarity for 'get me all the customers...'
2025-03-27 00:12:04 - INFO - [azure_client.py:35] - SQL generation started for query: 'get me all the customers'
2025-03-27 00:12:04 - INFO - [llm_engine.py:55] - [SQL_GEN] Completion generation started
2025-03-27 00:12:05 - INFO - [llm_engine.py:92] - [SQL_GEN] Completion generation completed in 1.46s
2025-03-27 00:12:05 - INFO - [azure_client.py:110] - Generated SQL: SELECT * FROM customers;
2025-03-27 00:12:05,937 - QUERY: 'get me all the customers' → SQL: SELECT * FROM customers;
2025-03-27 00:12:05 - INFO - [azure_client.py:118] - SQL generation completed in 1.47s
2025-03-27 00:12:05 - INFO - [database.py:45] - Executing SQL query: SELECT * FROM customers;
2025-03-27 00:12:05 - INFO - [database.py:66] - Query returned 5 rows with 11 columns
2025-03-27 00:12:05 - INFO - [database.py:75] - Query processing completed in 0.04s
2025-03-27 00:12:06 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-03-27 00:12:06 - INFO - [feedback_manager.py:43] - Attempting database connection
2025-03-27 00:12:06 - INFO - [feedback_manager.py:47] - Database connection established in 0.00s
2025-03-27 00:12:06 - INFO - [feedback_manager.py:318] - Feedback stats: 9 total, 7 positive, 2 negative
2025-03-27 00:12:10 - INFO - [app.py:268] - Feedback received for query: 'get me all the customers...' - Rating: 1
2025-03-27 00:12:10 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-03-27 00:12:10 - INFO - [feedback_manager.py:43] - Attempting database connection
2025-03-27 00:12:10 - INFO - [feedback_manager.py:47] - Database connection established in 0.00s
2025-03-27 00:12:10 - INFO - [feedback_manager.py:62] - Loading embedding model 'sentence-transformers/all-MiniLM-L12-v2'
2025-03-27 00:12:10 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-03-27 00:12:10 - INFO - [feedback_manager.py:43] - Attempting database connection
2025-03-27 00:12:10 - INFO - [feedback_manager.py:47] - Database connection established in 0.00s
2025-03-27 00:12:10 - INFO - [feedback_manager.py:318] - Feedback stats: 9 total, 7 positive, 2 negative
2025-03-27 00:12:10 - INFO - [app.py:268] - Feedback received for query: 'get me all the customers...' - Rating: 1
2025-03-27 00:12:10 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-03-27 00:12:10 - INFO - [feedback_manager.py:43] - Attempting database connection
2025-03-27 00:12:10 - INFO - [feedback_manager.py:47] - Database connection established in 0.00s
2025-03-27 00:12:10 - INFO - [feedback_manager.py:62] - Loading embedding model 'sentence-transformers/all-MiniLM-L12-v2'
2025-03-27 00:12:11 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-03-27 00:12:11 - INFO - [feedback_manager.py:43] - Attempting database connection
2025-03-27 00:12:11 - INFO - [feedback_manager.py:47] - Database connection established in 0.00s
2025-03-27 00:12:11 - INFO - [feedback_manager.py:318] - Feedback stats: 9 total, 7 positive, 2 negative
2025-03-27 00:12:12 - INFO - [feedback_manager.py:65] - Embedding model loaded in 2.37s
2025-03-27 00:12:12 - INFO - [feedback_manager.py:146] - Saved feedback for query: 'get me all the customers...' with rating 1
2025-03-27 00:12:13 - INFO - [app.py:268] - Feedback received for query: 'get me all the customers...' - Rating: 1
2025-03-27 00:12:13 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-03-27 00:12:13 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-03-27 00:12:13 - INFO - [feedback_manager.py:43] - Attempting database connection
2025-03-27 00:12:13 - INFO - [feedback_manager.py:43] - Attempting database connection
2025-03-27 00:12:13 - INFO - [feedback_manager.py:47] - Database connection established in 0.01s
2025-03-27 00:12:13 - INFO - [feedback_manager.py:47] - Database connection established in 0.01s
2025-03-27 00:12:13 - INFO - [feedback_manager.py:62] - Loading embedding model 'sentence-transformers/all-MiniLM-L12-v2'
2025-03-27 00:12:13 - INFO - [feedback_manager.py:318] - Feedback stats: 10 total, 8 positive, 2 negative
2025-03-27 00:12:13 - INFO - [feedback_manager.py:65] - Embedding model loaded in 2.47s
2025-03-27 00:12:13 - INFO - [feedback_manager.py:146] - Saved feedback for query: 'get me all the customers...' with rating 1
2025-03-27 00:12:15 - INFO - [app.py:268] - Feedback received for query: 'get me all the customers...' - Rating: 0
2025-03-27 00:12:15 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-03-27 00:12:15 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-03-27 00:12:15 - INFO - [feedback_manager.py:43] - Attempting database connection
2025-03-27 00:12:15 - INFO - [feedback_manager.py:43] - Attempting database connection
2025-03-27 00:12:15 - INFO - [feedback_manager.py:47] - Database connection established in 0.00s
2025-03-27 00:12:15 - INFO - [feedback_manager.py:47] - Database connection established in 0.01s
2025-03-27 00:12:15 - INFO - [feedback_manager.py:318] - Feedback stats: 11 total, 9 positive, 2 negative
2025-03-27 00:12:15 - INFO - [feedback_manager.py:62] - Loading embedding model 'sentence-transformers/all-MiniLM-L12-v2'
2025-03-27 00:12:15 - INFO - [feedback_manager.py:65] - Embedding model loaded in 2.51s
2025-03-27 00:12:15 - INFO - [feedback_manager.py:146] - Saved feedback for query: 'get me all the customers...' with rating 1
2025-03-27 00:12:16 - INFO - [app.py:268] - Feedback received for query: 'get me all the customers...' - Rating: 0
2025-03-27 00:12:16 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-03-27 00:12:16 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-03-27 00:12:16 - INFO - [feedback_manager.py:43] - Attempting database connection
2025-03-27 00:12:16 - INFO - [feedback_manager.py:43] - Attempting database connection
2025-03-27 00:12:16 - INFO - [feedback_manager.py:47] - Database connection established in 0.01s
2025-03-27 00:12:16 - INFO - [app.py:268] - Feedback received for query: 'get me all the customers...' - Rating: 0
2025-03-27 00:12:16 - INFO - [feedback_manager.py:47] - Database connection established in 0.01s
2025-03-27 00:12:16 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-03-27 00:12:16 - INFO - [feedback_manager.py:318] - Feedback stats: 12 total, 10 positive, 2 negative
2025-03-27 00:12:16 - INFO - [feedback_manager.py:62] - Loading embedding model 'sentence-transformers/all-MiniLM-L12-v2'
2025-03-27 00:12:16 - INFO - [feedback_manager.py:43] - Attempting database connection
2025-03-27 00:12:16 - INFO - [feedback_manager.py:47] - Database connection established in 0.01s
2025-03-27 00:12:16 - INFO - [feedback_manager.py:62] - Loading embedding model 'sentence-transformers/all-MiniLM-L12-v2'
2025-03-27 00:12:16 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-03-27 00:12:16 - INFO - [feedback_manager.py:43] - Attempting database connection
2025-03-27 00:12:16 - INFO - [feedback_manager.py:47] - Database connection established in 0.00s
2025-03-27 00:12:16 - INFO - [feedback_manager.py:318] - Feedback stats: 12 total, 10 positive, 2 negative
2025-03-27 00:12:17 - INFO - [feedback_manager.py:65] - Embedding model loaded in 2.52s
2025-03-27 00:12:17 - INFO - [feedback_manager.py:146] - Saved feedback for query: 'get me all the customers...' with rating 0
2025-03-27 00:12:18 - INFO - [app.py:268] - Feedback received for query: 'get me all the customers...' - Rating: 0
2025-03-27 00:12:18 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-03-27 00:12:18 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-03-27 00:12:18 - INFO - [feedback_manager.py:43] - Attempting database connection
2025-03-27 00:12:18 - INFO - [feedback_manager.py:43] - Attempting database connection
2025-03-27 00:12:18 - INFO - [feedback_manager.py:47] - Database connection established in 0.01s
2025-03-27 00:12:18 - INFO - [feedback_manager.py:47] - Database connection established in 0.01s
2025-03-27 00:12:18 - INFO - [feedback_manager.py:62] - Loading embedding model 'sentence-transformers/all-MiniLM-L12-v2'
2025-03-27 00:12:18 - INFO - [feedback_manager.py:318] - Feedback stats: 13 total, 10 positive, 3 negative
2025-03-27 00:12:19 - INFO - [feedback_manager.py:65] - Embedding model loaded in 2.42s
2025-03-27 00:12:19 - INFO - [feedback_manager.py:146] - Saved feedback for query: 'get me all the customers...' with rating 0
2025-03-27 00:12:19 - INFO - [feedback_manager.py:65] - Embedding model loaded in 2.90s
2025-03-27 00:12:19 - INFO - [feedback_manager.py:146] - Saved feedback for query: 'get me all the customers...' with rating 0
2025-03-27 00:12:21 - INFO - [feedback_manager.py:65] - Embedding model loaded in 2.96s
2025-03-27 00:12:21 - INFO - [feedback_manager.py:146] - Saved feedback for query: 'get me all the customers...' with rating 0
2025-03-27 00:12:30 - INFO - [database.py:238] - Closing database connection
2025-03-27 00:12:30 - INFO - [feedback_manager.py:327] - Closing database connection
2025-03-27 00:15:22 - INFO - [app.py:55] - Debug logging enabled for SQL generator and agents
2025-03-27 00:15:22 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-27 00:15:22 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-27 00:15:22 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-27 00:15:22 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-27 00:15:22 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-27 00:15:22 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-27 00:15:22 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-27 00:15:22 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-27 00:15:22 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-27 00:15:22 - INFO - [azure_client.py:11] - Initializing Azure AI Client using LLM Engine
2025-03-27 00:15:22 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-27 00:15:22 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-27 00:15:22 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-27 00:15:22 - INFO - [azure_client.py:17] - Azure AI Client initialized successfully
2025-03-27 00:15:22 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-27 00:15:22 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-03-27 00:15:34 - INFO - [app.py:55] - Debug logging enabled for SQL generator and agents
2025-03-27 00:15:34 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-27 00:15:34 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-27 00:15:34 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-27 00:15:34 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-27 00:15:34 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-27 00:15:34 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-27 00:15:34 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-27 00:15:34 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-27 00:15:34 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-27 00:15:34 - INFO - [azure_client.py:11] - Initializing Azure AI Client using LLM Engine
2025-03-27 00:15:34 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-27 00:15:34 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-27 00:15:34 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-27 00:15:34 - INFO - [azure_client.py:17] - Azure AI Client initialized successfully
2025-03-27 00:15:34 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-27 00:15:34 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-03-27 00:15:51 - INFO - [llm_engine.py:55] - [INTENT] Completion generation started
2025-03-27 00:15:54 - INFO - [llm_engine.py:92] - [INTENT] Completion generation completed in 2.34s
2025-03-27 00:15:54 - INFO - [database.py:24] - Attempting database connection
2025-03-27 00:15:54 - INFO - [database.py:28] - Database connection established in 0.03s
2025-03-27 00:15:54 - INFO - [llm_engine.py:55] - [TABLE] Completion generation started
2025-03-27 00:15:55 - INFO - [llm_engine.py:92] - [TABLE] Completion generation completed in 1.26s
2025-03-27 00:15:55 - INFO - [llm_engine.py:55] - [COLUMN] Completion generation started
2025-03-27 00:15:56 - INFO - [llm_engine.py:92] - [COLUMN] Completion generation completed in 1.48s
2025-03-27 00:15:56 - INFO - [feedback_manager.py:43] - Attempting database connection
2025-03-27 00:15:56 - INFO - [feedback_manager.py:47] - Database connection established in 0.00s
2025-03-27 00:15:56 - INFO - [feedback_manager.py:62] - Loading embedding model 'sentence-transformers/all-MiniLM-L12-v2'
2025-03-27 00:16:00 - INFO - [feedback_manager.py:65] - Embedding model loaded in 3.12s
2025-03-27 00:16:00 - INFO - [feedback_manager.py:219] - Found 3 similar queries using vector similarity for 'get me all the customers who live in state CA...'
2025-03-27 00:16:00 - INFO - [azure_client.py:35] - SQL generation started for query: 'get me all the customers who live in state CA'
2025-03-27 00:16:00 - INFO - [llm_engine.py:55] - [SQL_GEN] Completion generation started
2025-03-27 00:16:02 - INFO - [llm_engine.py:92] - [SQL_GEN] Completion generation completed in 2.23s
2025-03-27 00:16:02 - INFO - [azure_client.py:110] - Generated SQL: SELECT *
FROM customers
WHERE state = 'CA';
2025-03-27 00:16:02,457 - QUERY: 'get me all the customers who live in state CA' → SQL: SELECT *
FROM customers
WHERE state = 'CA';
2025-03-27 00:16:02 - INFO - [azure_client.py:118] - SQL generation completed in 2.25s
2025-03-27 00:16:02 - INFO - [database.py:45] - Executing SQL query: SELECT *
FROM customers
WHERE state = 'CA';
2025-03-27 00:16:02 - INFO - [database.py:66] - Query returned 1 rows with 11 columns
2025-03-27 00:16:02 - INFO - [database.py:75] - Query processing completed in 0.03s
2025-03-27 00:16:03 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-03-27 00:16:03 - INFO - [feedback_manager.py:43] - Attempting database connection
2025-03-27 00:16:03 - INFO - [feedback_manager.py:47] - Database connection established in 0.00s
2025-03-27 00:16:03 - INFO - [feedback_manager.py:318] - Feedback stats: 16 total, 10 positive, 6 negative
2025-03-27 00:16:57 - INFO - [llm_engine.py:55] - [INTENT] Completion generation started
2025-03-27 00:16:57 - INFO - [llm_engine.py:92] - [INTENT] Completion generation completed in 0.55s
2025-03-27 00:16:57 - INFO - [database.py:24] - Attempting database connection
2025-03-27 00:16:57 - INFO - [database.py:28] - Database connection established in 0.00s
2025-03-27 00:16:57 - INFO - [llm_engine.py:55] - [TABLE] Completion generation started
2025-03-27 00:16:58 - INFO - [llm_engine.py:92] - [TABLE] Completion generation completed in 0.36s
2025-03-27 00:16:58 - INFO - [llm_engine.py:55] - [COLUMN] Completion generation started
2025-03-27 00:16:59 - INFO - [llm_engine.py:92] - [COLUMN] Completion generation completed in 1.42s
2025-03-27 00:16:59 - INFO - [feedback_manager.py:219] - Found 3 similar queries using vector similarity for 'find me all the customers who live in state CA...'
2025-03-27 00:16:59 - INFO - [azure_client.py:35] - SQL generation started for query: 'find me all the customers who live in state CA'
2025-03-27 00:16:59 - INFO - [llm_engine.py:55] - [SQL_GEN] Completion generation started
2025-03-27 00:17:01 - INFO - [llm_engine.py:92] - [SQL_GEN] Completion generation completed in 1.37s
2025-03-27 00:17:01 - INFO - [azure_client.py:110] - Generated SQL: SELECT * FROM customers WHERE state = 'CA';
2025-03-27 00:17:01,143 - QUERY: 'find me all the customers who live in state CA' → SQL: SELECT * FROM customers WHERE state = 'CA';
2025-03-27 00:17:01 - INFO - [azure_client.py:118] - SQL generation completed in 1.39s
2025-03-27 00:17:01 - INFO - [database.py:45] - Executing SQL query: SELECT * FROM customers WHERE state = 'CA';
2025-03-27 00:17:01 - INFO - [database.py:66] - Query returned 1 rows with 11 columns
2025-03-27 00:17:01 - INFO - [database.py:75] - Query processing completed in 0.03s
2025-03-27 00:17:01 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-03-27 00:17:01 - INFO - [feedback_manager.py:43] - Attempting database connection
2025-03-27 00:17:01 - INFO - [feedback_manager.py:47] - Database connection established in 0.00s
2025-03-27 00:17:01 - INFO - [feedback_manager.py:318] - Feedback stats: 16 total, 10 positive, 6 negative
2025-03-27 00:18:40 - INFO - [database.py:238] - Closing database connection
2025-03-27 00:18:40 - INFO - [feedback_manager.py:327] - Closing database connection
2025-03-27 00:18:49 - INFO - [app.py:55] - Debug logging enabled for SQL generator and agents
2025-03-27 00:18:49 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-27 00:18:49 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-27 00:18:49 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-27 00:18:49 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-27 00:18:49 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-27 00:18:49 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-27 00:18:49 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-27 00:18:49 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-27 00:18:49 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-27 00:18:49 - INFO - [azure_client.py:11] - Initializing Azure AI Client using LLM Engine
2025-03-27 00:18:49 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-27 00:18:49 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-27 00:18:49 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-27 00:18:49 - INFO - [azure_client.py:17] - Azure AI Client initialized successfully
2025-03-27 00:18:49 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-27 00:18:49 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-03-27 00:18:56 - INFO - [llm_engine.py:55] - [INTENT] Completion generation started
2025-03-27 00:18:56 - INFO - [llm_engine.py:55] - [INTENT] Completion generation started
2025-03-27 00:18:58 - INFO - [llm_engine.py:92] - [INTENT] Completion generation completed in 1.52s
2025-03-27 00:18:58 - INFO - [database.py:24] - Attempting database connection
2025-03-27 00:18:58 - INFO - [llm_engine.py:92] - [INTENT] Completion generation completed in 1.51s
2025-03-27 00:18:58 - INFO - [database.py:28] - Database connection established in 0.03s
2025-03-27 00:18:58 - INFO - [database.py:24] - Attempting database connection
2025-03-27 00:18:58 - INFO - [database.py:28] - Database connection established in 0.01s
2025-03-27 00:18:58 - INFO - [llm_engine.py:55] - [TABLE] Completion generation started
2025-03-27 00:18:58 - INFO - [llm_engine.py:55] - [TABLE] Completion generation started
2025-03-27 00:18:59 - INFO - [llm_engine.py:92] - [TABLE] Completion generation completed in 1.16s
2025-03-27 00:18:59 - INFO - [llm_engine.py:55] - [COLUMN] Completion generation started
2025-03-27 00:18:59 - INFO - [llm_engine.py:92] - [TABLE] Completion generation completed in 1.18s
2025-03-27 00:18:59 - INFO - [llm_engine.py:55] - [COLUMN] Completion generation started
2025-03-27 00:19:00 - INFO - [llm_engine.py:92] - [COLUMN] Completion generation completed in 1.32s
2025-03-27 00:19:00 - INFO - [feedback_manager.py:43] - Attempting database connection
2025-03-27 00:19:00 - INFO - [feedback_manager.py:47] - Database connection established in 0.00s
2025-03-27 00:19:00 - INFO - [feedback_manager.py:62] - Loading embedding model 'sentence-transformers/all-MiniLM-L12-v2'
2025-03-27 00:19:00 - INFO - [llm_engine.py:92] - [COLUMN] Completion generation completed in 1.36s
2025-03-27 00:19:00 - INFO - [feedback_manager.py:62] - Loading embedding model 'sentence-transformers/all-MiniLM-L12-v2'
2025-03-27 00:19:03 - INFO - [feedback_manager.py:65] - Embedding model loaded in 2.63s
2025-03-27 00:19:03 - INFO - [feedback_manager.py:219] - Found 3 similar queries using vector similarity for 'find me all the customers who live in state CA...'
2025-03-27 00:19:03 - INFO - [azure_client.py:35] - SQL generation started for query: 'find me all the customers who live in state CA'
2025-03-27 00:19:03 - INFO - [llm_engine.py:55] - [SQL_GEN] Completion generation started
2025-03-27 00:19:03 - INFO - [feedback_manager.py:65] - Embedding model loaded in 3.03s
2025-03-27 00:19:03 - INFO - [feedback_manager.py:219] - Found 3 similar queries using vector similarity for 'find me all the customers who live in state CA...'
2025-03-27 00:19:03 - INFO - [azure_client.py:35] - SQL generation started for query: 'find me all the customers who live in state CA'
2025-03-27 00:19:03 - INFO - [llm_engine.py:55] - [SQL_GEN] Completion generation started
2025-03-27 00:19:05 - INFO - [llm_engine.py:92] - [SQL_GEN] Completion generation completed in 2.39s
2025-03-27 00:19:05 - INFO - [azure_client.py:110] - Generated SQL: SELECT *
FROM customers
WHERE state = 'CA';
2025-03-27 00:19:05,840 - QUERY: 'find me all the customers who live in state CA' → SQL: SELECT *
FROM customers
WHERE state = 'CA';
2025-03-27 00:19:05 - INFO - [azure_client.py:118] - SQL generation completed in 2.40s
2025-03-27 00:19:05 - INFO - [database.py:45] - Executing SQL query: SELECT *
FROM customers
WHERE state = 'CA';
2025-03-27 00:19:05 - INFO - [database.py:66] - Query returned 1 rows with 11 columns
2025-03-27 00:19:05 - INFO - [database.py:75] - Query processing completed in 0.02s
2025-03-27 00:19:06 - INFO - [llm_engine.py:92] - [SQL_GEN] Completion generation completed in 2.26s
2025-03-27 00:19:06 - INFO - [azure_client.py:110] - Generated SQL: SELECT * FROM customers WHERE state = 'CA';
2025-03-27 00:19:06,087 - QUERY: 'find me all the customers who live in state CA' → SQL: SELECT * FROM customers WHERE state = 'CA';
2025-03-27 00:19:06 - INFO - [azure_client.py:118] - SQL generation completed in 2.27s
2025-03-27 00:19:06 - INFO - [database.py:45] - Executing SQL query: SELECT * FROM customers WHERE state = 'CA';
2025-03-27 00:19:06 - INFO - [database.py:66] - Query returned 1 rows with 11 columns
2025-03-27 00:19:06 - INFO - [database.py:75] - Query processing completed in 0.02s
2025-03-27 00:19:07 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-03-27 00:19:07 - INFO - [feedback_manager.py:43] - Attempting database connection
2025-03-27 00:19:07 - INFO - [feedback_manager.py:47] - Database connection established in 0.00s
2025-03-27 00:19:07 - INFO - [feedback_manager.py:318] - Feedback stats: 16 total, 10 positive, 6 negative
2025-03-27 00:20:18 - INFO - [database.py:238] - Closing database connection
2025-03-27 00:20:18 - INFO - [feedback_manager.py:327] - Closing database connection
2025-03-27 00:20:27 - INFO - [app.py:55] - Debug logging enabled for SQL generator and agents
2025-03-27 00:20:27 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-27 00:20:27 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-27 00:20:27 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-27 00:20:27 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-27 00:20:27 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-27 00:20:27 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-27 00:20:27 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-27 00:20:27 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-27 00:20:27 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-27 00:20:27 - INFO - [azure_client.py:11] - Initializing Azure AI Client using LLM Engine
2025-03-27 00:20:27 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-27 00:20:27 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-27 00:20:27 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-27 00:20:27 - INFO - [azure_client.py:17] - Azure AI Client initialized successfully
2025-03-27 00:20:27 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-27 00:20:27 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-03-27 00:20:41 - INFO - [azure_client.py:172] - Closing Azure AI client connection
2025-03-27 00:20:41 - INFO - [database.py:238] - Closing database connection
2025-03-27 00:20:41 - INFO - [feedback_manager.py:327] - Closing database connection
2025-03-27 00:20:52 - INFO - [app.py:55] - Debug logging enabled for SQL generator and agents
2025-03-27 00:20:52 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-27 00:20:52 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-27 00:20:52 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-27 00:20:52 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-27 00:20:52 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-27 00:20:52 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-27 00:20:52 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-27 00:20:52 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-27 00:20:52 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-27 00:20:52 - INFO - [azure_client.py:11] - Initializing Azure AI Client using LLM Engine
2025-03-27 00:20:52 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-27 00:20:52 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-27 00:20:52 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-27 00:20:52 - INFO - [azure_client.py:17] - Azure AI Client initialized successfully
2025-03-27 00:20:52 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-27 00:20:52 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-03-27 00:21:05 - INFO - [azure_client.py:172] - Closing Azure AI client connection
2025-03-27 00:21:05 - INFO - [database.py:238] - Closing database connection
2025-03-27 00:21:05 - INFO - [feedback_manager.py:327] - Closing database connection
2025-03-27 00:21:15 - INFO - [app.py:55] - Debug logging enabled for SQL generator and agents
2025-03-27 00:21:15 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-27 00:21:15 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-27 00:21:15 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-27 00:21:15 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-27 00:21:15 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-27 00:21:15 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-27 00:21:15 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-27 00:21:15 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-27 00:21:15 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-27 00:21:15 - INFO - [azure_client.py:11] - Initializing Azure AI Client using LLM Engine
2025-03-27 00:21:15 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-27 00:21:15 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-27 00:21:15 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-27 00:21:15 - INFO - [azure_client.py:17] - Azure AI Client initialized successfully
2025-03-27 00:21:15 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-27 00:21:15 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-03-27 00:23:24 - INFO - [azure_client.py:172] - Closing Azure AI client connection
2025-03-27 00:23:24 - INFO - [database.py:238] - Closing database connection
2025-03-27 00:23:24 - INFO - [feedback_manager.py:327] - Closing database connection
2025-03-27 00:23:34 - INFO - [app.py:55] - Debug logging enabled for SQL generator and agents
2025-03-27 00:23:34 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-27 00:23:34 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-27 00:23:34 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-27 00:23:34 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-27 00:23:34 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-27 00:23:34 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-27 00:23:34 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-27 00:23:34 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-27 00:23:34 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-27 00:23:34 - INFO - [azure_client.py:11] - Initializing Azure AI Client using LLM Engine
2025-03-27 00:23:34 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-27 00:23:34 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-27 00:23:34 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-27 00:23:34 - INFO - [azure_client.py:17] - Azure AI Client initialized successfully
2025-03-27 00:23:34 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-27 00:23:34 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-03-27 00:23:51 - INFO - [azure_client.py:172] - Closing Azure AI client connection
2025-03-27 00:23:51 - INFO - [database.py:238] - Closing database connection
2025-03-27 00:23:51 - INFO - [feedback_manager.py:327] - Closing database connection
2025-03-27 00:24:01 - INFO - [app.py:55] - Debug logging enabled for SQL generator and agents
2025-03-27 00:24:01 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-27 00:24:01 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-27 00:24:01 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-27 00:24:01 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-27 00:24:01 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-27 00:24:01 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-27 00:24:01 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-27 00:24:01 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-27 00:24:01 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-27 00:24:01 - INFO - [azure_client.py:11] - Initializing Azure AI Client using LLM Engine
2025-03-27 00:24:01 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-27 00:24:01 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-27 00:24:01 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-27 00:24:01 - INFO - [azure_client.py:17] - Azure AI Client initialized successfully
2025-03-27 00:24:01 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-27 00:24:01 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-03-27 00:24:05 - INFO - [azure_client.py:172] - Closing Azure AI client connection
2025-03-27 00:24:05 - INFO - [database.py:238] - Closing database connection
2025-03-27 00:24:05 - INFO - [feedback_manager.py:327] - Closing database connection
2025-03-27 00:24:21 - INFO - [app.py:55] - Debug logging enabled for SQL generator and agents
2025-03-27 00:24:21 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-27 00:24:21 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-27 00:24:21 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-27 00:24:21 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-27 00:24:21 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-27 00:24:21 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-27 00:24:21 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-27 00:24:21 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-27 00:24:21 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-27 00:24:21 - INFO - [azure_client.py:11] - Initializing Azure AI Client using LLM Engine
2025-03-27 00:24:21 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-27 00:24:21 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-27 00:24:21 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-27 00:24:21 - INFO - [azure_client.py:17] - Azure AI Client initialized successfully
2025-03-27 00:24:21 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-27 00:24:21 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-03-27 00:24:34 - INFO - [azure_client.py:172] - Closing Azure AI client connection
2025-03-27 00:24:34 - INFO - [database.py:238] - Closing database connection
2025-03-27 00:24:34 - INFO - [feedback_manager.py:327] - Closing database connection
2025-03-27 00:24:41 - INFO - [database.py:238] - Closing database connection
2025-03-27 00:24:41 - INFO - [feedback_manager.py:327] - Closing database connection
2025-03-27 00:25:10 - INFO - [app.py:55] - Debug logging enabled for SQL generator and agents
2025-03-27 00:25:10 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-27 00:25:10 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-27 00:25:10 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-27 00:25:10 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-27 00:25:10 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-27 00:25:10 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-27 00:25:10 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-27 00:25:10 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-27 00:25:10 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-27 00:25:10 - INFO - [azure_client.py:11] - Initializing Azure AI Client using LLM Engine
2025-03-27 00:25:10 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-27 00:25:10 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-27 00:25:10 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-27 00:25:10 - INFO - [azure_client.py:17] - Azure AI Client initialized successfully
2025-03-27 00:25:10 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-27 00:25:10 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-03-27 00:25:20 - INFO - [app.py:55] - Debug logging enabled for SQL generator and agents
2025-03-27 00:25:20 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-27 00:25:20 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-27 00:25:20 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-27 00:25:20 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-27 00:25:20 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-27 00:25:20 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-27 00:25:20 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-27 00:25:20 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-27 00:25:20 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-27 00:25:20 - INFO - [azure_client.py:11] - Initializing Azure AI Client using LLM Engine
2025-03-27 00:25:20 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-27 00:25:20 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-27 00:25:20 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-27 00:25:20 - INFO - [azure_client.py:17] - Azure AI Client initialized successfully
2025-03-27 00:25:20 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-27 00:25:20 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-03-27 00:27:24 - INFO - [llm_engine.py:55] - [INTENT] Completion generation started
2025-03-27 00:27:25 - INFO - [llm_engine.py:92] - [INTENT] Completion generation completed in 1.27s
2025-03-27 00:27:25 - INFO - [database.py:24] - Attempting database connection
2025-03-27 00:27:25 - INFO - [database.py:28] - Database connection established in 0.03s
2025-03-27 00:27:25 - INFO - [llm_engine.py:55] - [TABLE] Completion generation started
2025-03-27 00:27:26 - INFO - [llm_engine.py:92] - [TABLE] Completion generation completed in 1.17s
2025-03-27 00:27:26 - INFO - [llm_engine.py:55] - [COLUMN] Completion generation started
2025-03-27 00:27:29 - INFO - [llm_engine.py:92] - [COLUMN] Completion generation completed in 2.21s
2025-03-27 00:27:29 - INFO - [feedback_manager.py:43] - Attempting database connection
2025-03-27 00:27:29 - INFO - [feedback_manager.py:47] - Database connection established in 0.00s
2025-03-27 00:27:29 - INFO - [feedback_manager.py:62] - Loading embedding model 'sentence-transformers/all-MiniLM-L12-v2'
2025-03-27 00:27:32 - INFO - [feedback_manager.py:65] - Embedding model loaded in 3.06s
2025-03-27 00:27:32 - INFO - [feedback_manager.py:219] - Found 1 similar queries using vector similarity for 'Please find me all the customers who live in state...'
2025-03-27 00:27:32 - INFO - [azure_client.py:35] - SQL generation started for query: 'Please find me all the customers who live in state CA'
2025-03-27 00:27:32 - INFO - [azure_client.py:68] - Including schema information (137 chars)
2025-03-27 00:27:32 - INFO - [azure_client.py:90] - Including 4 SQL examples
2025-03-27 00:27:32 - INFO - [llm_engine.py:55] - [SQL_GEN] Completion generation started
2025-03-27 00:27:34 - INFO - [llm_engine.py:92] - [SQL_GEN] Completion generation completed in 2.26s
2025-03-27 00:27:34 - INFO - [azure_client.py:136] - Parsing SQL from model response
2025-03-27 00:27:34 - INFO - [azure_client.py:143] - Found SQL code block in response
2025-03-27 00:27:34 - INFO - [azure_client.py:157] - Extracted SQL query (43 chars) and explanation (275 chars)
2025-03-27 00:27:34 - INFO - [azure_client.py:110] - Generated SQL: SELECT * FROM customers WHERE state = 'CA';
2025-03-27 00:27:34,574 - QUERY: 'Please find me all the customers who live in state CA' → SQL: SELECT * FROM customers WHERE state = 'CA';
2025-03-27 00:27:34 - INFO - [azure_client.py:118] - SQL generation completed in 2.29s
2025-03-27 00:27:34 - INFO - [database.py:45] - Executing SQL query: SELECT * FROM customers WHERE state = 'CA';
2025-03-27 00:27:34 - INFO - [database.py:66] - Query returned 1 rows with 11 columns
2025-03-27 00:27:34 - INFO - [database.py:75] - Query processing completed in 0.03s
2025-03-27 00:28:03 - INFO - [azure_client.py:172] - Closing Azure AI client connection
2025-03-27 00:28:03 - INFO - [database.py:238] - Closing database connection
2025-03-27 00:28:03 - INFO - [feedback_manager.py:327] - Closing database connection
2025-03-27 00:28:03 - INFO - [azure_client.py:172] - Closing Azure AI client connection
2025-03-27 00:28:03 - INFO - [database.py:238] - Closing database connection
2025-03-27 00:28:03 - INFO - [feedback_manager.py:327] - Closing database connection
2025-03-27 00:37:29 - INFO - [app.py:55] - Debug logging enabled for SQL generator and agents
2025-03-27 00:37:29 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-27 00:37:29 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-27 00:37:29 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-27 00:37:29 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-27 00:37:29 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-27 00:37:29 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-27 00:37:29 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-27 00:37:29 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-27 00:37:29 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-27 00:37:29 - INFO - [azure_client.py:11] - Initializing Azure AI Client using LLM Engine
2025-03-27 00:37:29 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-27 00:37:29 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-27 00:37:29 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-27 00:37:29 - INFO - [azure_client.py:17] - Azure AI Client initialized successfully
2025-03-27 00:37:29 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-27 00:37:29 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-03-27 00:37:35 - INFO - [app.py:55] - Debug logging enabled for SQL generator and agents
2025-03-27 00:37:35 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-27 00:37:35 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-27 00:37:35 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-27 00:37:35 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-27 00:37:35 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-27 00:37:35 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-27 00:37:35 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-27 00:37:35 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-27 00:37:35 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-27 00:37:35 - INFO - [azure_client.py:11] - Initializing Azure AI Client using LLM Engine
2025-03-27 00:37:35 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-27 00:37:35 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-27 00:37:35 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-27 00:37:35 - INFO - [azure_client.py:17] - Azure AI Client initialized successfully
2025-03-27 00:37:35 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-27 00:37:35 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-03-27 00:40:07 - INFO - [llm_engine.py:55] - [INTENT] Completion generation started
2025-03-27 00:40:09 - INFO - [llm_engine.py:92] - [INTENT] Completion generation completed in 2.14s
2025-03-27 00:40:09 - INFO - [database.py:24] - Attempting database connection
2025-03-27 00:40:09 - INFO - [database.py:28] - Database connection established in 0.02s
2025-03-27 00:40:09 - INFO - [llm_engine.py:55] - [TABLE] Completion generation started
2025-03-27 00:40:10 - INFO - [llm_engine.py:92] - [TABLE] Completion generation completed in 1.14s
2025-03-27 00:40:10 - INFO - [llm_engine.py:55] - [COLUMN] Completion generation started
2025-03-27 00:40:12 - INFO - [llm_engine.py:92] - [COLUMN] Completion generation completed in 1.43s
2025-03-27 00:40:12 - INFO - [feedback_manager.py:43] - Attempting database connection
2025-03-27 00:40:12 - INFO - [feedback_manager.py:47] - Database connection established in 0.00s
2025-03-27 00:40:12 - INFO - [feedback_manager.py:62] - Loading embedding model 'sentence-transformers/all-MiniLM-L12-v2'
2025-03-27 00:40:15 - INFO - [feedback_manager.py:65] - Embedding model loaded in 2.75s
2025-03-27 00:40:15 - INFO - [feedback_manager.py:219] - Found 1 similar queries using vector similarity for 'get me all the customers who lives in state CA...'
2025-03-27 00:40:15 - INFO - [azure_client.py:35] - SQL generation started for query: 'get me all the customers who lives in state CA'
2025-03-27 00:40:15 - INFO - [azure_client.py:68] - Including schema information (174 chars)
2025-03-27 00:40:15 - INFO - [azure_client.py:90] - Including 4 SQL examples
2025-03-27 00:40:15 - INFO - [llm_engine.py:55] - [SQL_GEN] Completion generation started
2025-03-27 00:40:17 - INFO - [llm_engine.py:92] - [SQL_GEN] Completion generation completed in 2.10s
2025-03-27 00:40:17 - INFO - [azure_client.py:136] - Parsing SQL from model response
2025-03-27 00:40:17 - INFO - [azure_client.py:143] - Found SQL code block in response
2025-03-27 00:40:17 - INFO - [azure_client.py:157] - Extracted SQL query (43 chars) and explanation (223 chars)
2025-03-27 00:40:17 - INFO - [azure_client.py:110] - Generated SQL: SELECT * FROM customers WHERE state = 'CA';
2025-03-27 00:40:17,335 - QUERY: 'get me all the customers who lives in state CA' → SQL: SELECT * FROM customers WHERE state = 'CA';
2025-03-27 00:40:17 - INFO - [azure_client.py:118] - SQL generation completed in 2.12s
2025-03-27 00:40:17 - INFO - [database.py:45] - Executing SQL query: SELECT * FROM customers WHERE state = 'CA';
2025-03-27 00:40:17 - INFO - [database.py:66] - Query returned 1 rows with 11 columns
2025-03-27 00:40:17 - INFO - [database.py:75] - Query processing completed in 0.01s
2025-03-27 00:42:42 - INFO - [llm_engine.py:55] - [INTENT] Completion generation started
2025-03-27 00:42:43 - INFO - [llm_engine.py:92] - [INTENT] Completion generation completed in 0.52s
2025-03-27 00:42:43 - INFO - [database.py:24] - Attempting database connection
2025-03-27 00:42:43 - INFO - [database.py:28] - Database connection established in 0.00s
2025-03-27 00:42:43 - INFO - [llm_engine.py:55] - [TABLE] Completion generation started
2025-03-27 00:42:43 - INFO - [llm_engine.py:92] - [TABLE] Completion generation completed in 0.37s
2025-03-27 00:42:43 - INFO - [llm_engine.py:55] - [COLUMN] Completion generation started
2025-03-27 00:42:44 - INFO - [llm_engine.py:92] - [COLUMN] Completion generation completed in 0.75s
2025-03-27 00:42:44 - INFO - [feedback_manager.py:219] - Found 1 similar queries using vector similarity for 'get me all the customers who lives in state CA...'
2025-03-27 00:42:44 - INFO - [azure_client.py:35] - SQL generation started for query: 'get me all the customers who lives in state CA'
2025-03-27 00:42:44 - INFO - [azure_client.py:68] - Including schema information (174 chars)
2025-03-27 00:42:44 - INFO - [azure_client.py:90] - Including 4 SQL examples
2025-03-27 00:42:44 - INFO - [llm_engine.py:55] - [SQL_GEN] Completion generation started
2025-03-27 00:42:46 - INFO - [llm_engine.py:92] - [SQL_GEN] Completion generation completed in 1.31s
2025-03-27 00:42:46 - INFO - [azure_client.py:136] - Parsing SQL from model response
2025-03-27 00:42:46 - INFO - [azure_client.py:143] - Found SQL code block in response
2025-03-27 00:42:46 - INFO - [azure_client.py:157] - Extracted SQL query (43 chars) and explanation (226 chars)
2025-03-27 00:42:46 - INFO - [azure_client.py:110] - Generated SQL: SELECT * FROM customers WHERE state = 'CA';
2025-03-27 00:42:46,021 - QUERY: 'get me all the customers who lives in state CA' → SQL: SELECT * FROM customers WHERE state = 'CA';
2025-03-27 00:42:46 - INFO - [azure_client.py:118] - SQL generation completed in 1.33s
2025-03-27 00:42:46 - INFO - [database.py:45] - Executing SQL query: SELECT * FROM customers WHERE state = 'CA';
2025-03-27 00:42:46 - INFO - [database.py:66] - Query returned 1 rows with 11 columns
2025-03-27 00:42:46 - INFO - [database.py:75] - Query processing completed in 0.02s
2025-03-27 00:43:27 - INFO - [app.py:277] - Feedback received for query: 'get me all the customers who lives in state CA...' - Rating: 1
2025-03-27 00:43:27 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-03-27 00:43:27 - INFO - [feedback_manager.py:43] - Attempting database connection
2025-03-27 00:43:27 - INFO - [feedback_manager.py:47] - Database connection established in 0.00s
2025-03-27 00:43:27 - INFO - [feedback_manager.py:62] - Loading embedding model 'sentence-transformers/all-MiniLM-L12-v2'
2025-03-27 00:43:30 - INFO - [feedback_manager.py:65] - Embedding model loaded in 2.63s
2025-03-27 00:43:30 - INFO - [feedback_manager.py:146] - Saved feedback for query: 'get me all the customers who lives in state CA...' with rating 1
2025-03-27 00:43:32 - INFO - [app.py:277] - Feedback received for query: 'get me all the customers who lives in state CA...' - Rating: 0
2025-03-27 00:43:32 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-03-27 00:43:32 - INFO - [feedback_manager.py:43] - Attempting database connection
2025-03-27 00:43:32 - INFO - [feedback_manager.py:47] - Database connection established in 0.00s
2025-03-27 00:43:32 - INFO - [feedback_manager.py:62] - Loading embedding model 'sentence-transformers/all-MiniLM-L12-v2'
2025-03-27 00:43:35 - INFO - [feedback_manager.py:65] - Embedding model loaded in 2.34s
2025-03-27 00:43:35 - INFO - [feedback_manager.py:146] - Saved feedback for query: 'get me all the customers who lives in state CA...' with rating 0
2025-03-27 00:43:51 - INFO - [app.py:113] - User explicitly specified tables: order_items
2025-03-27 00:43:51 - INFO - [llm_engine.py:55] - [INTENT] Completion generation started
2025-03-27 00:43:52 - INFO - [llm_engine.py:92] - [INTENT] Completion generation completed in 0.51s
2025-03-27 00:43:52 - INFO - [database.py:24] - Attempting database connection
2025-03-27 00:43:52 - INFO - [database.py:28] - Database connection established in 0.00s
2025-03-27 00:43:52 - INFO - [llm_engine.py:55] - [COLUMN] Completion generation started
2025-03-27 00:43:54 - INFO - [llm_engine.py:92] - [COLUMN] Completion generation completed in 1.92s
2025-03-27 00:43:54 - INFO - [feedback_manager.py:219] - Found 1 similar queries using vector similarity for 'get me all the customers who lives in state CA

ta...'
2025-03-27 00:43:54 - INFO - [azure_client.py:35] - SQL generation started for query: 'get me all the customers who lives in state CA

table order_items'
2025-03-27 00:43:54 - INFO - [azure_client.py:68] - Including schema information (194 chars)
2025-03-27 00:43:54 - INFO - [azure_client.py:90] - Including 4 SQL examples
2025-03-27 00:43:54 - INFO - [llm_engine.py:55] - [SQL_GEN] Completion generation started
2025-03-27 00:43:57 - INFO - [llm_engine.py:92] - [SQL_GEN] Completion generation completed in 2.96s
2025-03-27 00:43:57 - INFO - [azure_client.py:136] - Parsing SQL from model response
2025-03-27 00:43:57 - INFO - [azure_client.py:143] - Found SQL code block in response
2025-03-27 00:43:57 - INFO - [azure_client.py:157] - Extracted SQL query (240 chars) and explanation (495 chars)
2025-03-27 00:43:57 - INFO - [azure_client.py:110] - Generated SQL: SELECT c.customer_id, c.first_name, c.last_name, oi.item_id, oi.product_id, oi.quantity, oi.price
FROM customers AS c
JOIN orders AS o ON c.customer_id = o.customer_id
JOIN order_items AS oi ON o.order_id = oi.order_id
WHERE c.state = 'CA';
2025-03-27 00:43:57,238 - QUERY: 'get me all the customers who lives in state CA

table order_items' → SQL: SELECT c.customer_id, c.first_name, c.last_name, oi.item_id, oi.product_id, oi.quantity, oi.price
FROM customers AS c
JOIN orders AS o ON c.customer_id = o.customer_id
JOIN order_items AS oi ON o.order_id = oi.order_id
WHERE c.state = 'CA';
2025-03-27 00:43:57 - INFO - [azure_client.py:118] - SQL generation completed in 2.98s
2025-03-27 00:43:57 - INFO - [database.py:45] - Executing SQL query: SELECT c.customer_id, c.first_name, c.last_name, oi.item_id, oi.product_id, oi.quantity, oi.price
FROM customers AS c
JOIN orders AS o ON c.customer_id = o.customer_id
JOIN order_items AS oi ON o.order_id = oi.order_id
WHERE c.state = 'CA';
2025-03-27 00:43:57 - INFO - [database.py:66] - Query returned 3 rows with 7 columns
2025-03-27 00:43:57 - INFO - [database.py:75] - Query processing completed in 0.01s
2025-03-27 00:48:41 - INFO - [llm_engine.py:55] - [INTENT] Completion generation started
2025-03-27 00:48:41 - ERROR - [llm_engine.py:98] - [INTENT] Completion generation error after 0.23s: ('Connection aborted.', RemoteDisconnected('Remote end closed connection without response'))
Traceback (most recent call last):
  File "/home/vijay/text2sql/src/utils/llm_engine.py", line 72, in generate_completion
    response = self.client.complete(
               ^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/ai/inference/_patch.py", line 728, in complete
    pipeline_response: PipelineResponse = self._client._pipeline.run(  # pylint: disable=protected-access
                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/_base.py", line 240, in run
    return first_node.send(pipeline_request)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/_base.py", line 96, in send
    response = self.next.send(request)
               ^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/_base.py", line 96, in send
    response = self.next.send(request)
               ^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/_base.py", line 96, in send
    response = self.next.send(request)
               ^^^^^^^^^^^^^^^^^^^^^^^
  [Previous line repeated 2 more times]
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/policies/_redirect.py", line 204, in send
    response = self.next.send(request)
               ^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/policies/_retry.py", line 573, in send
    raise err
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/policies/_retry.py", line 551, in send
    response = self.next.send(request)
               ^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/_base.py", line 96, in send
    response = self.next.send(request)
               ^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/_base.py", line 96, in send
    response = self.next.send(request)
               ^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/_base.py", line 96, in send
    response = self.next.send(request)
               ^^^^^^^^^^^^^^^^^^^^^^^
  [Previous line repeated 3 more times]
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/_base.py", line 128, in send
    self._sender.send(request.http_request, **request.context.options),
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/transport/_requests_basic.py", line 409, in send
    raise error
azure.core.exceptions.ServiceResponseError: ('Connection aborted.', RemoteDisconnected('Remote end closed connection without response'))
2025-03-27 00:48:41 - INFO - [database.py:24] - Attempting database connection
2025-03-27 00:48:41 - INFO - [database.py:28] - Database connection established in 0.00s
2025-03-27 00:48:41 - INFO - [llm_engine.py:55] - [TABLE] Completion generation started
2025-03-27 00:48:41 - ERROR - [llm_engine.py:98] - [TABLE] Completion generation error after 0.04s: ('Connection aborted.', RemoteDisconnected('Remote end closed connection without response'))
Traceback (most recent call last):
  File "/home/vijay/text2sql/src/utils/llm_engine.py", line 72, in generate_completion
    response = self.client.complete(
               ^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/ai/inference/_patch.py", line 728, in complete
    pipeline_response: PipelineResponse = self._client._pipeline.run(  # pylint: disable=protected-access
                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/_base.py", line 240, in run
    return first_node.send(pipeline_request)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/_base.py", line 96, in send
    response = self.next.send(request)
               ^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/_base.py", line 96, in send
    response = self.next.send(request)
               ^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/_base.py", line 96, in send
    response = self.next.send(request)
               ^^^^^^^^^^^^^^^^^^^^^^^
  [Previous line repeated 2 more times]
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/policies/_redirect.py", line 204, in send
    response = self.next.send(request)
               ^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/policies/_retry.py", line 573, in send
    raise err
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/policies/_retry.py", line 551, in send
    response = self.next.send(request)
               ^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/_base.py", line 96, in send
    response = self.next.send(request)
               ^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/_base.py", line 96, in send
    response = self.next.send(request)
               ^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/_base.py", line 96, in send
    response = self.next.send(request)
               ^^^^^^^^^^^^^^^^^^^^^^^
  [Previous line repeated 3 more times]
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/_base.py", line 128, in send
    self._sender.send(request.http_request, **request.context.options),
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/transport/_requests_basic.py", line 409, in send
    raise error
azure.core.exceptions.ServiceResponseError: ('Connection aborted.', RemoteDisconnected('Remote end closed connection without response'))
2025-03-27 00:48:41 - INFO - [llm_engine.py:55] - [COLUMN] Completion generation started
2025-03-27 00:48:41 - ERROR - [llm_engine.py:98] - [COLUMN] Completion generation error after 0.23s: ('Connection aborted.', RemoteDisconnected('Remote end closed connection without response'))
Traceback (most recent call last):
  File "/home/vijay/text2sql/src/utils/llm_engine.py", line 72, in generate_completion
    response = self.client.complete(
               ^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/ai/inference/_patch.py", line 728, in complete
    pipeline_response: PipelineResponse = self._client._pipeline.run(  # pylint: disable=protected-access
                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/_base.py", line 240, in run
    return first_node.send(pipeline_request)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/_base.py", line 96, in send
    response = self.next.send(request)
               ^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/_base.py", line 96, in send
    response = self.next.send(request)
               ^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/_base.py", line 96, in send
    response = self.next.send(request)
               ^^^^^^^^^^^^^^^^^^^^^^^
  [Previous line repeated 2 more times]
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/policies/_redirect.py", line 204, in send
    response = self.next.send(request)
               ^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/policies/_retry.py", line 573, in send
    raise err
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/policies/_retry.py", line 551, in send
    response = self.next.send(request)
               ^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/_base.py", line 96, in send
    response = self.next.send(request)
               ^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/_base.py", line 96, in send
    response = self.next.send(request)
               ^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/_base.py", line 96, in send
    response = self.next.send(request)
               ^^^^^^^^^^^^^^^^^^^^^^^
  [Previous line repeated 3 more times]
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/_base.py", line 128, in send
    self._sender.send(request.http_request, **request.context.options),
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/transport/_requests_basic.py", line 409, in send
    raise error
azure.core.exceptions.ServiceResponseError: ('Connection aborted.', RemoteDisconnected('Remote end closed connection without response'))
2025-03-27 00:48:41 - INFO - [feedback_manager.py:219] - Found 1 similar queries using vector similarity for 'get me all the customers who lives in state CA

ta...'
2025-03-27 00:48:41 - INFO - [azure_client.py:35] - SQL generation started for query: 'get me all the customers who lives in state CA

table order_items'
2025-03-27 00:48:41 - INFO - [azure_client.py:68] - Including schema information (1327 chars)
2025-03-27 00:48:41 - INFO - [azure_client.py:75] - Including 1 join conditions
2025-03-27 00:48:41 - INFO - [azure_client.py:90] - Including 5 SQL examples
2025-03-27 00:48:41 - INFO - [llm_engine.py:55] - [SQL_GEN] Completion generation started
2025-03-27 00:48:44 - INFO - [llm_engine.py:92] - [SQL_GEN] Completion generation completed in 2.61s
2025-03-27 00:48:44 - INFO - [azure_client.py:136] - Parsing SQL from model response
2025-03-27 00:48:44 - INFO - [azure_client.py:143] - Found SQL code block in response
2025-03-27 00:48:44 - INFO - [azure_client.py:157] - Extracted SQL query (43 chars) and explanation (304 chars)
2025-03-27 00:48:44 - INFO - [azure_client.py:110] - Generated SQL: SELECT *
FROM customers
WHERE state = 'CA';
2025-03-27 00:48:44,469 - QUERY: 'get me all the customers who lives in state CA

table order_items' → SQL: SELECT *
FROM customers
WHERE state = 'CA';
2025-03-27 00:48:44 - INFO - [azure_client.py:118] - SQL generation completed in 2.63s
2025-03-27 00:48:44 - INFO - [database.py:45] - Executing SQL query: SELECT *
FROM customers
WHERE state = 'CA';
2025-03-27 00:48:44 - INFO - [database.py:66] - Query returned 1 rows with 11 columns
2025-03-27 00:48:44 - INFO - [database.py:75] - Query processing completed in 0.01s
2025-03-27 00:49:16 - INFO - [azure_client.py:172] - Closing Azure AI client connection
2025-03-27 00:49:16 - INFO - [database.py:238] - Closing database connection
2025-03-27 00:49:16 - INFO - [feedback_manager.py:327] - Closing database connection
2025-03-27 00:49:24 - INFO - [app.py:55] - Debug logging enabled for SQL generator and agents
2025-03-27 00:49:24 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-27 00:49:24 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-27 00:49:24 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-27 00:49:24 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-27 00:49:24 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-27 00:49:24 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-27 00:49:24 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-27 00:49:24 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-27 00:49:24 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-27 00:49:24 - INFO - [azure_client.py:11] - Initializing Azure AI Client using LLM Engine
2025-03-27 00:49:24 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-27 00:49:24 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-27 00:49:24 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-27 00:49:24 - INFO - [azure_client.py:17] - Azure AI Client initialized successfully
2025-03-27 00:49:24 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-27 00:49:24 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-03-27 00:49:31 - INFO - [app.py:55] - Debug logging enabled for SQL generator and agents
2025-03-27 00:49:31 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-27 00:49:31 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-27 00:49:31 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-27 00:49:31 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-27 00:49:31 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-27 00:49:31 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-27 00:49:31 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-27 00:49:31 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-27 00:49:31 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-27 00:49:31 - INFO - [azure_client.py:11] - Initializing Azure AI Client using LLM Engine
2025-03-27 00:49:31 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-27 00:49:31 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-27 00:49:31 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-27 00:49:31 - INFO - [azure_client.py:17] - Azure AI Client initialized successfully
2025-03-27 00:49:31 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-27 00:49:31 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-03-27 00:49:32 - INFO - [llm_engine.py:55] - [INTENT] Completion generation started
2025-03-27 00:49:34 - INFO - [llm_engine.py:92] - [INTENT] Completion generation completed in 1.20s
2025-03-27 00:49:34 - INFO - [database.py:24] - Attempting database connection
2025-03-27 00:49:34 - INFO - [database.py:28] - Database connection established in 0.01s
2025-03-27 00:49:34 - INFO - [llm_engine.py:55] - [TABLE] Completion generation started
2025-03-27 00:49:35 - INFO - [llm_engine.py:92] - [TABLE] Completion generation completed in 1.11s
2025-03-27 00:49:35 - INFO - [llm_engine.py:55] - [COLUMN] Completion generation started
2025-03-27 00:49:36 - INFO - [llm_engine.py:92] - [COLUMN] Completion generation completed in 1.30s
2025-03-27 00:49:36 - INFO - [feedback_manager.py:43] - Attempting database connection
2025-03-27 00:49:36 - INFO - [feedback_manager.py:47] - Database connection established in 0.00s
2025-03-27 00:49:36 - INFO - [feedback_manager.py:62] - Loading embedding model 'sentence-transformers/all-MiniLM-L12-v2'
2025-03-27 00:49:38 - INFO - [feedback_manager.py:65] - Embedding model loaded in 2.44s
2025-03-27 00:49:38 - INFO - [feedback_manager.py:219] - Found 1 similar queries using vector similarity for 'get me all the customers who lives in state CA

ta...'
2025-03-27 00:49:38 - INFO - [azure_client.py:35] - SQL generation started for query: 'get me all the customers who lives in state CA

table order_items'
2025-03-27 00:49:38 - INFO - [azure_client.py:68] - Including schema information (137 chars)
2025-03-27 00:49:38 - INFO - [azure_client.py:90] - Including 4 SQL examples
2025-03-27 00:49:38 - INFO - [llm_engine.py:55] - [SQL_GEN] Completion generation started
2025-03-27 00:49:42 - INFO - [llm_engine.py:92] - [SQL_GEN] Completion generation completed in 3.74s
2025-03-27 00:49:42 - INFO - [azure_client.py:136] - Parsing SQL from model response
2025-03-27 00:49:42 - INFO - [azure_client.py:143] - Found SQL code block in response
2025-03-27 00:49:42 - INFO - [azure_client.py:157] - Extracted SQL query (186 chars) and explanation (478 chars)
2025-03-27 00:49:42 - INFO - [azure_client.py:110] - Generated SQL: SELECT
  c.customer_id,
  c.state,
  oi.order_id,
  oi.item_name,
  oi.quantity
FROM
  customers AS c
JOIN
  order_items AS oi
ON
  c.customer_id = oi.customer_id
WHERE
  c.state = 'CA';
2025-03-27 00:49:42,753 - QUERY: 'get me all the customers who lives in state CA

table order_items' → SQL: SELECT
  c.customer_id,
  c.state,
  oi.order_id,
  oi.item_name,
  oi.quantity
FROM
  customers AS c
JOIN
  order_items AS oi
ON
  c.customer_id = oi.customer_id
WHERE
  c.state = 'CA';
2025-03-27 00:49:42 - INFO - [azure_client.py:118] - SQL generation completed in 3.77s
2025-03-27 00:49:42 - INFO - [database.py:45] - Executing SQL query: SELECT
  c.customer_id,
  c.state,
  oi.order_id,
  oi.item_name,
  oi.quantity
FROM
  customers AS c
JOIN
  order_items AS oi
ON
  c.customer_id = oi.customer_id
WHERE
  c.state = 'CA';
2025-03-27 00:49:42 - ERROR - [database.py:102] - SQL error after 0.00s: (sqlite3.OperationalError) no such column: oi.item_name
[SQL: SELECT
  c.customer_id,
  c.state,
  oi.order_id,
  oi.item_name,
  oi.quantity
FROM
  customers AS c
JOIN
  order_items AS oi
ON
  c.customer_id = oi.customer_id
WHERE
  c.state = 'CA';]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/sqlalchemy/engine/default.py", line 748, in do_execute
    cursor.execute(statement, parameters)
sqlite3.OperationalError: no such column: oi.item_name

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/vijay/text2sql/src/utils/database.py", line 58, in execute_query
    result = conn.execute(text(sql_query))
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 1414, in execute
    return meth(
           ^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/sqlalchemy/sql/elements.py", line 486, in _execute_on_connection
    return connection._execute_clauseelement(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
          ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 1842, in _execute_context
    return self._exec_single_context(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 2326, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/sqlalchemy/engine/default.py", line 748, in do_execute
    cursor.execute(statement, parameters)
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such column: oi.item_name
[SQL: SELECT
  c.customer_id,
  c.state,
  oi.order_id,
  oi.item_name,
  oi.quantity
FROM
  customers AS c
JOIN
  order_items AS oi
ON
  c.customer_id = oi.customer_id
WHERE
  c.state = 'CA';]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 00:49:58 - INFO - [llm_engine.py:55] - [INTENT] Completion generation started
2025-03-27 00:49:58 - INFO - [llm_engine.py:92] - [INTENT] Completion generation completed in 0.52s
2025-03-27 00:49:58 - INFO - [database.py:24] - Attempting database connection
2025-03-27 00:49:58 - INFO - [database.py:28] - Database connection established in 0.00s
2025-03-27 00:49:58 - INFO - [llm_engine.py:55] - [TABLE] Completion generation started
2025-03-27 00:49:59 - INFO - [llm_engine.py:92] - [TABLE] Completion generation completed in 0.35s
2025-03-27 00:49:59 - INFO - [llm_engine.py:55] - [COLUMN] Completion generation started
2025-03-27 00:50:00 - INFO - [llm_engine.py:92] - [COLUMN] Completion generation completed in 0.75s
2025-03-27 00:50:00 - INFO - [feedback_manager.py:219] - Found 1 similar queries using vector similarity for 'get me all the customers who lives in state CA

ta...'
2025-03-27 00:50:00 - INFO - [azure_client.py:35] - SQL generation started for query: 'get me all the customers who lives in state CA

table order_items'
2025-03-27 00:50:00 - INFO - [azure_client.py:68] - Including schema information (137 chars)
2025-03-27 00:50:00 - INFO - [azure_client.py:90] - Including 4 SQL examples
2025-03-27 00:50:00 - INFO - [llm_engine.py:55] - [SQL_GEN] Completion generation started
2025-03-27 00:50:04 - INFO - [llm_engine.py:92] - [SQL_GEN] Completion generation completed in 4.66s
2025-03-27 00:50:04 - INFO - [azure_client.py:136] - Parsing SQL from model response
2025-03-27 00:50:04 - INFO - [azure_client.py:143] - Found SQL code block in response
2025-03-27 00:50:04 - INFO - [azure_client.py:157] - Extracted SQL query (293 chars) and explanation (661 chars)
2025-03-27 00:50:04 - INFO - [azure_client.py:110] - Generated SQL: SELECT 
    c.customer_id, 
    c.state, 
    COUNT(oi.order_id) AS order_count, 
    SUM(oi.amount) AS total_spent
FROM 
    customers AS c
LEFT JOIN 
    order_items AS oi ON c.customer_id = oi.customer_id
WHERE 
    c.state = 'CA'
GROUP BY 
    c.customer_id
ORDER BY 
    total_spent DESC;
2025-03-27 00:50:04,795 - QUERY: 'get me all the customers who lives in state CA

table order_items' → SQL: SELECT 
    c.customer_id, 
    c.state, 
    COUNT(oi.order_id) AS order_count, 
    SUM(oi.amount) AS total_spent
FROM 
    customers AS c
LEFT JOIN 
    order_items AS oi ON c.customer_id = oi.customer_id
WHERE 
    c.state = 'CA'
GROUP BY 
    c.customer_id
ORDER BY 
    total_spent DESC;
2025-03-27 00:50:04 - INFO - [azure_client.py:118] - SQL generation completed in 4.67s
2025-03-27 00:50:04 - INFO - [database.py:45] - Executing SQL query: SELECT 
    c.customer_id, 
    c.state, 
    COUNT(oi.order_id) AS order_count, 
    SUM(oi.amount) AS total_spent
FROM 
    customers AS c
LEFT JOIN 
    order_items AS oi ON c.customer_id = oi.customer_id
WHERE 
    c.state = 'CA'
GROUP BY 
    c.customer_id
ORDER BY 
    total_spent DESC;
2025-03-27 00:50:04 - ERROR - [database.py:102] - SQL error after 0.00s: (sqlite3.OperationalError) no such column: oi.amount
[SQL: SELECT 
    c.customer_id, 
    c.state, 
    COUNT(oi.order_id) AS order_count, 
    SUM(oi.amount) AS total_spent
FROM 
    customers AS c
LEFT JOIN 
    order_items AS oi ON c.customer_id = oi.customer_id
WHERE 
    c.state = 'CA'
GROUP BY 
    c.customer_id
ORDER BY 
    total_spent DESC;]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/sqlalchemy/engine/default.py", line 748, in do_execute
    cursor.execute(statement, parameters)
sqlite3.OperationalError: no such column: oi.amount

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/vijay/text2sql/src/utils/database.py", line 58, in execute_query
    result = conn.execute(text(sql_query))
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 1414, in execute
    return meth(
           ^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/sqlalchemy/sql/elements.py", line 486, in _execute_on_connection
    return connection._execute_clauseelement(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
          ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 1842, in _execute_context
    return self._exec_single_context(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 2326, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/sqlalchemy/engine/default.py", line 748, in do_execute
    cursor.execute(statement, parameters)
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such column: oi.amount
[SQL: SELECT 
    c.customer_id, 
    c.state, 
    COUNT(oi.order_id) AS order_count, 
    SUM(oi.amount) AS total_spent
FROM 
    customers AS c
LEFT JOIN 
    order_items AS oi ON c.customer_id = oi.customer_id
WHERE 
    c.state = 'CA'
GROUP BY 
    c.customer_id
ORDER BY 
    total_spent DESC;]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 00:50:13 - INFO - [llm_engine.py:55] - [INTENT] Completion generation started
2025-03-27 00:50:14 - INFO - [llm_engine.py:92] - [INTENT] Completion generation completed in 0.43s
2025-03-27 00:50:14 - INFO - [database.py:24] - Attempting database connection
2025-03-27 00:50:14 - INFO - [database.py:28] - Database connection established in 0.00s
2025-03-27 00:50:14 - INFO - [llm_engine.py:55] - [TABLE] Completion generation started
2025-03-27 00:50:14 - INFO - [llm_engine.py:92] - [TABLE] Completion generation completed in 0.35s
2025-03-27 00:50:14 - INFO - [llm_engine.py:55] - [COLUMN] Completion generation started
2025-03-27 00:50:15 - INFO - [llm_engine.py:92] - [COLUMN] Completion generation completed in 0.68s
2025-03-27 00:50:15 - INFO - [feedback_manager.py:219] - Found 1 similar queries using vector similarity for 'get me all the customers who lives in state CA...'
2025-03-27 00:50:15 - INFO - [azure_client.py:35] - SQL generation started for query: 'get me all the customers who lives in state CA'
2025-03-27 00:50:15 - INFO - [azure_client.py:68] - Including schema information (174 chars)
2025-03-27 00:50:15 - INFO - [azure_client.py:90] - Including 4 SQL examples
2025-03-27 00:50:15 - INFO - [llm_engine.py:55] - [SQL_GEN] Completion generation started
2025-03-27 00:50:16 - INFO - [llm_engine.py:92] - [SQL_GEN] Completion generation completed in 1.46s
2025-03-27 00:50:16 - INFO - [azure_client.py:136] - Parsing SQL from model response
2025-03-27 00:50:16 - INFO - [azure_client.py:143] - Found SQL code block in response
2025-03-27 00:50:16 - INFO - [azure_client.py:157] - Extracted SQL query (43 chars) and explanation (277 chars)
2025-03-27 00:50:16 - INFO - [azure_client.py:110] - Generated SQL: SELECT *
FROM customers
WHERE state = 'CA';
2025-03-27 00:50:16,970 - QUERY: 'get me all the customers who lives in state CA' → SQL: SELECT *
FROM customers
WHERE state = 'CA';
2025-03-27 00:50:16 - INFO - [azure_client.py:118] - SQL generation completed in 1.48s
2025-03-27 00:50:16 - INFO - [database.py:45] - Executing SQL query: SELECT *
FROM customers
WHERE state = 'CA';
2025-03-27 00:50:16 - INFO - [database.py:66] - Query returned 1 rows with 11 columns
2025-03-27 00:50:16 - INFO - [database.py:75] - Query processing completed in 0.02s
2025-03-27 00:54:40 - INFO - [llm_engine.py:55] - [INTENT] Completion generation started
2025-03-27 00:54:40 - ERROR - [llm_engine.py:98] - [INTENT] Completion generation error after 0.04s: ('Connection aborted.', RemoteDisconnected('Remote end closed connection without response'))
Traceback (most recent call last):
  File "/home/vijay/text2sql/src/utils/llm_engine.py", line 72, in generate_completion
    response = self.client.complete(
               ^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/ai/inference/_patch.py", line 728, in complete
    pipeline_response: PipelineResponse = self._client._pipeline.run(  # pylint: disable=protected-access
                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/_base.py", line 240, in run
    return first_node.send(pipeline_request)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/_base.py", line 96, in send
    response = self.next.send(request)
               ^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/_base.py", line 96, in send
    response = self.next.send(request)
               ^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/_base.py", line 96, in send
    response = self.next.send(request)
               ^^^^^^^^^^^^^^^^^^^^^^^
  [Previous line repeated 2 more times]
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/policies/_redirect.py", line 204, in send
    response = self.next.send(request)
               ^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/policies/_retry.py", line 573, in send
    raise err
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/policies/_retry.py", line 551, in send
    response = self.next.send(request)
               ^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/_base.py", line 96, in send
    response = self.next.send(request)
               ^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/_base.py", line 96, in send
    response = self.next.send(request)
               ^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/_base.py", line 96, in send
    response = self.next.send(request)
               ^^^^^^^^^^^^^^^^^^^^^^^
  [Previous line repeated 3 more times]
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/_base.py", line 128, in send
    self._sender.send(request.http_request, **request.context.options),
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/transport/_requests_basic.py", line 409, in send
    raise error
azure.core.exceptions.ServiceResponseError: ('Connection aborted.', RemoteDisconnected('Remote end closed connection without response'))
2025-03-27 00:54:40 - INFO - [database.py:24] - Attempting database connection
2025-03-27 00:54:40 - INFO - [database.py:28] - Database connection established in 0.00s
2025-03-27 00:54:40 - INFO - [llm_engine.py:55] - [TABLE] Completion generation started
2025-03-27 00:54:40 - INFO - [llm_engine.py:92] - [TABLE] Completion generation completed in 0.45s
2025-03-27 00:54:40 - INFO - [llm_engine.py:55] - [COLUMN] Completion generation started
2025-03-27 00:54:41 - INFO - [llm_engine.py:92] - [COLUMN] Completion generation completed in 0.69s
2025-03-27 00:54:41 - INFO - [feedback_manager.py:219] - Found 1 similar queries using vector similarity for 'get me all the customers who lives in state CA...'
2025-03-27 00:54:41 - INFO - [azure_client.py:35] - SQL generation started for query: 'get me all the customers who lives in state CA'
2025-03-27 00:54:41 - INFO - [azure_client.py:68] - Including schema information (174 chars)
2025-03-27 00:54:41 - INFO - [azure_client.py:90] - Including 4 SQL examples
2025-03-27 00:54:41 - INFO - [llm_engine.py:55] - [SQL_GEN] Completion generation started
2025-03-27 00:54:42 - INFO - [llm_engine.py:92] - [SQL_GEN] Completion generation completed in 1.38s
2025-03-27 00:54:42 - INFO - [azure_client.py:136] - Parsing SQL from model response
2025-03-27 00:54:42 - INFO - [azure_client.py:143] - Found SQL code block in response
2025-03-27 00:54:42 - INFO - [azure_client.py:157] - Extracted SQL query (43 chars) and explanation (235 chars)
2025-03-27 00:54:42 - INFO - [azure_client.py:110] - Generated SQL: SELECT * FROM customers WHERE state = 'CA';
2025-03-27 00:54:42,681 - QUERY: 'get me all the customers who lives in state CA' → SQL: SELECT * FROM customers WHERE state = 'CA';
2025-03-27 00:54:42 - INFO - [azure_client.py:118] - SQL generation completed in 1.40s
2025-03-27 00:54:42 - INFO - [database.py:45] - Executing SQL query: SELECT * FROM customers WHERE state = 'CA';
2025-03-27 00:54:42 - INFO - [database.py:66] - Query returned 1 rows with 11 columns
2025-03-27 00:54:42 - INFO - [database.py:75] - Query processing completed in 0.01s
2025-03-27 00:55:18 - INFO - [azure_client.py:172] - Closing Azure AI client connection
2025-03-27 00:55:18 - INFO - [database.py:238] - Closing database connection
2025-03-27 00:55:18 - INFO - [feedback_manager.py:327] - Closing database connection
2025-03-27 00:55:44 - INFO - [app.py:55] - Debug logging enabled for SQL generator and agents
2025-03-27 00:55:44 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-27 00:55:44 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-27 00:55:44 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-27 00:55:44 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-27 00:55:44 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-27 00:55:44 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-27 00:55:44 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-27 00:55:44 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-27 00:55:44 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-27 00:55:44 - INFO - [azure_client.py:11] - Initializing Azure AI Client using LLM Engine
2025-03-27 00:55:44 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-27 00:55:44 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-27 00:55:44 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-27 00:55:44 - INFO - [azure_client.py:17] - Azure AI Client initialized successfully
2025-03-27 00:55:44 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-27 00:55:44 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-03-27 00:55:51 - INFO - [app.py:55] - Debug logging enabled for SQL generator and agents
2025-03-27 00:55:51 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-27 00:55:51 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-27 00:55:51 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-27 00:55:51 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-27 00:55:51 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-27 00:55:51 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-27 00:55:51 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-27 00:55:51 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-27 00:55:51 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-27 00:55:51 - INFO - [azure_client.py:11] - Initializing Azure AI Client using LLM Engine
2025-03-27 00:55:51 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-27 00:55:51 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-27 00:55:51 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-27 00:55:51 - INFO - [azure_client.py:17] - Azure AI Client initialized successfully
2025-03-27 00:55:51 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-27 00:55:51 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-03-27 00:55:55 - INFO - [llm_engine.py:55] - [INTENT] Completion generation started
2025-03-27 00:55:56 - INFO - [llm_engine.py:92] - [INTENT] Completion generation completed in 1.39s
2025-03-27 00:55:56 - INFO - [database.py:24] - Attempting database connection
2025-03-27 00:55:56 - INFO - [database.py:28] - Database connection established in 0.01s
2025-03-27 00:55:56 - INFO - [llm_engine.py:55] - [TABLE] Completion generation started
2025-03-27 00:55:57 - INFO - [llm_engine.py:92] - [TABLE] Completion generation completed in 1.09s
2025-03-27 00:55:57 - INFO - [llm_engine.py:55] - [COLUMN] Completion generation started
2025-03-27 00:55:59 - INFO - [llm_engine.py:92] - [COLUMN] Completion generation completed in 1.45s
2025-03-27 00:55:59 - INFO - [feedback_manager.py:43] - Attempting database connection
2025-03-27 00:55:59 - INFO - [feedback_manager.py:47] - Database connection established in 0.00s
2025-03-27 00:55:59 - INFO - [feedback_manager.py:62] - Loading embedding model 'sentence-transformers/all-MiniLM-L12-v2'
2025-03-27 00:56:01 - INFO - [feedback_manager.py:65] - Embedding model loaded in 2.90s
2025-03-27 00:56:02 - INFO - [feedback_manager.py:219] - Found 1 similar queries using vector similarity for 'get me all the customers who lives in state CA...'
2025-03-27 00:56:02 - INFO - [azure_client.py:35] - SQL generation started for query: 'get me all the customers who lives in state CA'
2025-03-27 00:56:02 - INFO - [azure_client.py:68] - Including schema information (174 chars)
2025-03-27 00:56:02 - INFO - [azure_client.py:90] - Including 4 SQL examples
2025-03-27 00:56:02 - INFO - [llm_engine.py:55] - [SQL_GEN] Completion generation started
2025-03-27 00:56:04 - INFO - [llm_engine.py:92] - [SQL_GEN] Completion generation completed in 2.21s
2025-03-27 00:56:04 - INFO - [azure_client.py:136] - Parsing SQL from model response
2025-03-27 00:56:04 - INFO - [azure_client.py:143] - Found SQL code block in response
2025-03-27 00:56:04 - INFO - [azure_client.py:157] - Extracted SQL query (43 chars) and explanation (220 chars)
2025-03-27 00:56:04 - INFO - [azure_client.py:110] - Generated SQL: SELECT *
FROM customers
WHERE state = 'CA';
2025-03-27 00:56:04,291 - QUERY: 'get me all the customers who lives in state CA' → SQL: SELECT *
FROM customers
WHERE state = 'CA';
2025-03-27 00:56:04 - INFO - [azure_client.py:118] - SQL generation completed in 2.23s
2025-03-27 00:56:04 - INFO - [database.py:45] - Executing SQL query: SELECT *
FROM customers
WHERE state = 'CA';
2025-03-27 00:56:04 - INFO - [database.py:66] - Query returned 1 rows with 11 columns
2025-03-27 00:56:04 - INFO - [database.py:75] - Query processing completed in 0.01s
2025-03-27 00:56:15 - INFO - [azure_client.py:172] - Closing Azure AI client connection
2025-03-27 00:56:15 - INFO - [database.py:238] - Closing database connection
2025-03-27 00:56:15 - INFO - [feedback_manager.py:327] - Closing database connection
2025-03-27 14:15:26 - INFO - [app.py:55] - Debug logging enabled for SQL generator and agents
2025-03-27 14:15:26 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-27 14:15:26 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-27 14:15:26 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-27 14:15:26 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-27 14:15:26 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-27 14:15:26 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-27 14:15:26 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-27 14:15:26 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-27 14:15:26 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-27 14:15:26 - INFO - [azure_client.py:11] - Initializing Azure AI Client using LLM Engine
2025-03-27 14:15:26 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-27 14:15:26 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-27 14:15:26 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-27 14:15:26 - INFO - [azure_client.py:17] - Azure AI Client initialized successfully
2025-03-27 14:15:26 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-27 14:15:26 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-03-27 14:15:29 - INFO - [app.py:55] - Debug logging enabled for SQL generator and agents
2025-03-27 14:15:29 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-27 14:15:29 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-27 14:15:29 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-27 14:15:29 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-27 14:15:29 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-27 14:15:29 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-27 14:15:29 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-27 14:15:29 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-27 14:15:29 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-27 14:15:29 - INFO - [azure_client.py:11] - Initializing Azure AI Client using LLM Engine
2025-03-27 14:15:29 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-27 14:15:29 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-27 14:15:29 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-27 14:15:29 - INFO - [azure_client.py:17] - Azure AI Client initialized successfully
2025-03-27 14:15:29 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-27 14:15:29 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-03-27 14:22:33 - INFO - [azure_client.py:172] - Closing Azure AI client connection
2025-03-27 14:22:33 - INFO - [database.py:238] - Closing database connection
2025-03-27 14:22:33 - INFO - [feedback_manager.py:526] - Closing database connection
2025-03-27 14:22:33 - INFO - [azure_client.py:172] - Closing Azure AI client connection
2025-03-27 14:22:33 - INFO - [database.py:238] - Closing database connection
2025-03-27 14:22:33 - INFO - [feedback_manager.py:526] - Closing database connection
2025-03-27 14:23:07 - INFO - [app.py:55] - Debug logging enabled for SQL generator and agents
2025-03-27 14:23:07 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-27 14:23:07 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-27 14:23:07 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-27 14:23:07 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-27 14:23:07 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-27 14:23:07 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-27 14:23:07 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-27 14:23:07 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-27 14:23:07 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-27 14:23:07 - INFO - [azure_client.py:11] - Initializing Azure AI Client using LLM Engine
2025-03-27 14:23:07 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-27 14:23:07 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-27 14:23:07 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-27 14:23:07 - INFO - [azure_client.py:17] - Azure AI Client initialized successfully
2025-03-27 14:23:07 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-27 14:23:07 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-03-27 14:23:10 - INFO - [app.py:55] - Debug logging enabled for SQL generator and agents
2025-03-27 14:23:10 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-27 14:23:10 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-27 14:23:10 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-27 14:23:10 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-27 14:23:10 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-27 14:23:10 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-27 14:23:10 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-27 14:23:10 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-27 14:23:10 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-27 14:23:10 - INFO - [azure_client.py:11] - Initializing Azure AI Client using LLM Engine
2025-03-27 14:23:10 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-27 14:23:10 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-27 14:23:10 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-27 14:23:10 - INFO - [azure_client.py:17] - Azure AI Client initialized successfully
2025-03-27 14:23:10 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-27 14:23:10 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-03-27 14:23:46 - INFO - [azure_client.py:172] - Closing Azure AI client connection
2025-03-27 14:23:46 - INFO - [database.py:238] - Closing database connection
2025-03-27 14:23:46 - INFO - [feedback_manager.py:526] - Closing database connection
2025-03-27 14:24:41 - INFO - [app.py:55] - Debug logging enabled for SQL generator and agents
2025-03-27 14:24:41 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-27 14:24:41 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-27 14:24:41 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-27 14:24:41 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-27 14:24:41 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-27 14:24:41 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-27 14:24:41 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-27 14:24:41 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-27 14:24:41 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-27 14:24:41 - INFO - [azure_client.py:11] - Initializing Azure AI Client using LLM Engine
2025-03-27 14:24:41 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-27 14:24:41 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-27 14:24:41 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-27 14:24:41 - INFO - [azure_client.py:17] - Azure AI Client initialized successfully
2025-03-27 14:24:41 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-27 14:24:41 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-03-27 14:24:45 - INFO - [app.py:55] - Debug logging enabled for SQL generator and agents
2025-03-27 14:24:45 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-27 14:24:45 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-27 14:24:45 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-27 14:24:45 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-27 14:24:45 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-27 14:24:45 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-27 14:24:45 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-27 14:24:45 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-27 14:24:45 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-27 14:24:45 - INFO - [azure_client.py:11] - Initializing Azure AI Client using LLM Engine
2025-03-27 14:24:45 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-27 14:24:45 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-27 14:24:45 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-27 14:24:45 - INFO - [azure_client.py:17] - Azure AI Client initialized successfully
2025-03-27 14:24:45 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-27 14:24:45 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-03-27 14:26:05 - INFO - [app.py:220] - Schema requested for workspace: Default
2025-03-27 14:26:08 - INFO - [app.py:220] - Schema requested for workspace: Default
2025-03-27 14:29:17 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-03-27 14:29:17 - INFO - [feedback_manager.py:43] - Attempting database connection
2025-03-27 14:29:17 - INFO - [feedback_manager.py:47] - Database connection established in 0.06s
2025-03-27 14:29:17 - INFO - [feedback_manager.py:389] - Retrieved 0 samples (page 1, limit 10)
2025-03-27 14:29:26 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-03-27 14:29:26 - INFO - [feedback_manager.py:43] - Attempting database connection
2025-03-27 14:29:26 - INFO - [feedback_manager.py:47] - Database connection established in 0.00s
2025-03-27 14:29:26 - INFO - [feedback_manager.py:389] - Retrieved 0 samples (page 1, limit 10)
2025-03-27 14:29:56 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-03-27 14:29:56 - INFO - [feedback_manager.py:43] - Attempting database connection
2025-03-27 14:29:56 - INFO - [feedback_manager.py:47] - Database connection established in 0.01s
2025-03-27 14:29:56 - INFO - [feedback_manager.py:389] - Retrieved 0 samples (page 1, limit 10)
2025-03-27 14:30:53 - INFO - [azure_client.py:172] - Closing Azure AI client connection
2025-03-27 14:30:53 - INFO - [database.py:238] - Closing database connection
2025-03-27 14:30:53 - INFO - [feedback_manager.py:526] - Closing database connection
2025-03-27 14:30:57 - INFO - [app.py:55] - Debug logging enabled for SQL generator and agents
2025-03-27 14:30:57 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-27 14:30:57 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-27 14:30:57 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-27 14:30:57 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-27 14:30:57 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-27 14:30:57 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-27 14:30:57 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-27 14:30:57 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-27 14:30:57 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-27 14:30:57 - INFO - [azure_client.py:11] - Initializing Azure AI Client using LLM Engine
2025-03-27 14:30:57 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-27 14:30:57 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-27 14:30:57 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-27 14:30:57 - INFO - [azure_client.py:17] - Azure AI Client initialized successfully
2025-03-27 14:30:57 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-27 14:30:57 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-03-27 14:32:18 - INFO - [azure_client.py:172] - Closing Azure AI client connection
2025-03-27 14:32:18 - INFO - [database.py:238] - Closing database connection
2025-03-27 14:32:18 - INFO - [feedback_manager.py:526] - Closing database connection
2025-03-27 14:32:22 - INFO - [app.py:55] - Debug logging enabled for SQL generator and agents
2025-03-27 14:32:22 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-27 14:32:22 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-27 14:32:22 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-27 14:32:22 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-27 14:32:22 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-27 14:32:22 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-27 14:32:22 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-27 14:32:22 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-27 14:32:22 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-27 14:32:22 - INFO - [azure_client.py:11] - Initializing Azure AI Client using LLM Engine
2025-03-27 14:32:22 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-27 14:32:22 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-27 14:32:22 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-27 14:32:22 - INFO - [azure_client.py:17] - Azure AI Client initialized successfully
2025-03-27 14:32:22 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-27 14:32:22 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-03-27 14:33:48 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-03-27 14:33:48 - INFO - [feedback_manager.py:43] - Attempting database connection
2025-03-27 14:33:48 - INFO - [feedback_manager.py:47] - Database connection established in 0.04s
2025-03-27 14:33:48 - INFO - [feedback_manager.py:389] - Retrieved 0 samples (page 1, limit 10)
2025-03-27 14:34:03 - INFO - [azure_client.py:172] - Closing Azure AI client connection
2025-03-27 14:34:03 - INFO - [database.py:238] - Closing database connection
2025-03-27 14:34:03 - INFO - [feedback_manager.py:526] - Closing database connection
2025-03-27 14:34:10 - INFO - [app.py:55] - Debug logging enabled for SQL generator and agents
2025-03-27 14:34:10 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-27 14:34:10 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-27 14:34:10 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-27 14:34:10 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-27 14:34:10 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-27 14:34:10 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-27 14:34:10 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-27 14:34:10 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-27 14:34:10 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-27 14:34:10 - INFO - [azure_client.py:11] - Initializing Azure AI Client using LLM Engine
2025-03-27 14:34:10 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-27 14:34:10 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-27 14:34:10 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-27 14:34:10 - INFO - [azure_client.py:17] - Azure AI Client initialized successfully
2025-03-27 14:34:10 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-27 14:34:10 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-03-27 14:34:12 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-03-27 14:34:12 - INFO - [feedback_manager.py:43] - Attempting database connection
2025-03-27 14:34:12 - INFO - [feedback_manager.py:47] - Database connection established in 0.05s
2025-03-27 14:34:12 - INFO - [feedback_manager.py:389] - Retrieved 0 samples (page 1, limit 10)
2025-03-27 14:34:35 - INFO - [app.py:220] - Schema requested for workspace: Default
2025-03-27 14:34:36 - INFO - [app.py:220] - Schema requested for workspace: Default
2025-03-27 14:40:12 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-03-27 14:40:12 - INFO - [feedback_manager.py:43] - Attempting database connection
2025-03-27 14:40:12 - INFO - [feedback_manager.py:47] - Database connection established in 0.01s
2025-03-27 14:40:12 - INFO - [feedback_manager.py:389] - Retrieved 0 samples (page 1, limit 10)
2025-03-27 14:41:41 - INFO - [app.py:220] - Schema requested for workspace: Default
2025-03-27 14:43:39 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-03-27 14:43:39 - INFO - [feedback_manager.py:43] - Attempting database connection
2025-03-27 14:43:39 - INFO - [feedback_manager.py:47] - Database connection established in 0.01s
2025-03-27 14:43:39 - INFO - [feedback_manager.py:389] - Retrieved 0 samples (page 1, limit 10)
2025-03-27 14:45:27 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-03-27 14:45:27 - INFO - [feedback_manager.py:43] - Attempting database connection
2025-03-27 14:45:27 - INFO - [feedback_manager.py:47] - Database connection established in 0.02s
2025-03-27 14:45:27 - INFO - [feedback_manager.py:389] - Retrieved 0 samples (page 1, limit 10)
2025-03-27 14:45:51 - INFO - [app.py:220] - Schema requested for workspace: Default
2025-03-27 14:45:54 - INFO - [app.py:220] - Schema requested for workspace: Default
2025-03-27 14:47:31 - INFO - [app.py:220] - Schema requested for workspace: Default
2025-03-27 14:50:23 - INFO - [app.py:220] - Schema requested for workspace: Default
2025-03-27 14:50:39 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-03-27 14:50:39 - INFO - [feedback_manager.py:43] - Attempting database connection
2025-03-27 14:50:39 - INFO - [feedback_manager.py:47] - Database connection established in 0.02s
2025-03-27 14:50:39 - INFO - [feedback_manager.py:389] - Retrieved 0 samples (page 1, limit 10)
2025-03-27 14:51:31 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-03-27 14:51:31 - INFO - [feedback_manager.py:43] - Attempting database connection
2025-03-27 14:51:31 - INFO - [feedback_manager.py:47] - Database connection established in 0.01s
2025-03-27 14:51:31 - INFO - [feedback_manager.py:62] - Loading embedding model 'sentence-transformers/all-MiniLM-L12-v2'
2025-03-27 14:51:34 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-03-27 14:51:34 - INFO - [feedback_manager.py:43] - Attempting database connection
2025-03-27 14:51:34 - INFO - [feedback_manager.py:47] - Database connection established in 0.01s
2025-03-27 14:51:34 - INFO - [feedback_manager.py:62] - Loading embedding model 'sentence-transformers/all-MiniLM-L12-v2'
2025-03-27 14:51:35 - INFO - [feedback_manager.py:65] - Embedding model loaded in 4.35s
2025-03-27 14:51:36 - INFO - [feedback_manager.py:150] - Saved manual sample for query: 'Get recently created orders...'
2025-03-27 14:51:36 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-03-27 14:51:36 - INFO - [feedback_manager.py:43] - Attempting database connection
2025-03-27 14:51:36 - INFO - [feedback_manager.py:47] - Database connection established in 0.02s
2025-03-27 14:51:36 - INFO - [feedback_manager.py:389] - Retrieved 1 samples (page 1, limit 10)
2025-03-27 14:51:37 - INFO - [feedback_manager.py:65] - Embedding model loaded in 3.13s
2025-03-27 14:51:37 - INFO - [feedback_manager.py:150] - Saved manual sample for query: 'Get recently created orders...'
2025-03-27 14:51:38 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-03-27 14:51:38 - INFO - [feedback_manager.py:43] - Attempting database connection
2025-03-27 14:51:38 - INFO - [feedback_manager.py:47] - Database connection established in 0.01s
2025-03-27 14:51:38 - INFO - [feedback_manager.py:389] - Retrieved 2 samples (page 1, limit 10)
2025-03-27 14:51:40 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-03-27 14:51:40 - INFO - [feedback_manager.py:43] - Attempting database connection
2025-03-27 14:51:40 - INFO - [feedback_manager.py:47] - Database connection established in 0.01s
2025-03-27 14:51:45 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-03-27 14:51:45 - INFO - [feedback_manager.py:43] - Attempting database connection
2025-03-27 14:51:45 - INFO - [feedback_manager.py:47] - Database connection established in 0.07s
2025-03-27 14:51:46 - INFO - [feedback_manager.py:517] - Deleted sample ID 1
2025-03-27 14:51:46 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-03-27 14:51:46 - INFO - [feedback_manager.py:43] - Attempting database connection
2025-03-27 14:51:46 - INFO - [feedback_manager.py:47] - Database connection established in 0.01s
2025-03-27 14:51:46 - INFO - [feedback_manager.py:389] - Retrieved 1 samples (page 1, limit 10)
2025-03-27 14:51:49 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-03-27 14:51:49 - INFO - [feedback_manager.py:43] - Attempting database connection
2025-03-27 14:51:49 - INFO - [feedback_manager.py:47] - Database connection established in 0.01s
2025-03-27 14:52:06 - INFO - [llm_engine.py:55] - [INTENT] Completion generation started
2025-03-27 14:52:08 - INFO - [llm_engine.py:92] - [INTENT] Completion generation completed in 1.44s
2025-03-27 14:52:08 - INFO - [database.py:24] - Attempting database connection
2025-03-27 14:52:08 - INFO - [database.py:28] - Database connection established in 0.01s
2025-03-27 14:52:08 - INFO - [llm_engine.py:55] - [TABLE] Completion generation started
2025-03-27 14:52:09 - INFO - [llm_engine.py:92] - [TABLE] Completion generation completed in 1.43s
2025-03-27 14:52:09 - INFO - [llm_engine.py:55] - [COLUMN] Completion generation started
2025-03-27 14:52:11 - INFO - [llm_engine.py:92] - [COLUMN] Completion generation completed in 1.52s
2025-03-27 14:52:11 - INFO - [feedback_manager.py:43] - Attempting database connection
2025-03-27 14:52:11 - INFO - [feedback_manager.py:47] - Database connection established in 0.01s
2025-03-27 14:52:11 - INFO - [feedback_manager.py:62] - Loading embedding model 'sentence-transformers/all-MiniLM-L12-v2'
2025-03-27 14:52:14 - INFO - [feedback_manager.py:65] - Embedding model loaded in 2.64s
2025-03-27 14:52:14 - INFO - [feedback_manager.py:225] - Found 1 similar queries using vector similarity for 'get recently created orders...'
2025-03-27 14:52:14 - INFO - [azure_client.py:35] - SQL generation started for query: 'get recently created orders'
2025-03-27 14:52:14 - INFO - [azure_client.py:68] - Including schema information (132 chars)
2025-03-27 14:52:14 - INFO - [azure_client.py:90] - Including 4 SQL examples
2025-03-27 14:52:14 - INFO - [llm_engine.py:55] - [SQL_GEN] Completion generation started
2025-03-27 14:52:16 - INFO - [llm_engine.py:92] - [SQL_GEN] Completion generation completed in 2.50s
2025-03-27 14:52:16 - INFO - [azure_client.py:136] - Parsing SQL from model response
2025-03-27 14:52:16 - INFO - [azure_client.py:143] - Found SQL code block in response
2025-03-27 14:52:16 - INFO - [azure_client.py:157] - Extracted SQL query (54 chars) and explanation (270 chars)
2025-03-27 14:52:16 - INFO - [azure_client.py:110] - Generated SQL: SELECT *
FROM orders
ORDER BY order_date DESC
LIMIT 1;
2025-03-27 14:52:16,812 - QUERY: 'get recently created orders' → SQL: SELECT *
FROM orders
ORDER BY order_date DESC
LIMIT 1;
2025-03-27 14:52:16 - INFO - [azure_client.py:118] - SQL generation completed in 2.54s
2025-03-27 14:52:16 - INFO - [database.py:45] - Executing SQL query: SELECT *
FROM orders
ORDER BY order_date DESC
LIMIT 1;
2025-03-27 14:52:16 - INFO - [database.py:66] - Query returned 1 rows with 5 columns
2025-03-27 14:52:16 - INFO - [database.py:75] - Query processing completed in 0.05s
2025-03-27 14:53:31 - INFO - [azure_client.py:172] - Closing Azure AI client connection
2025-03-27 14:53:31 - INFO - [database.py:238] - Closing database connection
2025-03-27 14:53:31 - INFO - [feedback_manager.py:526] - Closing database connection
2025-03-27 14:53:34 - INFO - [azure_client.py:172] - Closing Azure AI client connection
2025-03-27 14:53:34 - INFO - [database.py:238] - Closing database connection
2025-03-27 14:53:34 - INFO - [feedback_manager.py:526] - Closing database connection
2025-03-27 14:53:41 - INFO - [app.py:55] - Debug logging enabled for SQL generator and agents
2025-03-27 14:53:41 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-27 14:53:41 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-27 14:53:41 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-27 14:53:41 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-27 14:53:41 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-27 14:53:41 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-27 14:53:41 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-27 14:53:41 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-27 14:53:41 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-27 14:53:41 - INFO - [azure_client.py:11] - Initializing Azure AI Client using LLM Engine
2025-03-27 14:53:41 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-27 14:53:41 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-27 14:53:41 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-27 14:53:41 - INFO - [azure_client.py:17] - Azure AI Client initialized successfully
2025-03-27 14:53:41 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-27 14:53:41 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-03-27 14:53:46 - INFO - [app.py:55] - Debug logging enabled for SQL generator and agents
2025-03-27 14:53:46 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-27 14:53:46 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-27 14:53:46 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-27 14:53:46 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-27 14:53:46 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-27 14:53:46 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-27 14:53:46 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-27 14:53:46 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-27 14:53:46 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-27 14:53:46 - INFO - [azure_client.py:11] - Initializing Azure AI Client using LLM Engine
2025-03-27 14:53:46 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-27 14:53:46 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-27 14:53:46 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-27 14:53:46 - INFO - [azure_client.py:17] - Azure AI Client initialized successfully
2025-03-27 14:53:46 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-27 14:53:46 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-03-27 15:04:28 - INFO - [llm_engine.py:55] - [INTENT] Completion generation started
2025-03-27 15:04:30 - INFO - [llm_engine.py:92] - [INTENT] Completion generation completed in 1.62s
2025-03-27 15:04:30 - INFO - [database.py:24] - Attempting database connection
2025-03-27 15:04:30 - INFO - [database.py:28] - Database connection established in 0.05s
2025-03-27 15:04:30 - INFO - [llm_engine.py:55] - [TABLE] Completion generation started
2025-03-27 15:04:32 - INFO - [llm_engine.py:92] - [TABLE] Completion generation completed in 1.37s
2025-03-27 15:04:32 - INFO - [llm_engine.py:55] - [COLUMN] Completion generation started
2025-03-27 15:04:33 - INFO - [llm_engine.py:92] - [COLUMN] Completion generation completed in 1.56s
2025-03-27 15:04:33 - INFO - [feedback_manager.py:43] - Attempting database connection
2025-03-27 15:04:33 - INFO - [feedback_manager.py:47] - Database connection established in 0.00s
2025-03-27 15:04:33 - INFO - [feedback_manager.py:62] - Loading embedding model 'sentence-transformers/all-MiniLM-L12-v2'
2025-03-27 15:04:36 - INFO - [feedback_manager.py:65] - Embedding model loaded in 3.07s
2025-03-27 15:04:36 - INFO - [feedback_manager.py:225] - Found 1 similar queries using vector similarity for 'get recently created orders...'
2025-03-27 15:04:36 - INFO - [azure_client.py:35] - SQL generation started for query: 'get recently created orders'
2025-03-27 15:04:36 - INFO - [azure_client.py:68] - Including schema information (147 chars)
2025-03-27 15:04:36 - INFO - [azure_client.py:90] - Including 4 SQL examples
2025-03-27 15:04:36 - INFO - [azure_client.py:100] - PROMPT: [{'role': 'system', 'content': "You are an expert SQL assistant. Convert natural language questions into precise, executable SQL queries.\nYour task is to:\n1. Analyze the provided schema carefully, noting table relationships and column types\n2. Generate a SQL query that accurately answers the user's question\n3. Consider performance by selecting only necessary columns\n4. Use appropriate JOIN conditions based on primary/foreign key relationships or provided join conditions\n5. Include a brief explanation of your query\n\nRules:\n- Include table names and column references exactly as provided in the schema\n- Use appropriate SQL functions based on column data types\n- Consider NULL values in your conditions\n- Use table aliases for better readability when joining multiple tables\n- Add column aliases for computed values\n- Format the SQL query with proper indentation\n- Return the SQL inside a code block tagged with ```sql\n\nExample output format:\nHere's a query that will [explanation]...\n\n```sql\nSELECT ...\nFROM ...\nWHERE ...\n```"}, {'role': 'user', 'content': "Here's the database schema:\nTable: orders\nDescription: Customer orders and transactions\nColumns: order_id (INTEGER), order_date (TEXT), status (TEXT)\nPrimary Key(s): order_id\n"}, {'role': 'user', 'content': 'Here are some example queries and their SQL:\nQuestion: How many records are in the orders table?\nSQL: SELECT COUNT(*) AS record_count FROM orders\n\nQuestion: Get all columns from orders\nSQL: SELECT * FROM orders LIMIT 5\n\nQuestion: Get record from orders by order_id\nSQL: SELECT * FROM orders WHERE order_id = 1\n\nQuestion: Get recently created orders\nSQL: select * from order qualify row_number() over(order by order_date esc)=1\n\n'}, {'role': 'user', 'content': 'Convert this question to SQL: get recently created orders'}]
2025-03-27 15:04:36 - INFO - [llm_engine.py:55] - [SQL_GEN] Completion generation started
2025-03-27 15:04:40 - INFO - [llm_engine.py:92] - [SQL_GEN] Completion generation completed in 3.29s
2025-03-27 15:04:40 - INFO - [azure_client.py:136] - Parsing SQL from model response
2025-03-27 15:04:40 - INFO - [azure_client.py:143] - Found SQL code block in response
2025-03-27 15:04:40 - INFO - [azure_client.py:157] - Extracted SQL query (54 chars) and explanation (454 chars)
2025-03-27 15:04:40 - INFO - [azure_client.py:110] - Generated SQL: SELECT *
FROM orders
ORDER BY order_date DESC
LIMIT 1;
2025-03-27 15:04:40,043 - QUERY: 'get recently created orders' → SQL: SELECT *
FROM orders
ORDER BY order_date DESC
LIMIT 1;
2025-03-27 15:04:40 - INFO - [azure_client.py:118] - SQL generation completed in 3.31s
2025-03-27 15:04:40 - INFO - [database.py:45] - Executing SQL query: SELECT *
FROM orders
ORDER BY order_date DESC
LIMIT 1;
2025-03-27 15:04:40 - INFO - [database.py:66] - Query returned 1 rows with 5 columns
2025-03-27 15:04:40 - INFO - [database.py:75] - Query processing completed in 0.02s
2025-03-27 15:04:58 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-03-27 15:04:58 - INFO - [feedback_manager.py:43] - Attempting database connection
2025-03-27 15:04:58 - INFO - [feedback_manager.py:47] - Database connection established in 0.01s
2025-03-27 15:04:58 - INFO - [feedback_manager.py:389] - Retrieved 1 samples (page 1, limit 10)
2025-03-27 15:05:00 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-03-27 15:05:00 - INFO - [feedback_manager.py:43] - Attempting database connection
2025-03-27 15:05:00 - INFO - [feedback_manager.py:47] - Database connection established in 0.01s
2025-03-27 15:05:07 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-03-27 15:05:07 - INFO - [feedback_manager.py:43] - Attempting database connection
2025-03-27 15:05:07 - INFO - [feedback_manager.py:47] - Database connection established in 0.00s
2025-03-27 15:05:07 - INFO - [feedback_manager.py:62] - Loading embedding model 'sentence-transformers/all-MiniLM-L12-v2'
2025-03-27 15:05:10 - INFO - [feedback_manager.py:65] - Embedding model loaded in 3.41s
2025-03-27 15:05:10 - INFO - [feedback_manager.py:491] - Updated sample ID 2
2025-03-27 15:05:10 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-03-27 15:05:10 - INFO - [feedback_manager.py:43] - Attempting database connection
2025-03-27 15:05:10 - INFO - [feedback_manager.py:47] - Database connection established in 0.00s
2025-03-27 15:05:10 - INFO - [feedback_manager.py:389] - Retrieved 1 samples (page 1, limit 10)
2025-03-27 15:05:34 - INFO - [llm_engine.py:55] - [INTENT] Completion generation started
2025-03-27 15:05:34 - INFO - [llm_engine.py:92] - [INTENT] Completion generation completed in 0.54s
2025-03-27 15:05:34 - INFO - [database.py:24] - Attempting database connection
2025-03-27 15:05:34 - INFO - [database.py:28] - Database connection established in 0.00s
2025-03-27 15:05:34 - INFO - [llm_engine.py:55] - [TABLE] Completion generation started
2025-03-27 15:05:35 - INFO - [llm_engine.py:92] - [TABLE] Completion generation completed in 0.37s
2025-03-27 15:05:35 - INFO - [llm_engine.py:55] - [COLUMN] Completion generation started
2025-03-27 15:05:35 - INFO - [llm_engine.py:92] - [COLUMN] Completion generation completed in 0.57s
2025-03-27 15:05:35 - INFO - [feedback_manager.py:225] - Found 1 similar queries using vector similarity for 'get recently created orders...'
2025-03-27 15:05:35 - INFO - [azure_client.py:35] - SQL generation started for query: 'get recently created orders'
2025-03-27 15:05:35 - INFO - [azure_client.py:68] - Including schema information (132 chars)
2025-03-27 15:05:35 - INFO - [azure_client.py:90] - Including 4 SQL examples
2025-03-27 15:05:35 - INFO - [azure_client.py:100] - PROMPT: [{'role': 'system', 'content': "You are an expert SQL assistant. Convert natural language questions into precise, executable SQL queries.\nYour task is to:\n1. Analyze the provided schema carefully, noting table relationships and column types\n2. Generate a SQL query that accurately answers the user's question\n3. Consider performance by selecting only necessary columns\n4. Use appropriate JOIN conditions based on primary/foreign key relationships or provided join conditions\n5. Include a brief explanation of your query\n\nRules:\n- Include table names and column references exactly as provided in the schema\n- Use appropriate SQL functions based on column data types\n- Consider NULL values in your conditions\n- Use table aliases for better readability when joining multiple tables\n- Add column aliases for computed values\n- Format the SQL query with proper indentation\n- Return the SQL inside a code block tagged with ```sql\n\nExample output format:\nHere's a query that will [explanation]...\n\n```sql\nSELECT ...\nFROM ...\nWHERE ...\n```"}, {'role': 'user', 'content': "Here's the database schema:\nTable: orders\nDescription: Customer orders and transactions\nColumns: order_id (INTEGER), order_date (TEXT)\nPrimary Key(s): order_id\n"}, {'role': 'user', 'content': 'Here are some example queries and their SQL:\nQuestion: How many records are in the orders table?\nSQL: SELECT COUNT(*) AS record_count FROM orders\n\nQuestion: Get all columns from orders\nSQL: SELECT * FROM orders LIMIT 5\n\nQuestion: Get record from orders by order_id\nSQL: SELECT * FROM orders WHERE order_id = 1\n\nQuestion: Get recently created orders\nSQL: select * from orders qualify row_number() over(order by order_date esc)=1\n\n'}, {'role': 'user', 'content': 'Convert this question to SQL: get recently created orders'}]
2025-03-27 15:05:35 - INFO - [llm_engine.py:55] - [SQL_GEN] Completion generation started
2025-03-27 15:05:37 - INFO - [llm_engine.py:92] - [SQL_GEN] Completion generation completed in 2.09s
2025-03-27 15:05:37 - INFO - [azure_client.py:136] - Parsing SQL from model response
2025-03-27 15:05:37 - INFO - [azure_client.py:143] - Found SQL code block in response
2025-03-27 15:05:37 - INFO - [azure_client.py:157] - Extracted SQL query (54 chars) and explanation (404 chars)
2025-03-27 15:05:37 - INFO - [azure_client.py:110] - Generated SQL: SELECT *
FROM orders
ORDER BY order_date DESC
LIMIT 1;
2025-03-27 15:05:37,938 - QUERY: 'get recently created orders' → SQL: SELECT *
FROM orders
ORDER BY order_date DESC
LIMIT 1;
2025-03-27 15:05:37 - INFO - [azure_client.py:118] - SQL generation completed in 2.14s
2025-03-27 15:05:37 - INFO - [database.py:45] - Executing SQL query: SELECT *
FROM orders
ORDER BY order_date DESC
LIMIT 1;
2025-03-27 15:05:37 - INFO - [database.py:66] - Query returned 1 rows with 5 columns
2025-03-27 15:05:37 - INFO - [database.py:75] - Query processing completed in 0.03s
2025-03-27 15:12:49 - INFO - [azure_client.py:172] - Closing Azure AI client connection
2025-03-27 15:12:49 - INFO - [database.py:238] - Closing database connection
2025-03-27 15:12:49 - INFO - [feedback_manager.py:526] - Closing database connection
2025-03-27 15:12:56 - INFO - [app.py:55] - Debug logging enabled for SQL generator and agents
2025-03-27 15:12:56 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-27 15:12:56 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-27 15:12:56 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-27 15:12:56 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-27 15:12:56 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-27 15:12:56 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-27 15:12:56 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-27 15:12:56 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-27 15:12:56 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-27 15:12:56 - INFO - [azure_client.py:11] - Initializing Azure AI Client using LLM Engine
2025-03-27 15:12:56 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-27 15:12:56 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-27 15:12:56 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-27 15:12:56 - INFO - [azure_client.py:17] - Azure AI Client initialized successfully
2025-03-27 15:12:56 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-27 15:12:56 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-03-27 15:14:02 - INFO - [azure_client.py:184] - Closing Azure AI client connection
2025-03-27 15:14:02 - INFO - [database.py:238] - Closing database connection
2025-03-27 15:14:02 - INFO - [feedback_manager.py:526] - Closing database connection
2025-03-27 15:14:10 - INFO - [app.py:55] - Debug logging enabled for SQL generator and agents
2025-03-27 15:14:10 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-27 15:14:10 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-27 15:14:10 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-27 15:14:10 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-27 15:14:10 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-27 15:14:10 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-27 15:14:10 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-27 15:14:10 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-27 15:14:10 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-27 15:14:10 - INFO - [azure_client.py:11] - Initializing Azure AI Client using LLM Engine
2025-03-27 15:14:10 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-27 15:14:10 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-27 15:14:10 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-27 15:14:10 - INFO - [azure_client.py:17] - Azure AI Client initialized successfully
2025-03-27 15:14:10 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-27 15:14:10 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-03-27 15:37:21 - INFO - [azure_client.py:184] - Closing Azure AI client connection
2025-03-27 15:37:21 - INFO - [database.py:238] - Closing database connection
2025-03-27 15:37:21 - INFO - [feedback_manager.py:526] - Closing database connection
2025-03-27 15:37:25 - INFO - [app.py:55] - Debug logging enabled for SQL generator and agents
2025-03-27 15:37:25 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-27 15:37:25 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-27 15:37:25 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-27 15:37:25 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-27 15:37:25 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-27 15:37:25 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-27 15:37:25 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-27 15:37:25 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-27 15:37:25 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-27 15:37:25 - INFO - [azure_client.py:11] - Initializing Azure AI Client using LLM Engine
2025-03-27 15:37:25 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-27 15:37:25 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-27 15:37:25 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-27 15:37:25 - INFO - [azure_client.py:17] - Azure AI Client initialized successfully
2025-03-27 15:37:25 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-27 15:37:25 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-03-27 15:37:28 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-03-27 15:37:28 - INFO - [feedback_manager.py:43] - Attempting database connection
2025-03-27 15:37:28 - INFO - [feedback_manager.py:47] - Database connection established in 0.03s
2025-03-27 15:37:28 - INFO - [feedback_manager.py:389] - Retrieved 1 samples (page 1, limit 10)
2025-03-27 15:39:19 - INFO - [azure_client.py:184] - Closing Azure AI client connection
2025-03-27 15:39:19 - INFO - [database.py:238] - Closing database connection
2025-03-27 15:39:19 - INFO - [feedback_manager.py:526] - Closing database connection
2025-03-27 15:39:26 - INFO - [app.py:55] - Debug logging enabled for SQL generator and agents
2025-03-27 15:39:26 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-27 15:39:26 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-27 15:39:26 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-27 15:39:26 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-27 15:39:26 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-27 15:39:26 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-27 15:39:26 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-27 15:39:26 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-27 15:39:26 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-27 15:39:26 - INFO - [azure_client.py:11] - Initializing Azure AI Client using LLM Engine
2025-03-27 15:39:26 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-27 15:39:26 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-27 15:39:26 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-27 15:39:26 - INFO - [azure_client.py:17] - Azure AI Client initialized successfully
2025-03-27 15:39:26 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-27 15:39:26 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-03-27 15:40:34 - INFO - [azure_client.py:184] - Closing Azure AI client connection
2025-03-27 15:40:34 - INFO - [database.py:238] - Closing database connection
2025-03-27 15:40:34 - INFO - [feedback_manager.py:526] - Closing database connection
2025-03-27 15:40:41 - INFO - [app.py:55] - Debug logging enabled for SQL generator and agents
2025-03-27 15:40:41 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-27 15:40:41 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-27 15:40:41 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-27 15:40:41 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-27 15:40:41 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-27 15:40:41 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-27 15:40:41 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-27 15:40:41 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-27 15:40:41 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-27 15:40:41 - INFO - [azure_client.py:11] - Initializing Azure AI Client using LLM Engine
2025-03-27 15:40:41 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-27 15:40:41 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-27 15:40:41 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-27 15:40:41 - INFO - [azure_client.py:17] - Azure AI Client initialized successfully
2025-03-27 15:40:41 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-27 15:40:41 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-03-27 15:41:05 - INFO - [azure_client.py:185] - Closing Azure AI client connection
2025-03-27 15:41:05 - INFO - [database.py:238] - Closing database connection
2025-03-27 15:41:05 - INFO - [feedback_manager.py:526] - Closing database connection
2025-03-27 15:41:12 - INFO - [app.py:55] - Debug logging enabled for SQL generator and agents
2025-03-27 15:41:12 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-27 15:41:12 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-27 15:41:12 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-27 15:41:12 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-27 15:41:12 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-27 15:41:12 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-27 15:41:12 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-27 15:41:12 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-27 15:41:12 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-27 15:41:12 - INFO - [azure_client.py:11] - Initializing Azure AI Client using LLM Engine
2025-03-27 15:41:12 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-27 15:41:12 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-27 15:41:12 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-27 15:41:12 - INFO - [azure_client.py:17] - Azure AI Client initialized successfully
2025-03-27 15:41:12 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-27 15:41:12 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-03-27 15:41:14 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-03-27 15:41:14 - INFO - [feedback_manager.py:43] - Attempting database connection
2025-03-27 15:41:14 - INFO - [feedback_manager.py:47] - Database connection established in 0.05s
2025-03-27 15:41:14 - INFO - [feedback_manager.py:389] - Retrieved 1 samples (page 1, limit 10)
2025-03-27 15:41:44 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-03-27 15:41:44 - INFO - [feedback_manager.py:43] - Attempting database connection
2025-03-27 15:41:44 - INFO - [feedback_manager.py:47] - Database connection established in 0.01s
2025-03-27 15:41:44 - INFO - [feedback_manager.py:389] - Retrieved 1 samples (page 1, limit 10)
2025-03-27 15:42:00 - INFO - [llm_engine.py:55] - [INTENT] Completion generation started
2025-03-27 15:42:02 - INFO - [llm_engine.py:92] - [INTENT] Completion generation completed in 1.55s
2025-03-27 15:42:02 - INFO - [database.py:24] - Attempting database connection
2025-03-27 15:42:02 - INFO - [database.py:28] - Database connection established in 0.01s
2025-03-27 15:42:02 - INFO - [llm_engine.py:55] - [TABLE] Completion generation started
2025-03-27 15:42:04 - INFO - [llm_engine.py:92] - [TABLE] Completion generation completed in 1.53s
2025-03-27 15:42:04 - INFO - [llm_engine.py:55] - [COLUMN] Completion generation started
2025-03-27 15:42:05 - INFO - [llm_engine.py:92] - [COLUMN] Completion generation completed in 1.80s
2025-03-27 15:42:05 - INFO - [feedback_manager.py:43] - Attempting database connection
2025-03-27 15:42:05 - INFO - [feedback_manager.py:47] - Database connection established in 0.01s
2025-03-27 15:42:05 - INFO - [feedback_manager.py:62] - Loading embedding model 'sentence-transformers/all-MiniLM-L12-v2'
2025-03-27 15:42:09 - INFO - [feedback_manager.py:65] - Embedding model loaded in 3.33s
2025-03-27 15:42:09 - INFO - [feedback_manager.py:225] - Found 1 similar queries using vector similarity for 'Get recently created orders...'
2025-03-27 15:42:09 - INFO - [azure_client.py:35] - SQL generation started for query: 'Get recently created orders'
2025-03-27 15:42:09 - INFO - [azure_client.py:68] - Including schema information (153 chars)
2025-03-27 15:42:09 - INFO - [azure_client.py:96] - Including 1 SQL examples from feedback similarity search
2025-03-27 15:42:09 - INFO - [azure_client.py:113] - PROMPT: [{'role': 'system', 'content': "You are an expert SQL assistant. Convert natural language questions into precise, executable SQL queries.\nYour task is to:\n1. Analyze the provided schema carefully, noting table relationships and column types\n2. Generate a SQL query that accurately answers the user's question\n3. Consider performance by selecting only necessary columns\n4. Use appropriate JOIN conditions based on primary/foreign key relationships or provided join conditions\n5. Include a brief explanation of your query\n\nRules:\n- Include table names and column references exactly as provided in the schema\n- Use appropriate SQL functions based on column data types\n- Consider NULL values in your conditions\n- Use table aliases for better readability when joining multiple tables\n- Add column aliases for computed values\n- Format the SQL query with proper indentation\n- Return the SQL inside a code block tagged with ```sql\n\nExample output format:\nHere's a query that will [explanation]...\n\n```sql\nSELECT ...\nFROM ...\nWHERE ...\n```"}, {'role': 'user', 'content': "Here's the database schema:\nTable: orders\nDescription: Customer orders and transactions\nColumns: order_id (INTEGER), order_date (TEXT), total_amount (REAL)\nPrimary Key(s): order_id\n"}, {'role': 'user', 'content': 'Here are some similar queries that were previously successful:\nQuestion: Get recently created orders\nSQL: select * from orders qualify row_number() over(order by order_date esc)=1\n\n'}, {'role': 'user', 'content': 'Convert this question to SQL: Get recently created orders'}]
2025-03-27 15:42:09 - INFO - [llm_engine.py:55] - [SQL_GEN] Completion generation started
2025-03-27 15:42:12 - INFO - [llm_engine.py:92] - [SQL_GEN] Completion generation completed in 2.90s
2025-03-27 15:42:12 - INFO - [azure_client.py:149] - Parsing SQL from model response
2025-03-27 15:42:12 - INFO - [azure_client.py:156] - Found SQL code block in response
2025-03-27 15:42:12 - INFO - [azure_client.py:170] - Extracted SQL query (54 chars) and explanation (343 chars)
2025-03-27 15:42:12 - INFO - [azure_client.py:123] - Generated SQL: SELECT *
FROM orders
ORDER BY order_date DESC
LIMIT 1;
2025-03-27 15:42:12,368 - QUERY: 'Get recently created orders' → SQL: SELECT *
FROM orders
ORDER BY order_date DESC
LIMIT 1;
2025-03-27 15:42:12 - INFO - [azure_client.py:131] - SQL generation completed in 2.94s
2025-03-27 15:42:12 - INFO - [database.py:45] - Executing SQL query: SELECT *
FROM orders
ORDER BY order_date DESC
LIMIT 1;
2025-03-27 15:42:12 - INFO - [database.py:66] - Query returned 1 rows with 5 columns
2025-03-27 15:42:12 - INFO - [database.py:75] - Query processing completed in 0.04s
2025-03-27 16:30:02 - INFO - [azure_client.py:185] - Closing Azure AI client connection
2025-03-27 16:30:02 - INFO - [database.py:238] - Closing database connection
2025-03-27 16:30:02 - INFO - [feedback_manager.py:526] - Closing database connection
2025-03-27 16:30:08 - INFO - [app.py:55] - Debug logging enabled for SQL generator and agents
2025-03-27 16:30:08 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-27 16:30:08 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-27 16:30:08 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-27 16:30:08 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-27 16:30:08 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-27 16:30:08 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-27 16:30:08 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-27 16:30:08 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-27 16:30:08 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-27 16:30:08 - INFO - [azure_client.py:11] - Initializing Azure AI Client using LLM Engine
2025-03-27 16:30:08 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-27 16:30:08 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-27 16:30:08 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-27 16:30:08 - INFO - [azure_client.py:17] - Azure AI Client initialized successfully
2025-03-27 16:30:08 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-27 16:30:08 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-03-27 16:30:30 - INFO - [llm_engine.py:55] - [INTENT] Completion generation started
2025-03-27 16:30:31 - INFO - [llm_engine.py:92] - [INTENT] Completion generation completed in 1.47s
2025-03-27 16:30:31 - INFO - [database.py:24] - Attempting database connection
2025-03-27 16:30:31 - INFO - [database.py:28] - Database connection established in 0.01s
2025-03-27 16:30:31 - INFO - [llm_engine.py:55] - [TABLE] Completion generation started
2025-03-27 16:30:32 - INFO - [llm_engine.py:92] - [TABLE] Completion generation completed in 1.21s
2025-03-27 16:30:32 - INFO - [llm_engine.py:55] - [COLUMN] Completion generation started
2025-03-27 16:30:34 - INFO - [llm_engine.py:92] - [COLUMN] Completion generation completed in 1.40s
2025-03-27 16:30:34 - INFO - [feedback_manager.py:43] - Attempting database connection
2025-03-27 16:30:34 - INFO - [feedback_manager.py:47] - Database connection established in 0.00s
2025-03-27 16:30:34 - INFO - [feedback_manager.py:62] - Loading embedding model 'sentence-transformers/all-MiniLM-L12-v2'
2025-03-27 16:30:37 - INFO - [feedback_manager.py:65] - Embedding model loaded in 3.38s
2025-03-27 16:30:37 - INFO - [feedback_manager.py:225] - Found 1 similar queries using vector similarity for 'Get recently created orders...'
2025-03-27 16:30:37 - INFO - [azure_client.py:35] - SQL generation started for query: 'Get recently created orders'
2025-03-27 16:30:37 - INFO - [azure_client.py:69] - Including schema information (132 chars)
2025-03-27 16:30:37 - INFO - [azure_client.py:97] - Including 1 SQL examples from feedback similarity search
2025-03-27 16:30:37 - INFO - [azure_client.py:114] - PROMPT: [{'role': 'system', 'content': "You are an expert SQL assistant. Convert natural language questions into precise, executable SQL queries.\nYour task is to:\n1. Analyze the provided schema carefully, noting table relationships and column types\n2. Generate a SQL query that accurately answers the user's question\n3. Consider performance by selecting only necessary columns\n4. Use appropriate JOIN conditions based on primary/foreign key relationships or provided join conditions\n5. Include a brief explanation of your query\n\nRules:\n- Include table names and column references exactly as provided in the schema\n- Use appropriate SQL functions based on column data types\n- Consider NULL values in your conditions\n- Use table aliases for better readability when joining multiple tables\n- Add column aliases for computed values\n- Format the SQL query with proper indentation\n- Use provided similar queries as refernce while creating the SQL\n- Return the SQL inside a code block tagged with ```sql\n\nExample output format:\nHere's a query that will [explanation]...\n\n```sql\nSELECT ...\nFROM ...\nWHERE ...\n```"}, {'role': 'user', 'content': "Here's the database schema:\nTable: orders\nDescription: Customer orders and transactions\nColumns: order_id (INTEGER), order_date (TEXT)\nPrimary Key(s): order_id\n"}, {'role': 'user', 'content': 'Here are some similar queries that were previously successful:\nQuestion: Get recently created orders\nSQL: select * from orders qualify row_number() over(order by order_date esc)=1\n\n'}, {'role': 'user', 'content': 'Convert this question to SQL: Get recently created orders'}]
2025-03-27 16:30:37 - INFO - [llm_engine.py:55] - [SQL_GEN] Completion generation started
2025-03-27 16:30:40 - INFO - [llm_engine.py:92] - [SQL_GEN] Completion generation completed in 2.31s
2025-03-27 16:30:40 - INFO - [azure_client.py:150] - Parsing SQL from model response
2025-03-27 16:30:40 - INFO - [azure_client.py:157] - Found SQL code block in response
2025-03-27 16:30:40 - INFO - [azure_client.py:171] - Extracted SQL query (54 chars) and explanation (282 chars)
2025-03-27 16:30:40 - INFO - [azure_client.py:124] - Generated SQL: SELECT *
FROM orders
ORDER BY order_date DESC
LIMIT 1;
2025-03-27 16:30:40,046 - QUERY: 'Get recently created orders' → SQL: SELECT *
FROM orders
ORDER BY order_date DESC
LIMIT 1;
2025-03-27 16:30:40 - INFO - [azure_client.py:132] - SQL generation completed in 2.32s
2025-03-27 16:30:40 - INFO - [database.py:45] - Executing SQL query: SELECT *
FROM orders
ORDER BY order_date DESC
LIMIT 1;
2025-03-27 16:30:40 - INFO - [database.py:66] - Query returned 1 rows with 5 columns
2025-03-27 16:30:40 - INFO - [database.py:75] - Query processing completed in 0.02s
2025-03-27 16:33:32 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-03-27 16:33:32 - INFO - [feedback_manager.py:43] - Attempting database connection
2025-03-27 16:33:32 - INFO - [feedback_manager.py:47] - Database connection established in 0.00s
2025-03-27 16:33:32 - INFO - [feedback_manager.py:389] - Retrieved 1 samples (page 1, limit 10)
2025-03-27 16:33:33 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-03-27 16:33:33 - INFO - [feedback_manager.py:43] - Attempting database connection
2025-03-27 16:33:33 - INFO - [feedback_manager.py:47] - Database connection established in 0.00s
2025-03-27 16:33:38 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-03-27 16:33:38 - INFO - [feedback_manager.py:43] - Attempting database connection
2025-03-27 16:33:38 - INFO - [feedback_manager.py:47] - Database connection established in 0.00s
2025-03-27 16:33:38 - INFO - [feedback_manager.py:62] - Loading embedding model 'sentence-transformers/all-MiniLM-L12-v2'
2025-03-27 16:33:40 - INFO - [feedback_manager.py:65] - Embedding model loaded in 2.21s
2025-03-27 16:33:40 - INFO - [feedback_manager.py:491] - Updated sample ID 2
2025-03-27 16:33:41 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-03-27 16:33:41 - INFO - [feedback_manager.py:43] - Attempting database connection
2025-03-27 16:33:41 - INFO - [feedback_manager.py:47] - Database connection established in 0.01s
2025-03-27 16:33:41 - INFO - [feedback_manager.py:389] - Retrieved 1 samples (page 1, limit 10)
2025-03-27 16:33:58 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-03-27 16:33:58 - INFO - [feedback_manager.py:43] - Attempting database connection
2025-03-27 16:33:58 - INFO - [feedback_manager.py:47] - Database connection established in 0.00s
2025-03-27 16:33:58 - INFO - [feedback_manager.py:389] - Retrieved 1 samples (page 1, limit 10)
2025-03-27 16:34:01 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-03-27 16:34:01 - INFO - [feedback_manager.py:43] - Attempting database connection
2025-03-27 16:34:01 - INFO - [feedback_manager.py:47] - Database connection established in 0.00s
2025-03-27 16:34:14 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-03-27 16:34:14 - INFO - [feedback_manager.py:43] - Attempting database connection
2025-03-27 16:34:14 - INFO - [feedback_manager.py:47] - Database connection established in 0.00s
2025-03-27 16:34:14 - INFO - [feedback_manager.py:389] - Retrieved 1 samples (page 1, limit 10)
2025-03-27 16:34:58 - INFO - [llm_engine.py:55] - [INTENT] Completion generation started
2025-03-27 16:34:58 - INFO - [llm_engine.py:92] - [INTENT] Completion generation completed in 0.55s
2025-03-27 16:34:58 - INFO - [database.py:24] - Attempting database connection
2025-03-27 16:34:58 - INFO - [database.py:28] - Database connection established in 0.00s
2025-03-27 16:34:58 - INFO - [llm_engine.py:55] - [TABLE] Completion generation started
2025-03-27 16:34:59 - INFO - [llm_engine.py:92] - [TABLE] Completion generation completed in 0.58s
2025-03-27 16:34:59 - INFO - [llm_engine.py:55] - [COLUMN] Completion generation started
2025-03-27 16:35:00 - INFO - [llm_engine.py:92] - [COLUMN] Completion generation completed in 0.79s
2025-03-27 16:35:00 - INFO - [feedback_manager.py:225] - Found 1 similar queries using vector similarity for 'Get recently created orders...'
2025-03-27 16:35:00 - INFO - [azure_client.py:35] - SQL generation started for query: 'Get recently created orders'
2025-03-27 16:35:00 - INFO - [azure_client.py:69] - Including schema information (168 chars)
2025-03-27 16:35:00 - INFO - [azure_client.py:97] - Including 1 SQL examples from feedback similarity search
2025-03-27 16:35:00 - INFO - [azure_client.py:114] - PROMPT: [{'role': 'system', 'content': "You are an expert SQL assistant. Convert natural language questions into precise, executable SQL queries.\nYour task is to:\n1. Analyze the provided schema carefully, noting table relationships and column types\n2. Generate a SQL query that accurately answers the user's question\n3. Consider performance by selecting only necessary columns\n4. Use appropriate JOIN conditions based on primary/foreign key relationships or provided join conditions\n5. Include a brief explanation of your query\n\nRules:\n- Include table names and column references exactly as provided in the schema\n- Use appropriate SQL functions based on column data types\n- Consider NULL values in your conditions\n- Use table aliases for better readability when joining multiple tables\n- Add column aliases for computed values\n- Format the SQL query with proper indentation\n- Use provided similar queries as refernce while creating the SQL\n- Return the SQL inside a code block tagged with ```sql\n\nExample output format:\nHere's a query that will [explanation]...\n\n```sql\nSELECT ...\nFROM ...\nWHERE ...\n```"}, {'role': 'user', 'content': "Here's the database schema:\nTable: orders\nDescription: Customer orders and transactions\nColumns: order_id (INTEGER), order_date (TEXT), status (TEXT), total_amount (REAL)\nPrimary Key(s): order_id\n"}, {'role': 'user', 'content': 'Here are some similar queries that were previously successful:\nQuestion: Get recently created orders\nSQL: select * from orders qualify row_number() over(order by order_date desc)=1\n\n'}, {'role': 'user', 'content': 'Convert this question to SQL: Get recently created orders'}]
2025-03-27 16:35:00 - INFO - [llm_engine.py:55] - [SQL_GEN] Completion generation started
2025-03-27 16:35:01 - INFO - [llm_engine.py:92] - [SQL_GEN] Completion generation completed in 1.43s
2025-03-27 16:35:01 - INFO - [azure_client.py:150] - Parsing SQL from model response
2025-03-27 16:35:01 - INFO - [azure_client.py:157] - Found SQL code block in response
2025-03-27 16:35:01 - INFO - [azure_client.py:171] - Extracted SQL query (54 chars) and explanation (267 chars)
2025-03-27 16:35:01 - INFO - [azure_client.py:124] - Generated SQL: SELECT *
FROM orders
ORDER BY order_date DESC
LIMIT 1;
2025-03-27 16:35:01,531 - QUERY: 'Get recently created orders' → SQL: SELECT *
FROM orders
ORDER BY order_date DESC
LIMIT 1;
2025-03-27 16:35:01 - INFO - [azure_client.py:132] - SQL generation completed in 1.45s
2025-03-27 16:35:01 - INFO - [database.py:45] - Executing SQL query: SELECT *
FROM orders
ORDER BY order_date DESC
LIMIT 1;
2025-03-27 16:35:01 - INFO - [database.py:66] - Query returned 1 rows with 5 columns
2025-03-27 16:35:01 - INFO - [database.py:75] - Query processing completed in 0.01s
2025-03-27 16:35:49 - INFO - [azure_client.py:186] - Closing Azure AI client connection
2025-03-27 16:35:49 - INFO - [database.py:238] - Closing database connection
2025-03-27 16:35:49 - INFO - [feedback_manager.py:526] - Closing database connection
2025-03-27 16:35:53 - INFO - [app.py:55] - Debug logging enabled for SQL generator and agents
2025-03-27 16:35:53 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-27 16:35:53 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-27 16:35:53 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-27 16:35:53 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-27 16:35:53 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-27 16:35:53 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-27 16:35:53 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-27 16:35:53 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-27 16:35:53 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-27 16:35:53 - INFO - [azure_client.py:11] - Initializing Azure AI Client using LLM Engine
2025-03-27 16:35:53 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-27 16:35:53 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-27 16:35:53 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-27 16:35:53 - INFO - [azure_client.py:17] - Azure AI Client initialized successfully
2025-03-27 16:35:53 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-27 16:35:53 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-03-27 16:35:56 - INFO - [azure_client.py:186] - Closing Azure AI client connection
2025-03-27 16:35:56 - INFO - [database.py:238] - Closing database connection
2025-03-27 16:35:56 - INFO - [feedback_manager.py:526] - Closing database connection
2025-03-27 16:35:59 - INFO - [app.py:55] - Debug logging enabled for SQL generator and agents
2025-03-27 16:35:59 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-27 16:35:59 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-27 16:35:59 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-27 16:35:59 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-27 16:35:59 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-27 16:35:59 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-27 16:35:59 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-27 16:35:59 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-27 16:35:59 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-27 16:35:59 - INFO - [azure_client.py:11] - Initializing Azure AI Client using LLM Engine
2025-03-27 16:35:59 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-27 16:35:59 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-27 16:35:59 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-27 16:35:59 - INFO - [azure_client.py:17] - Azure AI Client initialized successfully
2025-03-27 16:35:59 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-27 16:35:59 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-03-27 16:36:29 - INFO - [llm_engine.py:55] - [INTENT] Completion generation started
2025-03-27 16:36:30 - INFO - [llm_engine.py:92] - [INTENT] Completion generation completed in 1.28s
2025-03-27 16:36:30 - INFO - [database.py:24] - Attempting database connection
2025-03-27 16:36:30 - INFO - [database.py:28] - Database connection established in 0.01s
2025-03-27 16:36:30 - INFO - [llm_engine.py:55] - [TABLE] Completion generation started
2025-03-27 16:36:32 - INFO - [llm_engine.py:92] - [TABLE] Completion generation completed in 1.07s
2025-03-27 16:36:32 - INFO - [llm_engine.py:55] - [COLUMN] Completion generation started
2025-03-27 16:36:33 - INFO - [llm_engine.py:92] - [COLUMN] Completion generation completed in 1.32s
2025-03-27 16:36:33 - INFO - [feedback_manager.py:43] - Attempting database connection
2025-03-27 16:36:33 - INFO - [feedback_manager.py:47] - Database connection established in 0.00s
2025-03-27 16:36:33 - INFO - [feedback_manager.py:62] - Loading embedding model 'sentence-transformers/all-MiniLM-L12-v2'
2025-03-27 16:36:35 - INFO - [feedback_manager.py:65] - Embedding model loaded in 2.36s
2025-03-27 16:36:35 - INFO - [feedback_manager.py:225] - Found 1 similar queries using vector similarity for 'Get recently created orders...'
2025-03-27 16:36:35 - INFO - [azure_client.py:35] - SQL generation started for query: 'Get recently created orders'
2025-03-27 16:36:35 - INFO - [azure_client.py:69] - Including schema information (147 chars)
2025-03-27 16:36:35 - INFO - [azure_client.py:97] - Including 1 SQL examples from feedback similarity search
2025-03-27 16:36:35 - INFO - [azure_client.py:114] - PROMPT: [{'role': 'system', 'content': "You are an expert SQL assistant. Convert natural language questions into precise, executable SQL queries.\nYour task is to:\n1. Analyze the provided schema carefully, noting table relationships and column types\n2. Generate a SQL query that accurately answers the user's question\n3. Consider performance by selecting only necessary columns\n4. Use appropriate JOIN conditions based on primary/foreign key relationships or provided join conditions\n5. Include a brief explanation of your query\n\nRules:\n- Include table names and column references exactly as provided in the schema\n- Use appropriate SQL functions based on column data types\n- Consider NULL values in your conditions\n- Use table aliases for better readability when joining multiple tables\n- Add column aliases for computed values\n- Format the SQL query with proper indentation\n- If similar queries are provided, strictly use that as format or syntax\n- Return the SQL inside a code block tagged with ```sql\n\nExample output format:\nHere's a query that will [explanation]...\n\n```sql\nSELECT ...\nFROM ...\nWHERE ...\n```"}, {'role': 'user', 'content': "Here's the database schema:\nTable: orders\nDescription: Customer orders and transactions\nColumns: order_id (INTEGER), order_date (TEXT), status (TEXT)\nPrimary Key(s): order_id\n"}, {'role': 'user', 'content': 'Here are some similar queries that were previously successful:\nQuestion: Get recently created orders\nSQL: select * from orders qualify row_number() over(order by order_date desc)=1\n\n'}, {'role': 'user', 'content': 'Convert this question to SQL: Get recently created orders'}]
2025-03-27 16:36:35 - INFO - [llm_engine.py:55] - [SQL_GEN] Completion generation started
2025-03-27 16:36:38 - INFO - [llm_engine.py:92] - [SQL_GEN] Completion generation completed in 2.97s
2025-03-27 16:36:38 - INFO - [azure_client.py:150] - Parsing SQL from model response
2025-03-27 16:36:38 - INFO - [azure_client.py:157] - Found SQL code block in response
2025-03-27 16:36:38 - INFO - [azure_client.py:171] - Extracted SQL query (54 chars) and explanation (401 chars)
2025-03-27 16:36:38 - INFO - [azure_client.py:124] - Generated SQL: SELECT *
FROM orders
ORDER BY order_date DESC
LIMIT 1;
2025-03-27 16:36:38,780 - QUERY: 'Get recently created orders' → SQL: SELECT *
FROM orders
ORDER BY order_date DESC
LIMIT 1;
2025-03-27 16:36:38 - INFO - [azure_client.py:132] - SQL generation completed in 2.98s
2025-03-27 16:36:38 - INFO - [database.py:45] - Executing SQL query: SELECT *
FROM orders
ORDER BY order_date DESC
LIMIT 1;
2025-03-27 16:36:38 - INFO - [database.py:66] - Query returned 1 rows with 5 columns
2025-03-27 16:36:38 - INFO - [database.py:75] - Query processing completed in 0.01s
2025-03-27 16:37:10 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-03-27 16:37:10 - INFO - [feedback_manager.py:43] - Attempting database connection
2025-03-27 16:37:10 - INFO - [feedback_manager.py:47] - Database connection established in 0.00s
2025-03-27 16:37:10 - INFO - [feedback_manager.py:389] - Retrieved 1 samples (page 1, limit 10)
2025-03-27 16:37:11 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-03-27 16:37:11 - INFO - [feedback_manager.py:43] - Attempting database connection
2025-03-27 16:37:11 - INFO - [feedback_manager.py:47] - Database connection established in 0.00s
2025-03-27 16:37:28 - INFO - [llm_engine.py:55] - [INTENT] Completion generation started
2025-03-27 16:37:28 - INFO - [llm_engine.py:92] - [INTENT] Completion generation completed in 0.42s
2025-03-27 16:37:28 - INFO - [database.py:24] - Attempting database connection
2025-03-27 16:37:28 - INFO - [database.py:28] - Database connection established in 0.00s
2025-03-27 16:37:28 - INFO - [llm_engine.py:55] - [TABLE] Completion generation started
2025-03-27 16:37:29 - INFO - [llm_engine.py:92] - [TABLE] Completion generation completed in 0.46s
2025-03-27 16:37:29 - INFO - [llm_engine.py:55] - [COLUMN] Completion generation started
2025-03-27 16:37:29 - INFO - [llm_engine.py:92] - [COLUMN] Completion generation completed in 0.64s
2025-03-27 16:37:29 - INFO - [feedback_manager.py:225] - Found 1 similar queries using vector similarity for 'Get recently created orders

sample query to do th...'
2025-03-27 16:37:29 - INFO - [azure_client.py:35] - SQL generation started for query: 'Get recently created orders

sample query to do that,

select * from orders qualify row_number() over(order by order_date desc)=1'
2025-03-27 16:37:29 - INFO - [azure_client.py:69] - Including schema information (132 chars)
2025-03-27 16:37:29 - INFO - [azure_client.py:97] - Including 1 SQL examples from feedback similarity search
2025-03-27 16:37:29 - INFO - [azure_client.py:114] - PROMPT: [{'role': 'system', 'content': "You are an expert SQL assistant. Convert natural language questions into precise, executable SQL queries.\nYour task is to:\n1. Analyze the provided schema carefully, noting table relationships and column types\n2. Generate a SQL query that accurately answers the user's question\n3. Consider performance by selecting only necessary columns\n4. Use appropriate JOIN conditions based on primary/foreign key relationships or provided join conditions\n5. Include a brief explanation of your query\n\nRules:\n- Include table names and column references exactly as provided in the schema\n- Use appropriate SQL functions based on column data types\n- Consider NULL values in your conditions\n- Use table aliases for better readability when joining multiple tables\n- Add column aliases for computed values\n- Format the SQL query with proper indentation\n- If similar queries are provided, strictly use that as format or syntax\n- Return the SQL inside a code block tagged with ```sql\n\nExample output format:\nHere's a query that will [explanation]...\n\n```sql\nSELECT ...\nFROM ...\nWHERE ...\n```"}, {'role': 'user', 'content': "Here's the database schema:\nTable: orders\nDescription: Customer orders and transactions\nColumns: order_id (INTEGER), order_date (TEXT)\nPrimary Key(s): order_id\n"}, {'role': 'user', 'content': 'Here are some similar queries that were previously successful:\nQuestion: Get recently created orders\nSQL: select * from orders qualify row_number() over(order by order_date desc)=1\n\n'}, {'role': 'user', 'content': 'Convert this question to SQL: Get recently created orders\n\nsample query to do that,\n\nselect * from orders qualify row_number() over(order by order_date desc)=1'}]
2025-03-27 16:37:29 - INFO - [llm_engine.py:55] - [SQL_GEN] Completion generation started
2025-03-27 16:37:33 - INFO - [llm_engine.py:92] - [SQL_GEN] Completion generation completed in 3.26s
2025-03-27 16:37:33 - INFO - [azure_client.py:150] - Parsing SQL from model response
2025-03-27 16:37:33 - INFO - [azure_client.py:157] - Found SQL code block in response
2025-03-27 16:37:33 - INFO - [azure_client.py:171] - Extracted SQL query (77 chars) and explanation (535 chars)
2025-03-27 16:37:33 - INFO - [azure_client.py:124] - Generated SQL: SELECT *
FROM orders
QUALIFY ROW_NUMBER() OVER(ORDER BY order_date DESC) = 1;
2025-03-27 16:37:33,043 - QUERY: 'Get recently created orders

sample query to do that,

select * from orders qualify row_number() over(order by order_date desc)=1' → SQL: SELECT *
FROM orders
QUALIFY ROW_NUMBER() OVER(ORDER BY order_date DESC) = 1;
2025-03-27 16:37:33 - INFO - [azure_client.py:132] - SQL generation completed in 3.27s
2025-03-27 16:37:33 - INFO - [database.py:45] - Executing SQL query: SELECT *
FROM orders
QUALIFY ROW_NUMBER() OVER(ORDER BY order_date DESC) = 1;
2025-03-27 16:37:33 - ERROR - [database.py:102] - SQL error after 0.00s: (sqlite3.OperationalError) near "ROW_NUMBER": syntax error
[SQL: SELECT *
FROM orders
QUALIFY ROW_NUMBER() OVER(ORDER BY order_date DESC) = 1;]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/sqlalchemy/engine/default.py", line 748, in do_execute
    cursor.execute(statement, parameters)
sqlite3.OperationalError: near "ROW_NUMBER": syntax error

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/vijay/text2sql/src/utils/database.py", line 58, in execute_query
    result = conn.execute(text(sql_query))
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 1414, in execute
    return meth(
           ^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/sqlalchemy/sql/elements.py", line 486, in _execute_on_connection
    return connection._execute_clauseelement(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
          ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 1842, in _execute_context
    return self._exec_single_context(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 2326, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/sqlalchemy/engine/default.py", line 748, in do_execute
    cursor.execute(statement, parameters)
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) near "ROW_NUMBER": syntax error
[SQL: SELECT *
FROM orders
QUALIFY ROW_NUMBER() OVER(ORDER BY order_date DESC) = 1;]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 16:37:53 - INFO - [llm_engine.py:55] - [INTENT] Completion generation started
2025-03-27 16:37:53 - INFO - [llm_engine.py:92] - [INTENT] Completion generation completed in 0.40s
2025-03-27 16:37:53 - INFO - [database.py:24] - Attempting database connection
2025-03-27 16:37:53 - INFO - [database.py:28] - Database connection established in 0.00s
2025-03-27 16:37:53 - INFO - [llm_engine.py:55] - [TABLE] Completion generation started
2025-03-27 16:37:54 - INFO - [llm_engine.py:92] - [TABLE] Completion generation completed in 0.40s
2025-03-27 16:37:54 - INFO - [llm_engine.py:55] - [COLUMN] Completion generation started
2025-03-27 16:37:54 - INFO - [llm_engine.py:92] - [COLUMN] Completion generation completed in 0.83s
2025-03-27 16:37:54 - INFO - [feedback_manager.py:225] - Found 1 similar queries using vector similarity for 'Get recently created order items

sample query to ...'
2025-03-27 16:37:54 - INFO - [azure_client.py:35] - SQL generation started for query: 'Get recently created order items

sample query to do that,

select * from orders qualify row_number() over(order by order_date desc)=1'
2025-03-27 16:37:54 - INFO - [azure_client.py:69] - Including schema information (271 chars)
2025-03-27 16:37:54 - INFO - [azure_client.py:76] - Including 1 join conditions
2025-03-27 16:37:54 - INFO - [azure_client.py:97] - Including 1 SQL examples from feedback similarity search
2025-03-27 16:37:54 - INFO - [azure_client.py:114] - PROMPT: [{'role': 'system', 'content': "You are an expert SQL assistant. Convert natural language questions into precise, executable SQL queries.\nYour task is to:\n1. Analyze the provided schema carefully, noting table relationships and column types\n2. Generate a SQL query that accurately answers the user's question\n3. Consider performance by selecting only necessary columns\n4. Use appropriate JOIN conditions based on primary/foreign key relationships or provided join conditions\n5. Include a brief explanation of your query\n\nRules:\n- Include table names and column references exactly as provided in the schema\n- Use appropriate SQL functions based on column data types\n- Consider NULL values in your conditions\n- Use table aliases for better readability when joining multiple tables\n- Add column aliases for computed values\n- Format the SQL query with proper indentation\n- If similar queries are provided, strictly use that as format or syntax\n- Return the SQL inside a code block tagged with ```sql\n\nExample output format:\nHere's a query that will [explanation]...\n\n```sql\nSELECT ...\nFROM ...\nWHERE ...\n```"}, {'role': 'user', 'content': "Here's the database schema:\nTable: orders\nDescription: Customer orders and transactions\nColumns: order_id (INTEGER), order_date (TEXT)\nPrimary Key(s): order_id\n\nTable: order_items\nDescription: Individual items within each order\nColumns: item_id (INTEGER), order_id (INTEGER)\nPrimary Key(s): item_id\n"}, {'role': 'user', 'content': 'Use the following pre-defined join conditions when joining these tables:\n- When joining orders with order_items, use: INNER JOIN order_items ON orders.order_id = order_items.order_id\n'}, {'role': 'user', 'content': 'Here are some similar queries that were previously successful:\nQuestion: Get recently created orders\nSQL: select * from orders qualify row_number() over(order by order_date desc)=1\n\n'}, {'role': 'user', 'content': 'Convert this question to SQL: Get recently created order items\n\nsample query to do that,\n\nselect * from orders qualify row_number() over(order by order_date desc)=1'}]
2025-03-27 16:37:54 - INFO - [llm_engine.py:55] - [SQL_GEN] Completion generation started
2025-03-27 16:37:57 - INFO - [llm_engine.py:92] - [SQL_GEN] Completion generation completed in 2.96s
2025-03-27 16:37:57 - INFO - [azure_client.py:150] - Parsing SQL from model response
2025-03-27 16:37:57 - INFO - [azure_client.py:157] - Found SQL code block in response
2025-03-27 16:37:57 - INFO - [azure_client.py:171] - Extracted SQL query (208 chars) and explanation (473 chars)
2025-03-27 16:37:57 - INFO - [azure_client.py:124] - Generated SQL: WITH recent_order AS (
  SELECT order_id 
  FROM orders 
  ORDER BY order_date DESC 
  LIMIT 1
)
SELECT order_items.* 
FROM order_items 
INNER JOIN recent_order ON order_items.order_id = recent_order.order_id
2025-03-27 16:37:57,964 - QUERY: 'Get recently created order items

sample query to do that,

select * from orders qualify row_number() over(order by order_date desc)=1' → SQL: WITH recent_order AS (
  SELECT order_id 
  FROM orders 
  ORDER BY order_date DESC 
  LIMIT 1
)
SELECT order_items.* 
FROM order_items 
INNER JOIN recent_order ON order_items.order_id = recent_order.order_id
2025-03-27 16:37:57 - INFO - [azure_client.py:132] - SQL generation completed in 2.97s
2025-03-27 16:37:57 - INFO - [database.py:45] - Executing SQL query: WITH recent_order AS (
  SELECT order_id 
  FROM orders 
  ORDER BY order_date DESC 
  LIMIT 1
)
SELECT order_items.* 
FROM order_items 
INNER JOIN recent_order ON order_items.order_id = recent_order.order_id
2025-03-27 16:37:57 - INFO - [database.py:66] - Query returned 2 rows with 5 columns
2025-03-27 16:37:57 - INFO - [database.py:75] - Query processing completed in 0.01s
2025-03-27 16:38:19 - INFO - [llm_engine.py:55] - [INTENT] Completion generation started
2025-03-27 16:38:19 - INFO - [llm_engine.py:92] - [INTENT] Completion generation completed in 0.40s
2025-03-27 16:38:19 - INFO - [database.py:24] - Attempting database connection
2025-03-27 16:38:19 - INFO - [database.py:28] - Database connection established in 0.00s
2025-03-27 16:38:19 - INFO - [llm_engine.py:55] - [TABLE] Completion generation started
2025-03-27 16:38:19 - INFO - [llm_engine.py:92] - [TABLE] Completion generation completed in 0.36s
2025-03-27 16:38:19 - INFO - [llm_engine.py:55] - [COLUMN] Completion generation started
2025-03-27 16:38:20 - INFO - [llm_engine.py:92] - [COLUMN] Completion generation completed in 0.89s
2025-03-27 16:38:20 - INFO - [feedback_manager.py:225] - Found 1 similar queries using vector similarity for 'Get recently created order

sample query to do tha...'
2025-03-27 16:38:20 - INFO - [azure_client.py:35] - SQL generation started for query: 'Get recently created order

sample query to do that,

select * from orders qualify row_number() over(order by order_date desc)=1'
2025-03-27 16:38:20 - INFO - [azure_client.py:69] - Including schema information (191 chars)
2025-03-27 16:38:20 - INFO - [azure_client.py:97] - Including 1 SQL examples from feedback similarity search
2025-03-27 16:38:20 - INFO - [azure_client.py:114] - PROMPT: [{'role': 'system', 'content': "You are an expert SQL assistant. Convert natural language questions into precise, executable SQL queries.\nYour task is to:\n1. Analyze the provided schema carefully, noting table relationships and column types\n2. Generate a SQL query that accurately answers the user's question\n3. Consider performance by selecting only necessary columns\n4. Use appropriate JOIN conditions based on primary/foreign key relationships or provided join conditions\n5. Include a brief explanation of your query\n\nRules:\n- Include table names and column references exactly as provided in the schema\n- Use appropriate SQL functions based on column data types\n- Consider NULL values in your conditions\n- Use table aliases for better readability when joining multiple tables\n- Add column aliases for computed values\n- Format the SQL query with proper indentation\n- If similar queries are provided, strictly use that as format or syntax\n- Return the SQL inside a code block tagged with ```sql\n\nExample output format:\nHere's a query that will [explanation]...\n\n```sql\nSELECT ...\nFROM ...\nWHERE ...\n```"}, {'role': 'user', 'content': "Here's the database schema:\nTable: orders\nDescription: Customer orders and transactions\nColumns: order_id (INTEGER), customer_id (INTEGER), order_date (TEXT), status (TEXT), total_amount (REAL)\nPrimary Key(s): order_id\n"}, {'role': 'user', 'content': 'Here are some similar queries that were previously successful:\nQuestion: Get recently created orders\nSQL: select * from orders qualify row_number() over(order by order_date desc)=1\n\n'}, {'role': 'user', 'content': 'Convert this question to SQL: Get recently created order\n\nsample query to do that,\n\nselect * from orders qualify row_number() over(order by order_date desc)=1'}]
2025-03-27 16:38:20 - INFO - [llm_engine.py:55] - [SQL_GEN] Completion generation started
2025-03-27 16:38:22 - INFO - [llm_engine.py:92] - [SQL_GEN] Completion generation completed in 2.08s
2025-03-27 16:38:22 - INFO - [azure_client.py:150] - Parsing SQL from model response
2025-03-27 16:38:22 - INFO - [azure_client.py:157] - Found SQL code block in response
2025-03-27 16:38:22 - INFO - [azure_client.py:171] - Extracted SQL query (77 chars) and explanation (385 chars)
2025-03-27 16:38:22 - INFO - [azure_client.py:124] - Generated SQL: SELECT *
FROM orders
QUALIFY ROW_NUMBER() OVER(ORDER BY order_date DESC) = 1;
2025-03-27 16:38:22,982 - QUERY: 'Get recently created order

sample query to do that,

select * from orders qualify row_number() over(order by order_date desc)=1' → SQL: SELECT *
FROM orders
QUALIFY ROW_NUMBER() OVER(ORDER BY order_date DESC) = 1;
2025-03-27 16:38:22 - INFO - [azure_client.py:132] - SQL generation completed in 2.09s
2025-03-27 16:38:22 - INFO - [database.py:45] - Executing SQL query: SELECT *
FROM orders
QUALIFY ROW_NUMBER() OVER(ORDER BY order_date DESC) = 1;
2025-03-27 16:38:22 - ERROR - [database.py:102] - SQL error after 0.00s: (sqlite3.OperationalError) near "ROW_NUMBER": syntax error
[SQL: SELECT *
FROM orders
QUALIFY ROW_NUMBER() OVER(ORDER BY order_date DESC) = 1;]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/sqlalchemy/engine/default.py", line 748, in do_execute
    cursor.execute(statement, parameters)
sqlite3.OperationalError: near "ROW_NUMBER": syntax error

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/vijay/text2sql/src/utils/database.py", line 58, in execute_query
    result = conn.execute(text(sql_query))
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 1414, in execute
    return meth(
           ^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/sqlalchemy/sql/elements.py", line 486, in _execute_on_connection
    return connection._execute_clauseelement(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
          ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 1842, in _execute_context
    return self._exec_single_context(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 2326, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/sqlalchemy/engine/default.py", line 748, in do_execute
    cursor.execute(statement, parameters)
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) near "ROW_NUMBER": syntax error
[SQL: SELECT *
FROM orders
QUALIFY ROW_NUMBER() OVER(ORDER BY order_date DESC) = 1;]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 16:38:43 - INFO - [llm_engine.py:55] - [INTENT] Completion generation started
2025-03-27 16:38:43 - INFO - [llm_engine.py:92] - [INTENT] Completion generation completed in 0.42s
2025-03-27 16:38:43 - INFO - [database.py:24] - Attempting database connection
2025-03-27 16:38:43 - INFO - [database.py:28] - Database connection established in 0.00s
2025-03-27 16:38:43 - INFO - [llm_engine.py:55] - [TABLE] Completion generation started
2025-03-27 16:38:44 - INFO - [llm_engine.py:92] - [TABLE] Completion generation completed in 0.47s
2025-03-27 16:38:44 - INFO - [llm_engine.py:55] - [COLUMN] Completion generation started
2025-03-27 16:38:44 - INFO - [llm_engine.py:92] - [COLUMN] Completion generation completed in 0.56s
2025-03-27 16:38:44 - INFO - [feedback_manager.py:225] - Found 1 similar queries using vector similarity for 'Get recently created order id

sample query to do ...'
2025-03-27 16:38:44 - INFO - [azure_client.py:35] - SQL generation started for query: 'Get recently created order id

sample query to do that,

select * from orders qualify row_number() over(order by order_date desc)=1'
2025-03-27 16:38:44 - INFO - [azure_client.py:69] - Including schema information (132 chars)
2025-03-27 16:38:44 - INFO - [azure_client.py:97] - Including 1 SQL examples from feedback similarity search
2025-03-27 16:38:44 - INFO - [azure_client.py:114] - PROMPT: [{'role': 'system', 'content': "You are an expert SQL assistant. Convert natural language questions into precise, executable SQL queries.\nYour task is to:\n1. Analyze the provided schema carefully, noting table relationships and column types\n2. Generate a SQL query that accurately answers the user's question\n3. Consider performance by selecting only necessary columns\n4. Use appropriate JOIN conditions based on primary/foreign key relationships or provided join conditions\n5. Include a brief explanation of your query\n\nRules:\n- Include table names and column references exactly as provided in the schema\n- Use appropriate SQL functions based on column data types\n- Consider NULL values in your conditions\n- Use table aliases for better readability when joining multiple tables\n- Add column aliases for computed values\n- Format the SQL query with proper indentation\n- If similar queries are provided, strictly use that as format or syntax\n- Return the SQL inside a code block tagged with ```sql\n\nExample output format:\nHere's a query that will [explanation]...\n\n```sql\nSELECT ...\nFROM ...\nWHERE ...\n```"}, {'role': 'user', 'content': "Here's the database schema:\nTable: orders\nDescription: Customer orders and transactions\nColumns: order_id (INTEGER), order_date (TEXT)\nPrimary Key(s): order_id\n"}, {'role': 'user', 'content': 'Here are some similar queries that were previously successful:\nQuestion: Get recently created orders\nSQL: select * from orders qualify row_number() over(order by order_date desc)=1\n\n'}, {'role': 'user', 'content': 'Convert this question to SQL: Get recently created order id\n\nsample query to do that,\n\nselect * from orders qualify row_number() over(order by order_date desc)=1'}]
2025-03-27 16:38:44 - INFO - [llm_engine.py:55] - [SQL_GEN] Completion generation started
2025-03-27 16:38:46 - INFO - [llm_engine.py:92] - [SQL_GEN] Completion generation completed in 1.72s
2025-03-27 16:38:46 - INFO - [azure_client.py:150] - Parsing SQL from model response
2025-03-27 16:38:46 - INFO - [azure_client.py:157] - Found SQL code block in response
2025-03-27 16:38:46 - INFO - [azure_client.py:171] - Extracted SQL query (61 chars) and explanation (314 chars)
2025-03-27 16:38:46 - INFO - [azure_client.py:124] - Generated SQL: SELECT order_id
FROM orders
ORDER BY order_date DESC
LIMIT 1;
2025-03-27 16:38:46,456 - QUERY: 'Get recently created order id

sample query to do that,

select * from orders qualify row_number() over(order by order_date desc)=1' → SQL: SELECT order_id
FROM orders
ORDER BY order_date DESC
LIMIT 1;
2025-03-27 16:38:46 - INFO - [azure_client.py:132] - SQL generation completed in 1.73s
2025-03-27 16:38:46 - INFO - [database.py:45] - Executing SQL query: SELECT order_id
FROM orders
ORDER BY order_date DESC
LIMIT 1;
2025-03-27 16:38:46 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-27 16:38:46 - INFO - [database.py:75] - Query processing completed in 0.00s
2025-03-27 16:39:19 - INFO - [llm_engine.py:55] - [INTENT] Completion generation started
2025-03-27 16:39:20 - INFO - [llm_engine.py:92] - [INTENT] Completion generation completed in 0.42s
2025-03-27 16:39:20 - INFO - [database.py:24] - Attempting database connection
2025-03-27 16:39:20 - INFO - [database.py:28] - Database connection established in 0.00s
2025-03-27 16:39:20 - INFO - [llm_engine.py:55] - [TABLE] Completion generation started
2025-03-27 16:39:20 - INFO - [llm_engine.py:92] - [TABLE] Completion generation completed in 0.35s
2025-03-27 16:39:20 - INFO - [llm_engine.py:55] - [COLUMN] Completion generation started
2025-03-27 16:39:21 - INFO - [llm_engine.py:92] - [COLUMN] Completion generation completed in 0.55s
2025-03-27 16:39:21 - INFO - [feedback_manager.py:225] - Found 1 similar queries using vector similarity for 'Get recently created order id

use this format,

s...'
2025-03-27 16:39:21 - INFO - [azure_client.py:35] - SQL generation started for query: 'Get recently created order id

use this format,

select * from orders qualify row_number() over(order by order_date desc)=1'
2025-03-27 16:39:21 - INFO - [azure_client.py:69] - Including schema information (132 chars)
2025-03-27 16:39:21 - INFO - [azure_client.py:97] - Including 1 SQL examples from feedback similarity search
2025-03-27 16:39:21 - INFO - [azure_client.py:114] - PROMPT: [{'role': 'system', 'content': "You are an expert SQL assistant. Convert natural language questions into precise, executable SQL queries.\nYour task is to:\n1. Analyze the provided schema carefully, noting table relationships and column types\n2. Generate a SQL query that accurately answers the user's question\n3. Consider performance by selecting only necessary columns\n4. Use appropriate JOIN conditions based on primary/foreign key relationships or provided join conditions\n5. Include a brief explanation of your query\n\nRules:\n- Include table names and column references exactly as provided in the schema\n- Use appropriate SQL functions based on column data types\n- Consider NULL values in your conditions\n- Use table aliases for better readability when joining multiple tables\n- Add column aliases for computed values\n- Format the SQL query with proper indentation\n- If similar queries are provided, strictly use that as format or syntax\n- Return the SQL inside a code block tagged with ```sql\n\nExample output format:\nHere's a query that will [explanation]...\n\n```sql\nSELECT ...\nFROM ...\nWHERE ...\n```"}, {'role': 'user', 'content': "Here's the database schema:\nTable: orders\nDescription: Customer orders and transactions\nColumns: order_id (INTEGER), order_date (TEXT)\nPrimary Key(s): order_id\n"}, {'role': 'user', 'content': 'Here are some similar queries that were previously successful:\nQuestion: Get recently created orders\nSQL: select * from orders qualify row_number() over(order by order_date desc)=1\n\n'}, {'role': 'user', 'content': 'Convert this question to SQL: Get recently created order id\n\nuse this format,\n\nselect * from orders qualify row_number() over(order by order_date desc)=1'}]
2025-03-27 16:39:21 - INFO - [llm_engine.py:55] - [SQL_GEN] Completion generation started
2025-03-27 16:39:22 - INFO - [llm_engine.py:92] - [SQL_GEN] Completion generation completed in 1.52s
2025-03-27 16:39:22 - INFO - [azure_client.py:150] - Parsing SQL from model response
2025-03-27 16:39:22 - INFO - [azure_client.py:157] - Found SQL code block in response
2025-03-27 16:39:22 - INFO - [azure_client.py:171] - Extracted SQL query (61 chars) and explanation (263 chars)
2025-03-27 16:39:22 - INFO - [azure_client.py:124] - Generated SQL: SELECT order_id
FROM orders
ORDER BY order_date DESC
LIMIT 1;
2025-03-27 16:39:22,682 - QUERY: 'Get recently created order id

use this format,

select * from orders qualify row_number() over(order by order_date desc)=1' → SQL: SELECT order_id
FROM orders
ORDER BY order_date DESC
LIMIT 1;
2025-03-27 16:39:22 - INFO - [azure_client.py:132] - SQL generation completed in 1.53s
2025-03-27 16:39:22 - INFO - [database.py:45] - Executing SQL query: SELECT order_id
FROM orders
ORDER BY order_date DESC
LIMIT 1;
2025-03-27 16:39:22 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-27 16:39:22 - INFO - [database.py:75] - Query processing completed in 0.00s
2025-03-27 16:43:21 - INFO - [azure_client.py:186] - Closing Azure AI client connection
2025-03-27 16:43:21 - INFO - [database.py:238] - Closing database connection
2025-03-27 16:43:21 - INFO - [feedback_manager.py:526] - Closing database connection
2025-03-27 16:43:25 - INFO - [app.py:55] - Debug logging enabled for SQL generator and agents
2025-03-27 16:43:25 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-27 16:43:25 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-27 16:43:25 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-27 16:43:25 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-27 16:43:25 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-27 16:43:25 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-27 16:43:25 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-27 16:43:25 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-27 16:43:25 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-27 16:43:25 - INFO - [azure_client.py:11] - Initializing Azure AI Client using LLM Engine
2025-03-27 16:43:25 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-27 16:43:25 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-27 16:43:25 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-27 16:43:25 - INFO - [azure_client.py:17] - Azure AI Client initialized successfully
2025-03-27 16:43:25 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-27 16:43:25 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-03-27 16:44:06 - INFO - [azure_client.py:186] - Closing Azure AI client connection
2025-03-27 16:44:06 - INFO - [database.py:238] - Closing database connection
2025-03-27 16:44:06 - INFO - [feedback_manager.py:660] - Closing database connection
2025-03-27 16:44:10 - INFO - [app.py:55] - Debug logging enabled for SQL generator and agents
2025-03-27 16:44:10 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-27 16:44:10 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-27 16:44:10 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-27 16:44:10 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-27 16:44:10 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-27 16:44:10 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-27 16:44:10 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-27 16:44:10 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-27 16:44:10 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-27 16:44:10 - INFO - [azure_client.py:11] - Initializing Azure AI Client using LLM Engine
2025-03-27 16:44:10 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-27 16:44:10 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-27 16:44:10 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-27 16:44:10 - INFO - [azure_client.py:17] - Azure AI Client initialized successfully
2025-03-27 16:44:10 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-27 16:44:10 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-03-27 16:45:23 - INFO - [azure_client.py:186] - Closing Azure AI client connection
2025-03-27 16:45:23 - INFO - [database.py:238] - Closing database connection
2025-03-27 16:45:23 - INFO - [feedback_manager.py:660] - Closing database connection
2025-03-27 16:45:27 - INFO - [app.py:55] - Debug logging enabled for SQL generator and agents
2025-03-27 16:45:27 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-27 16:45:27 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-27 16:45:27 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-27 16:45:27 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-27 16:45:27 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-27 16:45:27 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-27 16:45:27 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-27 16:45:27 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-27 16:45:27 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-27 16:45:27 - INFO - [azure_client.py:11] - Initializing Azure AI Client using LLM Engine
2025-03-27 16:45:27 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-27 16:45:27 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-27 16:45:27 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-27 16:45:27 - INFO - [azure_client.py:17] - Azure AI Client initialized successfully
2025-03-27 16:45:27 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-27 16:45:27 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-03-27 16:45:34 - INFO - [llm_engine.py:55] - [INTENT] Completion generation started
2025-03-27 16:45:35 - INFO - [llm_engine.py:92] - [INTENT] Completion generation completed in 1.28s
2025-03-27 16:45:35 - INFO - [database.py:24] - Attempting database connection
2025-03-27 16:45:36 - INFO - [database.py:28] - Database connection established in 0.01s
2025-03-27 16:45:36 - INFO - [llm_engine.py:55] - [TABLE] Completion generation started
2025-03-27 16:45:37 - INFO - [llm_engine.py:92] - [TABLE] Completion generation completed in 1.12s
2025-03-27 16:45:37 - INFO - [llm_engine.py:55] - [COLUMN] Completion generation started
2025-03-27 16:45:38 - INFO - [llm_engine.py:92] - [COLUMN] Completion generation completed in 1.31s
2025-03-27 16:45:38 - INFO - [feedback_manager.py:43] - Attempting database connection
2025-03-27 16:45:38 - INFO - [feedback_manager.py:47] - Database connection established in 0.00s
2025-03-27 16:45:38 - INFO - [feedback_manager.py:267] - Stage 1: Vector search for 'Get recently created order id

use this format,

s...'
2025-03-27 16:45:38 - INFO - [feedback_manager.py:62] - Loading embedding model 'sentence-transformers/all-MiniLM-L12-v2'
2025-03-27 16:45:40 - INFO - [feedback_manager.py:65] - Embedding model loaded in 2.34s
2025-03-27 16:45:40 - INFO - [feedback_manager.py:322] - Found 1 initial candidates from vector search
2025-03-27 16:45:40 - INFO - [feedback_manager.py:359] - Less than 3 candidates, skipping reranking
2025-03-27 16:45:40 - INFO - [azure_client.py:35] - SQL generation started for query: 'Get recently created order id

use this format,

select * from orders qualify row_number() over(order by order_date desc)=1'
2025-03-27 16:45:40 - INFO - [azure_client.py:69] - Including schema information (132 chars)
2025-03-27 16:45:40 - INFO - [azure_client.py:97] - Including 1 SQL examples from manual similarity search
2025-03-27 16:45:40 - INFO - [azure_client.py:114] - PROMPT: [{'role': 'system', 'content': "You are an expert SQL assistant. Convert natural language questions into precise, executable SQL queries.\nYour task is to:\n1. Analyze the provided schema carefully, noting table relationships and column types\n2. Generate a SQL query that accurately answers the user's question\n3. Consider performance by selecting only necessary columns\n4. Use appropriate JOIN conditions based on primary/foreign key relationships or provided join conditions\n5. Include a brief explanation of your query\n\nRules:\n- Include table names and column references exactly as provided in the schema\n- Use appropriate SQL functions based on column data types\n- Consider NULL values in your conditions\n- Use table aliases for better readability when joining multiple tables\n- Add column aliases for computed values\n- Format the SQL query with proper indentation\n- If similar queries are provided, strictly use that as format or syntax\n- Return the SQL inside a code block tagged with ```sql\n\nExample output format:\nHere's a query that will [explanation]...\n\n```sql\nSELECT ...\nFROM ...\nWHERE ...\n```"}, {'role': 'user', 'content': "Here's the database schema:\nTable: orders\nDescription: Customer orders and transactions\nColumns: order_id (INTEGER), order_date (TEXT)\nPrimary Key(s): order_id\n"}, {'role': 'user', 'content': 'Here are some similar queries that were previously successful:\nQuestion: Get recently created orders\nSQL: select * from orders qualify row_number() over(order by order_date desc)=1\n\n'}, {'role': 'user', 'content': 'Convert this question to SQL: Get recently created order id\n\nuse this format,\n\nselect * from orders qualify row_number() over(order by order_date desc)=1'}]
2025-03-27 16:45:40 - INFO - [llm_engine.py:55] - [SQL_GEN] Completion generation started
2025-03-27 16:45:43 - INFO - [llm_engine.py:92] - [SQL_GEN] Completion generation completed in 2.65s
2025-03-27 16:45:43 - INFO - [azure_client.py:150] - Parsing SQL from model response
2025-03-27 16:45:43 - INFO - [azure_client.py:157] - Found SQL code block in response
2025-03-27 16:45:43 - INFO - [azure_client.py:171] - Extracted SQL query (61 chars) and explanation (312 chars)
2025-03-27 16:45:43 - INFO - [azure_client.py:124] - Generated SQL: SELECT order_id
FROM orders
ORDER BY order_date DESC
LIMIT 1;
2025-03-27 16:45:43,517 - QUERY: 'Get recently created order id

use this format,

select * from orders qualify row_number() over(order by order_date desc)=1' → SQL: SELECT order_id
FROM orders
ORDER BY order_date DESC
LIMIT 1;
2025-03-27 16:45:43 - INFO - [azure_client.py:132] - SQL generation completed in 2.68s
2025-03-27 16:45:43 - INFO - [database.py:45] - Executing SQL query: SELECT order_id
FROM orders
ORDER BY order_date DESC
LIMIT 1;
2025-03-27 16:45:43 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-27 16:45:43 - INFO - [database.py:75] - Query processing completed in 0.12s
2025-03-27 16:50:01 - INFO - [azure_client.py:186] - Closing Azure AI client connection
2025-03-27 16:50:01 - INFO - [database.py:238] - Closing database connection
2025-03-27 16:50:01 - INFO - [feedback_manager.py:660] - Closing database connection
2025-03-27 16:50:04 - INFO - [app.py:55] - Debug logging enabled for SQL generator and agents
2025-03-27 16:50:04 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-27 16:50:04 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-27 16:50:04 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-27 16:50:04 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-27 16:50:04 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-27 16:50:04 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-27 16:50:04 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-27 16:50:04 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-27 16:50:04 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-27 16:50:04 - INFO - [azure_client.py:11] - Initializing Azure AI Client using LLM Engine
2025-03-27 16:50:04 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-27 16:50:04 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-27 16:50:04 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-27 16:50:04 - INFO - [azure_client.py:17] - Azure AI Client initialized successfully
2025-03-27 16:50:04 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-27 16:50:04 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-03-27 16:50:46 - INFO - [llm_engine.py:55] - [INTENT] Completion generation started
2025-03-27 16:50:47 - INFO - [llm_engine.py:92] - [INTENT] Completion generation completed in 1.27s
2025-03-27 16:50:47 - INFO - [database.py:24] - Attempting database connection
2025-03-27 16:50:47 - INFO - [database.py:28] - Database connection established in 0.02s
2025-03-27 16:50:47 - INFO - [llm_engine.py:55] - [TABLE] Completion generation started
2025-03-27 16:50:48 - INFO - [llm_engine.py:92] - [TABLE] Completion generation completed in 1.09s
2025-03-27 16:50:48 - INFO - [llm_engine.py:55] - [COLUMN] Completion generation started
2025-03-27 16:50:50 - INFO - [llm_engine.py:92] - [COLUMN] Completion generation completed in 1.40s
2025-03-27 16:50:50 - INFO - [feedback_manager.py:43] - Attempting database connection
2025-03-27 16:50:50 - INFO - [feedback_manager.py:47] - Database connection established in 0.00s
2025-03-27 16:50:50 - INFO - [feedback_manager.py:267] - Stage 1: Vector search for 'Get recently created order id

use this format,

s...'
2025-03-27 16:50:50 - INFO - [feedback_manager.py:62] - Loading embedding model 'sentence-transformers/all-MiniLM-L12-v2'
2025-03-27 16:50:52 - INFO - [feedback_manager.py:65] - Embedding model loaded in 2.29s
2025-03-27 16:50:52 - INFO - [feedback_manager.py:322] - Found 1 initial candidates from vector search
2025-03-27 16:50:52 - INFO - [feedback_manager.py:359] - Less than 3 candidates, skipping reranking
2025-03-27 16:50:52 - INFO - [azure_client.py:35] - SQL generation started for query: 'Get recently created order id

use this format,

select * from orders qualify row_number() over(order by order_date desc)=1'
2025-03-27 16:50:52 - INFO - [azure_client.py:69] - Including schema information (132 chars)
2025-03-27 16:50:52 - INFO - [azure_client.py:97] - Including 1 SQL examples from manual similarity search
2025-03-27 16:50:52 - INFO - [azure_client.py:114] - PROMPT: [{'role': 'system', 'content': "You are an expert SQL assistant. Convert natural language questions into precise, executable SQL queries.\nYour task is to:\n1. Analyze the provided schema carefully, noting table relationships and column types\n2. Generate a SQL query that accurately answers the user's question\n3. Consider performance by selecting only necessary columns\n4. Use appropriate JOIN conditions based on primary/foreign key relationships or provided join conditions\n5. Include a brief explanation of your query\n\nRules:\n- Include table names and column references exactly as provided in the schema\n- Use appropriate SQL functions based on column data types\n- Consider NULL values in your conditions\n- Use table aliases for better readability when joining multiple tables\n- Add column aliases for computed values\n- Format the SQL query with proper indentation\n- If similar queries are provided, strictly use that as format or syntax\n- Return the SQL inside a code block tagged with ```sql\n\nExample output format:\nHere's a query that will [explanation]...\n\n```sql\nSELECT ...\nFROM ...\nWHERE ...\n```"}, {'role': 'user', 'content': "Here's the database schema:\nTable: orders\nDescription: Customer orders and transactions\nColumns: order_id (INTEGER), order_date (TEXT)\nPrimary Key(s): order_id\n"}, {'role': 'user', 'content': 'Here are some similar queries that were previously successful:\nQuestion: Get recently created orders\nSQL: select * from orders qualify row_number() over(order by order_date desc)=1\n\n'}, {'role': 'user', 'content': 'Convert this question to SQL: Get recently created order id\n\nuse this format,\n\nselect * from orders qualify row_number() over(order by order_date desc)=1'}]
2025-03-27 16:50:52 - INFO - [llm_engine.py:55] - [SQL_GEN] Completion generation started
2025-03-27 16:50:55 - INFO - [llm_engine.py:92] - [SQL_GEN] Completion generation completed in 2.76s
2025-03-27 16:50:55 - INFO - [azure_client.py:150] - Parsing SQL from model response
2025-03-27 16:50:55 - INFO - [azure_client.py:157] - Found SQL code block in response
2025-03-27 16:50:55 - INFO - [azure_client.py:171] - Extracted SQL query (61 chars) and explanation (367 chars)
2025-03-27 16:50:55 - INFO - [azure_client.py:124] - Generated SQL: SELECT order_id
FROM orders
ORDER BY order_date DESC
LIMIT 1;
2025-03-27 16:50:55,269 - QUERY: 'Get recently created order id

use this format,

select * from orders qualify row_number() over(order by order_date desc)=1' → SQL: SELECT order_id
FROM orders
ORDER BY order_date DESC
LIMIT 1;
2025-03-27 16:50:55 - INFO - [azure_client.py:132] - SQL generation completed in 2.77s
2025-03-27 16:50:55 - INFO - [database.py:45] - Executing SQL query: SELECT order_id
FROM orders
ORDER BY order_date DESC
LIMIT 1;
2025-03-27 16:50:55 - INFO - [database.py:66] - Query returned 1 rows with 1 columns
2025-03-27 16:50:55 - INFO - [database.py:75] - Query processing completed in 0.01s
2025-03-27 16:51:23 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-03-27 16:51:23 - INFO - [feedback_manager.py:43] - Attempting database connection
2025-03-27 16:51:23 - INFO - [feedback_manager.py:47] - Database connection established in 0.00s
2025-03-27 16:51:23 - INFO - [feedback_manager.py:523] - Retrieved 1 samples (page 1, limit 10)
2025-03-27 16:51:53 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-03-27 16:51:53 - INFO - [feedback_manager.py:43] - Attempting database connection
2025-03-27 16:51:53 - INFO - [feedback_manager.py:47] - Database connection established in 0.00s
2025-03-27 16:51:53 - INFO - [feedback_manager.py:62] - Loading embedding model 'sentence-transformers/all-MiniLM-L12-v2'
2025-03-27 16:51:55 - INFO - [feedback_manager.py:65] - Embedding model loaded in 2.34s
2025-03-27 16:51:55 - INFO - [feedback_manager.py:168] - Saved manual sample for query: 'Get recently created orders...'
2025-03-27 16:51:55 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-03-27 16:51:55 - INFO - [feedback_manager.py:43] - Attempting database connection
2025-03-27 16:51:55 - INFO - [feedback_manager.py:47] - Database connection established in 0.00s
2025-03-27 16:51:55 - INFO - [feedback_manager.py:523] - Retrieved 2 samples (page 1, limit 10)
2025-03-27 16:52:20 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-03-27 16:52:20 - INFO - [feedback_manager.py:43] - Attempting database connection
2025-03-27 16:52:20 - INFO - [feedback_manager.py:47] - Database connection established in 0.00s
2025-03-27 16:52:20 - INFO - [feedback_manager.py:62] - Loading embedding model 'sentence-transformers/all-MiniLM-L12-v2'
2025-03-27 16:52:23 - INFO - [feedback_manager.py:65] - Embedding model loaded in 2.24s
2025-03-27 16:52:23 - INFO - [feedback_manager.py:168] - Saved manual sample for query: 'Get recently created orders...'
2025-03-27 16:52:23 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-03-27 16:52:23 - INFO - [feedback_manager.py:43] - Attempting database connection
2025-03-27 16:52:23 - INFO - [feedback_manager.py:47] - Database connection established in 0.01s
2025-03-27 16:52:23 - INFO - [feedback_manager.py:523] - Retrieved 3 samples (page 1, limit 10)
2025-03-27 16:52:50 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-03-27 16:52:50 - INFO - [feedback_manager.py:43] - Attempting database connection
2025-03-27 16:52:50 - INFO - [feedback_manager.py:47] - Database connection established in 0.00s
2025-03-27 16:52:50 - INFO - [feedback_manager.py:62] - Loading embedding model 'sentence-transformers/all-MiniLM-L12-v2'
2025-03-27 16:52:52 - INFO - [feedback_manager.py:65] - Embedding model loaded in 2.21s
2025-03-27 16:52:52 - INFO - [feedback_manager.py:168] - Saved manual sample for query: 'Get recently created orders...'
2025-03-27 16:52:52 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-03-27 16:52:52 - INFO - [feedback_manager.py:43] - Attempting database connection
2025-03-27 16:52:52 - INFO - [feedback_manager.py:47] - Database connection established in 0.01s
2025-03-27 16:52:52 - INFO - [feedback_manager.py:523] - Retrieved 4 samples (page 1, limit 10)
2025-03-27 16:53:00 - INFO - [azure_client.py:172] - Closing Azure AI client connection
2025-03-27 16:53:00 - INFO - [database.py:238] - Closing database connection
2025-03-27 16:53:00 - INFO - [feedback_manager.py:526] - Closing database connection
2025-03-27 16:53:04 - INFO - [app.py:55] - Debug logging enabled for SQL generator and agents
2025-03-27 16:53:04 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-27 16:53:04 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-27 16:53:04 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-27 16:53:04 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-27 16:53:04 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-27 16:53:04 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-27 16:53:04 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-27 16:53:04 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-27 16:53:04 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-27 16:53:04 - INFO - [azure_client.py:11] - Initializing Azure AI Client using LLM Engine
2025-03-27 16:53:04 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-27 16:53:04 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-27 16:53:04 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-27 16:53:04 - INFO - [azure_client.py:17] - Azure AI Client initialized successfully
2025-03-27 16:53:04 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-27 16:53:04 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-03-27 16:53:07 - INFO - [app.py:55] - Debug logging enabled for SQL generator and agents
2025-03-27 16:53:07 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-27 16:53:07 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-27 16:53:07 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-27 16:53:07 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-27 16:53:07 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-27 16:53:07 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-27 16:53:07 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-27 16:53:07 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-27 16:53:07 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-27 16:53:07 - INFO - [azure_client.py:11] - Initializing Azure AI Client using LLM Engine
2025-03-27 16:53:07 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-27 16:53:07 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-27 16:53:07 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-27 16:53:07 - INFO - [azure_client.py:17] - Azure AI Client initialized successfully
2025-03-27 16:53:07 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-27 16:53:07 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-03-27 16:53:13 - INFO - [app.py:220] - Schema requested for workspace: Default
2025-03-27 16:53:19 - INFO - [llm_engine.py:55] - [INTENT] Completion generation started
2025-03-27 16:53:21 - INFO - [llm_engine.py:92] - [INTENT] Completion generation completed in 1.31s
2025-03-27 16:53:21 - INFO - [database.py:24] - Attempting database connection
2025-03-27 16:53:21 - INFO - [database.py:28] - Database connection established in 0.01s
2025-03-27 16:53:21 - INFO - [llm_engine.py:55] - [TABLE] Completion generation started
2025-03-27 16:53:22 - INFO - [llm_engine.py:92] - [TABLE] Completion generation completed in 1.19s
2025-03-27 16:53:22 - INFO - [llm_engine.py:55] - [COLUMN] Completion generation started
2025-03-27 16:53:23 - INFO - [llm_engine.py:92] - [COLUMN] Completion generation completed in 1.33s
2025-03-27 16:53:23 - INFO - [feedback_manager.py:43] - Attempting database connection
2025-03-27 16:53:23 - INFO - [feedback_manager.py:47] - Database connection established in 0.00s
2025-03-27 16:53:23 - INFO - [feedback_manager.py:267] - Stage 1: Vector search for 'Get recently created orders...'
2025-03-27 16:53:23 - INFO - [feedback_manager.py:62] - Loading embedding model 'sentence-transformers/all-MiniLM-L12-v2'
2025-03-27 16:53:26 - INFO - [feedback_manager.py:65] - Embedding model loaded in 2.46s
2025-03-27 16:53:26 - INFO - [feedback_manager.py:322] - Found 4 initial candidates from vector search
2025-03-27 16:53:26 - INFO - [feedback_manager.py:329] - Stage 2: Reranking 4 candidates
2025-03-27 16:53:26 - INFO - [feedback_manager.py:109] - Loading reranking model 'cross-encoder/ms-marco-MiniLM-L-6-v2'
2025-03-27 16:53:31 - INFO - [feedback_manager.py:113] - Reranking model loaded in 4.77s
2025-03-27 16:53:31 - INFO - [feedback_manager.py:347] - Reranking successful, returning top 2 results
2025-03-27 16:53:31 - INFO - [azure_client.py:35] - SQL generation started for query: 'Get recently created orders'
2025-03-27 16:53:31 - INFO - [azure_client.py:69] - Including schema information (132 chars)
2025-03-27 16:53:31 - INFO - [azure_client.py:97] - Including 2 SQL examples from manual similarity search
2025-03-27 16:53:31 - INFO - [azure_client.py:114] - PROMPT: [{'role': 'system', 'content': "You are an expert SQL assistant. Convert natural language questions into precise, executable SQL queries.\nYour task is to:\n1. Analyze the provided schema carefully, noting table relationships and column types\n2. Generate a SQL query that accurately answers the user's question\n3. Consider performance by selecting only necessary columns\n4. Use appropriate JOIN conditions based on primary/foreign key relationships or provided join conditions\n5. Include a brief explanation of your query\n\nRules:\n- Include table names and column references exactly as provided in the schema\n- Use appropriate SQL functions based on column data types\n- Consider NULL values in your conditions\n- Use table aliases for better readability when joining multiple tables\n- Add column aliases for computed values\n- Format the SQL query with proper indentation\n- If similar queries are provided, strictly use that as format or syntax\n- Return the SQL inside a code block tagged with ```sql\n\nExample output format:\nHere's a query that will [explanation]...\n\n```sql\nSELECT ...\nFROM ...\nWHERE ...\n```"}, {'role': 'user', 'content': "Here's the database schema:\nTable: orders\nDescription: Customer orders and transactions\nColumns: order_id (INTEGER), order_date (TEXT)\nPrimary Key(s): order_id\n"}, {'role': 'user', 'content': 'Here are some similar queries that were previously successful:\nQuestion: Get recently created orders\nSQL: select * from orders qualify row_number() over(order by order_date desc)=1\n\nQuestion: Get recently created orders\nSQL: select * from orders limit 1\n\n'}, {'role': 'user', 'content': 'Convert this question to SQL: Get recently created orders'}]
2025-03-27 16:53:31 - INFO - [llm_engine.py:55] - [SQL_GEN] Completion generation started
2025-03-27 16:53:33 - INFO - [llm_engine.py:92] - [SQL_GEN] Completion generation completed in 2.85s
2025-03-27 16:53:33 - INFO - [azure_client.py:150] - Parsing SQL from model response
2025-03-27 16:53:33 - INFO - [azure_client.py:157] - Found SQL code block in response
2025-03-27 16:53:33 - INFO - [azure_client.py:171] - Extracted SQL query (53 chars) and explanation (423 chars)
2025-03-27 16:53:33 - INFO - [azure_client.py:124] - Generated SQL: SELECT *
FROM orders
ORDER BY order_date DESC
LIMIT 1
2025-03-27 16:53:33,958 - QUERY: 'Get recently created orders' → SQL: SELECT *
FROM orders
ORDER BY order_date DESC
LIMIT 1
2025-03-27 16:53:33 - INFO - [azure_client.py:132] - SQL generation completed in 2.86s
2025-03-27 16:53:33 - INFO - [database.py:45] - Executing SQL query: SELECT *
FROM orders
ORDER BY order_date DESC
LIMIT 1
2025-03-27 16:53:33 - INFO - [database.py:66] - Query returned 1 rows with 5 columns
2025-03-27 16:53:33 - INFO - [database.py:75] - Query processing completed in 0.01s
2025-03-27 17:04:59 - INFO - [azure_client.py:186] - Closing Azure AI client connection
2025-03-27 17:04:59 - INFO - [database.py:238] - Closing database connection
2025-03-27 17:04:59 - INFO - [feedback_manager.py:660] - Closing database connection
2025-03-27 17:05:08 - INFO - [app.py:55] - Debug logging enabled for SQL generator and agents
2025-03-27 17:05:08 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-27 17:05:08 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-27 17:05:08 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-27 17:05:08 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-27 17:05:08 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-27 17:05:08 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-27 17:05:08 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-27 17:05:08 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-27 17:05:08 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-27 17:05:08 - INFO - [azure_client.py:11] - Initializing Azure AI Client using LLM Engine
2025-03-27 17:05:08 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-27 17:05:08 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-27 17:05:08 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-27 17:05:08 - INFO - [azure_client.py:17] - Azure AI Client initialized successfully
2025-03-27 17:05:08 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-27 17:05:08 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-03-27 17:06:22 - INFO - [azure_client.py:186] - Closing Azure AI client connection
2025-03-27 17:06:22 - INFO - [database.py:238] - Closing database connection
2025-03-27 17:06:22 - INFO - [feedback_manager.py:668] - Closing database connection
2025-03-27 17:06:26 - INFO - [app.py:55] - Debug logging enabled for SQL generator and agents
2025-03-27 17:06:26 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-27 17:06:26 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-27 17:06:26 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-27 17:06:26 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-27 17:06:26 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-27 17:06:26 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-27 17:06:26 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-27 17:06:26 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-27 17:06:26 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-27 17:06:26 - INFO - [azure_client.py:11] - Initializing Azure AI Client using LLM Engine
2025-03-27 17:06:26 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-27 17:06:26 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-27 17:06:26 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-27 17:06:26 - INFO - [azure_client.py:17] - Azure AI Client initialized successfully
2025-03-27 17:06:26 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-27 17:06:26 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-03-27 17:20:41 - INFO - [llm_engine.py:55] - [INTENT] Completion generation started
2025-03-27 17:20:42 - INFO - [llm_engine.py:92] - [INTENT] Completion generation completed in 1.30s
2025-03-27 17:20:42 - INFO - [database.py:24] - Attempting database connection
2025-03-27 17:20:42 - INFO - [database.py:28] - Database connection established in 0.01s
2025-03-27 17:20:42 - INFO - [llm_engine.py:55] - [TABLE] Completion generation started
2025-03-27 17:20:44 - INFO - [llm_engine.py:92] - [TABLE] Completion generation completed in 1.23s
2025-03-27 17:20:44 - INFO - [llm_engine.py:55] - [COLUMN] Completion generation started
2025-03-27 17:20:45 - INFO - [llm_engine.py:92] - [COLUMN] Completion generation completed in 1.36s
2025-03-27 17:20:45 - INFO - [feedback_manager.py:43] - Attempting database connection
2025-03-27 17:20:45 - INFO - [feedback_manager.py:47] - Database connection established in 0.00s
2025-03-27 17:20:45 - INFO - [feedback_manager.py:267] - Stage 1: Vector search for 'Get recently created orders...'
2025-03-27 17:20:45 - INFO - [feedback_manager.py:62] - Loading embedding model 'sentence-transformers/all-MiniLM-L12-v2'
2025-03-27 17:20:48 - INFO - [feedback_manager.py:65] - Embedding model loaded in 2.97s
2025-03-27 17:20:48 - INFO - [feedback_manager.py:322] - Found 4 initial candidates from vector search
2025-03-27 17:20:48 - INFO - [feedback_manager.py:329] - Stage 2: Reranking 4 candidates
2025-03-27 17:20:48 - INFO - [feedback_manager.py:109] - Loading reranking model 'cross-encoder/ms-marco-MiniLM-L-6-v2'
2025-03-27 17:20:49 - INFO - [feedback_manager.py:113] - Reranking model loaded in 1.08s
2025-03-27 17:20:49 - INFO - [feedback_manager.py:348] - Found 4 candidates with positive reranking scores
2025-03-27 17:20:49 - INFO - [feedback_manager.py:352] - Reranking successful, returning top 2 results
2025-03-27 17:20:49 - INFO - [azure_client.py:35] - SQL generation started for query: 'Get recently created orders'
2025-03-27 17:20:49 - INFO - [azure_client.py:69] - Including schema information (132 chars)
2025-03-27 17:20:49 - INFO - [azure_client.py:97] - Including 2 SQL examples from manual similarity search
2025-03-27 17:20:49 - INFO - [azure_client.py:114] - PROMPT: [{'role': 'system', 'content': "You are an expert SQL assistant. Convert natural language questions into precise, executable SQL queries.\nYour task is to:\n1. Analyze the provided schema carefully, noting table relationships and column types\n2. Generate a SQL query that accurately answers the user's question\n3. Consider performance by selecting only necessary columns\n4. Use appropriate JOIN conditions based on primary/foreign key relationships or provided join conditions\n5. Include a brief explanation of your query\n\nRules:\n- Include table names and column references exactly as provided in the schema\n- Use appropriate SQL functions based on column data types\n- Consider NULL values in your conditions\n- Use table aliases for better readability when joining multiple tables\n- Add column aliases for computed values\n- Format the SQL query with proper indentation\n- If similar queries are provided, strictly use that as format or syntax\n- Return the SQL inside a code block tagged with ```sql\n\nExample output format:\nHere's a query that will [explanation]...\n\n```sql\nSELECT ...\nFROM ...\nWHERE ...\n```"}, {'role': 'user', 'content': "Here's the database schema:\nTable: orders\nDescription: Customer orders and transactions\nColumns: order_id (INTEGER), order_date (TEXT)\nPrimary Key(s): order_id\n"}, {'role': 'user', 'content': 'Here are some similar queries that were previously successful:\nQuestion: Get recently created orders\nSQL: select * from orders qualify row_number() over(order by order_date desc)=1\n\nQuestion: Get recently created orders\nSQL: select * from orders limit 1\n\n'}, {'role': 'user', 'content': 'Convert this question to SQL: Get recently created orders'}]
2025-03-27 17:20:49 - INFO - [llm_engine.py:55] - [SQL_GEN] Completion generation started
2025-03-27 17:21:15 - INFO - [llm_engine.py:55] - [INTENT] Completion generation started
2025-03-27 17:23:54 - WARNING - [app.py:200] - Query a0feaf8c-5455-44f8-9d2c-233124bb6817 timed out after 2 minutes
2025-03-27 17:32:12 - INFO - [azure_client.py:186] - Closing Azure AI client connection
2025-03-27 17:32:12 - INFO - [database.py:238] - Closing database connection
2025-03-27 17:32:12 - INFO - [feedback_manager.py:660] - Closing database connection
2025-03-27 17:33:07 - INFO - [app.py:55] - Debug logging enabled for SQL generator and agents
2025-03-27 17:33:07 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-27 17:33:07 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-27 17:33:07 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-27 17:33:07 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-27 17:33:07 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-27 17:33:07 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-27 17:33:07 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-27 17:33:07 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-27 17:33:07 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-27 17:33:07 - INFO - [azure_client.py:11] - Initializing Azure AI Client using LLM Engine
2025-03-27 17:33:07 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-27 17:33:07 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-27 17:33:07 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-27 17:33:07 - INFO - [azure_client.py:17] - Azure AI Client initialized successfully
2025-03-27 17:33:07 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-27 17:33:07 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-03-27 17:33:10 - INFO - [app.py:55] - Debug logging enabled for SQL generator and agents
2025-03-27 17:33:10 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-27 17:33:10 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-27 17:33:10 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-27 17:33:10 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-27 17:33:10 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-27 17:33:10 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-27 17:33:10 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-27 17:33:10 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-27 17:33:10 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-27 17:33:10 - INFO - [azure_client.py:11] - Initializing Azure AI Client using LLM Engine
2025-03-27 17:33:10 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-27 17:33:10 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-27 17:33:10 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-27 17:33:10 - INFO - [azure_client.py:17] - Azure AI Client initialized successfully
2025-03-27 17:33:10 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-27 17:33:10 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-03-27 17:33:16 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-03-27 17:33:16 - INFO - [feedback_manager.py:43] - Attempting database connection
2025-03-27 17:33:16 - INFO - [feedback_manager.py:47] - Database connection established in 0.01s
2025-03-27 17:33:16 - INFO - [feedback_manager.py:531] - Retrieved 4 samples (page 1, limit 10)
2025-03-27 17:33:30 - INFO - [app.py:220] - Schema requested for workspace: Default
2025-03-27 17:33:48 - INFO - [azure_client.py:186] - Closing Azure AI client connection
2025-03-27 17:33:48 - INFO - [database.py:238] - Closing database connection
2025-03-27 17:33:48 - INFO - [feedback_manager.py:668] - Closing database connection
2025-03-30 10:17:27 - INFO - [app.py:55] - Debug logging enabled for SQL generator and agents
2025-03-30 10:17:27 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-30 10:17:27 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-30 10:17:27 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-30 10:17:27 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-30 10:17:27 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-30 10:17:27 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-30 10:17:27 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-30 10:17:27 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-30 10:17:27 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-30 10:17:27 - INFO - [azure_client.py:11] - Initializing Azure AI Client using LLM Engine
2025-03-30 10:17:27 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-30 10:17:27 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-30 10:17:27 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-30 10:17:27 - INFO - [azure_client.py:17] - Azure AI Client initialized successfully
2025-03-30 10:17:27 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-30 10:17:27 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-03-30 10:17:31 - INFO - [app.py:55] - Debug logging enabled for SQL generator and agents
2025-03-30 10:17:31 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-30 10:17:31 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-30 10:17:31 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-30 10:17:31 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-30 10:17:31 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-30 10:17:31 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-30 10:17:31 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-30 10:17:31 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-30 10:17:31 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-30 10:17:31 - INFO - [azure_client.py:11] - Initializing Azure AI Client using LLM Engine
2025-03-30 10:17:31 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-30 10:17:31 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-30 10:17:31 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-30 10:17:31 - INFO - [azure_client.py:17] - Azure AI Client initialized successfully
2025-03-30 10:17:31 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-30 10:17:31 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-03-30 10:17:48 - INFO - [app.py:220] - Schema requested for workspace: Sales
2025-03-30 10:17:53 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-03-30 10:17:53 - INFO - [feedback_manager.py:43] - Attempting database connection
2025-03-30 10:17:53 - INFO - [feedback_manager.py:47] - Database connection established in 0.03s
2025-03-30 10:17:53 - INFO - [feedback_manager.py:531] - Retrieved 4 samples (page 1, limit 10)
2025-03-30 10:17:55 - INFO - [app.py:220] - Schema requested for workspace: Default
2025-03-30 10:18:16 - INFO - [llm_engine.py:55] - [INTENT] Completion generation started
2025-03-30 10:18:24 - INFO - [llm_engine.py:92] - [INTENT] Completion generation completed in 7.83s
2025-03-30 10:18:24 - INFO - [database.py:24] - Attempting database connection
2025-03-30 10:18:24 - INFO - [database.py:28] - Database connection established in 0.00s
2025-03-30 10:18:24 - INFO - [llm_engine.py:55] - [TABLE] Completion generation started
2025-03-30 10:18:25 - INFO - [llm_engine.py:92] - [TABLE] Completion generation completed in 1.12s
2025-03-30 10:18:25 - INFO - [llm_engine.py:55] - [COLUMN] Completion generation started
2025-03-30 10:18:36 - INFO - [llm_engine.py:92] - [COLUMN] Completion generation completed in 10.40s
2025-03-30 10:18:36 - INFO - [feedback_manager.py:43] - Attempting database connection
2025-03-30 10:18:36 - INFO - [feedback_manager.py:47] - Database connection established in 0.01s
2025-03-30 10:18:36 - INFO - [feedback_manager.py:267] - Stage 1: Vector search for 'Get me all the customers...'
2025-03-30 10:18:36 - INFO - [feedback_manager.py:62] - Loading embedding model 'sentence-transformers/all-MiniLM-L12-v2'
2025-03-30 10:18:38 - INFO - [feedback_manager.py:65] - Embedding model loaded in 2.67s
2025-03-30 10:18:38 - INFO - [feedback_manager.py:322] - Found 4 initial candidates from vector search
2025-03-30 10:18:38 - INFO - [feedback_manager.py:329] - Stage 2: Reranking 4 candidates
2025-03-30 10:18:38 - INFO - [feedback_manager.py:109] - Loading reranking model 'cross-encoder/ms-marco-MiniLM-L-6-v2'
2025-03-30 10:18:40 - INFO - [feedback_manager.py:113] - Reranking model loaded in 1.15s
2025-03-30 10:18:40 - WARNING - [feedback_manager.py:355] - No candidates with positive reranking scores, falling back to vector search results
2025-03-30 10:18:40 - INFO - [azure_client.py:35] - SQL generation started for query: 'Get me all the customers'
2025-03-30 10:18:40 - INFO - [azure_client.py:69] - Including schema information (293 chars)
2025-03-30 10:18:40 - INFO - [azure_client.py:97] - Including 2 SQL examples from manual similarity search
2025-03-30 10:18:40 - INFO - [azure_client.py:114] - PROMPT: [{'role': 'system', 'content': "You are an expert SQL assistant. Convert natural language questions into precise, executable SQL queries.\nYour task is to:\n1. Analyze the provided schema carefully, noting table relationships and column types\n2. Generate a SQL query that accurately answers the user's question\n3. Consider performance by selecting only necessary columns\n4. Use appropriate JOIN conditions based on primary/foreign key relationships or provided join conditions\n5. Include a brief explanation of your query\n\nRules:\n- Include table names and column references exactly as provided in the schema\n- Use appropriate SQL functions based on column data types\n- Consider NULL values in your conditions\n- Use table aliases for better readability when joining multiple tables\n- Add column aliases for computed values\n- Format the SQL query with proper indentation\n- If similar queries are provided, strictly use that as format or syntax\n- Return the SQL inside a code block tagged with ```sql\n\nExample output format:\nHere's a query that will [explanation]...\n\n```sql\nSELECT ...\nFROM ...\nWHERE ...\n```"}, {'role': 'user', 'content': "Here's the database schema:\nTable: customers\nDescription: Customer information and profiles\nColumns: customer_id (INTEGER), first_name (TEXT), last_name (TEXT), email (TEXT), phone (TEXT), address (TEXT), city (TEXT), state (TEXT), country (TEXT), postal_code (TEXT), registration_date (TEXT)\nPrimary Key(s): customer_id\n"}, {'role': 'user', 'content': 'Here are some similar queries that were previously successful:\nQuestion: Get recently created orders\nSQL: select * from orders qualify row_number() over(order by order_date desc)=1\n\nQuestion: Get recently created orders\nSQL: select * from orders limit 1\n\n'}, {'role': 'user', 'content': 'Convert this question to SQL: Get me all the customers'}]
2025-03-30 10:18:40 - INFO - [llm_engine.py:55] - [SQL_GEN] Completion generation started
2025-03-30 10:18:42 - INFO - [llm_engine.py:92] - [SQL_GEN] Completion generation completed in 1.95s
2025-03-30 10:18:42 - INFO - [azure_client.py:150] - Parsing SQL from model response
2025-03-30 10:18:42 - INFO - [azure_client.py:157] - Found SQL code block in response
2025-03-30 10:18:42 - INFO - [azure_client.py:171] - Extracted SQL query (24 chars) and explanation (245 chars)
2025-03-30 10:18:42 - INFO - [azure_client.py:124] - Generated SQL: SELECT *
FROM customers;
2025-03-30 10:18:42,160 - QUERY: 'Get me all the customers' → SQL: SELECT *
FROM customers;
2025-03-30 10:18:42 - INFO - [azure_client.py:132] - SQL generation completed in 1.97s
2025-03-30 10:18:42 - INFO - [database.py:45] - Executing SQL query: SELECT *
FROM customers;
2025-03-30 10:18:42 - INFO - [database.py:66] - Query returned 5 rows with 11 columns
2025-03-30 10:18:42 - INFO - [database.py:75] - Query processing completed in 0.02s
2025-03-30 10:20:03 - INFO - [app.py:220] - Schema requested for workspace: Default
2025-03-30 10:20:14 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-03-30 10:20:14 - INFO - [feedback_manager.py:43] - Attempting database connection
2025-03-30 10:20:14 - INFO - [feedback_manager.py:47] - Database connection established in 0.00s
2025-03-30 10:20:14 - INFO - [feedback_manager.py:531] - Retrieved 4 samples (page 1, limit 10)
2025-03-30 10:20:17 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-03-30 10:20:17 - INFO - [feedback_manager.py:43] - Attempting database connection
2025-03-30 10:20:17 - INFO - [feedback_manager.py:47] - Database connection established in 0.00s
2025-03-30 10:20:24 - INFO - [app.py:220] - Schema requested for workspace: Sales
2025-03-30 10:21:13 - INFO - [llm_engine.py:55] - [INTENT] Completion generation started
2025-03-30 10:21:14 - INFO - [llm_engine.py:92] - [INTENT] Completion generation completed in 0.51s
2025-03-30 10:21:14 - INFO - [database.py:24] - Attempting database connection
2025-03-30 10:21:14 - INFO - [database.py:28] - Database connection established in 0.00s
2025-03-30 10:21:14 - INFO - [llm_engine.py:55] - [TABLE] Completion generation started
2025-03-30 10:21:14 - INFO - [llm_engine.py:92] - [TABLE] Completion generation completed in 0.45s
2025-03-30 10:21:14 - INFO - [llm_engine.py:55] - [COLUMN] Completion generation started
2025-03-30 10:21:15 - INFO - [llm_engine.py:92] - [COLUMN] Completion generation completed in 0.49s
2025-03-30 10:21:15 - INFO - [feedback_manager.py:267] - Stage 1: Vector search for 'get me all customers...'
2025-03-30 10:21:15 - INFO - [feedback_manager.py:322] - Found 4 initial candidates from vector search
2025-03-30 10:21:15 - INFO - [feedback_manager.py:329] - Stage 2: Reranking 4 candidates
2025-03-30 10:21:15 - WARNING - [feedback_manager.py:355] - No candidates with positive reranking scores, falling back to vector search results
2025-03-30 10:21:15 - INFO - [azure_client.py:35] - SQL generation started for query: 'get me all customers'
2025-03-30 10:21:15 - INFO - [azure_client.py:69] - Including schema information (123 chars)
2025-03-30 10:21:15 - INFO - [azure_client.py:97] - Including 2 SQL examples from manual similarity search
2025-03-30 10:21:15 - INFO - [azure_client.py:114] - PROMPT: [{'role': 'system', 'content': "You are an expert SQL assistant. Convert natural language questions into precise, executable SQL queries.\nYour task is to:\n1. Analyze the provided schema carefully, noting table relationships and column types\n2. Generate a SQL query that accurately answers the user's question\n3. Consider performance by selecting only necessary columns\n4. Use appropriate JOIN conditions based on primary/foreign key relationships or provided join conditions\n5. Include a brief explanation of your query\n\nRules:\n- Include table names and column references exactly as provided in the schema\n- Use appropriate SQL functions based on column data types\n- Consider NULL values in your conditions\n- Use table aliases for better readability when joining multiple tables\n- Add column aliases for computed values\n- Format the SQL query with proper indentation\n- If similar queries are provided, strictly use that as format or syntax\n- Return the SQL inside a code block tagged with ```sql\n\nExample output format:\nHere's a query that will [explanation]...\n\n```sql\nSELECT ...\nFROM ...\nWHERE ...\n```"}, {'role': 'user', 'content': "Here's the database schema:\nTable: customers\nDescription: Customer information and profiles\nColumns: customer_id (INTEGER)\nPrimary Key(s): customer_id\n"}, {'role': 'user', 'content': 'Here are some similar queries that were previously successful:\nQuestion: Get recently created orders\nSQL: select * from orders qualify row_number() over(order by order_date desc)=1\n\nQuestion: Get recently created orders\nSQL: select * from orders limit 1\n\n'}, {'role': 'user', 'content': 'Convert this question to SQL: get me all customers'}]
2025-03-30 10:21:15 - INFO - [llm_engine.py:55] - [SQL_GEN] Completion generation started
2025-03-30 10:21:16 - INFO - [llm_engine.py:92] - [SQL_GEN] Completion generation completed in 1.19s
2025-03-30 10:21:16 - INFO - [azure_client.py:150] - Parsing SQL from model response
2025-03-30 10:21:16 - INFO - [azure_client.py:157] - Found SQL code block in response
2025-03-30 10:21:16 - INFO - [azure_client.py:171] - Extracted SQL query (24 chars) and explanation (227 chars)
2025-03-30 10:21:16 - INFO - [azure_client.py:124] - Generated SQL: SELECT *
FROM customers;
2025-03-30 10:21:16,571 - QUERY: 'get me all customers' → SQL: SELECT *
FROM customers;
2025-03-30 10:21:16 - INFO - [azure_client.py:132] - SQL generation completed in 1.20s
2025-03-30 10:21:16 - INFO - [database.py:45] - Executing SQL query: SELECT *
FROM customers;
2025-03-30 10:21:16 - INFO - [database.py:66] - Query returned 5 rows with 11 columns
2025-03-30 10:21:16 - INFO - [database.py:75] - Query processing completed in 0.01s
2025-03-30 10:23:37 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-03-30 10:23:37 - INFO - [feedback_manager.py:43] - Attempting database connection
2025-03-30 10:23:37 - INFO - [feedback_manager.py:47] - Database connection established in 0.00s
2025-03-30 10:23:37 - INFO - [feedback_manager.py:531] - Retrieved 4 samples (page 1, limit 10)
2025-03-30 10:24:10 - INFO - [app.py:220] - Schema requested for workspace: Default
2025-03-30 10:26:21 - WARNING - [app.py:104] - API request received with no query
2025-03-30 10:28:26 - WARNING - [app.py:104] - API request received with no query
2025-03-30 10:29:13 - INFO - [llm_engine.py:55] - [INTENT] Completion generation started
2025-03-30 10:29:13 - ERROR - [llm_engine.py:98] - [INTENT] Completion generation error after 0.03s: ('Connection aborted.', RemoteDisconnected('Remote end closed connection without response'))
Traceback (most recent call last):
  File "/home/vijay/text2sql/src/utils/llm_engine.py", line 72, in generate_completion
    response = self.client.complete(
               ^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/ai/inference/_patch.py", line 728, in complete
    pipeline_response: PipelineResponse = self._client._pipeline.run(  # pylint: disable=protected-access
                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/_base.py", line 240, in run
    return first_node.send(pipeline_request)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/_base.py", line 96, in send
    response = self.next.send(request)
               ^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/_base.py", line 96, in send
    response = self.next.send(request)
               ^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/_base.py", line 96, in send
    response = self.next.send(request)
               ^^^^^^^^^^^^^^^^^^^^^^^
  [Previous line repeated 2 more times]
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/policies/_redirect.py", line 204, in send
    response = self.next.send(request)
               ^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/policies/_retry.py", line 573, in send
    raise err
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/policies/_retry.py", line 551, in send
    response = self.next.send(request)
               ^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/_base.py", line 96, in send
    response = self.next.send(request)
               ^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/_base.py", line 96, in send
    response = self.next.send(request)
               ^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/_base.py", line 96, in send
    response = self.next.send(request)
               ^^^^^^^^^^^^^^^^^^^^^^^
  [Previous line repeated 3 more times]
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/_base.py", line 128, in send
    self._sender.send(request.http_request, **request.context.options),
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/transport/_requests_basic.py", line 409, in send
    raise error
azure.core.exceptions.ServiceResponseError: ('Connection aborted.', RemoteDisconnected('Remote end closed connection without response'))
2025-03-30 10:29:13 - INFO - [database.py:24] - Attempting database connection
2025-03-30 10:29:13 - INFO - [database.py:28] - Database connection established in 0.00s
2025-03-30 10:29:13 - INFO - [llm_engine.py:55] - [TABLE] Completion generation started
2025-03-30 10:29:13 - ERROR - [llm_engine.py:98] - [TABLE] Completion generation error after 0.03s: ('Connection aborted.', RemoteDisconnected('Remote end closed connection without response'))
Traceback (most recent call last):
  File "/home/vijay/text2sql/src/utils/llm_engine.py", line 72, in generate_completion
    response = self.client.complete(
               ^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/ai/inference/_patch.py", line 728, in complete
    pipeline_response: PipelineResponse = self._client._pipeline.run(  # pylint: disable=protected-access
                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/_base.py", line 240, in run
    return first_node.send(pipeline_request)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/_base.py", line 96, in send
    response = self.next.send(request)
               ^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/_base.py", line 96, in send
    response = self.next.send(request)
               ^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/_base.py", line 96, in send
    response = self.next.send(request)
               ^^^^^^^^^^^^^^^^^^^^^^^
  [Previous line repeated 2 more times]
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/policies/_redirect.py", line 204, in send
    response = self.next.send(request)
               ^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/policies/_retry.py", line 573, in send
    raise err
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/policies/_retry.py", line 551, in send
    response = self.next.send(request)
               ^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/_base.py", line 96, in send
    response = self.next.send(request)
               ^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/_base.py", line 96, in send
    response = self.next.send(request)
               ^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/_base.py", line 96, in send
    response = self.next.send(request)
               ^^^^^^^^^^^^^^^^^^^^^^^
  [Previous line repeated 3 more times]
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/_base.py", line 128, in send
    self._sender.send(request.http_request, **request.context.options),
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/transport/_requests_basic.py", line 409, in send
    raise error
azure.core.exceptions.ServiceResponseError: ('Connection aborted.', RemoteDisconnected('Remote end closed connection without response'))
2025-03-30 10:29:13 - INFO - [llm_engine.py:55] - [COLUMN] Completion generation started
2025-03-30 10:29:13 - ERROR - [llm_engine.py:98] - [COLUMN] Completion generation error after 0.22s: ('Connection aborted.', RemoteDisconnected('Remote end closed connection without response'))
Traceback (most recent call last):
  File "/home/vijay/text2sql/src/utils/llm_engine.py", line 72, in generate_completion
    response = self.client.complete(
               ^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/ai/inference/_patch.py", line 728, in complete
    pipeline_response: PipelineResponse = self._client._pipeline.run(  # pylint: disable=protected-access
                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/_base.py", line 240, in run
    return first_node.send(pipeline_request)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/_base.py", line 96, in send
    response = self.next.send(request)
               ^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/_base.py", line 96, in send
    response = self.next.send(request)
               ^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/_base.py", line 96, in send
    response = self.next.send(request)
               ^^^^^^^^^^^^^^^^^^^^^^^
  [Previous line repeated 2 more times]
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/policies/_redirect.py", line 204, in send
    response = self.next.send(request)
               ^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/policies/_retry.py", line 573, in send
    raise err
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/policies/_retry.py", line 551, in send
    response = self.next.send(request)
               ^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/_base.py", line 96, in send
    response = self.next.send(request)
               ^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/_base.py", line 96, in send
    response = self.next.send(request)
               ^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/_base.py", line 96, in send
    response = self.next.send(request)
               ^^^^^^^^^^^^^^^^^^^^^^^
  [Previous line repeated 3 more times]
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/_base.py", line 128, in send
    self._sender.send(request.http_request, **request.context.options),
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/transport/_requests_basic.py", line 409, in send
    raise error
azure.core.exceptions.ServiceResponseError: ('Connection aborted.', RemoteDisconnected('Remote end closed connection without response'))
2025-03-30 10:29:13 - INFO - [feedback_manager.py:267] - Stage 1: Vector search for 'get me all customers...'
2025-03-30 10:29:13 - INFO - [feedback_manager.py:322] - Found 4 initial candidates from vector search
2025-03-30 10:29:13 - INFO - [feedback_manager.py:329] - Stage 2: Reranking 4 candidates
2025-03-30 10:29:13 - WARNING - [feedback_manager.py:355] - No candidates with positive reranking scores, falling back to vector search results
2025-03-30 10:29:13 - INFO - [azure_client.py:35] - SQL generation started for query: 'get me all customers'
2025-03-30 10:29:13 - INFO - [azure_client.py:69] - Including schema information (1327 chars)
2025-03-30 10:29:13 - INFO - [azure_client.py:76] - Including 1 join conditions
2025-03-30 10:29:13 - INFO - [azure_client.py:97] - Including 2 SQL examples from manual similarity search
2025-03-30 10:29:13 - INFO - [azure_client.py:114] - PROMPT: [{'role': 'system', 'content': "You are an expert SQL assistant. Convert natural language questions into precise, executable SQL queries.\nYour task is to:\n1. Analyze the provided schema carefully, noting table relationships and column types\n2. Generate a SQL query that accurately answers the user's question\n3. Consider performance by selecting only necessary columns\n4. Use appropriate JOIN conditions based on primary/foreign key relationships or provided join conditions\n5. Include a brief explanation of your query\n\nRules:\n- Include table names and column references exactly as provided in the schema\n- Use appropriate SQL functions based on column data types\n- Consider NULL values in your conditions\n- Use table aliases for better readability when joining multiple tables\n- Add column aliases for computed values\n- Format the SQL query with proper indentation\n- If similar queries are provided, strictly use that as format or syntax\n- Return the SQL inside a code block tagged with ```sql\n\nExample output format:\nHere's a query that will [explanation]...\n\n```sql\nSELECT ...\nFROM ...\nWHERE ...\n```"}, {'role': 'user', 'content': "Here's the database schema:\nTable: customers\nDescription: Customer information and profiles\nColumns: customer_id (INTEGER) - Unique customer identifier, first_name (TEXT) - Customer's first name, last_name (TEXT) - Customer's last name, email (TEXT) - Customer's email address (unique), phone (TEXT) - Customer's phone number, address (TEXT) - Customer's street address, city (TEXT) - Customer's city, state (TEXT) - Customer's state/province, country (TEXT) - Customer's country, postal_code (TEXT) - Customer's postal/zip code, registration_date (TEXT) - Date when customer registered\nPrimary Key(s): customer_id\n\nTable: products\nDescription: Product catalog and inventory\nColumns: product_id (INTEGER) - Unique product identifier, name (TEXT) - Product name, description (TEXT) - Product description, category (TEXT) - Product category, price (REAL) - Product selling price, cost (REAL) - Product cost price, stock_quantity (INTEGER) - Available stock quantity\nPrimary Key(s): product_id\n\nTable: orders\nDescription: Customer orders and transactions\nColumns: order_id (INTEGER) - Unique order identifier, customer_id (INTEGER) - Reference to customer who placed the order, order_date (TEXT) - Date when order was placed, status (TEXT) - Order status (pending, shipped, completed, etc.), total_amount (REAL) - Total order amount\nPrimary Key(s): order_id\n"}, {'role': 'user', 'content': 'Use the following pre-defined join conditions when joining these tables:\n- When joining customers with orders, use: INNER JOIN orders ON customers.customer_id = orders.customer_id\n'}, {'role': 'user', 'content': 'Here are some similar queries that were previously successful:\nQuestion: Get recently created orders\nSQL: select * from orders qualify row_number() over(order by order_date desc)=1\n\nQuestion: Get recently created orders\nSQL: select * from orders limit 1\n\n'}, {'role': 'user', 'content': 'Convert this question to SQL: get me all customers'}]
2025-03-30 10:29:13 - INFO - [llm_engine.py:55] - [SQL_GEN] Completion generation started
2025-03-30 10:29:15 - INFO - [llm_engine.py:92] - [SQL_GEN] Completion generation completed in 2.20s
2025-03-30 10:29:15 - INFO - [azure_client.py:150] - Parsing SQL from model response
2025-03-30 10:29:15 - INFO - [azure_client.py:157] - Found SQL code block in response
2025-03-30 10:29:15 - INFO - [azure_client.py:171] - Extracted SQL query (24 chars) and explanation (303 chars)
2025-03-30 10:29:15 - INFO - [azure_client.py:124] - Generated SQL: SELECT *
FROM customers;
2025-03-30 10:29:15,869 - QUERY: 'get me all customers' → SQL: SELECT *
FROM customers;
2025-03-30 10:29:15 - INFO - [azure_client.py:132] - SQL generation completed in 2.21s
2025-03-30 10:29:15 - INFO - [database.py:45] - Executing SQL query: SELECT *
FROM customers;
2025-03-30 10:29:15 - INFO - [database.py:66] - Query returned 5 rows with 11 columns
2025-03-30 10:29:15 - INFO - [database.py:75] - Query processing completed in 0.01s
2025-03-30 10:29:47 - INFO - [llm_engine.py:55] - [INTENT] Completion generation started
2025-03-30 10:29:48 - INFO - [llm_engine.py:92] - [INTENT] Completion generation completed in 1.22s
2025-03-30 10:29:48 - INFO - [database.py:24] - Attempting database connection
2025-03-30 10:29:48 - INFO - [database.py:28] - Database connection established in 0.01s
2025-03-30 10:29:48 - INFO - [llm_engine.py:55] - [TABLE] Completion generation started
2025-03-30 10:29:49 - INFO - [llm_engine.py:92] - [TABLE] Completion generation completed in 1.09s
2025-03-30 10:29:49 - INFO - [llm_engine.py:55] - [COLUMN] Completion generation started
2025-03-30 10:29:51 - INFO - [llm_engine.py:92] - [COLUMN] Completion generation completed in 1.84s
2025-03-30 10:29:51 - INFO - [feedback_manager.py:267] - Stage 1: Vector search for 'get me all customers...'
2025-03-30 10:29:51 - INFO - [feedback_manager.py:322] - Found 4 initial candidates from vector search
2025-03-30 10:29:51 - INFO - [feedback_manager.py:329] - Stage 2: Reranking 4 candidates
2025-03-30 10:29:51 - WARNING - [feedback_manager.py:355] - No candidates with positive reranking scores, falling back to vector search results
2025-03-30 10:29:51 - INFO - [azure_client.py:35] - SQL generation started for query: 'get me all customers'
2025-03-30 10:29:51 - INFO - [azure_client.py:69] - Including schema information (293 chars)
2025-03-30 10:29:51 - INFO - [azure_client.py:97] - Including 2 SQL examples from manual similarity search
2025-03-30 10:29:51 - INFO - [azure_client.py:114] - PROMPT: [{'role': 'system', 'content': "You are an expert SQL assistant. Convert natural language questions into precise, executable SQL queries.\nYour task is to:\n1. Analyze the provided schema carefully, noting table relationships and column types\n2. Generate a SQL query that accurately answers the user's question\n3. Consider performance by selecting only necessary columns\n4. Use appropriate JOIN conditions based on primary/foreign key relationships or provided join conditions\n5. Include a brief explanation of your query\n\nRules:\n- Include table names and column references exactly as provided in the schema\n- Use appropriate SQL functions based on column data types\n- Consider NULL values in your conditions\n- Use table aliases for better readability when joining multiple tables\n- Add column aliases for computed values\n- Format the SQL query with proper indentation\n- If similar queries are provided, strictly use that as format or syntax\n- Return the SQL inside a code block tagged with ```sql\n\nExample output format:\nHere's a query that will [explanation]...\n\n```sql\nSELECT ...\nFROM ...\nWHERE ...\n```"}, {'role': 'user', 'content': "Here's the database schema:\nTable: customers\nDescription: Customer information and profiles\nColumns: customer_id (INTEGER), first_name (TEXT), last_name (TEXT), email (TEXT), phone (TEXT), address (TEXT), city (TEXT), state (TEXT), country (TEXT), postal_code (TEXT), registration_date (TEXT)\nPrimary Key(s): customer_id\n"}, {'role': 'user', 'content': 'Here are some similar queries that were previously successful:\nQuestion: Get recently created orders\nSQL: select * from orders qualify row_number() over(order by order_date desc)=1\n\nQuestion: Get recently created orders\nSQL: select * from orders limit 1\n\n'}, {'role': 'user', 'content': 'Convert this question to SQL: get me all customers'}]
2025-03-30 10:29:51 - INFO - [llm_engine.py:55] - [SQL_GEN] Completion generation started
2025-03-30 10:29:54 - INFO - [llm_engine.py:92] - [SQL_GEN] Completion generation completed in 2.93s
2025-03-30 10:29:54 - INFO - [azure_client.py:150] - Parsing SQL from model response
2025-03-30 10:29:54 - INFO - [azure_client.py:157] - Found SQL code block in response
2025-03-30 10:29:54 - INFO - [azure_client.py:171] - Extracted SQL query (24 chars) and explanation (140 chars)
2025-03-30 10:29:54 - INFO - [azure_client.py:124] - Generated SQL: SELECT *
FROM customers;
2025-03-30 10:29:54,403 - QUERY: 'get me all customers' → SQL: SELECT *
FROM customers;
2025-03-30 10:29:54 - INFO - [azure_client.py:132] - SQL generation completed in 2.95s
2025-03-30 10:29:54 - INFO - [database.py:45] - Executing SQL query: SELECT *
FROM customers;
2025-03-30 10:29:54 - INFO - [database.py:66] - Query returned 5 rows with 11 columns
2025-03-30 10:29:54 - INFO - [database.py:75] - Query processing completed in 0.01s
2025-03-30 10:31:10 - INFO - [llm_engine.py:55] - [INTENT] Completion generation started
2025-03-30 10:31:10 - INFO - [llm_engine.py:92] - [INTENT] Completion generation completed in 0.41s
2025-03-30 10:31:10 - INFO - [database.py:24] - Attempting database connection
2025-03-30 10:31:10 - INFO - [database.py:28] - Database connection established in 0.00s
2025-03-30 10:31:10 - INFO - [llm_engine.py:55] - [TABLE] Completion generation started
2025-03-30 10:31:11 - INFO - [llm_engine.py:92] - [TABLE] Completion generation completed in 0.33s
2025-03-30 10:31:11 - INFO - [llm_engine.py:55] - [COLUMN] Completion generation started
2025-03-30 10:31:12 - INFO - [llm_engine.py:92] - [COLUMN] Completion generation completed in 0.98s
2025-03-30 10:31:12 - INFO - [feedback_manager.py:267] - Stage 1: Vector search for 'get me all customers...'
2025-03-30 10:31:12 - INFO - [feedback_manager.py:322] - Found 4 initial candidates from vector search
2025-03-30 10:31:12 - INFO - [feedback_manager.py:329] - Stage 2: Reranking 4 candidates
2025-03-30 10:31:12 - WARNING - [feedback_manager.py:355] - No candidates with positive reranking scores, falling back to vector search results
2025-03-30 10:31:12 - INFO - [azure_client.py:35] - SQL generation started for query: 'get me all customers'
2025-03-30 10:31:12 - INFO - [azure_client.py:69] - Including schema information (267 chars)
2025-03-30 10:31:12 - INFO - [azure_client.py:97] - Including 2 SQL examples from manual similarity search
2025-03-30 10:31:12 - INFO - [azure_client.py:114] - PROMPT: [{'role': 'system', 'content': "You are an expert SQL assistant. Convert natural language questions into precise, executable SQL queries.\nYour task is to:\n1. Analyze the provided schema carefully, noting table relationships and column types\n2. Generate a SQL query that accurately answers the user's question\n3. Consider performance by selecting only necessary columns\n4. Use appropriate JOIN conditions based on primary/foreign key relationships or provided join conditions\n5. Include a brief explanation of your query\n\nRules:\n- Include table names and column references exactly as provided in the schema\n- Use appropriate SQL functions based on column data types\n- Consider NULL values in your conditions\n- Use table aliases for better readability when joining multiple tables\n- Add column aliases for computed values\n- Format the SQL query with proper indentation\n- If similar queries are provided, strictly use that as format or syntax\n- Return the SQL inside a code block tagged with ```sql\n\nExample output format:\nHere's a query that will [explanation]...\n\n```sql\nSELECT ...\nFROM ...\nWHERE ...\n```"}, {'role': 'user', 'content': "Here's the database schema:\nTable: customers\nDescription: Customer information and profiles\nColumns: customer_id (INTEGER), first_name (TEXT), last_name (TEXT), email (TEXT), phone (TEXT), address (TEXT), city (TEXT), state (TEXT), country (TEXT), postal_code (TEXT)\nPrimary Key(s): customer_id\n"}, {'role': 'user', 'content': 'Here are some similar queries that were previously successful:\nQuestion: Get recently created orders\nSQL: select * from orders qualify row_number() over(order by order_date desc)=1\n\nQuestion: Get recently created orders\nSQL: select * from orders limit 1\n\n'}, {'role': 'user', 'content': 'Convert this question to SQL: get me all customers'}]
2025-03-30 10:31:12 - INFO - [llm_engine.py:55] - [SQL_GEN] Completion generation started
2025-03-30 10:31:13 - INFO - [llm_engine.py:92] - [SQL_GEN] Completion generation completed in 1.11s
2025-03-30 10:31:13 - INFO - [azure_client.py:150] - Parsing SQL from model response
2025-03-30 10:31:13 - INFO - [azure_client.py:157] - Found SQL code block in response
2025-03-30 10:31:13 - INFO - [azure_client.py:171] - Extracted SQL query (24 chars) and explanation (210 chars)
2025-03-30 10:31:13 - INFO - [azure_client.py:124] - Generated SQL: SELECT *
FROM customers;
2025-03-30 10:31:13,277 - QUERY: 'get me all customers' → SQL: SELECT *
FROM customers;
2025-03-30 10:31:13 - INFO - [azure_client.py:132] - SQL generation completed in 1.13s
2025-03-30 10:31:13 - INFO - [database.py:45] - Executing SQL query: SELECT *
FROM customers;
2025-03-30 10:31:13 - INFO - [database.py:66] - Query returned 5 rows with 11 columns
2025-03-30 10:31:13 - INFO - [database.py:75] - Query processing completed in 0.01s
2025-03-30 10:32:03 - INFO - [app.py:220] - Schema requested for workspace: Default
2025-03-30 10:33:21 - INFO - [llm_engine.py:55] - [INTENT] Completion generation started
2025-03-30 10:33:22 - INFO - [llm_engine.py:92] - [INTENT] Completion generation completed in 0.50s
2025-03-30 10:33:22 - INFO - [database.py:24] - Attempting database connection
2025-03-30 10:33:22 - INFO - [database.py:28] - Database connection established in 0.00s
2025-03-30 10:33:22 - INFO - [llm_engine.py:55] - [TABLE] Completion generation started
2025-03-30 10:33:22 - INFO - [llm_engine.py:92] - [TABLE] Completion generation completed in 0.33s
2025-03-30 10:33:22 - INFO - [llm_engine.py:55] - [COLUMN] Completion generation started
2025-03-30 10:33:23 - INFO - [llm_engine.py:92] - [COLUMN] Completion generation completed in 1.10s
2025-03-30 10:33:23 - INFO - [feedback_manager.py:267] - Stage 1: Vector search for 'get me all the customers...'
2025-03-30 10:33:23 - INFO - [feedback_manager.py:322] - Found 4 initial candidates from vector search
2025-03-30 10:33:23 - INFO - [feedback_manager.py:329] - Stage 2: Reranking 4 candidates
2025-03-30 10:33:23 - WARNING - [feedback_manager.py:355] - No candidates with positive reranking scores, falling back to vector search results
2025-03-30 10:33:23 - INFO - [azure_client.py:35] - SQL generation started for query: 'get me all the customers'
2025-03-30 10:33:23 - INFO - [azure_client.py:69] - Including schema information (293 chars)
2025-03-30 10:33:23 - INFO - [azure_client.py:97] - Including 2 SQL examples from manual similarity search
2025-03-30 10:33:23 - INFO - [azure_client.py:114] - PROMPT: [{'role': 'system', 'content': "You are an expert SQL assistant. Convert natural language questions into precise, executable SQL queries.\nYour task is to:\n1. Analyze the provided schema carefully, noting table relationships and column types\n2. Generate a SQL query that accurately answers the user's question\n3. Consider performance by selecting only necessary columns\n4. Use appropriate JOIN conditions based on primary/foreign key relationships or provided join conditions\n5. Include a brief explanation of your query\n\nRules:\n- Include table names and column references exactly as provided in the schema\n- Use appropriate SQL functions based on column data types\n- Consider NULL values in your conditions\n- Use table aliases for better readability when joining multiple tables\n- Add column aliases for computed values\n- Format the SQL query with proper indentation\n- If similar queries are provided, strictly use that as format or syntax\n- Return the SQL inside a code block tagged with ```sql\n\nExample output format:\nHere's a query that will [explanation]...\n\n```sql\nSELECT ...\nFROM ...\nWHERE ...\n```"}, {'role': 'user', 'content': "Here's the database schema:\nTable: customers\nDescription: Customer information and profiles\nColumns: customer_id (INTEGER), first_name (TEXT), last_name (TEXT), email (TEXT), phone (TEXT), address (TEXT), city (TEXT), state (TEXT), country (TEXT), postal_code (TEXT), registration_date (TEXT)\nPrimary Key(s): customer_id\n"}, {'role': 'user', 'content': 'Here are some similar queries that were previously successful:\nQuestion: Get recently created orders\nSQL: select * from orders qualify row_number() over(order by order_date desc)=1\n\nQuestion: Get recently created orders\nSQL: select * from orders limit 1\n\n'}, {'role': 'user', 'content': 'Convert this question to SQL: get me all the customers'}]
2025-03-30 10:33:23 - INFO - [llm_engine.py:55] - [SQL_GEN] Completion generation started
2025-03-30 10:33:24 - INFO - [llm_engine.py:92] - [SQL_GEN] Completion generation completed in 1.10s
2025-03-30 10:33:24 - INFO - [azure_client.py:150] - Parsing SQL from model response
2025-03-30 10:33:24 - INFO - [azure_client.py:157] - Found SQL code block in response
2025-03-30 10:33:24 - INFO - [azure_client.py:171] - Extracted SQL query (24 chars) and explanation (148 chars)
2025-03-30 10:33:24 - INFO - [azure_client.py:124] - Generated SQL: SELECT *
FROM customers;
2025-03-30 10:33:24,835 - QUERY: 'get me all the customers' → SQL: SELECT *
FROM customers;
2025-03-30 10:33:24 - INFO - [azure_client.py:132] - SQL generation completed in 1.13s
2025-03-30 10:33:24 - INFO - [database.py:45] - Executing SQL query: SELECT *
FROM customers;
2025-03-30 10:33:24 - INFO - [database.py:66] - Query returned 5 rows with 11 columns
2025-03-30 10:33:24 - INFO - [database.py:75] - Query processing completed in 0.01s
2025-03-30 10:33:30 - INFO - [llm_engine.py:55] - [INTENT] Completion generation started
2025-03-30 10:33:30 - INFO - [llm_engine.py:92] - [INTENT] Completion generation completed in 0.38s
2025-03-30 10:33:30 - INFO - [database.py:24] - Attempting database connection
2025-03-30 10:33:30 - INFO - [database.py:28] - Database connection established in 0.00s
2025-03-30 10:33:30 - INFO - [llm_engine.py:55] - [TABLE] Completion generation started
2025-03-30 10:33:31 - INFO - [llm_engine.py:92] - [TABLE] Completion generation completed in 0.32s
2025-03-30 10:33:31 - INFO - [llm_engine.py:55] - [COLUMN] Completion generation started
2025-03-30 10:33:32 - INFO - [llm_engine.py:92] - [COLUMN] Completion generation completed in 1.00s
2025-03-30 10:33:32 - INFO - [feedback_manager.py:267] - Stage 1: Vector search for 'get me all the customers...'
2025-03-30 10:33:32 - INFO - [feedback_manager.py:322] - Found 4 initial candidates from vector search
2025-03-30 10:33:32 - INFO - [feedback_manager.py:329] - Stage 2: Reranking 4 candidates
2025-03-30 10:33:32 - WARNING - [feedback_manager.py:355] - No candidates with positive reranking scores, falling back to vector search results
2025-03-30 10:33:32 - INFO - [azure_client.py:35] - SQL generation started for query: 'get me all the customers'
2025-03-30 10:33:32 - INFO - [azure_client.py:69] - Including schema information (293 chars)
2025-03-30 10:33:32 - INFO - [azure_client.py:97] - Including 2 SQL examples from manual similarity search
2025-03-30 10:33:32 - INFO - [azure_client.py:114] - PROMPT: [{'role': 'system', 'content': "You are an expert SQL assistant. Convert natural language questions into precise, executable SQL queries.\nYour task is to:\n1. Analyze the provided schema carefully, noting table relationships and column types\n2. Generate a SQL query that accurately answers the user's question\n3. Consider performance by selecting only necessary columns\n4. Use appropriate JOIN conditions based on primary/foreign key relationships or provided join conditions\n5. Include a brief explanation of your query\n\nRules:\n- Include table names and column references exactly as provided in the schema\n- Use appropriate SQL functions based on column data types\n- Consider NULL values in your conditions\n- Use table aliases for better readability when joining multiple tables\n- Add column aliases for computed values\n- Format the SQL query with proper indentation\n- If similar queries are provided, strictly use that as format or syntax\n- Return the SQL inside a code block tagged with ```sql\n\nExample output format:\nHere's a query that will [explanation]...\n\n```sql\nSELECT ...\nFROM ...\nWHERE ...\n```"}, {'role': 'user', 'content': "Here's the database schema:\nTable: customers\nDescription: Customer information and profiles\nColumns: customer_id (INTEGER), first_name (TEXT), last_name (TEXT), email (TEXT), phone (TEXT), address (TEXT), city (TEXT), state (TEXT), country (TEXT), postal_code (TEXT), registration_date (TEXT)\nPrimary Key(s): customer_id\n"}, {'role': 'user', 'content': 'Here are some similar queries that were previously successful:\nQuestion: Get recently created orders\nSQL: select * from orders qualify row_number() over(order by order_date desc)=1\n\nQuestion: Get recently created orders\nSQL: select * from orders limit 1\n\n'}, {'role': 'user', 'content': 'Convert this question to SQL: get me all the customers'}]
2025-03-30 10:33:32 - INFO - [llm_engine.py:55] - [SQL_GEN] Completion generation started
2025-03-30 10:33:33 - INFO - [llm_engine.py:92] - [SQL_GEN] Completion generation completed in 0.98s
2025-03-30 10:33:33 - INFO - [azure_client.py:150] - Parsing SQL from model response
2025-03-30 10:33:33 - INFO - [azure_client.py:157] - Found SQL code block in response
2025-03-30 10:33:33 - INFO - [azure_client.py:171] - Extracted SQL query (24 chars) and explanation (162 chars)
2025-03-30 10:33:33 - INFO - [azure_client.py:124] - Generated SQL: SELECT *
FROM customers;
2025-03-30 10:33:33,383 - QUERY: 'get me all the customers' → SQL: SELECT *
FROM customers;
2025-03-30 10:33:33 - INFO - [azure_client.py:132] - SQL generation completed in 0.99s
2025-03-30 10:33:33 - INFO - [database.py:45] - Executing SQL query: SELECT *
FROM customers;
2025-03-30 10:33:33 - INFO - [database.py:66] - Query returned 5 rows with 11 columns
2025-03-30 10:33:33 - INFO - [database.py:75] - Query processing completed in 0.01s
2025-03-30 10:37:33 - INFO - [llm_engine.py:55] - [INTENT] Completion generation started
2025-03-30 10:37:33 - INFO - [llm_engine.py:92] - [INTENT] Completion generation completed in 0.46s
2025-03-30 10:37:33 - INFO - [database.py:24] - Attempting database connection
2025-03-30 10:37:33 - INFO - [database.py:28] - Database connection established in 0.00s
2025-03-30 10:37:33 - INFO - [llm_engine.py:55] - [TABLE] Completion generation started
2025-03-30 10:37:34 - INFO - [llm_engine.py:92] - [TABLE] Completion generation completed in 0.31s
2025-03-30 10:37:34 - INFO - [llm_engine.py:55] - [COLUMN] Completion generation started
2025-03-30 10:37:35 - INFO - [llm_engine.py:92] - [COLUMN] Completion generation completed in 1.11s
2025-03-30 10:37:35 - INFO - [feedback_manager.py:267] - Stage 1: Vector search for 'get me all the customers...'
2025-03-30 10:37:35 - INFO - [feedback_manager.py:322] - Found 4 initial candidates from vector search
2025-03-30 10:37:35 - INFO - [feedback_manager.py:329] - Stage 2: Reranking 4 candidates
2025-03-30 10:37:35 - WARNING - [feedback_manager.py:355] - No candidates with positive reranking scores, falling back to vector search results
2025-03-30 10:37:35 - INFO - [azure_client.py:35] - SQL generation started for query: 'get me all the customers'
2025-03-30 10:37:35 - INFO - [azure_client.py:69] - Including schema information (293 chars)
2025-03-30 10:37:35 - INFO - [azure_client.py:97] - Including 2 SQL examples from manual similarity search
2025-03-30 10:37:35 - INFO - [azure_client.py:114] - PROMPT: [{'role': 'system', 'content': "You are an expert SQL assistant. Convert natural language questions into precise, executable SQL queries.\nYour task is to:\n1. Analyze the provided schema carefully, noting table relationships and column types\n2. Generate a SQL query that accurately answers the user's question\n3. Consider performance by selecting only necessary columns\n4. Use appropriate JOIN conditions based on primary/foreign key relationships or provided join conditions\n5. Include a brief explanation of your query\n\nRules:\n- Include table names and column references exactly as provided in the schema\n- Use appropriate SQL functions based on column data types\n- Consider NULL values in your conditions\n- Use table aliases for better readability when joining multiple tables\n- Add column aliases for computed values\n- Format the SQL query with proper indentation\n- If similar queries are provided, strictly use that as format or syntax\n- Return the SQL inside a code block tagged with ```sql\n\nExample output format:\nHere's a query that will [explanation]...\n\n```sql\nSELECT ...\nFROM ...\nWHERE ...\n```"}, {'role': 'user', 'content': "Here's the database schema:\nTable: customers\nDescription: Customer information and profiles\nColumns: customer_id (INTEGER), first_name (TEXT), last_name (TEXT), email (TEXT), phone (TEXT), address (TEXT), city (TEXT), state (TEXT), country (TEXT), postal_code (TEXT), registration_date (TEXT)\nPrimary Key(s): customer_id\n"}, {'role': 'user', 'content': 'Here are some similar queries that were previously successful:\nQuestion: Get recently created orders\nSQL: select * from orders qualify row_number() over(order by order_date desc)=1\n\nQuestion: Get recently created orders\nSQL: select * from orders limit 1\n\n'}, {'role': 'user', 'content': 'Convert this question to SQL: get me all the customers'}]
2025-03-30 10:37:35 - INFO - [llm_engine.py:55] - [SQL_GEN] Completion generation started
2025-03-30 10:37:36 - INFO - [llm_engine.py:92] - [SQL_GEN] Completion generation completed in 1.43s
2025-03-30 10:37:36 - INFO - [azure_client.py:150] - Parsing SQL from model response
2025-03-30 10:37:36 - INFO - [azure_client.py:157] - Found SQL code block in response
2025-03-30 10:37:36 - INFO - [azure_client.py:171] - Extracted SQL query (24 chars) and explanation (304 chars)
2025-03-30 10:37:36 - INFO - [azure_client.py:124] - Generated SQL: SELECT * FROM customers;
2025-03-30 10:37:36,937 - QUERY: 'get me all the customers' → SQL: SELECT * FROM customers;
2025-03-30 10:37:36 - INFO - [azure_client.py:132] - SQL generation completed in 1.45s
2025-03-30 10:37:36 - INFO - [database.py:45] - Executing SQL query: SELECT * FROM customers;
2025-03-30 10:37:36 - INFO - [database.py:66] - Query returned 5 rows with 11 columns
2025-03-30 10:37:36 - INFO - [database.py:75] - Query processing completed in 0.01s
2025-03-30 10:38:53 - INFO - [llm_engine.py:55] - [INTENT] Completion generation started
2025-03-30 10:38:53 - INFO - [llm_engine.py:92] - [INTENT] Completion generation completed in 0.38s
2025-03-30 10:38:53 - INFO - [database.py:24] - Attempting database connection
2025-03-30 10:38:53 - INFO - [database.py:28] - Database connection established in 0.00s
2025-03-30 10:38:53 - INFO - [llm_engine.py:55] - [TABLE] Completion generation started
2025-03-30 10:38:54 - INFO - [llm_engine.py:92] - [TABLE] Completion generation completed in 0.33s
2025-03-30 10:38:54 - INFO - [llm_engine.py:55] - [COLUMN] Completion generation started
2025-03-30 10:38:55 - INFO - [llm_engine.py:92] - [COLUMN] Completion generation completed in 0.96s
2025-03-30 10:38:55 - INFO - [feedback_manager.py:267] - Stage 1: Vector search for 'get me all the customers...'
2025-03-30 10:38:55 - INFO - [feedback_manager.py:322] - Found 4 initial candidates from vector search
2025-03-30 10:38:55 - INFO - [feedback_manager.py:329] - Stage 2: Reranking 4 candidates
2025-03-30 10:38:55 - WARNING - [feedback_manager.py:355] - No candidates with positive reranking scores, falling back to vector search results
2025-03-30 10:38:55 - INFO - [azure_client.py:35] - SQL generation started for query: 'get me all the customers'
2025-03-30 10:38:55 - INFO - [azure_client.py:69] - Including schema information (293 chars)
2025-03-30 10:38:55 - INFO - [azure_client.py:97] - Including 2 SQL examples from manual similarity search
2025-03-30 10:38:55 - INFO - [azure_client.py:114] - PROMPT: [{'role': 'system', 'content': "You are an expert SQL assistant. Convert natural language questions into precise, executable SQL queries.\nYour task is to:\n1. Analyze the provided schema carefully, noting table relationships and column types\n2. Generate a SQL query that accurately answers the user's question\n3. Consider performance by selecting only necessary columns\n4. Use appropriate JOIN conditions based on primary/foreign key relationships or provided join conditions\n5. Include a brief explanation of your query\n\nRules:\n- Include table names and column references exactly as provided in the schema\n- Use appropriate SQL functions based on column data types\n- Consider NULL values in your conditions\n- Use table aliases for better readability when joining multiple tables\n- Add column aliases for computed values\n- Format the SQL query with proper indentation\n- If similar queries are provided, strictly use that as format or syntax\n- Return the SQL inside a code block tagged with ```sql\n\nExample output format:\nHere's a query that will [explanation]...\n\n```sql\nSELECT ...\nFROM ...\nWHERE ...\n```"}, {'role': 'user', 'content': "Here's the database schema:\nTable: customers\nDescription: Customer information and profiles\nColumns: customer_id (INTEGER), first_name (TEXT), last_name (TEXT), email (TEXT), phone (TEXT), address (TEXT), city (TEXT), state (TEXT), country (TEXT), postal_code (TEXT), registration_date (TEXT)\nPrimary Key(s): customer_id\n"}, {'role': 'user', 'content': 'Here are some similar queries that were previously successful:\nQuestion: Get recently created orders\nSQL: select * from orders qualify row_number() over(order by order_date desc)=1\n\nQuestion: Get recently created orders\nSQL: select * from orders limit 1\n\n'}, {'role': 'user', 'content': 'Convert this question to SQL: get me all the customers'}]
2025-03-30 10:38:55 - INFO - [llm_engine.py:55] - [SQL_GEN] Completion generation started
2025-03-30 10:38:56 - INFO - [llm_engine.py:92] - [SQL_GEN] Completion generation completed in 1.14s
2025-03-30 10:38:56 - INFO - [azure_client.py:150] - Parsing SQL from model response
2025-03-30 10:38:56 - INFO - [azure_client.py:157] - Found SQL code block in response
2025-03-30 10:38:56 - INFO - [azure_client.py:171] - Extracted SQL query (24 chars) and explanation (229 chars)
2025-03-30 10:38:56 - INFO - [azure_client.py:124] - Generated SQL: SELECT *
FROM customers;
2025-03-30 10:38:56,443 - QUERY: 'get me all the customers' → SQL: SELECT *
FROM customers;
2025-03-30 10:38:56 - INFO - [azure_client.py:132] - SQL generation completed in 1.15s
2025-03-30 10:38:56 - INFO - [database.py:45] - Executing SQL query: SELECT *
FROM customers;
2025-03-30 10:38:56 - INFO - [database.py:66] - Query returned 5 rows with 11 columns
2025-03-30 10:38:56 - INFO - [database.py:75] - Query processing completed in 0.01s
2025-03-30 10:39:50 - INFO - [llm_engine.py:55] - [INTENT] Completion generation started
2025-03-30 10:39:53 - INFO - [llm_engine.py:92] - [INTENT] Completion generation completed in 2.69s
2025-03-30 10:39:53 - INFO - [database.py:24] - Attempting database connection
2025-03-30 10:39:53 - INFO - [database.py:28] - Database connection established in 0.00s
2025-03-30 10:39:53 - INFO - [llm_engine.py:55] - [TABLE] Completion generation started
2025-03-30 10:39:53 - INFO - [llm_engine.py:92] - [TABLE] Completion generation completed in 0.42s
2025-03-30 10:39:53 - INFO - [llm_engine.py:55] - [COLUMN] Completion generation started
2025-03-30 10:39:54 - INFO - [llm_engine.py:92] - [COLUMN] Completion generation completed in 0.97s
2025-03-30 10:39:54 - INFO - [feedback_manager.py:267] - Stage 1: Vector search for 'get me all the customers...'
2025-03-30 10:39:54 - INFO - [feedback_manager.py:322] - Found 4 initial candidates from vector search
2025-03-30 10:39:54 - INFO - [feedback_manager.py:329] - Stage 2: Reranking 4 candidates
2025-03-30 10:39:54 - WARNING - [feedback_manager.py:355] - No candidates with positive reranking scores, falling back to vector search results
2025-03-30 10:39:54 - INFO - [azure_client.py:35] - SQL generation started for query: 'get me all the customers'
2025-03-30 10:39:54 - INFO - [azure_client.py:69] - Including schema information (267 chars)
2025-03-30 10:39:54 - INFO - [azure_client.py:97] - Including 2 SQL examples from manual similarity search
2025-03-30 10:39:54 - INFO - [azure_client.py:114] - PROMPT: [{'role': 'system', 'content': "You are an expert SQL assistant. Convert natural language questions into precise, executable SQL queries.\nYour task is to:\n1. Analyze the provided schema carefully, noting table relationships and column types\n2. Generate a SQL query that accurately answers the user's question\n3. Consider performance by selecting only necessary columns\n4. Use appropriate JOIN conditions based on primary/foreign key relationships or provided join conditions\n5. Include a brief explanation of your query\n\nRules:\n- Include table names and column references exactly as provided in the schema\n- Use appropriate SQL functions based on column data types\n- Consider NULL values in your conditions\n- Use table aliases for better readability when joining multiple tables\n- Add column aliases for computed values\n- Format the SQL query with proper indentation\n- If similar queries are provided, strictly use that as format or syntax\n- Return the SQL inside a code block tagged with ```sql\n\nExample output format:\nHere's a query that will [explanation]...\n\n```sql\nSELECT ...\nFROM ...\nWHERE ...\n```"}, {'role': 'user', 'content': "Here's the database schema:\nTable: customers\nDescription: Customer information and profiles\nColumns: customer_id (INTEGER), first_name (TEXT), last_name (TEXT), email (TEXT), phone (TEXT), address (TEXT), city (TEXT), state (TEXT), country (TEXT), postal_code (TEXT)\nPrimary Key(s): customer_id\n"}, {'role': 'user', 'content': 'Here are some similar queries that were previously successful:\nQuestion: Get recently created orders\nSQL: select * from orders qualify row_number() over(order by order_date desc)=1\n\nQuestion: Get recently created orders\nSQL: select * from orders limit 1\n\n'}, {'role': 'user', 'content': 'Convert this question to SQL: get me all the customers'}]
2025-03-30 10:39:54 - INFO - [llm_engine.py:55] - [SQL_GEN] Completion generation started
2025-03-30 10:39:55 - INFO - [llm_engine.py:92] - [SQL_GEN] Completion generation completed in 1.24s
2025-03-30 10:39:55 - INFO - [azure_client.py:150] - Parsing SQL from model response
2025-03-30 10:39:55 - INFO - [azure_client.py:157] - Found SQL code block in response
2025-03-30 10:39:55 - INFO - [azure_client.py:171] - Extracted SQL query (24 chars) and explanation (216 chars)
2025-03-30 10:39:55 - INFO - [azure_client.py:124] - Generated SQL: SELECT *
FROM customers;
2025-03-30 10:39:55,972 - QUERY: 'get me all the customers' → SQL: SELECT *
FROM customers;
2025-03-30 10:39:55 - INFO - [azure_client.py:132] - SQL generation completed in 1.26s
2025-03-30 10:39:55 - INFO - [database.py:45] - Executing SQL query: SELECT *
FROM customers;
2025-03-30 10:39:55 - INFO - [database.py:66] - Query returned 5 rows with 11 columns
2025-03-30 10:39:55 - INFO - [database.py:75] - Query processing completed in 0.02s
2025-03-30 10:42:18 - INFO - [llm_engine.py:55] - [INTENT] Completion generation started
2025-03-30 10:42:19 - INFO - [llm_engine.py:92] - [INTENT] Completion generation completed in 0.47s
2025-03-30 10:42:19 - INFO - [database.py:24] - Attempting database connection
2025-03-30 10:42:19 - INFO - [database.py:28] - Database connection established in 0.00s
2025-03-30 10:42:19 - INFO - [llm_engine.py:55] - [TABLE] Completion generation started
2025-03-30 10:42:19 - INFO - [llm_engine.py:92] - [TABLE] Completion generation completed in 0.33s
2025-03-30 10:42:19 - INFO - [llm_engine.py:55] - [COLUMN] Completion generation started
2025-03-30 10:42:20 - INFO - [llm_engine.py:92] - [COLUMN] Completion generation completed in 1.12s
2025-03-30 10:42:20 - INFO - [feedback_manager.py:267] - Stage 1: Vector search for 'get me all the customers...'
2025-03-30 10:42:20 - INFO - [feedback_manager.py:322] - Found 4 initial candidates from vector search
2025-03-30 10:42:20 - INFO - [feedback_manager.py:329] - Stage 2: Reranking 4 candidates
2025-03-30 10:42:20 - WARNING - [feedback_manager.py:355] - No candidates with positive reranking scores, falling back to vector search results
2025-03-30 10:42:20 - INFO - [azure_client.py:35] - SQL generation started for query: 'get me all the customers'
2025-03-30 10:42:20 - INFO - [azure_client.py:69] - Including schema information (293 chars)
2025-03-30 10:42:20 - INFO - [azure_client.py:97] - Including 2 SQL examples from manual similarity search
2025-03-30 10:42:20 - INFO - [azure_client.py:114] - PROMPT: [{'role': 'system', 'content': "You are an expert SQL assistant. Convert natural language questions into precise, executable SQL queries.\nYour task is to:\n1. Analyze the provided schema carefully, noting table relationships and column types\n2. Generate a SQL query that accurately answers the user's question\n3. Consider performance by selecting only necessary columns\n4. Use appropriate JOIN conditions based on primary/foreign key relationships or provided join conditions\n5. Include a brief explanation of your query\n\nRules:\n- Include table names and column references exactly as provided in the schema\n- Use appropriate SQL functions based on column data types\n- Consider NULL values in your conditions\n- Use table aliases for better readability when joining multiple tables\n- Add column aliases for computed values\n- Format the SQL query with proper indentation\n- If similar queries are provided, strictly use that as format or syntax\n- Return the SQL inside a code block tagged with ```sql\n\nExample output format:\nHere's a query that will [explanation]...\n\n```sql\nSELECT ...\nFROM ...\nWHERE ...\n```"}, {'role': 'user', 'content': "Here's the database schema:\nTable: customers\nDescription: Customer information and profiles\nColumns: customer_id (INTEGER), first_name (TEXT), last_name (TEXT), email (TEXT), phone (TEXT), address (TEXT), city (TEXT), state (TEXT), country (TEXT), postal_code (TEXT), registration_date (TEXT)\nPrimary Key(s): customer_id\n"}, {'role': 'user', 'content': 'Here are some similar queries that were previously successful:\nQuestion: Get recently created orders\nSQL: select * from orders qualify row_number() over(order by order_date desc)=1\n\nQuestion: Get recently created orders\nSQL: select * from orders limit 1\n\n'}, {'role': 'user', 'content': 'Convert this question to SQL: get me all the customers'}]
2025-03-30 10:42:20 - INFO - [llm_engine.py:55] - [SQL_GEN] Completion generation started
2025-03-30 10:42:21 - INFO - [llm_engine.py:92] - [SQL_GEN] Completion generation completed in 1.32s
2025-03-30 10:42:21 - INFO - [azure_client.py:150] - Parsing SQL from model response
2025-03-30 10:42:21 - INFO - [azure_client.py:157] - Found SQL code block in response
2025-03-30 10:42:21 - INFO - [azure_client.py:171] - Extracted SQL query (24 chars) and explanation (221 chars)
2025-03-30 10:42:21 - INFO - [azure_client.py:124] - Generated SQL: SELECT *
FROM customers;
2025-03-30 10:42:21,993 - QUERY: 'get me all the customers' → SQL: SELECT *
FROM customers;
2025-03-30 10:42:21 - INFO - [azure_client.py:132] - SQL generation completed in 1.33s
2025-03-30 10:42:21 - INFO - [database.py:45] - Executing SQL query: SELECT *
FROM customers;
2025-03-30 10:42:21 - INFO - [database.py:66] - Query returned 5 rows with 11 columns
2025-03-30 10:42:22 - INFO - [database.py:75] - Query processing completed in 0.01s
2025-03-30 10:43:46 - INFO - [app.py:220] - Schema requested for workspace: Default
2025-03-30 10:43:50 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-03-30 10:43:50 - INFO - [feedback_manager.py:43] - Attempting database connection
2025-03-30 10:43:50 - INFO - [feedback_manager.py:47] - Database connection established in 0.00s
2025-03-30 10:43:50 - INFO - [feedback_manager.py:531] - Retrieved 4 samples (page 1, limit 10)
2025-03-30 10:43:52 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-03-30 10:43:52 - INFO - [feedback_manager.py:43] - Attempting database connection
2025-03-30 10:43:52 - INFO - [feedback_manager.py:47] - Database connection established in 0.00s
2025-03-30 10:44:23 - INFO - [llm_engine.py:55] - [INTENT] Completion generation started
2025-03-30 10:44:24 - INFO - [llm_engine.py:92] - [INTENT] Completion generation completed in 0.48s
2025-03-30 10:44:24 - INFO - [database.py:24] - Attempting database connection
2025-03-30 10:44:24 - INFO - [database.py:28] - Database connection established in 0.00s
2025-03-30 10:44:24 - INFO - [llm_engine.py:55] - [TABLE] Completion generation started
2025-03-30 10:44:24 - INFO - [llm_engine.py:92] - [TABLE] Completion generation completed in 0.40s
2025-03-30 10:44:24 - INFO - [llm_engine.py:55] - [COLUMN] Completion generation started
2025-03-30 10:44:25 - INFO - [llm_engine.py:92] - [COLUMN] Completion generation completed in 0.97s
2025-03-30 10:44:25 - INFO - [feedback_manager.py:267] - Stage 1: Vector search for 'get me all customers...'
2025-03-30 10:44:25 - INFO - [feedback_manager.py:322] - Found 4 initial candidates from vector search
2025-03-30 10:44:25 - INFO - [feedback_manager.py:329] - Stage 2: Reranking 4 candidates
2025-03-30 10:44:25 - WARNING - [feedback_manager.py:355] - No candidates with positive reranking scores, falling back to vector search results
2025-03-30 10:44:25 - INFO - [azure_client.py:35] - SQL generation started for query: 'get me all customers'
2025-03-30 10:44:25 - INFO - [azure_client.py:69] - Including schema information (293 chars)
2025-03-30 10:44:25 - INFO - [azure_client.py:97] - Including 2 SQL examples from manual similarity search
2025-03-30 10:44:25 - INFO - [azure_client.py:114] - PROMPT: [{'role': 'system', 'content': "You are an expert SQL assistant. Convert natural language questions into precise, executable SQL queries.\nYour task is to:\n1. Analyze the provided schema carefully, noting table relationships and column types\n2. Generate a SQL query that accurately answers the user's question\n3. Consider performance by selecting only necessary columns\n4. Use appropriate JOIN conditions based on primary/foreign key relationships or provided join conditions\n5. Include a brief explanation of your query\n\nRules:\n- Include table names and column references exactly as provided in the schema\n- Use appropriate SQL functions based on column data types\n- Consider NULL values in your conditions\n- Use table aliases for better readability when joining multiple tables\n- Add column aliases for computed values\n- Format the SQL query with proper indentation\n- If similar queries are provided, strictly use that as format or syntax\n- Return the SQL inside a code block tagged with ```sql\n\nExample output format:\nHere's a query that will [explanation]...\n\n```sql\nSELECT ...\nFROM ...\nWHERE ...\n```"}, {'role': 'user', 'content': "Here's the database schema:\nTable: customers\nDescription: Customer information and profiles\nColumns: customer_id (INTEGER), first_name (TEXT), last_name (TEXT), email (TEXT), phone (TEXT), address (TEXT), city (TEXT), state (TEXT), country (TEXT), postal_code (TEXT), registration_date (TEXT)\nPrimary Key(s): customer_id\n"}, {'role': 'user', 'content': 'Here are some similar queries that were previously successful:\nQuestion: Get recently created orders\nSQL: select * from orders qualify row_number() over(order by order_date desc)=1\n\nQuestion: Get recently created orders\nSQL: select * from orders limit 1\n\n'}, {'role': 'user', 'content': 'Convert this question to SQL: get me all customers'}]
2025-03-30 10:44:25 - INFO - [llm_engine.py:55] - [SQL_GEN] Completion generation started
2025-03-30 10:44:26 - INFO - [llm_engine.py:92] - [SQL_GEN] Completion generation completed in 1.11s
2025-03-30 10:44:26 - INFO - [azure_client.py:150] - Parsing SQL from model response
2025-03-30 10:44:26 - INFO - [azure_client.py:157] - Found SQL code block in response
2025-03-30 10:44:26 - INFO - [azure_client.py:171] - Extracted SQL query (24 chars) and explanation (211 chars)
2025-03-30 10:44:26 - INFO - [azure_client.py:124] - Generated SQL: SELECT *
FROM customers;
2025-03-30 10:44:26,956 - QUERY: 'get me all customers' → SQL: SELECT *
FROM customers;
2025-03-30 10:44:26 - INFO - [azure_client.py:132] - SQL generation completed in 1.15s
2025-03-30 10:44:26 - INFO - [database.py:45] - Executing SQL query: SELECT *
FROM customers;
2025-03-30 10:44:26 - INFO - [database.py:66] - Query returned 5 rows with 11 columns
2025-03-30 10:44:26 - INFO - [database.py:75] - Query processing completed in 0.01s
2025-03-30 10:46:55 - INFO - [azure_client.py:186] - Closing Azure AI client connection
2025-03-30 10:46:55 - INFO - [database.py:238] - Closing database connection
2025-03-30 10:46:55 - INFO - [feedback_manager.py:668] - Closing database connection
2025-03-30 10:46:59 - INFO - [app.py:55] - Debug logging enabled for SQL generator and agents
2025-03-30 10:46:59 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-30 10:46:59 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-30 10:46:59 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-30 10:46:59 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-30 10:46:59 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-30 10:46:59 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-30 10:46:59 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-30 10:46:59 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-30 10:46:59 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-30 10:46:59 - INFO - [azure_client.py:11] - Initializing Azure AI Client using LLM Engine
2025-03-30 10:46:59 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-30 10:46:59 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-30 10:46:59 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-30 10:46:59 - INFO - [azure_client.py:17] - Azure AI Client initialized successfully
2025-03-30 10:46:59 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-30 10:46:59 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-03-30 10:47:13 - INFO - [azure_client.py:186] - Closing Azure AI client connection
2025-03-30 10:47:13 - INFO - [database.py:238] - Closing database connection
2025-03-30 10:47:13 - INFO - [feedback_manager.py:668] - Closing database connection
2025-03-30 10:47:16 - INFO - [app.py:55] - Debug logging enabled for SQL generator and agents
2025-03-30 10:47:16 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-30 10:47:16 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-30 10:47:16 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-30 10:47:16 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-30 10:47:16 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-30 10:47:16 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-30 10:47:16 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-30 10:47:16 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-30 10:47:16 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-30 10:47:16 - INFO - [azure_client.py:11] - Initializing Azure AI Client using LLM Engine
2025-03-30 10:47:16 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-30 10:47:16 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-30 10:47:16 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-30 10:47:16 - INFO - [azure_client.py:17] - Azure AI Client initialized successfully
2025-03-30 10:47:16 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-30 10:47:16 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-03-30 10:47:29 - INFO - [llm_engine.py:55] - [INTENT] Completion generation started
2025-03-30 10:47:30 - INFO - [llm_engine.py:92] - [INTENT] Completion generation completed in 1.22s
2025-03-30 10:47:30 - INFO - [database.py:24] - Attempting database connection
2025-03-30 10:47:30 - INFO - [database.py:28] - Database connection established in 0.01s
2025-03-30 10:47:30 - INFO - [llm_engine.py:55] - [TABLE] Completion generation started
2025-03-30 10:47:32 - INFO - [llm_engine.py:92] - [TABLE] Completion generation completed in 1.19s
2025-03-30 10:47:32 - INFO - [llm_engine.py:55] - [COLUMN] Completion generation started
2025-03-30 10:47:34 - INFO - [llm_engine.py:92] - [COLUMN] Completion generation completed in 1.85s
2025-03-30 10:47:34 - INFO - [feedback_manager.py:43] - Attempting database connection
2025-03-30 10:47:34 - INFO - [feedback_manager.py:47] - Database connection established in 0.00s
2025-03-30 10:47:34 - INFO - [feedback_manager.py:267] - Stage 1: Vector search for 'get me all customers...'
2025-03-30 10:47:34 - INFO - [feedback_manager.py:62] - Loading embedding model 'sentence-transformers/all-MiniLM-L12-v2'
2025-03-30 10:47:39 - INFO - [feedback_manager.py:65] - Embedding model loaded in 5.84s
2025-03-30 10:47:39 - INFO - [feedback_manager.py:322] - Found 4 initial candidates from vector search
2025-03-30 10:47:39 - INFO - [feedback_manager.py:329] - Stage 2: Reranking 4 candidates
2025-03-30 10:47:39 - INFO - [feedback_manager.py:109] - Loading reranking model 'cross-encoder/ms-marco-MiniLM-L-6-v2'
2025-03-30 10:47:50 - INFO - [feedback_manager.py:113] - Reranking model loaded in 10.87s
2025-03-30 10:47:50 - WARNING - [feedback_manager.py:355] - No candidates with positive reranking scores, falling back to vector search results
2025-03-30 10:47:50 - INFO - [azure_client.py:35] - SQL generation started for query: 'get me all customers'
2025-03-30 10:47:50 - INFO - [azure_client.py:69] - Including schema information (293 chars)
2025-03-30 10:47:50 - INFO - [azure_client.py:97] - Including 2 SQL examples from manual similarity search
2025-03-30 10:47:50 - INFO - [azure_client.py:114] - PROMPT: [{'role': 'system', 'content': "You are an expert SQL assistant. Convert natural language questions into precise, executable SQL queries.\nYour task is to:\n1. Analyze the provided schema carefully, noting table relationships and column types\n2. Generate a SQL query that accurately answers the user's question\n3. Consider performance by selecting only necessary columns\n4. Use appropriate JOIN conditions based on primary/foreign key relationships or provided join conditions\n5. Include a brief explanation of your query\n\nRules:\n- Include table names and column references exactly as provided in the schema\n- Use appropriate SQL functions based on column data types\n- Consider NULL values in your conditions\n- Use table aliases for better readability when joining multiple tables\n- Add column aliases for computed values\n- Format the SQL query with proper indentation\n- If similar queries are provided, strictly use that as format or syntax\n- Return the SQL inside a code block tagged with ```sql\n\nExample output format:\nHere's a query that will [explanation]...\n\n```sql\nSELECT ...\nFROM ...\nWHERE ...\n```"}, {'role': 'user', 'content': "Here's the database schema:\nTable: customers\nDescription: Customer information and profiles\nColumns: customer_id (INTEGER), first_name (TEXT), last_name (TEXT), email (TEXT), phone (TEXT), address (TEXT), city (TEXT), state (TEXT), country (TEXT), postal_code (TEXT), registration_date (TEXT)\nPrimary Key(s): customer_id\n"}, {'role': 'user', 'content': 'Here are some similar queries that were previously successful:\nQuestion: Get recently created orders\nSQL: select * from orders qualify row_number() over(order by order_date desc)=1\n\nQuestion: Get recently created orders\nSQL: select * from orders limit 1\n\n'}, {'role': 'user', 'content': 'Convert this question to SQL: get me all customers'}]
2025-03-30 10:47:50 - INFO - [llm_engine.py:55] - [SQL_GEN] Completion generation started
2025-03-30 10:47:52 - INFO - [llm_engine.py:92] - [SQL_GEN] Completion generation completed in 2.16s
2025-03-30 10:47:52 - INFO - [azure_client.py:150] - Parsing SQL from model response
2025-03-30 10:47:52 - INFO - [azure_client.py:157] - Found SQL code block in response
2025-03-30 10:47:52 - INFO - [azure_client.py:171] - Extracted SQL query (24 chars) and explanation (289 chars)
2025-03-30 10:47:52 - INFO - [azure_client.py:124] - Generated SQL: SELECT *
FROM customers;
2025-03-30 10:47:52,985 - QUERY: 'get me all customers' → SQL: SELECT *
FROM customers;
2025-03-30 10:47:52 - INFO - [azure_client.py:132] - SQL generation completed in 2.19s
2025-03-30 10:47:52 - INFO - [database.py:45] - Executing SQL query: SELECT *
FROM customers;
2025-03-30 10:47:53 - INFO - [database.py:66] - Query returned 5 rows with 11 columns
2025-03-30 10:47:53 - INFO - [database.py:75] - Query processing completed in 0.02s
2025-03-30 10:49:25 - INFO - [azure_client.py:186] - Closing Azure AI client connection
2025-03-30 10:49:25 - INFO - [database.py:238] - Closing database connection
2025-03-30 10:49:25 - INFO - [feedback_manager.py:668] - Closing database connection
2025-03-30 10:49:30 - INFO - [app.py:55] - Debug logging enabled for SQL generator and agents
2025-03-30 10:49:30 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-30 10:49:30 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-30 10:49:30 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-30 10:49:30 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-30 10:49:30 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-30 10:49:30 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-30 10:49:30 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-30 10:49:30 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-30 10:49:30 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-30 10:49:30 - INFO - [azure_client.py:11] - Initializing Azure AI Client using LLM Engine
2025-03-30 10:49:30 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-30 10:49:30 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-30 10:49:30 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-30 10:49:30 - INFO - [azure_client.py:17] - Azure AI Client initialized successfully
2025-03-30 10:49:30 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-30 10:49:30 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-03-30 10:49:35 - INFO - [azure_client.py:186] - Closing Azure AI client connection
2025-03-30 10:49:35 - INFO - [database.py:238] - Closing database connection
2025-03-30 10:49:35 - INFO - [feedback_manager.py:668] - Closing database connection
2025-03-30 10:49:39 - INFO - [app.py:55] - Debug logging enabled for SQL generator and agents
2025-03-30 10:49:39 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-30 10:49:39 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-30 10:49:39 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-30 10:49:39 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-30 10:49:39 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-30 10:49:39 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-30 10:49:39 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-30 10:49:39 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-30 10:49:39 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-30 10:49:39 - INFO - [azure_client.py:11] - Initializing Azure AI Client using LLM Engine
2025-03-30 10:49:39 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-30 10:49:39 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-30 10:49:39 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-30 10:49:39 - INFO - [azure_client.py:17] - Azure AI Client initialized successfully
2025-03-30 10:49:39 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-30 10:49:39 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-03-30 10:49:46 - INFO - [llm_engine.py:55] - [INTENT] Completion generation started
2025-03-30 10:49:47 - INFO - [llm_engine.py:92] - [INTENT] Completion generation completed in 1.64s
2025-03-30 10:49:47 - INFO - [database.py:24] - Attempting database connection
2025-03-30 10:49:47 - INFO - [database.py:28] - Database connection established in 0.01s
2025-03-30 10:49:47 - INFO - [llm_engine.py:55] - [TABLE] Completion generation started
2025-03-30 10:49:48 - INFO - [llm_engine.py:92] - [TABLE] Completion generation completed in 1.05s
2025-03-30 10:49:48 - INFO - [llm_engine.py:55] - [COLUMN] Completion generation started
2025-03-30 10:49:50 - INFO - [llm_engine.py:92] - [COLUMN] Completion generation completed in 1.15s
2025-03-30 10:49:50 - INFO - [feedback_manager.py:43] - Attempting database connection
2025-03-30 10:49:50 - INFO - [feedback_manager.py:47] - Database connection established in 0.00s
2025-03-30 10:49:50 - INFO - [feedback_manager.py:267] - Stage 1: Vector search for 'get me all customers...'
2025-03-30 10:49:50 - INFO - [feedback_manager.py:62] - Loading embedding model 'sentence-transformers/all-MiniLM-L12-v2'
2025-03-30 10:49:52 - INFO - [feedback_manager.py:65] - Embedding model loaded in 2.37s
2025-03-30 10:49:52 - INFO - [feedback_manager.py:322] - Found 4 initial candidates from vector search
2025-03-30 10:49:52 - INFO - [feedback_manager.py:329] - Stage 2: Reranking 4 candidates
2025-03-30 10:49:52 - INFO - [feedback_manager.py:109] - Loading reranking model 'cross-encoder/ms-marco-MiniLM-L-6-v2'
2025-03-30 10:49:53 - INFO - [feedback_manager.py:113] - Reranking model loaded in 1.00s
2025-03-30 10:49:53 - WARNING - [feedback_manager.py:355] - No candidates with positive reranking scores, falling back to vector search results
2025-03-30 10:49:53 - INFO - [azure_client.py:35] - SQL generation started for query: 'get me all customers'
2025-03-30 10:49:53 - INFO - [azure_client.py:69] - Including schema information (123 chars)
2025-03-30 10:49:53 - INFO - [azure_client.py:97] - Including 2 SQL examples from manual similarity search
2025-03-30 10:49:53 - INFO - [azure_client.py:114] - PROMPT: [{'role': 'system', 'content': "You are an expert SQL assistant. Convert natural language questions into precise, executable SQL queries.\nYour task is to:\n1. Analyze the provided schema carefully, noting table relationships and column types\n2. Generate a SQL query that accurately answers the user's question\n3. Consider performance by selecting only necessary columns\n4. Use appropriate JOIN conditions based on primary/foreign key relationships or provided join conditions\n5. Include a brief explanation of your query\n\nRules:\n- Include table names and column references exactly as provided in the schema\n- Use appropriate SQL functions based on column data types\n- Consider NULL values in your conditions\n- Use table aliases for better readability when joining multiple tables\n- Add column aliases for computed values\n- Format the SQL query with proper indentation\n- If similar queries are provided, strictly use that as format or syntax\n- Return the SQL inside a code block tagged with ```sql\n\nExample output format:\nHere's a query that will [explanation]...\n\n```sql\nSELECT ...\nFROM ...\nWHERE ...\n```"}, {'role': 'user', 'content': "Here's the database schema:\nTable: customers\nDescription: Customer information and profiles\nColumns: customer_id (INTEGER)\nPrimary Key(s): customer_id\n"}, {'role': 'user', 'content': 'Here are some similar queries that were previously successful:\nQuestion: Get recently created orders\nSQL: select * from orders qualify row_number() over(order by order_date desc)=1\n\nQuestion: Get recently created orders\nSQL: select * from orders limit 1\n\n'}, {'role': 'user', 'content': 'Convert this question to SQL: get me all customers'}]
2025-03-30 10:49:53 - INFO - [llm_engine.py:55] - [SQL_GEN] Completion generation started
2025-03-30 10:49:58 - INFO - [llm_engine.py:92] - [SQL_GEN] Completion generation completed in 4.57s
2025-03-30 10:49:58 - INFO - [azure_client.py:150] - Parsing SQL from model response
2025-03-30 10:49:58 - INFO - [azure_client.py:157] - Found SQL code block in response
2025-03-30 10:49:58 - INFO - [azure_client.py:171] - Extracted SQL query (24 chars) and explanation (172 chars)
2025-03-30 10:49:58 - INFO - [azure_client.py:124] - Generated SQL: SELECT *
FROM customers;
2025-03-30 10:49:58,089 - QUERY: 'get me all customers' → SQL: SELECT *
FROM customers;
2025-03-30 10:49:58 - INFO - [azure_client.py:132] - SQL generation completed in 4.58s
2025-03-30 10:49:58 - INFO - [database.py:45] - Executing SQL query: SELECT *
FROM customers;
2025-03-30 10:49:58 - INFO - [database.py:66] - Query returned 5 rows with 11 columns
2025-03-30 10:49:58 - INFO - [database.py:75] - Query processing completed in 0.01s
2025-03-30 10:51:59 - INFO - [llm_engine.py:55] - [INTENT] Completion generation started
2025-03-30 10:52:00 - INFO - [llm_engine.py:92] - [INTENT] Completion generation completed in 0.51s
2025-03-30 10:52:00 - INFO - [database.py:24] - Attempting database connection
2025-03-30 10:52:00 - INFO - [database.py:28] - Database connection established in 0.00s
2025-03-30 10:52:00 - INFO - [llm_engine.py:55] - [TABLE] Completion generation started
2025-03-30 10:52:00 - INFO - [llm_engine.py:92] - [TABLE] Completion generation completed in 0.37s
2025-03-30 10:52:00 - INFO - [llm_engine.py:55] - [COLUMN] Completion generation started
2025-03-30 10:52:01 - INFO - [llm_engine.py:92] - [COLUMN] Completion generation completed in 1.17s
2025-03-30 10:52:01 - INFO - [feedback_manager.py:267] - Stage 1: Vector search for 'get me all customers...'
2025-03-30 10:52:01 - INFO - [feedback_manager.py:322] - Found 4 initial candidates from vector search
2025-03-30 10:52:01 - INFO - [feedback_manager.py:329] - Stage 2: Reranking 4 candidates
2025-03-30 10:52:02 - WARNING - [feedback_manager.py:355] - No candidates with positive reranking scores, falling back to vector search results
2025-03-30 10:52:02 - INFO - [azure_client.py:35] - SQL generation started for query: 'get me all customers'
2025-03-30 10:52:02 - INFO - [azure_client.py:69] - Including schema information (293 chars)
2025-03-30 10:52:02 - INFO - [azure_client.py:97] - Including 2 SQL examples from manual similarity search
2025-03-30 10:52:02 - INFO - [azure_client.py:114] - PROMPT: [{'role': 'system', 'content': "You are an expert SQL assistant. Convert natural language questions into precise, executable SQL queries.\nYour task is to:\n1. Analyze the provided schema carefully, noting table relationships and column types\n2. Generate a SQL query that accurately answers the user's question\n3. Consider performance by selecting only necessary columns\n4. Use appropriate JOIN conditions based on primary/foreign key relationships or provided join conditions\n5. Include a brief explanation of your query\n\nRules:\n- Include table names and column references exactly as provided in the schema\n- Use appropriate SQL functions based on column data types\n- Consider NULL values in your conditions\n- Use table aliases for better readability when joining multiple tables\n- Add column aliases for computed values\n- Format the SQL query with proper indentation\n- If similar queries are provided, strictly use that as format or syntax\n- Return the SQL inside a code block tagged with ```sql\n\nExample output format:\nHere's a query that will [explanation]...\n\n```sql\nSELECT ...\nFROM ...\nWHERE ...\n```"}, {'role': 'user', 'content': "Here's the database schema:\nTable: customers\nDescription: Customer information and profiles\nColumns: customer_id (INTEGER), first_name (TEXT), last_name (TEXT), email (TEXT), phone (TEXT), address (TEXT), city (TEXT), state (TEXT), country (TEXT), postal_code (TEXT), registration_date (TEXT)\nPrimary Key(s): customer_id\n"}, {'role': 'user', 'content': 'Here are some similar queries that were previously successful:\nQuestion: Get recently created orders\nSQL: select * from orders qualify row_number() over(order by order_date desc)=1\n\nQuestion: Get recently created orders\nSQL: select * from orders limit 1\n\n'}, {'role': 'user', 'content': 'Convert this question to SQL: get me all customers'}]
2025-03-30 10:52:02 - INFO - [llm_engine.py:55] - [SQL_GEN] Completion generation started
2025-03-30 10:52:03 - INFO - [llm_engine.py:92] - [SQL_GEN] Completion generation completed in 1.26s
2025-03-30 10:52:03 - INFO - [azure_client.py:150] - Parsing SQL from model response
2025-03-30 10:52:03 - INFO - [azure_client.py:157] - Found SQL code block in response
2025-03-30 10:52:03 - INFO - [azure_client.py:171] - Extracted SQL query (24 chars) and explanation (224 chars)
2025-03-30 10:52:03 - INFO - [azure_client.py:124] - Generated SQL: SELECT *
FROM customers;
2025-03-30 10:52:03,298 - QUERY: 'get me all customers' → SQL: SELECT *
FROM customers;
2025-03-30 10:52:03 - INFO - [azure_client.py:132] - SQL generation completed in 1.30s
2025-03-30 10:52:03 - INFO - [database.py:45] - Executing SQL query: SELECT *
FROM customers;
2025-03-30 10:52:03 - INFO - [database.py:66] - Query returned 5 rows with 11 columns
2025-03-30 10:52:03 - INFO - [database.py:75] - Query processing completed in 0.01s
2025-03-30 10:54:37 - INFO - [llm_engine.py:55] - [INTENT] Completion generation started
2025-03-30 10:54:38 - INFO - [llm_engine.py:92] - [INTENT] Completion generation completed in 0.53s
2025-03-30 10:54:38 - INFO - [database.py:24] - Attempting database connection
2025-03-30 10:54:38 - INFO - [database.py:28] - Database connection established in 0.00s
2025-03-30 10:54:38 - INFO - [llm_engine.py:55] - [TABLE] Completion generation started
2025-03-30 10:54:38 - INFO - [llm_engine.py:92] - [TABLE] Completion generation completed in 0.32s
2025-03-30 10:54:38 - INFO - [llm_engine.py:55] - [COLUMN] Completion generation started
2025-03-30 10:54:39 - INFO - [llm_engine.py:92] - [COLUMN] Completion generation completed in 1.09s
2025-03-30 10:54:39 - INFO - [feedback_manager.py:267] - Stage 1: Vector search for 'get me all customers...'
2025-03-30 10:54:39 - INFO - [feedback_manager.py:322] - Found 4 initial candidates from vector search
2025-03-30 10:54:39 - INFO - [feedback_manager.py:329] - Stage 2: Reranking 4 candidates
2025-03-30 10:54:39 - WARNING - [feedback_manager.py:355] - No candidates with positive reranking scores, falling back to vector search results
2025-03-30 10:54:39 - INFO - [azure_client.py:35] - SQL generation started for query: 'get me all customers'
2025-03-30 10:54:39 - INFO - [azure_client.py:69] - Including schema information (293 chars)
2025-03-30 10:54:39 - INFO - [azure_client.py:97] - Including 2 SQL examples from manual similarity search
2025-03-30 10:54:39 - INFO - [azure_client.py:114] - PROMPT: [{'role': 'system', 'content': "You are an expert SQL assistant. Convert natural language questions into precise, executable SQL queries.\nYour task is to:\n1. Analyze the provided schema carefully, noting table relationships and column types\n2. Generate a SQL query that accurately answers the user's question\n3. Consider performance by selecting only necessary columns\n4. Use appropriate JOIN conditions based on primary/foreign key relationships or provided join conditions\n5. Include a brief explanation of your query\n\nRules:\n- Include table names and column references exactly as provided in the schema\n- Use appropriate SQL functions based on column data types\n- Consider NULL values in your conditions\n- Use table aliases for better readability when joining multiple tables\n- Add column aliases for computed values\n- Format the SQL query with proper indentation\n- If similar queries are provided, strictly use that as format or syntax\n- Return the SQL inside a code block tagged with ```sql\n\nExample output format:\nHere's a query that will [explanation]...\n\n```sql\nSELECT ...\nFROM ...\nWHERE ...\n```"}, {'role': 'user', 'content': "Here's the database schema:\nTable: customers\nDescription: Customer information and profiles\nColumns: customer_id (INTEGER), first_name (TEXT), last_name (TEXT), email (TEXT), phone (TEXT), address (TEXT), city (TEXT), state (TEXT), country (TEXT), postal_code (TEXT), registration_date (TEXT)\nPrimary Key(s): customer_id\n"}, {'role': 'user', 'content': 'Here are some similar queries that were previously successful:\nQuestion: Get recently created orders\nSQL: select * from orders qualify row_number() over(order by order_date desc)=1\n\nQuestion: Get recently created orders\nSQL: select * from orders limit 1\n\n'}, {'role': 'user', 'content': 'Convert this question to SQL: get me all customers'}]
2025-03-30 10:54:39 - INFO - [llm_engine.py:55] - [SQL_GEN] Completion generation started
2025-03-30 10:54:40 - INFO - [llm_engine.py:92] - [SQL_GEN] Completion generation completed in 1.21s
2025-03-30 10:54:40 - INFO - [azure_client.py:150] - Parsing SQL from model response
2025-03-30 10:54:40 - INFO - [azure_client.py:157] - Found SQL code block in response
2025-03-30 10:54:40 - INFO - [azure_client.py:171] - Extracted SQL query (24 chars) and explanation (204 chars)
2025-03-30 10:54:40 - INFO - [azure_client.py:124] - Generated SQL: SELECT *
FROM customers;
2025-03-30 10:54:40,879 - QUERY: 'get me all customers' → SQL: SELECT *
FROM customers;
2025-03-30 10:54:40 - INFO - [azure_client.py:132] - SQL generation completed in 1.22s
2025-03-30 10:54:40 - INFO - [database.py:45] - Executing SQL query: SELECT *
FROM customers;
2025-03-30 10:54:40 - INFO - [database.py:66] - Query returned 5 rows with 11 columns
2025-03-30 10:54:40 - INFO - [database.py:75] - Query processing completed in 0.01s
2025-03-30 10:55:29 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-03-30 10:55:29 - INFO - [feedback_manager.py:43] - Attempting database connection
2025-03-30 10:55:29 - INFO - [feedback_manager.py:47] - Database connection established in 0.00s
2025-03-30 10:55:29 - INFO - [feedback_manager.py:531] - Retrieved 4 samples (page 1, limit 10)
2025-03-30 10:55:30 - INFO - [app.py:220] - Schema requested for workspace: Default
2025-03-30 10:55:47 - INFO - [llm_engine.py:55] - [INTENT] Completion generation started
2025-03-30 10:55:47 - INFO - [llm_engine.py:92] - [INTENT] Completion generation completed in 0.40s
2025-03-30 10:55:47 - INFO - [database.py:24] - Attempting database connection
2025-03-30 10:55:47 - INFO - [database.py:28] - Database connection established in 0.00s
2025-03-30 10:55:47 - INFO - [llm_engine.py:55] - [TABLE] Completion generation started
2025-03-30 10:55:48 - INFO - [llm_engine.py:92] - [TABLE] Completion generation completed in 0.33s
2025-03-30 10:55:48 - INFO - [llm_engine.py:55] - [COLUMN] Completion generation started
2025-03-30 10:55:48 - INFO - [llm_engine.py:92] - [COLUMN] Completion generation completed in 0.66s
2025-03-30 10:55:48 - INFO - [feedback_manager.py:267] - Stage 1: Vector search for 'Get recently created orders...'
2025-03-30 10:55:48 - INFO - [feedback_manager.py:322] - Found 4 initial candidates from vector search
2025-03-30 10:55:48 - INFO - [feedback_manager.py:329] - Stage 2: Reranking 4 candidates
2025-03-30 10:55:49 - INFO - [feedback_manager.py:348] - Found 4 candidates with positive reranking scores
2025-03-30 10:55:49 - INFO - [feedback_manager.py:352] - Reranking successful, returning top 2 results
2025-03-30 10:55:49 - INFO - [azure_client.py:35] - SQL generation started for query: 'Get recently created orders'
2025-03-30 10:55:49 - INFO - [azure_client.py:69] - Including schema information (168 chars)
2025-03-30 10:55:49 - INFO - [azure_client.py:97] - Including 2 SQL examples from manual similarity search
2025-03-30 10:55:49 - INFO - [azure_client.py:114] - PROMPT: [{'role': 'system', 'content': "You are an expert SQL assistant. Convert natural language questions into precise, executable SQL queries.\nYour task is to:\n1. Analyze the provided schema carefully, noting table relationships and column types\n2. Generate a SQL query that accurately answers the user's question\n3. Consider performance by selecting only necessary columns\n4. Use appropriate JOIN conditions based on primary/foreign key relationships or provided join conditions\n5. Include a brief explanation of your query\n\nRules:\n- Include table names and column references exactly as provided in the schema\n- Use appropriate SQL functions based on column data types\n- Consider NULL values in your conditions\n- Use table aliases for better readability when joining multiple tables\n- Add column aliases for computed values\n- Format the SQL query with proper indentation\n- If similar queries are provided, strictly use that as format or syntax\n- Return the SQL inside a code block tagged with ```sql\n\nExample output format:\nHere's a query that will [explanation]...\n\n```sql\nSELECT ...\nFROM ...\nWHERE ...\n```"}, {'role': 'user', 'content': "Here's the database schema:\nTable: orders\nDescription: Customer orders and transactions\nColumns: order_id (INTEGER), order_date (TEXT), status (TEXT), total_amount (REAL)\nPrimary Key(s): order_id\n"}, {'role': 'user', 'content': 'Here are some similar queries that were previously successful:\nQuestion: Get recently created orders\nSQL: select * from orders qualify row_number() over(order by order_date desc)=1\n\nQuestion: Get recently created orders\nSQL: select * from orders limit 1\n\n'}, {'role': 'user', 'content': 'Convert this question to SQL: Get recently created orders'}]
2025-03-30 10:55:49 - INFO - [llm_engine.py:55] - [SQL_GEN] Completion generation started
2025-03-30 10:55:50 - INFO - [llm_engine.py:92] - [SQL_GEN] Completion generation completed in 1.98s
2025-03-30 10:55:50 - INFO - [azure_client.py:150] - Parsing SQL from model response
2025-03-30 10:55:50 - INFO - [azure_client.py:157] - Found SQL code block in response
2025-03-30 10:55:50 - INFO - [azure_client.py:171] - Extracted SQL query (54 chars) and explanation (395 chars)
2025-03-30 10:55:50 - INFO - [azure_client.py:124] - Generated SQL: SELECT *
FROM orders
ORDER BY order_date DESC
LIMIT 1;
2025-03-30 10:55:50,999 - QUERY: 'Get recently created orders' → SQL: SELECT *
FROM orders
ORDER BY order_date DESC
LIMIT 1;
2025-03-30 10:55:50 - INFO - [azure_client.py:132] - SQL generation completed in 1.99s
2025-03-30 10:55:51 - INFO - [database.py:45] - Executing SQL query: SELECT *
FROM orders
ORDER BY order_date DESC
LIMIT 1;
2025-03-30 10:55:51 - INFO - [database.py:66] - Query returned 1 rows with 5 columns
2025-03-30 10:55:51 - INFO - [database.py:75] - Query processing completed in 0.00s
2025-03-30 10:57:23 - INFO - [llm_engine.py:55] - [INTENT] Completion generation started
2025-03-30 10:57:24 - INFO - [llm_engine.py:92] - [INTENT] Completion generation completed in 0.50s
2025-03-30 10:57:24 - INFO - [database.py:24] - Attempting database connection
2025-03-30 10:57:24 - INFO - [database.py:28] - Database connection established in 0.00s
2025-03-30 10:57:24 - INFO - [llm_engine.py:55] - [TABLE] Completion generation started
2025-03-30 10:57:24 - INFO - [llm_engine.py:92] - [TABLE] Completion generation completed in 0.46s
2025-03-30 10:57:24 - INFO - [llm_engine.py:55] - [COLUMN] Completion generation started
2025-03-30 10:57:25 - INFO - [llm_engine.py:92] - [COLUMN] Completion generation completed in 0.70s
2025-03-30 10:57:25 - INFO - [feedback_manager.py:267] - Stage 1: Vector search for 'Get recently created orders...'
2025-03-30 10:57:25 - INFO - [feedback_manager.py:322] - Found 4 initial candidates from vector search
2025-03-30 10:57:25 - INFO - [feedback_manager.py:329] - Stage 2: Reranking 4 candidates
2025-03-30 10:57:25 - INFO - [feedback_manager.py:348] - Found 4 candidates with positive reranking scores
2025-03-30 10:57:25 - INFO - [feedback_manager.py:352] - Reranking successful, returning top 2 results
2025-03-30 10:57:25 - INFO - [azure_client.py:35] - SQL generation started for query: 'Get recently created orders'
2025-03-30 10:57:25 - INFO - [azure_client.py:69] - Including schema information (153 chars)
2025-03-30 10:57:25 - INFO - [azure_client.py:97] - Including 2 SQL examples from manual similarity search
2025-03-30 10:57:25 - INFO - [azure_client.py:114] - PROMPT: [{'role': 'system', 'content': "You are an expert SQL assistant. Convert natural language questions into precise, executable SQL queries.\nYour task is to:\n1. Analyze the provided schema carefully, noting table relationships and column types\n2. Generate a SQL query that accurately answers the user's question\n3. Consider performance by selecting only necessary columns\n4. Use appropriate JOIN conditions based on primary/foreign key relationships or provided join conditions\n5. Include a brief explanation of your query\n\nRules:\n- Include table names and column references exactly as provided in the schema\n- Use appropriate SQL functions based on column data types\n- Consider NULL values in your conditions\n- Use table aliases for better readability when joining multiple tables\n- Add column aliases for computed values\n- Format the SQL query with proper indentation\n- If similar queries are provided, strictly use that as format or syntax\n- Return the SQL inside a code block tagged with ```sql\n\nExample output format:\nHere's a query that will [explanation]...\n\n```sql\nSELECT ...\nFROM ...\nWHERE ...\n```"}, {'role': 'user', 'content': "Here's the database schema:\nTable: orders\nDescription: Customer orders and transactions\nColumns: order_id (INTEGER), order_date (TEXT), total_amount (REAL)\nPrimary Key(s): order_id\n"}, {'role': 'user', 'content': 'Here are some similar queries that were previously successful:\nQuestion: Get recently created orders\nSQL: select * from orders qualify row_number() over(order by order_date desc)=1\n\nQuestion: Get recently created orders\nSQL: select * from orders limit 1\n\n'}, {'role': 'user', 'content': 'Convert this question to SQL: Get recently created orders'}]
2025-03-30 10:57:25 - INFO - [llm_engine.py:55] - [SQL_GEN] Completion generation started
2025-03-30 10:57:27 - INFO - [llm_engine.py:92] - [SQL_GEN] Completion generation completed in 2.03s
2025-03-30 10:57:27 - INFO - [azure_client.py:150] - Parsing SQL from model response
2025-03-30 10:57:27 - INFO - [azure_client.py:157] - Found SQL code block in response
2025-03-30 10:57:27 - INFO - [azure_client.py:171] - Extracted SQL query (54 chars) and explanation (347 chars)
2025-03-30 10:57:27 - INFO - [azure_client.py:124] - Generated SQL: SELECT *
FROM orders
ORDER BY order_date DESC
LIMIT 1;
2025-03-30 10:57:27,604 - QUERY: 'Get recently created orders' → SQL: SELECT *
FROM orders
ORDER BY order_date DESC
LIMIT 1;
2025-03-30 10:57:27 - INFO - [azure_client.py:132] - SQL generation completed in 2.07s
2025-03-30 10:57:27 - INFO - [database.py:45] - Executing SQL query: SELECT *
FROM orders
ORDER BY order_date DESC
LIMIT 1;
2025-03-30 10:57:27 - INFO - [database.py:66] - Query returned 1 rows with 5 columns
2025-03-30 10:57:27 - INFO - [database.py:75] - Query processing completed in 0.02s
2025-03-30 10:59:15 - INFO - [llm_engine.py:55] - [INTENT] Completion generation started
2025-03-30 10:59:16 - INFO - [llm_engine.py:92] - [INTENT] Completion generation completed in 0.40s
2025-03-30 10:59:16 - INFO - [database.py:24] - Attempting database connection
2025-03-30 10:59:16 - INFO - [database.py:28] - Database connection established in 0.00s
2025-03-30 10:59:16 - INFO - [llm_engine.py:55] - [TABLE] Completion generation started
2025-03-30 10:59:16 - INFO - [llm_engine.py:92] - [TABLE] Completion generation completed in 0.35s
2025-03-30 10:59:16 - INFO - [llm_engine.py:55] - [COLUMN] Completion generation started
2025-03-30 10:59:17 - INFO - [llm_engine.py:92] - [COLUMN] Completion generation completed in 0.64s
2025-03-30 10:59:17 - INFO - [feedback_manager.py:267] - Stage 1: Vector search for 'Get recently created orders...'
2025-03-30 10:59:17 - INFO - [feedback_manager.py:322] - Found 4 initial candidates from vector search
2025-03-30 10:59:17 - INFO - [feedback_manager.py:329] - Stage 2: Reranking 4 candidates
2025-03-30 10:59:17 - INFO - [feedback_manager.py:348] - Found 4 candidates with positive reranking scores
2025-03-30 10:59:17 - INFO - [feedback_manager.py:352] - Reranking successful, returning top 2 results
2025-03-30 10:59:17 - INFO - [azure_client.py:35] - SQL generation started for query: 'Get recently created orders'
2025-03-30 10:59:17 - INFO - [azure_client.py:69] - Including schema information (132 chars)
2025-03-30 10:59:17 - INFO - [azure_client.py:97] - Including 2 SQL examples from manual similarity search
2025-03-30 10:59:17 - INFO - [azure_client.py:114] - PROMPT: [{'role': 'system', 'content': "You are an expert SQL assistant. Convert natural language questions into precise, executable SQL queries.\nYour task is to:\n1. Analyze the provided schema carefully, noting table relationships and column types\n2. Generate a SQL query that accurately answers the user's question\n3. Consider performance by selecting only necessary columns\n4. Use appropriate JOIN conditions based on primary/foreign key relationships or provided join conditions\n5. Include a brief explanation of your query\n\nRules:\n- Include table names and column references exactly as provided in the schema\n- Use appropriate SQL functions based on column data types\n- Consider NULL values in your conditions\n- Use table aliases for better readability when joining multiple tables\n- Add column aliases for computed values\n- Format the SQL query with proper indentation\n- If similar queries are provided, strictly use that as format or syntax\n- Return the SQL inside a code block tagged with ```sql\n\nExample output format:\nHere's a query that will [explanation]...\n\n```sql\nSELECT ...\nFROM ...\nWHERE ...\n```"}, {'role': 'user', 'content': "Here's the database schema:\nTable: orders\nDescription: Customer orders and transactions\nColumns: order_id (INTEGER), order_date (TEXT)\nPrimary Key(s): order_id\n"}, {'role': 'user', 'content': 'Here are some similar queries that were previously successful:\nQuestion: Get recently created orders\nSQL: select * from orders qualify row_number() over(order by order_date desc)=1\n\nQuestion: Get recently created orders\nSQL: select * from orders limit 1\n\n'}, {'role': 'user', 'content': 'Convert this question to SQL: Get recently created orders'}]
2025-03-30 10:59:17 - INFO - [llm_engine.py:55] - [SQL_GEN] Completion generation started
2025-03-30 10:59:19 - INFO - [llm_engine.py:92] - [SQL_GEN] Completion generation completed in 1.80s
2025-03-30 10:59:19 - INFO - [azure_client.py:150] - Parsing SQL from model response
2025-03-30 10:59:19 - INFO - [azure_client.py:157] - Found SQL code block in response
2025-03-30 10:59:19 - INFO - [azure_client.py:171] - Extracted SQL query (54 chars) and explanation (345 chars)
2025-03-30 10:59:19 - INFO - [azure_client.py:124] - Generated SQL: SELECT *
FROM orders
ORDER BY order_date DESC
LIMIT 1;
2025-03-30 10:59:19,255 - QUERY: 'Get recently created orders' → SQL: SELECT *
FROM orders
ORDER BY order_date DESC
LIMIT 1;
2025-03-30 10:59:19 - INFO - [azure_client.py:132] - SQL generation completed in 1.81s
2025-03-30 10:59:19 - INFO - [database.py:45] - Executing SQL query: SELECT *
FROM orders
ORDER BY order_date DESC
LIMIT 1;
2025-03-30 10:59:19 - INFO - [database.py:66] - Query returned 1 rows with 5 columns
2025-03-30 10:59:19 - INFO - [database.py:75] - Query processing completed in 0.01s
2025-03-30 10:59:31 - INFO - [llm_engine.py:55] - [INTENT] Completion generation started
2025-03-30 10:59:31 - INFO - [llm_engine.py:92] - [INTENT] Completion generation completed in 0.46s
2025-03-30 10:59:31 - INFO - [database.py:24] - Attempting database connection
2025-03-30 10:59:31 - INFO - [database.py:28] - Database connection established in 0.00s
2025-03-30 10:59:31 - INFO - [llm_engine.py:55] - [TABLE] Completion generation started
2025-03-30 10:59:32 - INFO - [llm_engine.py:92] - [TABLE] Completion generation completed in 0.46s
2025-03-30 10:59:32 - INFO - [llm_engine.py:55] - [COLUMN] Completion generation started
2025-03-30 10:59:33 - INFO - [llm_engine.py:92] - [COLUMN] Completion generation completed in 1.11s
2025-03-30 10:59:33 - INFO - [feedback_manager.py:267] - Stage 1: Vector search for 'get me all customers...'
2025-03-30 10:59:33 - INFO - [feedback_manager.py:322] - Found 4 initial candidates from vector search
2025-03-30 10:59:33 - INFO - [feedback_manager.py:329] - Stage 2: Reranking 4 candidates
2025-03-30 10:59:33 - WARNING - [feedback_manager.py:355] - No candidates with positive reranking scores, falling back to vector search results
2025-03-30 10:59:33 - INFO - [azure_client.py:35] - SQL generation started for query: 'get me all customers'
2025-03-30 10:59:33 - INFO - [azure_client.py:69] - Including schema information (293 chars)
2025-03-30 10:59:33 - INFO - [azure_client.py:97] - Including 2 SQL examples from manual similarity search
2025-03-30 10:59:33 - INFO - [azure_client.py:114] - PROMPT: [{'role': 'system', 'content': "You are an expert SQL assistant. Convert natural language questions into precise, executable SQL queries.\nYour task is to:\n1. Analyze the provided schema carefully, noting table relationships and column types\n2. Generate a SQL query that accurately answers the user's question\n3. Consider performance by selecting only necessary columns\n4. Use appropriate JOIN conditions based on primary/foreign key relationships or provided join conditions\n5. Include a brief explanation of your query\n\nRules:\n- Include table names and column references exactly as provided in the schema\n- Use appropriate SQL functions based on column data types\n- Consider NULL values in your conditions\n- Use table aliases for better readability when joining multiple tables\n- Add column aliases for computed values\n- Format the SQL query with proper indentation\n- If similar queries are provided, strictly use that as format or syntax\n- Return the SQL inside a code block tagged with ```sql\n\nExample output format:\nHere's a query that will [explanation]...\n\n```sql\nSELECT ...\nFROM ...\nWHERE ...\n```"}, {'role': 'user', 'content': "Here's the database schema:\nTable: customers\nDescription: Customer information and profiles\nColumns: customer_id (INTEGER), first_name (TEXT), last_name (TEXT), email (TEXT), phone (TEXT), address (TEXT), city (TEXT), state (TEXT), country (TEXT), postal_code (TEXT), registration_date (TEXT)\nPrimary Key(s): customer_id\n"}, {'role': 'user', 'content': 'Here are some similar queries that were previously successful:\nQuestion: Get recently created orders\nSQL: select * from orders qualify row_number() over(order by order_date desc)=1\n\nQuestion: Get recently created orders\nSQL: select * from orders limit 1\n\n'}, {'role': 'user', 'content': 'Convert this question to SQL: get me all customers'}]
2025-03-30 10:59:33 - INFO - [llm_engine.py:55] - [SQL_GEN] Completion generation started
2025-03-30 10:59:34 - INFO - [llm_engine.py:92] - [SQL_GEN] Completion generation completed in 0.96s
2025-03-30 10:59:34 - INFO - [azure_client.py:150] - Parsing SQL from model response
2025-03-30 10:59:34 - INFO - [azure_client.py:157] - Found SQL code block in response
2025-03-30 10:59:34 - INFO - [azure_client.py:171] - Extracted SQL query (24 chars) and explanation (140 chars)
2025-03-30 10:59:34 - INFO - [azure_client.py:124] - Generated SQL: SELECT *
FROM customers;
2025-03-30 10:59:34,434 - QUERY: 'get me all customers' → SQL: SELECT *
FROM customers;
2025-03-30 10:59:34 - INFO - [azure_client.py:132] - SQL generation completed in 0.97s
2025-03-30 10:59:34 - INFO - [database.py:45] - Executing SQL query: SELECT *
FROM customers;
2025-03-30 10:59:34 - INFO - [database.py:66] - Query returned 5 rows with 11 columns
2025-03-30 10:59:34 - INFO - [database.py:75] - Query processing completed in 0.01s
2025-03-30 11:02:03 - INFO - [app.py:220] - Schema requested for workspace: Default
2025-03-30 11:02:08 - INFO - [app.py:220] - Schema requested for workspace: Default
2025-03-30 11:02:14 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-03-30 11:02:14 - INFO - [feedback_manager.py:43] - Attempting database connection
2025-03-30 11:02:14 - INFO - [feedback_manager.py:47] - Database connection established in 0.00s
2025-03-30 11:02:14 - INFO - [feedback_manager.py:531] - Retrieved 4 samples (page 1, limit 10)
2025-03-30 11:02:15 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-03-30 11:02:15 - INFO - [feedback_manager.py:43] - Attempting database connection
2025-03-30 11:02:15 - INFO - [feedback_manager.py:47] - Database connection established in 0.00s
2025-03-30 11:02:20 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-03-30 11:02:20 - INFO - [feedback_manager.py:43] - Attempting database connection
2025-03-30 11:02:20 - INFO - [feedback_manager.py:47] - Database connection established in 0.00s
2025-03-30 11:02:20 - INFO - [feedback_manager.py:62] - Loading embedding model 'sentence-transformers/all-MiniLM-L12-v2'
2025-03-30 11:02:22 - INFO - [feedback_manager.py:65] - Embedding model loaded in 2.74s
2025-03-30 11:02:22 - INFO - [feedback_manager.py:633] - Updated sample ID 5
2025-03-30 11:02:23 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-03-30 11:02:23 - INFO - [feedback_manager.py:43] - Attempting database connection
2025-03-30 11:02:23 - INFO - [feedback_manager.py:47] - Database connection established in 0.01s
2025-03-30 11:02:23 - INFO - [feedback_manager.py:531] - Retrieved 4 samples (page 1, limit 10)
2025-03-30 11:02:31 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-03-30 11:02:31 - INFO - [feedback_manager.py:43] - Attempting database connection
2025-03-30 11:02:31 - INFO - [feedback_manager.py:47] - Database connection established in 0.00s
2025-03-30 11:02:35 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-03-30 11:02:35 - INFO - [feedback_manager.py:43] - Attempting database connection
2025-03-30 11:02:35 - INFO - [feedback_manager.py:47] - Database connection established in 0.00s
2025-03-30 11:02:35 - INFO - [feedback_manager.py:62] - Loading embedding model 'sentence-transformers/all-MiniLM-L12-v2'
2025-03-30 11:02:37 - INFO - [feedback_manager.py:65] - Embedding model loaded in 2.22s
2025-03-30 11:02:37 - INFO - [feedback_manager.py:633] - Updated sample ID 4
2025-03-30 11:02:37 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-03-30 11:02:37 - INFO - [feedback_manager.py:43] - Attempting database connection
2025-03-30 11:02:37 - INFO - [feedback_manager.py:47] - Database connection established in 0.00s
2025-03-30 11:02:37 - INFO - [feedback_manager.py:531] - Retrieved 4 samples (page 1, limit 10)
2025-03-30 11:06:17 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-03-30 11:06:17 - INFO - [feedback_manager.py:43] - Attempting database connection
2025-03-30 11:06:17 - INFO - [feedback_manager.py:47] - Database connection established in 0.01s
2025-03-30 11:06:17 - INFO - [feedback_manager.py:62] - Loading embedding model 'sentence-transformers/all-MiniLM-L12-v2'
2025-03-30 11:06:19 - INFO - [feedback_manager.py:65] - Embedding model loaded in 2.13s
2025-03-30 11:06:19 - INFO - [feedback_manager.py:168] - Saved manual sample for query: 'find me numbers...'
2025-03-30 11:06:19 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-03-30 11:06:19 - INFO - [feedback_manager.py:43] - Attempting database connection
2025-03-30 11:06:19 - INFO - [feedback_manager.py:47] - Database connection established in 0.00s
2025-03-30 11:06:19 - INFO - [feedback_manager.py:531] - Retrieved 5 samples (page 1, limit 10)
2025-03-30 11:15:33 - INFO - [app.py:220] - Schema requested for workspace: Default
2025-03-30 11:15:36 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-03-30 11:15:36 - INFO - [feedback_manager.py:43] - Attempting database connection
2025-03-30 11:15:36 - INFO - [feedback_manager.py:47] - Database connection established in 0.01s
2025-03-30 11:15:36 - INFO - [feedback_manager.py:531] - Retrieved 5 samples (page 1, limit 10)
2025-03-30 11:19:14 - INFO - [app.py:220] - Schema requested for workspace: Default
2025-03-30 11:19:19 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-03-30 11:19:19 - INFO - [feedback_manager.py:43] - Attempting database connection
2025-03-30 11:19:19 - INFO - [feedback_manager.py:47] - Database connection established in 0.00s
2025-03-30 11:19:19 - INFO - [feedback_manager.py:531] - Retrieved 5 samples (page 1, limit 10)
2025-03-30 11:19:19 - INFO - [app.py:220] - Schema requested for workspace: Default
2025-03-30 11:19:45 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-03-30 11:19:45 - INFO - [feedback_manager.py:43] - Attempting database connection
2025-03-30 11:19:45 - INFO - [feedback_manager.py:47] - Database connection established in 0.00s
2025-03-30 11:19:45 - INFO - [feedback_manager.py:531] - Retrieved 5 samples (page 1, limit 10)
2025-03-30 11:19:47 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-03-30 11:19:47 - INFO - [feedback_manager.py:43] - Attempting database connection
2025-03-30 11:19:47 - INFO - [feedback_manager.py:47] - Database connection established in 0.00s
2025-03-30 11:19:50 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-03-30 11:19:50 - INFO - [feedback_manager.py:43] - Attempting database connection
2025-03-30 11:19:50 - INFO - [feedback_manager.py:47] - Database connection established in 0.00s
2025-03-30 11:19:50 - INFO - [feedback_manager.py:659] - Deleted sample ID 6
2025-03-30 11:19:50 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-03-30 11:19:50 - INFO - [feedback_manager.py:43] - Attempting database connection
2025-03-30 11:19:50 - INFO - [feedback_manager.py:47] - Database connection established in 0.00s
2025-03-30 11:19:50 - INFO - [feedback_manager.py:531] - Retrieved 4 samples (page 1, limit 10)
2025-03-30 11:20:03 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-03-30 11:20:03 - INFO - [feedback_manager.py:43] - Attempting database connection
2025-03-30 11:20:03 - INFO - [feedback_manager.py:47] - Database connection established in 0.00s
2025-03-30 11:20:03 - INFO - [feedback_manager.py:531] - Retrieved 4 samples (page 1, limit 10)
2025-03-30 11:20:04 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-03-30 11:20:04 - INFO - [feedback_manager.py:43] - Attempting database connection
2025-03-30 11:20:04 - INFO - [feedback_manager.py:47] - Database connection established in 0.00s
2025-03-30 11:20:04 - INFO - [feedback_manager.py:531] - Retrieved 0 samples (page 1, limit 10)
2025-03-30 11:20:06 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-03-30 11:20:06 - INFO - [feedback_manager.py:43] - Attempting database connection
2025-03-30 11:20:06 - INFO - [feedback_manager.py:47] - Database connection established in 0.00s
2025-03-30 11:20:06 - INFO - [feedback_manager.py:531] - Retrieved 4 samples (page 1, limit 10)
2025-03-30 11:20:10 - INFO - [app.py:220] - Schema requested for workspace: Default
2025-03-30 11:20:21 - INFO - [llm_engine.py:55] - [INTENT] Completion generation started
2025-03-30 11:20:21 - ERROR - [llm_engine.py:98] - [INTENT] Completion generation error after 0.03s: ('Connection aborted.', RemoteDisconnected('Remote end closed connection without response'))
Traceback (most recent call last):
  File "/home/vijay/text2sql/src/utils/llm_engine.py", line 72, in generate_completion
    response = self.client.complete(
               ^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/ai/inference/_patch.py", line 728, in complete
    pipeline_response: PipelineResponse = self._client._pipeline.run(  # pylint: disable=protected-access
                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/_base.py", line 240, in run
    return first_node.send(pipeline_request)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/_base.py", line 96, in send
    response = self.next.send(request)
               ^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/_base.py", line 96, in send
    response = self.next.send(request)
               ^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/_base.py", line 96, in send
    response = self.next.send(request)
               ^^^^^^^^^^^^^^^^^^^^^^^
  [Previous line repeated 2 more times]
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/policies/_redirect.py", line 204, in send
    response = self.next.send(request)
               ^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/policies/_retry.py", line 573, in send
    raise err
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/policies/_retry.py", line 551, in send
    response = self.next.send(request)
               ^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/_base.py", line 96, in send
    response = self.next.send(request)
               ^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/_base.py", line 96, in send
    response = self.next.send(request)
               ^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/_base.py", line 96, in send
    response = self.next.send(request)
               ^^^^^^^^^^^^^^^^^^^^^^^
  [Previous line repeated 3 more times]
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/_base.py", line 128, in send
    self._sender.send(request.http_request, **request.context.options),
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/transport/_requests_basic.py", line 409, in send
    raise error
azure.core.exceptions.ServiceResponseError: ('Connection aborted.', RemoteDisconnected('Remote end closed connection without response'))
2025-03-30 11:20:21 - INFO - [database.py:24] - Attempting database connection
2025-03-30 11:20:21 - INFO - [database.py:28] - Database connection established in 0.00s
2025-03-30 11:20:21 - INFO - [llm_engine.py:55] - [TABLE] Completion generation started
2025-03-30 11:20:21 - ERROR - [llm_engine.py:98] - [TABLE] Completion generation error after 0.03s: ('Connection aborted.', RemoteDisconnected('Remote end closed connection without response'))
Traceback (most recent call last):
  File "/home/vijay/text2sql/src/utils/llm_engine.py", line 72, in generate_completion
    response = self.client.complete(
               ^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/ai/inference/_patch.py", line 728, in complete
    pipeline_response: PipelineResponse = self._client._pipeline.run(  # pylint: disable=protected-access
                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/_base.py", line 240, in run
    return first_node.send(pipeline_request)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/_base.py", line 96, in send
    response = self.next.send(request)
               ^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/_base.py", line 96, in send
    response = self.next.send(request)
               ^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/_base.py", line 96, in send
    response = self.next.send(request)
               ^^^^^^^^^^^^^^^^^^^^^^^
  [Previous line repeated 2 more times]
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/policies/_redirect.py", line 204, in send
    response = self.next.send(request)
               ^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/policies/_retry.py", line 573, in send
    raise err
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/policies/_retry.py", line 551, in send
    response = self.next.send(request)
               ^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/_base.py", line 96, in send
    response = self.next.send(request)
               ^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/_base.py", line 96, in send
    response = self.next.send(request)
               ^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/_base.py", line 96, in send
    response = self.next.send(request)
               ^^^^^^^^^^^^^^^^^^^^^^^
  [Previous line repeated 3 more times]
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/_base.py", line 128, in send
    self._sender.send(request.http_request, **request.context.options),
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/transport/_requests_basic.py", line 409, in send
    raise error
azure.core.exceptions.ServiceResponseError: ('Connection aborted.', RemoteDisconnected('Remote end closed connection without response'))
2025-03-30 11:20:21 - INFO - [llm_engine.py:55] - [COLUMN] Completion generation started
2025-03-30 11:20:21 - ERROR - [llm_engine.py:98] - [COLUMN] Completion generation error after 0.01s: ('Connection aborted.', RemoteDisconnected('Remote end closed connection without response'))
Traceback (most recent call last):
  File "/home/vijay/text2sql/src/utils/llm_engine.py", line 72, in generate_completion
    response = self.client.complete(
               ^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/ai/inference/_patch.py", line 728, in complete
    pipeline_response: PipelineResponse = self._client._pipeline.run(  # pylint: disable=protected-access
                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/_base.py", line 240, in run
    return first_node.send(pipeline_request)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/_base.py", line 96, in send
    response = self.next.send(request)
               ^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/_base.py", line 96, in send
    response = self.next.send(request)
               ^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/_base.py", line 96, in send
    response = self.next.send(request)
               ^^^^^^^^^^^^^^^^^^^^^^^
  [Previous line repeated 2 more times]
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/policies/_redirect.py", line 204, in send
    response = self.next.send(request)
               ^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/policies/_retry.py", line 573, in send
    raise err
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/policies/_retry.py", line 551, in send
    response = self.next.send(request)
               ^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/_base.py", line 96, in send
    response = self.next.send(request)
               ^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/_base.py", line 96, in send
    response = self.next.send(request)
               ^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/_base.py", line 96, in send
    response = self.next.send(request)
               ^^^^^^^^^^^^^^^^^^^^^^^
  [Previous line repeated 3 more times]
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/_base.py", line 128, in send
    self._sender.send(request.http_request, **request.context.options),
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/transport/_requests_basic.py", line 409, in send
    raise error
azure.core.exceptions.ServiceResponseError: ('Connection aborted.', RemoteDisconnected('Remote end closed connection without response'))
2025-03-30 11:20:21 - INFO - [feedback_manager.py:267] - Stage 1: Vector search for 'get me all customers...'
2025-03-30 11:20:21 - INFO - [feedback_manager.py:322] - Found 4 initial candidates from vector search
2025-03-30 11:20:21 - INFO - [feedback_manager.py:329] - Stage 2: Reranking 4 candidates
2025-03-30 11:20:21 - WARNING - [feedback_manager.py:355] - No candidates with positive reranking scores, falling back to vector search results
2025-03-30 11:20:21 - INFO - [azure_client.py:35] - SQL generation started for query: 'get me all customers'
2025-03-30 11:20:21 - INFO - [azure_client.py:69] - Including schema information (1327 chars)
2025-03-30 11:20:21 - INFO - [azure_client.py:76] - Including 1 join conditions
2025-03-30 11:20:21 - INFO - [azure_client.py:97] - Including 2 SQL examples from manual similarity search
2025-03-30 11:20:21 - INFO - [azure_client.py:114] - PROMPT: [{'role': 'system', 'content': "You are an expert SQL assistant. Convert natural language questions into precise, executable SQL queries.\nYour task is to:\n1. Analyze the provided schema carefully, noting table relationships and column types\n2. Generate a SQL query that accurately answers the user's question\n3. Consider performance by selecting only necessary columns\n4. Use appropriate JOIN conditions based on primary/foreign key relationships or provided join conditions\n5. Include a brief explanation of your query\n\nRules:\n- Include table names and column references exactly as provided in the schema\n- Use appropriate SQL functions based on column data types\n- Consider NULL values in your conditions\n- Use table aliases for better readability when joining multiple tables\n- Add column aliases for computed values\n- Format the SQL query with proper indentation\n- If similar queries are provided, strictly use that as format or syntax\n- Return the SQL inside a code block tagged with ```sql\n\nExample output format:\nHere's a query that will [explanation]...\n\n```sql\nSELECT ...\nFROM ...\nWHERE ...\n```"}, {'role': 'user', 'content': "Here's the database schema:\nTable: customers\nDescription: Customer information and profiles\nColumns: customer_id (INTEGER) - Unique customer identifier, first_name (TEXT) - Customer's first name, last_name (TEXT) - Customer's last name, email (TEXT) - Customer's email address (unique), phone (TEXT) - Customer's phone number, address (TEXT) - Customer's street address, city (TEXT) - Customer's city, state (TEXT) - Customer's state/province, country (TEXT) - Customer's country, postal_code (TEXT) - Customer's postal/zip code, registration_date (TEXT) - Date when customer registered\nPrimary Key(s): customer_id\n\nTable: products\nDescription: Product catalog and inventory\nColumns: product_id (INTEGER) - Unique product identifier, name (TEXT) - Product name, description (TEXT) - Product description, category (TEXT) - Product category, price (REAL) - Product selling price, cost (REAL) - Product cost price, stock_quantity (INTEGER) - Available stock quantity\nPrimary Key(s): product_id\n\nTable: orders\nDescription: Customer orders and transactions\nColumns: order_id (INTEGER) - Unique order identifier, customer_id (INTEGER) - Reference to customer who placed the order, order_date (TEXT) - Date when order was placed, status (TEXT) - Order status (pending, shipped, completed, etc.), total_amount (REAL) - Total order amount\nPrimary Key(s): order_id\n"}, {'role': 'user', 'content': 'Use the following pre-defined join conditions when joining these tables:\n- When joining customers with orders, use: INNER JOIN orders ON customers.customer_id = orders.customer_id\n'}, {'role': 'user', 'content': 'Here are some similar queries that were previously successful:\nQuestion: Get recently created orders\nSQL: select * from orders qualify row_number() over(order by order_date desc)=1\n\nQuestion: Get recently created orders\nSQL: select * from orders limit 1\n\n'}, {'role': 'user', 'content': 'Convert this question to SQL: get me all customers'}]
2025-03-30 11:20:21 - INFO - [llm_engine.py:55] - [SQL_GEN] Completion generation started
2025-03-30 11:20:22 - ERROR - [llm_engine.py:98] - [SQL_GEN] Completion generation error after 0.24s: ('Connection aborted.', RemoteDisconnected('Remote end closed connection without response'))
Traceback (most recent call last):
  File "/home/vijay/text2sql/src/utils/llm_engine.py", line 72, in generate_completion
    response = self.client.complete(
               ^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/ai/inference/_patch.py", line 728, in complete
    pipeline_response: PipelineResponse = self._client._pipeline.run(  # pylint: disable=protected-access
                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/_base.py", line 240, in run
    return first_node.send(pipeline_request)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/_base.py", line 96, in send
    response = self.next.send(request)
               ^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/_base.py", line 96, in send
    response = self.next.send(request)
               ^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/_base.py", line 96, in send
    response = self.next.send(request)
               ^^^^^^^^^^^^^^^^^^^^^^^
  [Previous line repeated 2 more times]
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/policies/_redirect.py", line 204, in send
    response = self.next.send(request)
               ^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/policies/_retry.py", line 573, in send
    raise err
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/policies/_retry.py", line 551, in send
    response = self.next.send(request)
               ^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/_base.py", line 96, in send
    response = self.next.send(request)
               ^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/_base.py", line 96, in send
    response = self.next.send(request)
               ^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/_base.py", line 96, in send
    response = self.next.send(request)
               ^^^^^^^^^^^^^^^^^^^^^^^
  [Previous line repeated 3 more times]
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/_base.py", line 128, in send
    self._sender.send(request.http_request, **request.context.options),
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/transport/_requests_basic.py", line 409, in send
    raise error
azure.core.exceptions.ServiceResponseError: ('Connection aborted.', RemoteDisconnected('Remote end closed connection without response'))
2025-03-30 11:20:22 - ERROR - [azure_client.py:138] - SQL generation error after 0.25s: ('Connection aborted.', RemoteDisconnected('Remote end closed connection without response'))
Traceback (most recent call last):
  File "/home/vijay/text2sql/src/utils/azure_client.py", line 117, in generate_sql
    raw_response = self.llm_engine.generate_completion(messages, log_prefix="SQL_GEN")
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/text2sql/src/utils/llm_engine.py", line 72, in generate_completion
    response = self.client.complete(
               ^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/ai/inference/_patch.py", line 728, in complete
    pipeline_response: PipelineResponse = self._client._pipeline.run(  # pylint: disable=protected-access
                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/_base.py", line 240, in run
    return first_node.send(pipeline_request)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/_base.py", line 96, in send
    response = self.next.send(request)
               ^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/_base.py", line 96, in send
    response = self.next.send(request)
               ^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/_base.py", line 96, in send
    response = self.next.send(request)
               ^^^^^^^^^^^^^^^^^^^^^^^
  [Previous line repeated 2 more times]
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/policies/_redirect.py", line 204, in send
    response = self.next.send(request)
               ^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/policies/_retry.py", line 573, in send
    raise err
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/policies/_retry.py", line 551, in send
    response = self.next.send(request)
               ^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/_base.py", line 96, in send
    response = self.next.send(request)
               ^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/_base.py", line 96, in send
    response = self.next.send(request)
               ^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/_base.py", line 96, in send
    response = self.next.send(request)
               ^^^^^^^^^^^^^^^^^^^^^^^
  [Previous line repeated 3 more times]
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/_base.py", line 128, in send
    self._sender.send(request.http_request, **request.context.options),
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/transport/_requests_basic.py", line 409, in send
    raise error
azure.core.exceptions.ServiceResponseError: ('Connection aborted.', RemoteDisconnected('Remote end closed connection without response'))
2025-03-30 11:20:41 - INFO - [azure_client.py:186] - Closing Azure AI client connection
2025-03-30 11:20:41 - INFO - [database.py:238] - Closing database connection
2025-03-30 11:20:41 - INFO - [feedback_manager.py:668] - Closing database connection
2025-03-30 11:20:47 - INFO - [app.py:55] - Debug logging enabled for SQL generator and agents
2025-03-30 11:20:47 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-30 11:20:47 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-30 11:20:47 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-30 11:20:47 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-30 11:20:47 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-30 11:20:47 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-30 11:20:47 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-30 11:20:47 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-30 11:20:47 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-30 11:20:47 - INFO - [azure_client.py:11] - Initializing Azure AI Client using LLM Engine
2025-03-30 11:20:47 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-30 11:20:47 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-30 11:20:47 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-30 11:20:47 - INFO - [azure_client.py:17] - Azure AI Client initialized successfully
2025-03-30 11:20:47 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-30 11:20:47 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-03-30 11:20:50 - INFO - [app.py:55] - Debug logging enabled for SQL generator and agents
2025-03-30 11:20:50 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-30 11:20:50 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-30 11:20:50 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-30 11:20:50 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-30 11:20:50 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-30 11:20:50 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-30 11:20:50 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-30 11:20:50 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-30 11:20:50 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-30 11:20:50 - INFO - [azure_client.py:11] - Initializing Azure AI Client using LLM Engine
2025-03-30 11:20:50 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-30 11:20:50 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-30 11:20:50 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-30 11:20:50 - INFO - [azure_client.py:17] - Azure AI Client initialized successfully
2025-03-30 11:20:50 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-30 11:20:50 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-03-30 11:20:59 - INFO - [llm_engine.py:55] - [INTENT] Completion generation started
2025-03-30 11:21:01 - INFO - [llm_engine.py:92] - [INTENT] Completion generation completed in 1.70s
2025-03-30 11:21:01 - INFO - [database.py:24] - Attempting database connection
2025-03-30 11:21:01 - INFO - [database.py:28] - Database connection established in 0.02s
2025-03-30 11:21:01 - INFO - [llm_engine.py:55] - [TABLE] Completion generation started
2025-03-30 11:21:02 - INFO - [llm_engine.py:92] - [TABLE] Completion generation completed in 1.01s
2025-03-30 11:21:02 - INFO - [llm_engine.py:55] - [COLUMN] Completion generation started
2025-03-30 11:21:04 - INFO - [llm_engine.py:92] - [COLUMN] Completion generation completed in 2.14s
2025-03-30 11:21:04 - INFO - [feedback_manager.py:43] - Attempting database connection
2025-03-30 11:21:04 - INFO - [feedback_manager.py:47] - Database connection established in 0.01s
2025-03-30 11:21:04 - INFO - [feedback_manager.py:267] - Stage 1: Vector search for 'get me all customers...'
2025-03-30 11:21:04 - INFO - [feedback_manager.py:62] - Loading embedding model 'sentence-transformers/all-MiniLM-L12-v2'
2025-03-30 11:21:07 - INFO - [feedback_manager.py:65] - Embedding model loaded in 2.36s
2025-03-30 11:21:07 - INFO - [feedback_manager.py:322] - Found 4 initial candidates from vector search
2025-03-30 11:21:07 - INFO - [feedback_manager.py:329] - Stage 2: Reranking 4 candidates
2025-03-30 11:21:07 - INFO - [feedback_manager.py:109] - Loading reranking model 'cross-encoder/ms-marco-MiniLM-L-6-v2'
2025-03-30 11:21:08 - INFO - [feedback_manager.py:113] - Reranking model loaded in 1.16s
2025-03-30 11:21:08 - WARNING - [feedback_manager.py:355] - No candidates with positive reranking scores, falling back to vector search results
2025-03-30 11:21:08 - INFO - [azure_client.py:35] - SQL generation started for query: 'get me all customers'
2025-03-30 11:21:08 - INFO - [azure_client.py:69] - Including schema information (293 chars)
2025-03-30 11:21:08 - INFO - [azure_client.py:97] - Including 2 SQL examples from manual similarity search
2025-03-30 11:21:08 - INFO - [azure_client.py:114] - PROMPT: [{'role': 'system', 'content': "You are an expert SQL assistant. Convert natural language questions into precise, executable SQL queries.\nYour task is to:\n1. Analyze the provided schema carefully, noting table relationships and column types\n2. Generate a SQL query that accurately answers the user's question\n3. Consider performance by selecting only necessary columns\n4. Use appropriate JOIN conditions based on primary/foreign key relationships or provided join conditions\n5. Include a brief explanation of your query\n\nRules:\n- Include table names and column references exactly as provided in the schema\n- Use appropriate SQL functions based on column data types\n- Consider NULL values in your conditions\n- Use table aliases for better readability when joining multiple tables\n- Add column aliases for computed values\n- Format the SQL query with proper indentation\n- If similar queries are provided, strictly use that as format or syntax\n- Return the SQL inside a code block tagged with ```sql\n\nExample output format:\nHere's a query that will [explanation]...\n\n```sql\nSELECT ...\nFROM ...\nWHERE ...\n```"}, {'role': 'user', 'content': "Here's the database schema:\nTable: customers\nDescription: Customer information and profiles\nColumns: customer_id (INTEGER), first_name (TEXT), last_name (TEXT), email (TEXT), phone (TEXT), address (TEXT), city (TEXT), state (TEXT), country (TEXT), postal_code (TEXT), registration_date (TEXT)\nPrimary Key(s): customer_id\n"}, {'role': 'user', 'content': 'Here are some similar queries that were previously successful:\nQuestion: Get recently created orders\nSQL: select * from orders qualify row_number() over(order by order_date desc)=1\n\nQuestion: Get recently created orders\nSQL: select * from orders limit 1\n\n'}, {'role': 'user', 'content': 'Convert this question to SQL: get me all customers'}]
2025-03-30 11:21:08 - INFO - [llm_engine.py:55] - [SQL_GEN] Completion generation started
2025-03-30 11:21:10 - INFO - [llm_engine.py:92] - [SQL_GEN] Completion generation completed in 1.79s
2025-03-30 11:21:10 - INFO - [azure_client.py:150] - Parsing SQL from model response
2025-03-30 11:21:10 - INFO - [azure_client.py:157] - Found SQL code block in response
2025-03-30 11:21:10 - INFO - [azure_client.py:171] - Extracted SQL query (24 chars) and explanation (203 chars)
2025-03-30 11:21:10 - INFO - [azure_client.py:124] - Generated SQL: SELECT *
FROM customers;
2025-03-30 11:21:10,274 - QUERY: 'get me all customers' → SQL: SELECT *
FROM customers;
2025-03-30 11:21:10 - INFO - [azure_client.py:132] - SQL generation completed in 1.81s
2025-03-30 11:21:10 - INFO - [database.py:45] - Executing SQL query: SELECT *
FROM customers;
2025-03-30 11:21:10 - INFO - [database.py:66] - Query returned 5 rows with 11 columns
2025-03-30 11:21:10 - INFO - [database.py:75] - Query processing completed in 0.02s
2025-03-30 13:37:25 - INFO - [app.py:220] - Schema requested for workspace: Default
2025-03-30 13:38:33 - INFO - [app.py:113] - User explicitly specified tables: customers
2025-03-30 13:38:33 - INFO - [llm_engine.py:55] - [INTENT] Completion generation started
2025-03-30 13:38:33 - ERROR - [llm_engine.py:98] - [INTENT] Completion generation error after 0.22s: ('Connection aborted.', RemoteDisconnected('Remote end closed connection without response'))
Traceback (most recent call last):
  File "/home/vijay/text2sql/src/utils/llm_engine.py", line 72, in generate_completion
    response = self.client.complete(
               ^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/ai/inference/_patch.py", line 728, in complete
    pipeline_response: PipelineResponse = self._client._pipeline.run(  # pylint: disable=protected-access
                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/_base.py", line 240, in run
    return first_node.send(pipeline_request)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/_base.py", line 96, in send
    response = self.next.send(request)
               ^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/_base.py", line 96, in send
    response = self.next.send(request)
               ^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/_base.py", line 96, in send
    response = self.next.send(request)
               ^^^^^^^^^^^^^^^^^^^^^^^
  [Previous line repeated 2 more times]
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/policies/_redirect.py", line 204, in send
    response = self.next.send(request)
               ^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/policies/_retry.py", line 573, in send
    raise err
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/policies/_retry.py", line 551, in send
    response = self.next.send(request)
               ^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/_base.py", line 96, in send
    response = self.next.send(request)
               ^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/_base.py", line 96, in send
    response = self.next.send(request)
               ^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/_base.py", line 96, in send
    response = self.next.send(request)
               ^^^^^^^^^^^^^^^^^^^^^^^
  [Previous line repeated 3 more times]
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/_base.py", line 128, in send
    self._sender.send(request.http_request, **request.context.options),
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/transport/_requests_basic.py", line 409, in send
    raise error
azure.core.exceptions.ServiceResponseError: ('Connection aborted.', RemoteDisconnected('Remote end closed connection without response'))
2025-03-30 13:38:33 - INFO - [database.py:24] - Attempting database connection
2025-03-30 13:38:33 - INFO - [database.py:28] - Database connection established in 0.00s
2025-03-30 13:38:33 - INFO - [llm_engine.py:55] - [COLUMN] Completion generation started
2025-03-30 13:38:33 - ERROR - [llm_engine.py:98] - [COLUMN] Completion generation error after 0.03s: ('Connection aborted.', RemoteDisconnected('Remote end closed connection without response'))
Traceback (most recent call last):
  File "/home/vijay/text2sql/src/utils/llm_engine.py", line 72, in generate_completion
    response = self.client.complete(
               ^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/ai/inference/_patch.py", line 728, in complete
    pipeline_response: PipelineResponse = self._client._pipeline.run(  # pylint: disable=protected-access
                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/_base.py", line 240, in run
    return first_node.send(pipeline_request)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/_base.py", line 96, in send
    response = self.next.send(request)
               ^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/_base.py", line 96, in send
    response = self.next.send(request)
               ^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/_base.py", line 96, in send
    response = self.next.send(request)
               ^^^^^^^^^^^^^^^^^^^^^^^
  [Previous line repeated 2 more times]
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/policies/_redirect.py", line 204, in send
    response = self.next.send(request)
               ^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/policies/_retry.py", line 573, in send
    raise err
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/policies/_retry.py", line 551, in send
    response = self.next.send(request)
               ^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/_base.py", line 96, in send
    response = self.next.send(request)
               ^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/_base.py", line 96, in send
    response = self.next.send(request)
               ^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/_base.py", line 96, in send
    response = self.next.send(request)
               ^^^^^^^^^^^^^^^^^^^^^^^
  [Previous line repeated 3 more times]
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/_base.py", line 128, in send
    self._sender.send(request.http_request, **request.context.options),
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/transport/_requests_basic.py", line 409, in send
    raise error
azure.core.exceptions.ServiceResponseError: ('Connection aborted.', RemoteDisconnected('Remote end closed connection without response'))
2025-03-30 13:38:33 - INFO - [feedback_manager.py:267] - Stage 1: Vector search for 'table customers  hello...'
2025-03-30 13:38:33 - INFO - [feedback_manager.py:322] - Found 4 initial candidates from vector search
2025-03-30 13:38:33 - INFO - [feedback_manager.py:329] - Stage 2: Reranking 4 candidates
2025-03-30 13:38:33 - WARNING - [feedback_manager.py:355] - No candidates with positive reranking scores, falling back to vector search results
2025-03-30 13:38:33 - INFO - [azure_client.py:35] - SQL generation started for query: 'table customers  hello'
2025-03-30 13:38:33 - INFO - [azure_client.py:69] - Including schema information (587 chars)
2025-03-30 13:38:33 - INFO - [azure_client.py:97] - Including 2 SQL examples from manual similarity search
2025-03-30 13:38:33 - INFO - [azure_client.py:114] - PROMPT: [{'role': 'system', 'content': "You are an expert SQL assistant. Convert natural language questions into precise, executable SQL queries.\nYour task is to:\n1. Analyze the provided schema carefully, noting table relationships and column types\n2. Generate a SQL query that accurately answers the user's question\n3. Consider performance by selecting only necessary columns\n4. Use appropriate JOIN conditions based on primary/foreign key relationships or provided join conditions\n5. Include a brief explanation of your query\n\nRules:\n- Include table names and column references exactly as provided in the schema\n- Use appropriate SQL functions based on column data types\n- Consider NULL values in your conditions\n- Use table aliases for better readability when joining multiple tables\n- Add column aliases for computed values\n- Format the SQL query with proper indentation\n- If similar queries are provided, strictly use that as format or syntax\n- Return the SQL inside a code block tagged with ```sql\n\nExample output format:\nHere's a query that will [explanation]...\n\n```sql\nSELECT ...\nFROM ...\nWHERE ...\n```"}, {'role': 'user', 'content': "Here's the database schema:\nTable: customers\nDescription: Customer information and profiles\nColumns: customer_id (INTEGER) - Unique customer identifier, first_name (TEXT) - Customer's first name, last_name (TEXT) - Customer's last name, email (TEXT) - Customer's email address (unique), phone (TEXT) - Customer's phone number, address (TEXT) - Customer's street address, city (TEXT) - Customer's city, state (TEXT) - Customer's state/province, country (TEXT) - Customer's country, postal_code (TEXT) - Customer's postal/zip code, registration_date (TEXT) - Date when customer registered\nPrimary Key(s): customer_id\n"}, {'role': 'user', 'content': 'Here are some similar queries that were previously successful:\nQuestion: Get recently created orders\nSQL: select * from orders qualify row_number() over(order by order_date desc)=1\n\nQuestion: Get recently created orders\nSQL: select * from orders limit 1\n\n'}, {'role': 'user', 'content': 'Convert this question to SQL: table customers  hello'}]
2025-03-30 13:38:33 - INFO - [llm_engine.py:55] - [SQL_GEN] Completion generation started
2025-03-30 13:38:35 - INFO - [llm_engine.py:92] - [SQL_GEN] Completion generation completed in 2.56s
2025-03-30 13:38:35 - INFO - [azure_client.py:150] - Parsing SQL from model response
2025-03-30 13:38:35 - INFO - [azure_client.py:174] - No SQL code block found, using entire response as SQL
2025-03-30 13:38:36 - INFO - [azure_client.py:124] - Generated SQL: I apologize for any confusion, but it appears there might be a misunderstanding in your request. To assist you best, could you please provide more details or clarify what you mean by "table customers hello"? Are you looking to select all columns from the 'customers' table, or is there a specific operation you'd like to perform on this table? Any additional context or requirements would be very helpful in crafting the correct SQL query for your needs.
2025-03-30 13:38:36,002 - QUERY: 'table customers  hello' → SQL: I apologize for any confusion, but it appears there might be a misunderstanding in your request. To assist you best, could you please provide more details or clarify what you mean by "table customers hello"? Are you looking to select all columns from the 'customers' table, or is there a specific operation you'd like to perform on this table? Any additional context or requirements would be very helpful in crafting the correct SQL query for your needs.
2025-03-30 13:38:36 - INFO - [azure_client.py:132] - SQL generation completed in 2.57s
2025-03-30 13:38:36 - INFO - [database.py:45] - Executing SQL query: I apologize for any confusion, but it appears there might be a misunderstanding in your request. To assist you best, could you please provide more details or clarify what you mean by "table customers hello"? Are you looking to select all columns from the 'customers' table, or is there a specific operation you'd like to perform on this table? Any additional context or requirements would be very helpful in crafting the correct SQL query for your needs.
2025-03-30 13:38:36 - ERROR - [database.py:102] - SQL error after 0.00s: (sqlite3.OperationalError) near "I": syntax error
[SQL: I apologize for any confusion, but it appears there might be a misunderstanding in your request. To assist you best, could you please provide more details or clarify what you mean by "table customers hello"? Are you looking to select all columns from the 'customers' table, or is there a specific operation you'd like to perform on this table? Any additional context or requirements would be very helpful in crafting the correct SQL query for your needs.]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/sqlalchemy/engine/default.py", line 748, in do_execute
    cursor.execute(statement, parameters)
sqlite3.OperationalError: near "I": syntax error

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/vijay/text2sql/src/utils/database.py", line 58, in execute_query
    result = conn.execute(text(sql_query))
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 1414, in execute
    return meth(
           ^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/sqlalchemy/sql/elements.py", line 486, in _execute_on_connection
    return connection._execute_clauseelement(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
          ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 1842, in _execute_context
    return self._exec_single_context(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 2326, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/sqlalchemy/engine/default.py", line 748, in do_execute
    cursor.execute(statement, parameters)
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) near "I": syntax error
[SQL: I apologize for any confusion, but it appears there might be a misunderstanding in your request. To assist you best, could you please provide more details or clarify what you mean by "table customers hello"? Are you looking to select all columns from the 'customers' table, or is there a specific operation you'd like to perform on this table? Any additional context or requirements would be very helpful in crafting the correct SQL query for your needs.]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-30 13:39:01 - INFO - [app.py:220] - Schema requested for workspace: Default
2025-03-30 13:39:39 - INFO - [app.py:113] - User explicitly specified tables: customers
2025-03-30 13:39:39 - INFO - [llm_engine.py:55] - [INTENT] Completion generation started
2025-03-30 13:39:41 - INFO - [llm_engine.py:92] - [INTENT] Completion generation completed in 1.69s
2025-03-30 13:40:08 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-03-30 13:40:08 - INFO - [feedback_manager.py:43] - Attempting database connection
2025-03-30 13:40:08 - INFO - [feedback_manager.py:47] - Database connection established in 0.00s
2025-03-30 13:40:08 - INFO - [feedback_manager.py:531] - Retrieved 4 samples (page 1, limit 10)
2025-03-30 13:42:15 - INFO - [app.py:113] - User explicitly specified tables: customers, order_items
2025-03-30 13:42:15 - INFO - [llm_engine.py:55] - [INTENT] Completion generation started
2025-03-30 13:42:16 - INFO - [llm_engine.py:92] - [INTENT] Completion generation completed in 0.48s
2025-03-30 13:45:33 - INFO - [app.py:113] - User explicitly specified tables: customers
2025-03-30 13:45:33 - INFO - [llm_engine.py:55] - [INTENT] Completion generation started
2025-03-30 13:45:34 - INFO - [llm_engine.py:92] - [INTENT] Completion generation completed in 0.48s
2025-03-30 13:45:51 - INFO - [app.py:113] - User explicitly specified tables: customers, orders
2025-03-30 13:45:51 - INFO - [llm_engine.py:55] - [INTENT] Completion generation started
2025-03-30 13:45:51 - INFO - [llm_engine.py:92] - [INTENT] Completion generation completed in 0.40s
2025-03-30 13:48:17 - INFO - [app.py:113] - User explicitly specified tables: customers, orders
2025-03-30 13:48:17 - INFO - [llm_engine.py:55] - [INTENT] Completion generation started
2025-03-30 13:48:17 - INFO - [llm_engine.py:92] - [INTENT] Completion generation completed in 0.48s
2025-03-30 13:49:07 - INFO - [app.py:113] - User explicitly specified tables: customers, orders
2025-03-30 13:49:07 - INFO - [llm_engine.py:55] - [INTENT] Completion generation started
2025-03-30 13:49:08 - INFO - [llm_engine.py:92] - [INTENT] Completion generation completed in 0.60s
2025-03-30 13:49:14 - INFO - [app.py:113] - User explicitly specified tables: customers, orders
2025-03-30 13:49:14 - INFO - [llm_engine.py:55] - [INTENT] Completion generation started
2025-03-30 13:49:15 - INFO - [llm_engine.py:92] - [INTENT] Completion generation completed in 0.43s
2025-03-30 13:49:22 - INFO - [app.py:113] - User explicitly specified tables: customers, orders, order_items
2025-03-30 13:49:22 - INFO - [llm_engine.py:55] - [INTENT] Completion generation started
2025-03-30 13:49:23 - INFO - [llm_engine.py:92] - [INTENT] Completion generation completed in 0.44s
2025-03-30 13:56:16 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-03-30 13:56:16 - INFO - [feedback_manager.py:43] - Attempting database connection
2025-03-30 13:56:16 - INFO - [feedback_manager.py:47] - Database connection established in 0.00s
2025-03-30 13:56:16 - INFO - [feedback_manager.py:531] - Retrieved 4 samples (page 1, limit 10)
2025-03-30 13:56:16 - INFO - [app.py:220] - Schema requested for workspace: Default
2025-03-30 13:57:34 - INFO - [app.py:220] - Schema requested for workspace: Default
2025-03-30 13:57:38 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-03-30 13:57:38 - INFO - [feedback_manager.py:43] - Attempting database connection
2025-03-30 13:57:38 - INFO - [feedback_manager.py:47] - Database connection established in 0.00s
2025-03-30 13:57:38 - INFO - [feedback_manager.py:531] - Retrieved 4 samples (page 1, limit 10)
2025-03-30 13:57:41 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-03-30 13:57:41 - INFO - [feedback_manager.py:43] - Attempting database connection
2025-03-30 13:57:41 - INFO - [feedback_manager.py:47] - Database connection established in 0.00s
2025-03-30 13:57:41 - INFO - [feedback_manager.py:531] - Retrieved 4 samples (page 1, limit 10)
2025-03-30 18:15:19 - INFO - [app.py:220] - Schema requested for workspace: Default
2025-03-30 18:15:22 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-03-30 18:15:22 - INFO - [feedback_manager.py:43] - Attempting database connection
2025-03-30 18:15:22 - INFO - [feedback_manager.py:47] - Database connection established in 0.01s
2025-03-30 18:15:23 - INFO - [feedback_manager.py:531] - Retrieved 4 samples (page 1, limit 10)
2025-03-30 18:15:34 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-03-30 18:15:34 - INFO - [feedback_manager.py:43] - Attempting database connection
2025-03-30 18:15:34 - INFO - [feedback_manager.py:47] - Database connection established in 0.00s
2025-03-30 18:15:34 - INFO - [feedback_manager.py:531] - Retrieved 4 samples (page 1, limit 10)
2025-03-30 18:16:52 - INFO - [app.py:220] - Schema requested for workspace: Default
2025-03-30 18:17:19 - INFO - [llm_engine.py:55] - [INTENT] Completion generation started
2025-03-30 18:17:19 - ERROR - [llm_engine.py:98] - [INTENT] Completion generation error after 0.23s: ('Connection aborted.', RemoteDisconnected('Remote end closed connection without response'))
Traceback (most recent call last):
  File "/home/vijay/text2sql/src/utils/llm_engine.py", line 72, in generate_completion
    response = self.client.complete(
               ^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/ai/inference/_patch.py", line 728, in complete
    pipeline_response: PipelineResponse = self._client._pipeline.run(  # pylint: disable=protected-access
                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/_base.py", line 240, in run
    return first_node.send(pipeline_request)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/_base.py", line 96, in send
    response = self.next.send(request)
               ^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/_base.py", line 96, in send
    response = self.next.send(request)
               ^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/_base.py", line 96, in send
    response = self.next.send(request)
               ^^^^^^^^^^^^^^^^^^^^^^^
  [Previous line repeated 2 more times]
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/policies/_redirect.py", line 204, in send
    response = self.next.send(request)
               ^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/policies/_retry.py", line 573, in send
    raise err
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/policies/_retry.py", line 551, in send
    response = self.next.send(request)
               ^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/_base.py", line 96, in send
    response = self.next.send(request)
               ^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/_base.py", line 96, in send
    response = self.next.send(request)
               ^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/_base.py", line 96, in send
    response = self.next.send(request)
               ^^^^^^^^^^^^^^^^^^^^^^^
  [Previous line repeated 3 more times]
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/_base.py", line 128, in send
    self._sender.send(request.http_request, **request.context.options),
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/transport/_requests_basic.py", line 409, in send
    raise error
azure.core.exceptions.ServiceResponseError: ('Connection aborted.', RemoteDisconnected('Remote end closed connection without response'))
2025-03-30 18:17:19 - INFO - [database.py:24] - Attempting database connection
2025-03-30 18:17:19 - INFO - [database.py:28] - Database connection established in 0.00s
2025-03-30 18:17:19 - INFO - [llm_engine.py:55] - [TABLE] Completion generation started
2025-03-30 18:17:19 - ERROR - [llm_engine.py:98] - [TABLE] Completion generation error after 0.23s: ('Connection aborted.', RemoteDisconnected('Remote end closed connection without response'))
Traceback (most recent call last):
  File "/home/vijay/text2sql/src/utils/llm_engine.py", line 72, in generate_completion
    response = self.client.complete(
               ^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/ai/inference/_patch.py", line 728, in complete
    pipeline_response: PipelineResponse = self._client._pipeline.run(  # pylint: disable=protected-access
                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/_base.py", line 240, in run
    return first_node.send(pipeline_request)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/_base.py", line 96, in send
    response = self.next.send(request)
               ^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/_base.py", line 96, in send
    response = self.next.send(request)
               ^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/_base.py", line 96, in send
    response = self.next.send(request)
               ^^^^^^^^^^^^^^^^^^^^^^^
  [Previous line repeated 2 more times]
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/policies/_redirect.py", line 204, in send
    response = self.next.send(request)
               ^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/policies/_retry.py", line 573, in send
    raise err
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/policies/_retry.py", line 551, in send
    response = self.next.send(request)
               ^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/_base.py", line 96, in send
    response = self.next.send(request)
               ^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/_base.py", line 96, in send
    response = self.next.send(request)
               ^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/_base.py", line 96, in send
    response = self.next.send(request)
               ^^^^^^^^^^^^^^^^^^^^^^^
  [Previous line repeated 3 more times]
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/_base.py", line 128, in send
    self._sender.send(request.http_request, **request.context.options),
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/transport/_requests_basic.py", line 409, in send
    raise error
azure.core.exceptions.ServiceResponseError: ('Connection aborted.', RemoteDisconnected('Remote end closed connection without response'))
2025-03-30 18:17:19 - INFO - [llm_engine.py:55] - [COLUMN] Completion generation started
2025-03-30 18:17:21 - INFO - [llm_engine.py:92] - [COLUMN] Completion generation completed in 1.48s
2025-03-30 18:17:21 - INFO - [feedback_manager.py:267] - Stage 1: Vector search for 'Get me customers who lives in state CA...'
2025-03-30 18:17:21 - INFO - [feedback_manager.py:322] - Found 4 initial candidates from vector search
2025-03-30 18:17:21 - INFO - [feedback_manager.py:329] - Stage 2: Reranking 4 candidates
2025-03-30 18:17:21 - WARNING - [feedback_manager.py:355] - No candidates with positive reranking scores, falling back to vector search results
2025-03-30 18:17:21 - INFO - [azure_client.py:35] - SQL generation started for query: 'Get me customers who lives in state CA'
2025-03-30 18:17:21 - INFO - [azure_client.py:69] - Including schema information (137 chars)
2025-03-30 18:17:21 - INFO - [azure_client.py:76] - Including 1 join conditions
2025-03-30 18:17:21 - INFO - [azure_client.py:97] - Including 2 SQL examples from manual similarity search
2025-03-30 18:17:21 - INFO - [azure_client.py:114] - PROMPT: [{'role': 'system', 'content': "You are an expert SQL assistant. Convert natural language questions into precise, executable SQL queries.\nYour task is to:\n1. Analyze the provided schema carefully, noting table relationships and column types\n2. Generate a SQL query that accurately answers the user's question\n3. Consider performance by selecting only necessary columns\n4. Use appropriate JOIN conditions based on primary/foreign key relationships or provided join conditions\n5. Include a brief explanation of your query\n\nRules:\n- Include table names and column references exactly as provided in the schema\n- Use appropriate SQL functions based on column data types\n- Consider NULL values in your conditions\n- Use table aliases for better readability when joining multiple tables\n- Add column aliases for computed values\n- Format the SQL query with proper indentation\n- If similar queries are provided, strictly use that as format or syntax\n- Return the SQL inside a code block tagged with ```sql\n\nExample output format:\nHere's a query that will [explanation]...\n\n```sql\nSELECT ...\nFROM ...\nWHERE ...\n```"}, {'role': 'user', 'content': "Here's the database schema:\nTable: customers\nDescription: Customer information and profiles\nColumns: customer_id (INTEGER), state (TEXT)\nPrimary Key(s): customer_id\n"}, {'role': 'user', 'content': 'Use the following pre-defined join conditions when joining these tables:\n- When joining customers with orders, use: INNER JOIN orders ON customers.customer_id = orders.customer_id\n'}, {'role': 'user', 'content': 'Here are some similar queries that were previously successful:\nQuestion: Get recently created orders\nSQL: select * from orders qualify row_number() over(order by order_date desc)=1\n\nQuestion: Get recently created orders\nSQL: select * from orders limit 1\n\n'}, {'role': 'user', 'content': 'Convert this question to SQL: Get me customers who lives in state CA'}]
2025-03-30 18:17:21 - INFO - [llm_engine.py:55] - [SQL_GEN] Completion generation started
2025-03-30 18:17:21 - ERROR - [llm_engine.py:98] - [SQL_GEN] Completion generation error after 0.03s: ('Connection aborted.', RemoteDisconnected('Remote end closed connection without response'))
Traceback (most recent call last):
  File "/home/vijay/text2sql/src/utils/llm_engine.py", line 72, in generate_completion
    response = self.client.complete(
               ^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/ai/inference/_patch.py", line 728, in complete
    pipeline_response: PipelineResponse = self._client._pipeline.run(  # pylint: disable=protected-access
                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/_base.py", line 240, in run
    return first_node.send(pipeline_request)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/_base.py", line 96, in send
    response = self.next.send(request)
               ^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/_base.py", line 96, in send
    response = self.next.send(request)
               ^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/_base.py", line 96, in send
    response = self.next.send(request)
               ^^^^^^^^^^^^^^^^^^^^^^^
  [Previous line repeated 2 more times]
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/policies/_redirect.py", line 204, in send
    response = self.next.send(request)
               ^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/policies/_retry.py", line 573, in send
    raise err
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/policies/_retry.py", line 551, in send
    response = self.next.send(request)
               ^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/_base.py", line 96, in send
    response = self.next.send(request)
               ^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/_base.py", line 96, in send
    response = self.next.send(request)
               ^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/_base.py", line 96, in send
    response = self.next.send(request)
               ^^^^^^^^^^^^^^^^^^^^^^^
  [Previous line repeated 3 more times]
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/_base.py", line 128, in send
    self._sender.send(request.http_request, **request.context.options),
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/transport/_requests_basic.py", line 409, in send
    raise error
azure.core.exceptions.ServiceResponseError: ('Connection aborted.', RemoteDisconnected('Remote end closed connection without response'))
2025-03-30 18:17:21 - ERROR - [azure_client.py:138] - SQL generation error after 0.04s: ('Connection aborted.', RemoteDisconnected('Remote end closed connection without response'))
Traceback (most recent call last):
  File "/home/vijay/text2sql/src/utils/azure_client.py", line 117, in generate_sql
    raw_response = self.llm_engine.generate_completion(messages, log_prefix="SQL_GEN")
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/text2sql/src/utils/llm_engine.py", line 72, in generate_completion
    response = self.client.complete(
               ^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/ai/inference/_patch.py", line 728, in complete
    pipeline_response: PipelineResponse = self._client._pipeline.run(  # pylint: disable=protected-access
                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/_base.py", line 240, in run
    return first_node.send(pipeline_request)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/_base.py", line 96, in send
    response = self.next.send(request)
               ^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/_base.py", line 96, in send
    response = self.next.send(request)
               ^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/_base.py", line 96, in send
    response = self.next.send(request)
               ^^^^^^^^^^^^^^^^^^^^^^^
  [Previous line repeated 2 more times]
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/policies/_redirect.py", line 204, in send
    response = self.next.send(request)
               ^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/policies/_retry.py", line 573, in send
    raise err
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/policies/_retry.py", line 551, in send
    response = self.next.send(request)
               ^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/_base.py", line 96, in send
    response = self.next.send(request)
               ^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/_base.py", line 96, in send
    response = self.next.send(request)
               ^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/_base.py", line 96, in send
    response = self.next.send(request)
               ^^^^^^^^^^^^^^^^^^^^^^^
  [Previous line repeated 3 more times]
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/_base.py", line 128, in send
    self._sender.send(request.http_request, **request.context.options),
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/transport/_requests_basic.py", line 409, in send
    raise error
azure.core.exceptions.ServiceResponseError: ('Connection aborted.', RemoteDisconnected('Remote end closed connection without response'))
2025-03-30 18:17:35 - INFO - [azure_client.py:186] - Closing Azure AI client connection
2025-03-30 18:17:35 - INFO - [database.py:238] - Closing database connection
2025-03-30 18:17:35 - INFO - [feedback_manager.py:668] - Closing database connection
2025-03-30 18:17:41 - INFO - [app.py:55] - Debug logging enabled for SQL generator and agents
2025-03-30 18:17:41 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-30 18:17:41 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-30 18:17:41 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-30 18:17:41 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-30 18:17:41 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-30 18:17:41 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-30 18:17:41 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-30 18:17:41 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-30 18:17:41 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-30 18:17:41 - INFO - [azure_client.py:11] - Initializing Azure AI Client using LLM Engine
2025-03-30 18:17:41 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-30 18:17:41 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-30 18:17:41 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-30 18:17:41 - INFO - [azure_client.py:17] - Azure AI Client initialized successfully
2025-03-30 18:17:41 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-30 18:17:41 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-03-30 18:17:46 - INFO - [app.py:55] - Debug logging enabled for SQL generator and agents
2025-03-30 18:17:46 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-30 18:17:46 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-30 18:17:46 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-30 18:17:46 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-30 18:17:46 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-30 18:17:46 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-30 18:17:46 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-30 18:17:46 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-30 18:17:46 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-30 18:17:46 - INFO - [azure_client.py:11] - Initializing Azure AI Client using LLM Engine
2025-03-30 18:17:46 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-30 18:17:46 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-30 18:17:46 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-30 18:17:46 - INFO - [azure_client.py:17] - Azure AI Client initialized successfully
2025-03-30 18:17:46 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-30 18:17:46 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-03-30 18:17:54 - INFO - [llm_engine.py:55] - [INTENT] Completion generation started
2025-03-30 18:17:55 - INFO - [llm_engine.py:92] - [INTENT] Completion generation completed in 1.29s
2025-03-30 18:17:55 - INFO - [database.py:24] - Attempting database connection
2025-03-30 18:17:55 - INFO - [database.py:28] - Database connection established in 0.03s
2025-03-30 18:17:55 - INFO - [llm_engine.py:55] - [TABLE] Completion generation started
2025-03-30 18:17:57 - INFO - [llm_engine.py:92] - [TABLE] Completion generation completed in 1.22s
2025-03-30 18:17:57 - INFO - [llm_engine.py:55] - [COLUMN] Completion generation started
2025-03-30 18:17:58 - INFO - [llm_engine.py:92] - [COLUMN] Completion generation completed in 1.36s
2025-03-30 18:17:58 - INFO - [feedback_manager.py:43] - Attempting database connection
2025-03-30 18:17:58 - INFO - [feedback_manager.py:47] - Database connection established in 0.00s
2025-03-30 18:17:58 - INFO - [feedback_manager.py:267] - Stage 1: Vector search for 'Get me customers who lives in state CA...'
2025-03-30 18:17:58 - INFO - [feedback_manager.py:62] - Loading embedding model 'sentence-transformers/all-MiniLM-L12-v2'
2025-03-30 18:18:01 - INFO - [feedback_manager.py:65] - Embedding model loaded in 2.60s
2025-03-30 18:18:01 - INFO - [feedback_manager.py:322] - Found 4 initial candidates from vector search
2025-03-30 18:18:01 - INFO - [feedback_manager.py:329] - Stage 2: Reranking 4 candidates
2025-03-30 18:18:01 - INFO - [feedback_manager.py:109] - Loading reranking model 'cross-encoder/ms-marco-MiniLM-L-6-v2'
2025-03-30 18:18:02 - INFO - [feedback_manager.py:113] - Reranking model loaded in 1.19s
2025-03-30 18:18:02 - WARNING - [feedback_manager.py:355] - No candidates with positive reranking scores, falling back to vector search results
2025-03-30 18:18:02 - INFO - [azure_client.py:35] - SQL generation started for query: 'Get me customers who lives in state CA'
2025-03-30 18:18:02 - INFO - [azure_client.py:69] - Including schema information (137 chars)
2025-03-30 18:18:02 - INFO - [azure_client.py:97] - Including 2 SQL examples from manual similarity search
2025-03-30 18:18:02 - INFO - [azure_client.py:114] - PROMPT: [{'role': 'system', 'content': "You are an expert SQL assistant. Convert natural language questions into precise, executable SQL queries.\nYour task is to:\n1. Analyze the provided schema carefully, noting table relationships and column types\n2. Generate a SQL query that accurately answers the user's question\n3. Consider performance by selecting only necessary columns\n4. Use appropriate JOIN conditions based on primary/foreign key relationships or provided join conditions\n5. Include a brief explanation of your query\n\nRules:\n- Include table names and column references exactly as provided in the schema\n- Use appropriate SQL functions based on column data types\n- Consider NULL values in your conditions\n- Use table aliases for better readability when joining multiple tables\n- Add column aliases for computed values\n- Format the SQL query with proper indentation\n- If similar queries are provided, strictly use that as format or syntax\n- Return the SQL inside a code block tagged with ```sql\n\nExample output format:\nHere's a query that will [explanation]...\n\n```sql\nSELECT ...\nFROM ...\nWHERE ...\n```"}, {'role': 'user', 'content': "Here's the database schema:\nTable: customers\nDescription: Customer information and profiles\nColumns: customer_id (INTEGER), state (TEXT)\nPrimary Key(s): customer_id\n"}, {'role': 'user', 'content': 'Here are some similar queries that were previously successful:\nQuestion: Get recently created orders\nSQL: select * from orders qualify row_number() over(order by order_date desc)=1\n\nQuestion: Get recently created orders\nSQL: select * from orders limit 1\n\n'}, {'role': 'user', 'content': 'Convert this question to SQL: Get me customers who lives in state CA'}]
2025-03-30 18:18:02 - INFO - [llm_engine.py:55] - [SQL_GEN] Completion generation started
2025-03-30 18:18:04 - INFO - [llm_engine.py:92] - [SQL_GEN] Completion generation completed in 2.19s
2025-03-30 18:18:04 - INFO - [azure_client.py:150] - Parsing SQL from model response
2025-03-30 18:18:04 - INFO - [azure_client.py:157] - Found SQL code block in response
2025-03-30 18:18:04 - INFO - [azure_client.py:171] - Extracted SQL query (43 chars) and explanation (234 chars)
2025-03-30 18:18:04 - INFO - [azure_client.py:124] - Generated SQL: SELECT *
FROM customers
WHERE state = 'CA';
2025-03-30 18:18:04,628 - QUERY: 'Get me customers who lives in state CA' → SQL: SELECT *
FROM customers
WHERE state = 'CA';
2025-03-30 18:18:04 - INFO - [azure_client.py:132] - SQL generation completed in 2.22s
2025-03-30 18:18:04 - INFO - [database.py:45] - Executing SQL query: SELECT *
FROM customers
WHERE state = 'CA';
2025-03-30 18:18:04 - INFO - [database.py:66] - Query returned 1 rows with 11 columns
2025-03-30 18:18:04 - INFO - [database.py:75] - Query processing completed in 0.02s
2025-03-30 19:44:22 - INFO - [azure_client.py:186] - Closing Azure AI client connection
2025-03-30 19:44:22 - INFO - [database.py:238] - Closing database connection
2025-03-30 19:44:22 - INFO - [feedback_manager.py:668] - Closing database connection
2025-03-30 19:52:08 - INFO - [app.py:55] - Debug logging enabled for SQL generator and agents
2025-03-30 19:52:08 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-30 19:52:08 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-30 19:52:08 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-30 19:52:08 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-30 19:52:08 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-30 19:52:08 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-30 19:52:08 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-30 19:52:08 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-30 19:52:08 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-30 19:52:08 - INFO - [azure_client.py:11] - Initializing Azure AI Client using LLM Engine
2025-03-30 19:52:08 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-30 19:52:08 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-30 19:52:08 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-30 19:52:08 - INFO - [azure_client.py:17] - Azure AI Client initialized successfully
2025-03-30 19:52:08 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-30 19:52:08 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-03-30 19:52:11 - INFO - [app.py:55] - Debug logging enabled for SQL generator and agents
2025-03-30 19:52:11 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-30 19:52:11 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-30 19:52:11 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-30 19:52:11 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-30 19:52:11 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-30 19:52:11 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-30 19:52:11 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-30 19:52:11 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-30 19:52:11 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-30 19:52:11 - INFO - [azure_client.py:11] - Initializing Azure AI Client using LLM Engine
2025-03-30 19:52:11 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-03-30 19:52:11 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-03-30 19:52:11 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-03-30 19:52:11 - INFO - [azure_client.py:17] - Azure AI Client initialized successfully
2025-03-30 19:52:11 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-03-30 19:52:11 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-03-30 19:52:45 - INFO - [llm_engine.py:55] - [INTENT] Completion generation started
2025-03-30 19:52:47 - INFO - [llm_engine.py:92] - [INTENT] Completion generation completed in 1.30s
2025-03-30 19:52:47 - INFO - [database.py:24] - Attempting database connection
2025-03-30 19:52:47 - INFO - [database.py:28] - Database connection established in 0.03s
2025-03-30 19:52:47 - INFO - [llm_engine.py:55] - [TABLE] Completion generation started
2025-03-30 19:52:48 - INFO - [llm_engine.py:92] - [TABLE] Completion generation completed in 1.15s
2025-03-30 19:52:48 - INFO - [llm_engine.py:55] - [COLUMN] Completion generation started
2025-03-30 19:52:49 - INFO - [llm_engine.py:92] - [COLUMN] Completion generation completed in 1.30s
2025-03-30 19:52:49 - INFO - [feedback_manager.py:43] - Attempting database connection
2025-03-30 19:52:49 - INFO - [feedback_manager.py:47] - Database connection established in 0.00s
2025-03-30 19:52:49 - INFO - [feedback_manager.py:267] - Stage 1: Vector search for 'get me customers order by their created date...'
2025-03-30 19:52:49 - INFO - [feedback_manager.py:62] - Loading embedding model 'sentence-transformers/all-MiniLM-L12-v2'
2025-03-30 19:52:52 - INFO - [feedback_manager.py:65] - Embedding model loaded in 2.80s
2025-03-30 19:52:52 - INFO - [feedback_manager.py:322] - Found 4 initial candidates from vector search
2025-03-30 19:52:52 - INFO - [feedback_manager.py:329] - Stage 2: Reranking 4 candidates
2025-03-30 19:52:52 - INFO - [feedback_manager.py:109] - Loading reranking model 'cross-encoder/ms-marco-MiniLM-L-6-v2'
2025-03-30 19:52:54 - INFO - [feedback_manager.py:113] - Reranking model loaded in 1.51s
2025-03-30 19:52:54 - INFO - [feedback_manager.py:348] - Found 1 candidates with positive reranking scores
2025-03-30 19:52:54 - INFO - [feedback_manager.py:352] - Reranking successful, returning top 1 results
2025-03-30 19:52:54 - INFO - [azure_client.py:35] - SQL generation started for query: 'get me customers order by their created date'
2025-03-30 19:52:54 - INFO - [azure_client.py:69] - Including schema information (149 chars)
2025-03-30 19:52:54 - INFO - [azure_client.py:97] - Including 1 SQL examples from manual similarity search
2025-03-30 19:52:54 - INFO - [azure_client.py:114] - PROMPT: [{'role': 'system', 'content': "You are an expert SQL assistant. Convert natural language questions into precise, executable SQL queries.\nYour task is to:\n1. Analyze the provided schema carefully, noting table relationships and column types\n2. Generate a SQL query that accurately answers the user's question\n3. Consider performance by selecting only necessary columns\n4. Use appropriate JOIN conditions based on primary/foreign key relationships or provided join conditions\n5. Include a brief explanation of your query\n\nRules:\n- Include table names and column references exactly as provided in the schema\n- Use appropriate SQL functions based on column data types\n- Consider NULL values in your conditions\n- Use table aliases for better readability when joining multiple tables\n- Add column aliases for computed values\n- Format the SQL query with proper indentation\n- If similar queries are provided, strictly use that as format or syntax\n- Return the SQL inside a code block tagged with ```sql\n\nExample output format:\nHere's a query that will [explanation]...\n\n```sql\nSELECT ...\nFROM ...\nWHERE ...\n```"}, {'role': 'user', 'content': "Here's the database schema:\nTable: customers\nDescription: Customer information and profiles\nColumns: customer_id (INTEGER), registration_date (TEXT)\nPrimary Key(s): customer_id\n"}, {'role': 'user', 'content': 'Here are some similar queries that were previously successful:\nQuestion: Get recently created order\nSQL: select * from orders\n\n'}, {'role': 'user', 'content': 'Convert this question to SQL: get me customers order by their created date'}]
2025-03-30 19:52:54 - INFO - [llm_engine.py:55] - [SQL_GEN] Completion generation started
2025-03-30 19:52:58 - INFO - [llm_engine.py:92] - [SQL_GEN] Completion generation completed in 4.58s
2025-03-30 19:52:58 - INFO - [azure_client.py:150] - Parsing SQL from model response
2025-03-30 19:52:58 - INFO - [azure_client.py:157] - Found SQL code block in response
2025-03-30 19:52:58 - INFO - [azure_client.py:171] - Extracted SQL query (84 chars) and explanation (327 chars)
2025-03-30 19:52:58 - INFO - [azure_client.py:124] - Generated SQL: SELECT customer_id, registration_date
FROM customers
ORDER BY registration_date ASC;
2025-03-30 19:52:58,676 - QUERY: 'get me customers order by their created date' → SQL: SELECT customer_id, registration_date
FROM customers
ORDER BY registration_date ASC;
2025-03-30 19:52:58 - INFO - [azure_client.py:132] - SQL generation completed in 4.60s
2025-03-30 19:52:58 - INFO - [database.py:45] - Executing SQL query: SELECT customer_id, registration_date
FROM customers
ORDER BY registration_date ASC;
2025-03-30 19:52:58 - INFO - [database.py:66] - Query returned 5 rows with 2 columns
2025-03-30 19:52:58 - INFO - [database.py:75] - Query processing completed in 0.02s
2025-03-30 19:53:14 - INFO - [app.py:220] - Schema requested for workspace: Default
2025-03-30 19:53:18 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-03-30 19:53:18 - INFO - [feedback_manager.py:43] - Attempting database connection
2025-03-30 19:53:18 - INFO - [feedback_manager.py:47] - Database connection established in 0.00s
2025-03-30 19:53:18 - INFO - [feedback_manager.py:531] - Retrieved 4 samples (page 1, limit 10)
2025-03-30 19:53:37 - INFO - [azure_client.py:186] - Closing Azure AI client connection
2025-03-30 19:53:37 - INFO - [database.py:238] - Closing database connection
2025-03-30 19:53:37 - INFO - [feedback_manager.py:668] - Closing database connection
2025-04-03 21:30:22 - INFO - [app.py:55] - Debug logging enabled for SQL generator and agents
2025-04-03 21:30:22 - CRITICAL - [llm_engine.py:23] - GITHUB_TOKEN environment variable not set
2025-04-03 21:30:53 - INFO - [app.py:55] - Debug logging enabled for SQL generator and agents
2025-04-03 21:30:53 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-03 21:30:53 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-03 21:30:54 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-03 21:30:54 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-03 21:30:54 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-03 21:30:54 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-03 21:30:54 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-03 21:30:54 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-03 21:30:54 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-03 21:30:54 - INFO - [azure_client.py:11] - Initializing Azure AI Client using LLM Engine
2025-04-03 21:30:54 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-03 21:30:54 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-03 21:30:54 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-03 21:30:54 - INFO - [azure_client.py:17] - Azure AI Client initialized successfully
2025-04-03 21:30:54 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-04-03 21:30:54 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-04-03 21:31:02 - INFO - [app.py:55] - Debug logging enabled for SQL generator and agents
2025-04-03 21:31:02 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-03 21:31:02 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-03 21:31:02 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-03 21:31:02 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-03 21:31:02 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-03 21:31:02 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-03 21:31:02 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-03 21:31:02 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-03 21:31:02 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-03 21:31:02 - INFO - [azure_client.py:11] - Initializing Azure AI Client using LLM Engine
2025-04-03 21:31:02 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-03 21:31:02 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-03 21:31:02 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-03 21:31:02 - INFO - [azure_client.py:17] - Azure AI Client initialized successfully
2025-04-03 21:31:02 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-04-03 21:31:02 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-04-03 21:31:08 - INFO - [app.py:220] - Schema requested for workspace: Default
2025-04-03 21:31:15 - INFO - [database.py:24] - Attempting database connection
2025-04-03 21:31:15 - INFO - [database.py:28] - Database connection established in 0.02s
2025-04-03 21:31:15 - INFO - [llm_engine.py:55] - [TABLE] Completion generation started
2025-04-03 21:31:17 - INFO - [llm_engine.py:92] - [TABLE] Completion generation completed in 1.30s
2025-04-03 21:31:17 - INFO - [feedback_manager.py:43] - Attempting database connection
2025-04-03 21:31:17 - INFO - [feedback_manager.py:47] - Database connection established in 0.00s
2025-04-03 21:31:17 - INFO - [feedback_manager.py:267] - Stage 1: Vector search for 'Get me all customers...'
2025-04-03 21:31:17 - INFO - [feedback_manager.py:62] - Loading embedding model 'sentence-transformers/all-MiniLM-L12-v2'
2025-04-03 21:31:21 - INFO - [feedback_manager.py:65] - Embedding model loaded in 4.47s
2025-04-03 21:31:21 - INFO - [feedback_manager.py:322] - Found 4 initial candidates from vector search
2025-04-03 21:31:21 - INFO - [feedback_manager.py:329] - Stage 2: Reranking 4 candidates
2025-04-03 21:31:21 - INFO - [feedback_manager.py:109] - Loading reranking model 'cross-encoder/ms-marco-MiniLM-L-6-v2'
2025-04-03 21:31:23 - INFO - [feedback_manager.py:113] - Reranking model loaded in 1.25s
2025-04-03 21:31:23 - WARNING - [feedback_manager.py:355] - No candidates with positive reranking scores, falling back to vector search results
2025-04-03 21:31:23 - INFO - [azure_client.py:35] - SQL generation started for query: 'Get me all customers'
2025-04-03 21:31:23 - INFO - [azure_client.py:69] - Including schema information (587 chars)
2025-04-03 21:31:23 - INFO - [azure_client.py:97] - Including 2 SQL examples from manual similarity search
2025-04-03 21:31:23 - INFO - [azure_client.py:114] - PROMPT: [{'role': 'system', 'content': "You are an expert SQL assistant. Convert natural language questions into precise, executable SQL queries.\nYour task is to:\n1. Analyze the provided schema carefully, noting table relationships and column types\n2. Generate a SQL query that accurately answers the user's question\n3. Consider performance by selecting only necessary columns\n4. Use appropriate JOIN conditions based on primary/foreign key relationships or provided join conditions\n5. Include a brief explanation of your query\n\nRules:\n- Include table names and column references exactly as provided in the schema\n- Use appropriate SQL functions based on column data types\n- Consider NULL values in your conditions\n- Use table aliases for better readability when joining multiple tables\n- Add column aliases for computed values\n- Format the SQL query with proper indentation\n- If similar queries are provided, strictly use that as format or syntax\n- Return the SQL inside a code block tagged with ```sql\n\nExample output format:\nHere's a query that will [explanation]...\n\n```sql\nSELECT ...\nFROM ...\nWHERE ...\n```"}, {'role': 'user', 'content': "Here's the database schema:\nTable: customers\nDescription: Customer information and profiles\nColumns: customer_id (INTEGER) - Unique customer identifier, first_name (TEXT) - Customer's first name, last_name (TEXT) - Customer's last name, email (TEXT) - Customer's email address (unique), phone (TEXT) - Customer's phone number, address (TEXT) - Customer's street address, city (TEXT) - Customer's city, state (TEXT) - Customer's state/province, country (TEXT) - Customer's country, postal_code (TEXT) - Customer's postal/zip code, registration_date (TEXT) - Date when customer registered\nPrimary Key(s): customer_id\n"}, {'role': 'user', 'content': 'Here are some similar queries that were previously successful:\nQuestion: Get recently created orders\nSQL: select * from orders qualify row_number() over(order by order_date desc)=1\n\nQuestion: Get recently created orders\nSQL: select * from orders limit 1\n\n'}, {'role': 'user', 'content': 'Convert this question to SQL: Get me all customers'}]
2025-04-03 21:31:23 - INFO - [llm_engine.py:55] - [SQL_GEN] Completion generation started
2025-04-03 21:31:25 - INFO - [llm_engine.py:92] - [SQL_GEN] Completion generation completed in 2.08s
2025-04-03 21:31:25 - INFO - [azure_client.py:150] - Parsing SQL from model response
2025-04-03 21:31:25 - INFO - [azure_client.py:157] - Found SQL code block in response
2025-04-03 21:31:25 - INFO - [azure_client.py:171] - Extracted SQL query (24 chars) and explanation (200 chars)
2025-04-03 21:31:25 - INFO - [azure_client.py:124] - Generated SQL: SELECT *
FROM customers;
2025-04-03 21:31:25,476 - QUERY: 'Get me all customers' → SQL: SELECT *
FROM customers;
2025-04-03 21:31:25 - INFO - [azure_client.py:132] - SQL generation completed in 2.10s
2025-04-03 21:31:25 - INFO - [database.py:45] - Executing SQL query: SELECT *
FROM customers;
2025-04-03 21:31:25 - INFO - [database.py:66] - Query returned 5 rows with 11 columns
2025-04-03 21:31:25 - INFO - [database.py:75] - Query processing completed in 0.03s
2025-04-03 21:32:16 - INFO - [azure_client.py:186] - Closing Azure AI client connection
2025-04-03 21:32:16 - INFO - [database.py:238] - Closing database connection
2025-04-03 21:32:16 - INFO - [feedback_manager.py:668] - Closing database connection
2025-04-03 21:32:24 - INFO - [app.py:55] - Debug logging enabled for SQL generator and agents
2025-04-03 21:32:24 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-03 21:32:24 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-03 21:32:24 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-03 21:32:24 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-03 21:32:24 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-03 21:32:24 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-03 21:32:24 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-03 21:32:24 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-03 21:32:24 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-03 21:32:24 - INFO - [azure_client.py:11] - Initializing Azure AI Client using LLM Engine
2025-04-03 21:32:24 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-03 21:32:24 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-03 21:32:24 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-03 21:32:24 - INFO - [azure_client.py:17] - Azure AI Client initialized successfully
2025-04-03 21:32:24 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-04-03 21:32:24 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-04-03 21:32:37 - INFO - [database.py:24] - Attempting database connection
2025-04-03 21:32:37 - INFO - [database.py:28] - Database connection established in 0.01s
2025-04-03 21:32:37 - INFO - [llm_engine.py:55] - [TABLE] Completion generation started
2025-04-03 21:32:39 - INFO - [llm_engine.py:92] - [TABLE] Completion generation completed in 1.32s
2025-04-03 21:32:39 - INFO - [llm_engine.py:93] - **************************
2025-04-03 21:32:39 - INFO - [feedback_manager.py:43] - Attempting database connection
2025-04-03 21:32:39 - INFO - [feedback_manager.py:47] - Database connection established in 0.00s
2025-04-03 21:32:39 - INFO - [feedback_manager.py:267] - Stage 1: Vector search for 'Get me all customers...'
2025-04-03 21:32:39 - INFO - [feedback_manager.py:62] - Loading embedding model 'sentence-transformers/all-MiniLM-L12-v2'
2025-04-03 21:32:42 - INFO - [feedback_manager.py:65] - Embedding model loaded in 2.73s
2025-04-03 21:32:42 - INFO - [feedback_manager.py:322] - Found 4 initial candidates from vector search
2025-04-03 21:32:42 - INFO - [feedback_manager.py:329] - Stage 2: Reranking 4 candidates
2025-04-03 21:32:42 - INFO - [feedback_manager.py:109] - Loading reranking model 'cross-encoder/ms-marco-MiniLM-L-6-v2'
2025-04-03 21:32:43 - INFO - [feedback_manager.py:113] - Reranking model loaded in 1.27s
2025-04-03 21:32:43 - WARNING - [feedback_manager.py:355] - No candidates with positive reranking scores, falling back to vector search results
2025-04-03 21:32:43 - INFO - [azure_client.py:35] - SQL generation started for query: 'Get me all customers'
2025-04-03 21:32:43 - INFO - [azure_client.py:69] - Including schema information (587 chars)
2025-04-03 21:32:43 - INFO - [azure_client.py:97] - Including 2 SQL examples from manual similarity search
2025-04-03 21:32:43 - INFO - [azure_client.py:114] - PROMPT: [{'role': 'system', 'content': "You are an expert SQL assistant. Convert natural language questions into precise, executable SQL queries.\nYour task is to:\n1. Analyze the provided schema carefully, noting table relationships and column types\n2. Generate a SQL query that accurately answers the user's question\n3. Consider performance by selecting only necessary columns\n4. Use appropriate JOIN conditions based on primary/foreign key relationships or provided join conditions\n5. Include a brief explanation of your query\n\nRules:\n- Include table names and column references exactly as provided in the schema\n- Use appropriate SQL functions based on column data types\n- Consider NULL values in your conditions\n- Use table aliases for better readability when joining multiple tables\n- Add column aliases for computed values\n- Format the SQL query with proper indentation\n- If similar queries are provided, strictly use that as format or syntax\n- Return the SQL inside a code block tagged with ```sql\n\nExample output format:\nHere's a query that will [explanation]...\n\n```sql\nSELECT ...\nFROM ...\nWHERE ...\n```"}, {'role': 'user', 'content': "Here's the database schema:\nTable: customers\nDescription: Customer information and profiles\nColumns: customer_id (INTEGER) - Unique customer identifier, first_name (TEXT) - Customer's first name, last_name (TEXT) - Customer's last name, email (TEXT) - Customer's email address (unique), phone (TEXT) - Customer's phone number, address (TEXT) - Customer's street address, city (TEXT) - Customer's city, state (TEXT) - Customer's state/province, country (TEXT) - Customer's country, postal_code (TEXT) - Customer's postal/zip code, registration_date (TEXT) - Date when customer registered\nPrimary Key(s): customer_id\n"}, {'role': 'user', 'content': 'Here are some similar queries that were previously successful:\nQuestion: Get recently created orders\nSQL: select * from orders qualify row_number() over(order by order_date desc)=1\n\nQuestion: Get recently created orders\nSQL: select * from orders limit 1\n\n'}, {'role': 'user', 'content': 'Convert this question to SQL: Get me all customers'}]
2025-04-03 21:32:43 - INFO - [llm_engine.py:55] - [SQL_GEN] Completion generation started
2025-04-03 21:32:45 - INFO - [llm_engine.py:92] - [SQL_GEN] Completion generation completed in 1.97s
2025-04-03 21:32:45 - INFO - [llm_engine.py:93] - **************************
2025-04-03 21:32:45 - INFO - [azure_client.py:150] - Parsing SQL from model response
2025-04-03 21:32:45 - INFO - [azure_client.py:157] - Found SQL code block in response
2025-04-03 21:32:45 - INFO - [azure_client.py:171] - Extracted SQL query (24 chars) and explanation (212 chars)
2025-04-03 21:32:45 - INFO - [azure_client.py:124] - Generated SQL: SELECT *
FROM customers;
2025-04-03 21:32:45,401 - QUERY: 'Get me all customers' → SQL: SELECT *
FROM customers;
2025-04-03 21:32:45 - INFO - [azure_client.py:132] - SQL generation completed in 1.99s
2025-04-03 21:32:45 - INFO - [database.py:45] - Executing SQL query: SELECT *
FROM customers;
2025-04-03 21:32:45 - INFO - [database.py:66] - Query returned 5 rows with 11 columns
2025-04-03 21:32:45 - INFO - [database.py:75] - Query processing completed in 0.03s
2025-04-03 21:33:25 - INFO - [database.py:24] - Attempting database connection
2025-04-03 21:33:25 - INFO - [database.py:28] - Database connection established in 0.00s
2025-04-03 21:33:25 - INFO - [llm_engine.py:55] - [TABLE] Completion generation started
2025-04-03 21:33:25 - INFO - [llm_engine.py:92] - [TABLE] Completion generation completed in 0.58s
2025-04-03 21:33:25 - INFO - [llm_engine.py:93] - **************************
2025-04-03 21:33:25 - INFO - [feedback_manager.py:267] - Stage 1: Vector search for 'Get me all customer's full name...'
2025-04-03 21:33:25 - INFO - [feedback_manager.py:322] - Found 4 initial candidates from vector search
2025-04-03 21:33:25 - INFO - [feedback_manager.py:329] - Stage 2: Reranking 4 candidates
2025-04-03 21:33:25 - WARNING - [feedback_manager.py:355] - No candidates with positive reranking scores, falling back to vector search results
2025-04-03 21:33:25 - INFO - [azure_client.py:35] - SQL generation started for query: 'Get me all customer's full name'
2025-04-03 21:33:25 - INFO - [azure_client.py:69] - Including schema information (587 chars)
2025-04-03 21:33:25 - INFO - [azure_client.py:97] - Including 2 SQL examples from manual similarity search
2025-04-03 21:33:25 - INFO - [azure_client.py:114] - PROMPT: [{'role': 'system', 'content': "You are an expert SQL assistant. Convert natural language questions into precise, executable SQL queries.\nYour task is to:\n1. Analyze the provided schema carefully, noting table relationships and column types\n2. Generate a SQL query that accurately answers the user's question\n3. Consider performance by selecting only necessary columns\n4. Use appropriate JOIN conditions based on primary/foreign key relationships or provided join conditions\n5. Include a brief explanation of your query\n\nRules:\n- Include table names and column references exactly as provided in the schema\n- Use appropriate SQL functions based on column data types\n- Consider NULL values in your conditions\n- Use table aliases for better readability when joining multiple tables\n- Add column aliases for computed values\n- Format the SQL query with proper indentation\n- If similar queries are provided, strictly use that as format or syntax\n- Return the SQL inside a code block tagged with ```sql\n\nExample output format:\nHere's a query that will [explanation]...\n\n```sql\nSELECT ...\nFROM ...\nWHERE ...\n```"}, {'role': 'user', 'content': "Here's the database schema:\nTable: customers\nDescription: Customer information and profiles\nColumns: customer_id (INTEGER) - Unique customer identifier, first_name (TEXT) - Customer's first name, last_name (TEXT) - Customer's last name, email (TEXT) - Customer's email address (unique), phone (TEXT) - Customer's phone number, address (TEXT) - Customer's street address, city (TEXT) - Customer's city, state (TEXT) - Customer's state/province, country (TEXT) - Customer's country, postal_code (TEXT) - Customer's postal/zip code, registration_date (TEXT) - Date when customer registered\nPrimary Key(s): customer_id\n"}, {'role': 'user', 'content': 'Here are some similar queries that were previously successful:\nQuestion: Get recently created orders\nSQL: select * from orders qualify row_number() over(order by order_date desc)=1\n\nQuestion: Get recently created orders\nSQL: select * from orders limit 1\n\n'}, {'role': 'user', 'content': "Convert this question to SQL: Get me all customer's full name"}]
2025-04-03 21:33:25 - INFO - [llm_engine.py:55] - [SQL_GEN] Completion generation started
2025-04-03 21:33:27 - INFO - [llm_engine.py:92] - [SQL_GEN] Completion generation completed in 1.53s
2025-04-03 21:33:27 - INFO - [llm_engine.py:93] - **************************
2025-04-03 21:33:27 - INFO - [azure_client.py:150] - Parsing SQL from model response
2025-04-03 21:33:27 - INFO - [azure_client.py:157] - Found SQL code block in response
2025-04-03 21:33:27 - INFO - [azure_client.py:171] - Extracted SQL query (66 chars) and explanation (205 chars)
2025-04-03 21:33:27 - INFO - [azure_client.py:124] - Generated SQL: SELECT first_name || ' ' || last_name AS full_name
FROM customers;
2025-04-03 21:33:27,347 - QUERY: 'Get me all customer's full name' → SQL: SELECT first_name || ' ' || last_name AS full_name
FROM customers;
2025-04-03 21:33:27 - INFO - [azure_client.py:132] - SQL generation completed in 1.54s
2025-04-03 21:33:27 - INFO - [database.py:45] - Executing SQL query: SELECT first_name || ' ' || last_name AS full_name
FROM customers;
2025-04-03 21:33:27 - INFO - [database.py:66] - Query returned 5 rows with 1 columns
2025-04-03 21:33:27 - INFO - [database.py:75] - Query processing completed in 0.01s
2025-04-03 21:34:44 - INFO - [database.py:24] - Attempting database connection
2025-04-03 21:34:44 - INFO - [database.py:28] - Database connection established in 0.00s
2025-04-03 21:34:44 - INFO - [llm_engine.py:55] - [TABLE] Completion generation started
2025-04-03 21:34:45 - INFO - [llm_engine.py:92] - [TABLE] Completion generation completed in 0.36s
2025-04-03 21:34:45 - INFO - [llm_engine.py:93] - **************************
2025-04-03 21:34:45 - INFO - [feedback_manager.py:267] - Stage 1: Vector search for 'Get me all details of customers...'
2025-04-03 21:34:45 - INFO - [feedback_manager.py:322] - Found 4 initial candidates from vector search
2025-04-03 21:34:45 - INFO - [feedback_manager.py:329] - Stage 2: Reranking 4 candidates
2025-04-03 21:34:45 - WARNING - [feedback_manager.py:355] - No candidates with positive reranking scores, falling back to vector search results
2025-04-03 21:34:45 - INFO - [azure_client.py:35] - SQL generation started for query: 'Get me all details of customers'
2025-04-03 21:34:45 - INFO - [azure_client.py:69] - Including schema information (587 chars)
2025-04-03 21:34:45 - INFO - [azure_client.py:97] - Including 2 SQL examples from manual similarity search
2025-04-03 21:34:45 - INFO - [azure_client.py:114] - PROMPT: [{'role': 'system', 'content': "You are an expert SQL assistant. Convert natural language questions into precise, executable SQL queries.\nYour task is to:\n1. Analyze the provided schema carefully, noting table relationships and column types\n2. Generate a SQL query that accurately answers the user's question\n3. Consider performance by selecting only necessary columns\n4. Use appropriate JOIN conditions based on primary/foreign key relationships or provided join conditions\n5. Include a brief explanation of your query\n\nRules:\n- Include table names and column references exactly as provided in the schema\n- Use appropriate SQL functions based on column data types\n- Consider NULL values in your conditions\n- Use table aliases for better readability when joining multiple tables\n- Add column aliases for computed values\n- Format the SQL query with proper indentation\n- If similar queries are provided, strictly use that as format or syntax\n- Return the SQL inside a code block tagged with ```sql\n\nExample output format:\nHere's a query that will [explanation]...\n\n```sql\nSELECT ...\nFROM ...\nWHERE ...\n```"}, {'role': 'user', 'content': "Here's the database schema:\nTable: customers\nDescription: Customer information and profiles\nColumns: customer_id (INTEGER) - Unique customer identifier, first_name (TEXT) - Customer's first name, last_name (TEXT) - Customer's last name, email (TEXT) - Customer's email address (unique), phone (TEXT) - Customer's phone number, address (TEXT) - Customer's street address, city (TEXT) - Customer's city, state (TEXT) - Customer's state/province, country (TEXT) - Customer's country, postal_code (TEXT) - Customer's postal/zip code, registration_date (TEXT) - Date when customer registered\nPrimary Key(s): customer_id\n"}, {'role': 'user', 'content': 'Here are some similar queries that were previously successful:\nQuestion: Get recently created orders\nSQL: select * from orders qualify row_number() over(order by order_date desc)=1\n\nQuestion: Get recently created orders\nSQL: select * from orders limit 1\n\n'}, {'role': 'user', 'content': 'Convert this question to SQL: Get me all details of customers'}]
2025-04-03 21:34:45 - INFO - [llm_engine.py:55] - [SQL_GEN] Completion generation started
2025-04-03 21:34:46 - INFO - [llm_engine.py:92] - [SQL_GEN] Completion generation completed in 1.17s
2025-04-03 21:34:46 - INFO - [llm_engine.py:93] - **************************
2025-04-03 21:34:46 - INFO - [azure_client.py:150] - Parsing SQL from model response
2025-04-03 21:34:46 - INFO - [azure_client.py:157] - Found SQL code block in response
2025-04-03 21:34:46 - INFO - [azure_client.py:171] - Extracted SQL query (24 chars) and explanation (179 chars)
2025-04-03 21:34:46 - INFO - [azure_client.py:124] - Generated SQL: SELECT *
FROM customers;
2025-04-03 21:34:46,338 - QUERY: 'Get me all details of customers' → SQL: SELECT *
FROM customers;
2025-04-03 21:34:46 - INFO - [azure_client.py:132] - SQL generation completed in 1.18s
2025-04-03 21:34:46 - INFO - [database.py:45] - Executing SQL query: SELECT *
FROM customers;
2025-04-03 21:34:46 - INFO - [database.py:66] - Query returned 5 rows with 11 columns
2025-04-03 21:34:46 - INFO - [database.py:75] - Query processing completed in 0.01s
2025-04-03 21:35:00 - INFO - [database.py:24] - Attempting database connection
2025-04-03 21:35:00 - INFO - [database.py:28] - Database connection established in 0.00s
2025-04-03 21:35:00 - INFO - [llm_engine.py:55] - [TABLE] Completion generation started
2025-04-03 21:35:00 - INFO - [llm_engine.py:92] - [TABLE] Completion generation completed in 0.54s
2025-04-03 21:35:00 - INFO - [llm_engine.py:93] - **************************
2025-04-03 21:35:00 - INFO - [llm_engine.py:55] - [COLUMN] Completion generation started
2025-04-03 21:35:03 - INFO - [llm_engine.py:92] - [COLUMN] Completion generation completed in 2.20s
2025-04-03 21:35:03 - INFO - [llm_engine.py:93] - **************************
2025-04-03 21:35:03 - INFO - [feedback_manager.py:267] - Stage 1: Vector search for 'Get me all details of customers and orders...'
2025-04-03 21:35:03 - INFO - [feedback_manager.py:322] - Found 4 initial candidates from vector search
2025-04-03 21:35:03 - INFO - [feedback_manager.py:329] - Stage 2: Reranking 4 candidates
2025-04-03 21:35:03 - WARNING - [feedback_manager.py:355] - No candidates with positive reranking scores, falling back to vector search results
2025-04-03 21:35:03 - INFO - [azure_client.py:35] - SQL generation started for query: 'Get me all details of customers and orders'
2025-04-03 21:35:03 - INFO - [azure_client.py:69] - Including schema information (935 chars)
2025-04-03 21:35:03 - INFO - [azure_client.py:76] - Including 1 join conditions
2025-04-03 21:35:03 - INFO - [azure_client.py:97] - Including 2 SQL examples from manual similarity search
2025-04-03 21:35:03 - INFO - [azure_client.py:114] - PROMPT: [{'role': 'system', 'content': "You are an expert SQL assistant. Convert natural language questions into precise, executable SQL queries.\nYour task is to:\n1. Analyze the provided schema carefully, noting table relationships and column types\n2. Generate a SQL query that accurately answers the user's question\n3. Consider performance by selecting only necessary columns\n4. Use appropriate JOIN conditions based on primary/foreign key relationships or provided join conditions\n5. Include a brief explanation of your query\n\nRules:\n- Include table names and column references exactly as provided in the schema\n- Use appropriate SQL functions based on column data types\n- Consider NULL values in your conditions\n- Use table aliases for better readability when joining multiple tables\n- Add column aliases for computed values\n- Format the SQL query with proper indentation\n- If similar queries are provided, strictly use that as format or syntax\n- Return the SQL inside a code block tagged with ```sql\n\nExample output format:\nHere's a query that will [explanation]...\n\n```sql\nSELECT ...\nFROM ...\nWHERE ...\n```"}, {'role': 'user', 'content': "Here's the database schema:\nTable: customers\nDescription: Customer information and profiles\nColumns: customer_id (INTEGER): Unique customer identifier, first_name (TEXT): Customer's first name, last_name (TEXT): Customer's last name, email (TEXT): Customer's email address (unique), phone (TEXT): Customer's phone number, address (TEXT): Customer's street address, city (TEXT): Customer's city, state (TEXT): Customer's state/province, country (TEXT): Customer's country, postal_code (TEXT): Customer's postal/zip code, registration_date (TEXT): Date when customer registered\nPrimary Key(s): customer_id\n\nTable: orders\nDescription: Customer orders and transactions\nColumns: order_id (INTEGER): Unique order identifier, customer_id (INTEGER): Reference to customer who placed the order, order_date (TEXT): Date when order was placed, status (TEXT): Order status (pending, shipped, completed, etc.), total_amount (REAL): Total order amount\nPrimary Key(s): order_id\n"}, {'role': 'user', 'content': 'Use the following pre-defined join conditions when joining these tables:\n- When joining customers with orders, use: INNER JOIN orders ON customers.customer_id = orders.customer_id\n'}, {'role': 'user', 'content': 'Here are some similar queries that were previously successful:\nQuestion: Get recently created orders\nSQL: select * from orders qualify row_number() over(order by order_date desc)=1\n\nQuestion: Get recently created orders\nSQL: select * from orders limit 1\n\n'}, {'role': 'user', 'content': 'Convert this question to SQL: Get me all details of customers and orders'}]
2025-04-03 21:35:03 - INFO - [llm_engine.py:55] - [SQL_GEN] Completion generation started
2025-04-03 21:35:05 - INFO - [llm_engine.py:92] - [SQL_GEN] Completion generation completed in 2.11s
2025-04-03 21:35:05 - INFO - [llm_engine.py:93] - **************************
2025-04-03 21:35:05 - INFO - [azure_client.py:150] - Parsing SQL from model response
2025-04-03 21:35:05 - INFO - [azure_client.py:157] - Found SQL code block in response
2025-04-03 21:35:05 - INFO - [azure_client.py:171] - Extracted SQL query (107 chars) and explanation (435 chars)
2025-04-03 21:35:05 - INFO - [azure_client.py:124] - Generated SQL: SELECT customers.*, orders.*
FROM customers
INNER JOIN orders ON customers.customer_id = orders.customer_id
2025-04-03 21:35:05,288 - QUERY: 'Get me all details of customers and orders' → SQL: SELECT customers.*, orders.*
FROM customers
INNER JOIN orders ON customers.customer_id = orders.customer_id
2025-04-03 21:35:05 - INFO - [azure_client.py:132] - SQL generation completed in 2.12s
2025-04-03 21:35:05 - INFO - [database.py:45] - Executing SQL query: SELECT customers.*, orders.*
FROM customers
INNER JOIN orders ON customers.customer_id = orders.customer_id
2025-04-03 21:35:05 - INFO - [database.py:66] - Query returned 8 rows with 16 columns
2025-04-03 21:35:05 - INFO - [database.py:75] - Query processing completed in 0.02s
2025-04-03 21:38:58 - INFO - [database.py:24] - Attempting database connection
2025-04-03 21:38:58 - INFO - [database.py:28] - Database connection established in 0.00s
2025-04-03 21:38:58 - INFO - [llm_engine.py:55] - [TABLE] Completion generation started
2025-04-03 21:38:59 - INFO - [llm_engine.py:92] - [TABLE] Completion generation completed in 0.54s
2025-04-03 21:38:59 - INFO - [llm_engine.py:93] - **************************
2025-04-03 21:38:59 - INFO - [llm_engine.py:55] - [COLUMN] Completion generation started
2025-04-03 21:39:00 - INFO - [llm_engine.py:92] - [COLUMN] Completion generation completed in 1.78s
2025-04-03 21:39:00 - INFO - [llm_engine.py:93] - **************************
2025-04-03 21:39:00 - INFO - [feedback_manager.py:267] - Stage 1: Vector search for 'Get me all customer and order details...'
2025-04-03 21:39:01 - INFO - [feedback_manager.py:322] - Found 4 initial candidates from vector search
2025-04-03 21:39:01 - INFO - [feedback_manager.py:329] - Stage 2: Reranking 4 candidates
2025-04-03 21:39:01 - WARNING - [feedback_manager.py:355] - No candidates with positive reranking scores, falling back to vector search results
2025-04-03 21:39:01 - INFO - [azure_client.py:35] - SQL generation started for query: 'Get me all customer and order details'
2025-04-03 21:39:01 - INFO - [azure_client.py:69] - Including schema information (935 chars)
2025-04-03 21:39:01 - INFO - [azure_client.py:76] - Including 1 join conditions
2025-04-03 21:39:01 - INFO - [azure_client.py:97] - Including 2 SQL examples from manual similarity search
2025-04-03 21:39:01 - INFO - [azure_client.py:114] - PROMPT: [{'role': 'system', 'content': "You are an expert SQL assistant. Convert natural language questions into precise, executable SQL queries.\nYour task is to:\n1. Analyze the provided schema carefully, noting table relationships and column types\n2. Generate a SQL query that accurately answers the user's question\n3. Consider performance by selecting only necessary columns\n4. Use appropriate JOIN conditions based on primary/foreign key relationships or provided join conditions\n5. Include a brief explanation of your query\n\nRules:\n- Include table names and column references exactly as provided in the schema\n- Use appropriate SQL functions based on column data types\n- Consider NULL values in your conditions\n- Use table aliases for better readability when joining multiple tables\n- Add column aliases for computed values\n- Format the SQL query with proper indentation\n- If similar queries are provided, strictly use that as format or syntax\n- Return the SQL inside a code block tagged with ```sql\n\nExample output format:\nHere's a query that will [explanation]...\n\n```sql\nSELECT ...\nFROM ...\nWHERE ...\n```"}, {'role': 'user', 'content': "Here's the database schema:\nTable: customers\nDescription: Customer information and profiles\nColumns: customer_id (INTEGER): Unique customer identifier, first_name (TEXT): Customer's first name, last_name (TEXT): Customer's last name, email (TEXT): Customer's email address (unique), phone (TEXT): Customer's phone number, address (TEXT): Customer's street address, city (TEXT): Customer's city, state (TEXT): Customer's state/province, country (TEXT): Customer's country, postal_code (TEXT): Customer's postal/zip code, registration_date (TEXT): Date when customer registered\nPrimary Key(s): customer_id\n\nTable: orders\nDescription: Customer orders and transactions\nColumns: order_id (INTEGER): Unique order identifier, customer_id (INTEGER): Reference to customer who placed the order, order_date (TEXT): Date when order was placed, status (TEXT): Order status (pending, shipped, completed, etc.), total_amount (REAL): Total order amount\nPrimary Key(s): order_id\n"}, {'role': 'user', 'content': 'Use the following pre-defined join conditions when joining these tables:\n- When joining customers with orders, use: INNER JOIN orders ON customers.customer_id = orders.customer_id\n'}, {'role': 'user', 'content': 'Here are some similar queries that were previously successful:\nQuestion: Get recently created orders\nSQL: select * from orders qualify row_number() over(order by order_date desc)=1\n\nQuestion: Get recently created orders\nSQL: select * from orders limit 1\n\n'}, {'role': 'user', 'content': 'Convert this question to SQL: Get me all customer and order details'}]
2025-04-03 21:39:01 - INFO - [llm_engine.py:55] - [SQL_GEN] Completion generation started
2025-04-03 21:39:03 - INFO - [llm_engine.py:92] - [SQL_GEN] Completion generation completed in 2.16s
2025-04-03 21:39:03 - INFO - [llm_engine.py:93] - **************************
2025-04-03 21:39:03 - INFO - [azure_client.py:150] - Parsing SQL from model response
2025-04-03 21:39:03 - INFO - [azure_client.py:157] - Found SQL code block in response
2025-04-03 21:39:03 - INFO - [azure_client.py:171] - Extracted SQL query (108 chars) and explanation (415 chars)
2025-04-03 21:39:03 - INFO - [azure_client.py:124] - Generated SQL: SELECT customers.*, orders.*
FROM customers
INNER JOIN orders ON customers.customer_id = orders.customer_id;
2025-04-03 21:39:03,368 - QUERY: 'Get me all customer and order details' → SQL: SELECT customers.*, orders.*
FROM customers
INNER JOIN orders ON customers.customer_id = orders.customer_id;
2025-04-03 21:39:03 - INFO - [azure_client.py:132] - SQL generation completed in 2.19s
2025-04-03 21:39:03 - INFO - [database.py:45] - Executing SQL query: SELECT customers.*, orders.*
FROM customers
INNER JOIN orders ON customers.customer_id = orders.customer_id;
2025-04-03 21:39:03 - INFO - [database.py:66] - Query returned 8 rows with 16 columns
2025-04-03 21:39:03 - INFO - [database.py:75] - Query processing completed in 0.03s
2025-04-03 21:39:29 - INFO - [database.py:24] - Attempting database connection
2025-04-03 21:39:29 - INFO - [database.py:28] - Database connection established in 0.00s
2025-04-03 21:39:29 - INFO - [llm_engine.py:55] - [TABLE] Completion generation started
2025-04-03 21:39:30 - INFO - [llm_engine.py:92] - [TABLE] Completion generation completed in 0.54s
2025-04-03 21:39:30 - INFO - [llm_engine.py:93] - **************************
2025-04-03 21:39:30 - INFO - [llm_engine.py:55] - [COLUMN] Completion generation started
2025-04-03 21:39:32 - INFO - [llm_engine.py:92] - [COLUMN] Completion generation completed in 1.79s
2025-04-03 21:39:32 - INFO - [llm_engine.py:93] - **************************
2025-04-03 21:39:32 - INFO - [feedback_manager.py:267] - Stage 1: Vector search for 'Get me all customer and order details...'
2025-04-03 21:39:32 - INFO - [feedback_manager.py:322] - Found 4 initial candidates from vector search
2025-04-03 21:39:32 - INFO - [feedback_manager.py:329] - Stage 2: Reranking 4 candidates
2025-04-03 21:39:32 - WARNING - [feedback_manager.py:355] - No candidates with positive reranking scores, falling back to vector search results
2025-04-03 21:39:32 - INFO - [azure_client.py:35] - SQL generation started for query: 'Get me all customer and order details'
2025-04-03 21:39:32 - INFO - [azure_client.py:69] - Including schema information (935 chars)
2025-04-03 21:39:32 - INFO - [azure_client.py:76] - Including 1 join conditions
2025-04-03 21:39:32 - INFO - [azure_client.py:97] - Including 2 SQL examples from manual similarity search
2025-04-03 21:39:32 - INFO - [azure_client.py:114] - PROMPT: [{'role': 'system', 'content': "You are an expert SQL assistant. Convert natural language questions into precise, executable SQL queries.\nYour task is to:\n1. Analyze the provided schema carefully, noting table relationships and column types\n2. Generate a SQL query that accurately answers the user's question\n3. Consider performance by selecting only necessary columns\n4. Use appropriate JOIN conditions based on primary/foreign key relationships or provided join conditions\n5. Include a brief explanation of your query\n\nRules:\n- Include table names and column references exactly as provided in the schema\n- Use appropriate SQL functions based on column data types\n- Consider NULL values in your conditions\n- Use table aliases for better readability when joining multiple tables\n- Add column aliases for computed values\n- Format the SQL query with proper indentation\n- If similar queries are provided, strictly use that as format or syntax\n- Return the SQL inside a code block tagged with ```sql\n\nExample output format:\nHere's a query that will [explanation]...\n\n```sql\nSELECT ...\nFROM ...\nWHERE ...\n```"}, {'role': 'user', 'content': "Here's the database schema:\nTable: customers\nDescription: Customer information and profiles\nColumns: customer_id (INTEGER): Unique customer identifier, first_name (TEXT): Customer's first name, last_name (TEXT): Customer's last name, email (TEXT): Customer's email address (unique), phone (TEXT): Customer's phone number, address (TEXT): Customer's street address, city (TEXT): Customer's city, state (TEXT): Customer's state/province, country (TEXT): Customer's country, postal_code (TEXT): Customer's postal/zip code, registration_date (TEXT): Date when customer registered\nPrimary Key(s): customer_id\n\nTable: orders\nDescription: Customer orders and transactions\nColumns: order_id (INTEGER): Unique order identifier, customer_id (INTEGER): Reference to customer who placed the order, order_date (TEXT): Date when order was placed, status (TEXT): Order status (pending, shipped, completed, etc.), total_amount (REAL): Total order amount\nPrimary Key(s): order_id\n"}, {'role': 'user', 'content': 'Use the following pre-defined join conditions when joining these tables:\n- When joining customers with orders, use: INNER JOIN orders ON customers.customer_id = orders.customer_id\n'}, {'role': 'user', 'content': 'Here are some similar queries that were previously successful:\nQuestion: Get recently created orders\nSQL: select * from orders qualify row_number() over(order by order_date desc)=1\n\nQuestion: Get recently created orders\nSQL: select * from orders limit 1\n\n'}, {'role': 'user', 'content': 'Convert this question to SQL: Get me all customer and order details'}]
2025-04-03 21:39:32 - INFO - [llm_engine.py:55] - [SQL_GEN] Completion generation started
2025-04-03 21:40:07 - INFO - [llm_engine.py:92] - [SQL_GEN] Completion generation completed in 34.60s
2025-04-03 21:40:07 - INFO - [llm_engine.py:93] - **************************
2025-04-03 21:40:07 - INFO - [azure_client.py:150] - Parsing SQL from model response
2025-04-03 21:40:07 - INFO - [azure_client.py:157] - Found SQL code block in response
2025-04-03 21:40:07 - INFO - [azure_client.py:171] - Extracted SQL query (417 chars) and explanation (404 chars)
2025-04-03 21:40:07 - INFO - [azure_client.py:124] - Generated SQL: SELECT 
  customers.customer_id,
  customers.first_name,
  customers.last_name,
  customers.email,
  customers.phone,
  customers.address,
  customers.city,
  customers.state,
  customers.country,
  customers.postal_code,
  customers.registration_date,
  orders.order_id,
  orders.order_date,
  orders.status,
  orders.total_amount
FROM 
  customers
INNER JOIN 
  orders ON customers.customer_id = orders.customer_id;
2025-04-03 21:40:07,109 - QUERY: 'Get me all customer and order details' → SQL: SELECT 
  customers.customer_id,
  customers.first_name,
  customers.last_name,
  customers.email,
  customers.phone,
  customers.address,
  customers.city,
  customers.state,
  customers.country,
  customers.postal_code,
  customers.registration_date,
  orders.order_id,
  orders.order_date,
  orders.status,
  orders.total_amount
FROM 
  customers
INNER JOIN 
  orders ON customers.customer_id = orders.customer_id;
2025-04-03 21:40:07 - INFO - [azure_client.py:132] - SQL generation completed in 34.62s
2025-04-03 21:40:07 - INFO - [database.py:45] - Executing SQL query: SELECT 
  customers.customer_id,
  customers.first_name,
  customers.last_name,
  customers.email,
  customers.phone,
  customers.address,
  customers.city,
  customers.state,
  customers.country,
  customers.postal_code,
  customers.registration_date,
  orders.order_id,
  orders.order_date,
  orders.status,
  orders.total_amount
FROM 
  customers
INNER JOIN 
  orders ON customers.customer_id = orders.customer_id;
2025-04-03 21:40:07 - INFO - [database.py:66] - Query returned 8 rows with 15 columns
2025-04-03 21:40:07 - INFO - [database.py:75] - Query processing completed in 0.01s
2025-04-03 21:40:32 - INFO - [database.py:24] - Attempting database connection
2025-04-03 21:40:32 - INFO - [database.py:28] - Database connection established in 0.00s
2025-04-03 21:40:32 - INFO - [llm_engine.py:55] - [TABLE] Completion generation started
2025-04-03 21:40:32 - INFO - [llm_engine.py:92] - [TABLE] Completion generation completed in 0.46s
2025-04-03 21:40:32 - INFO - [llm_engine.py:93] - **************************
2025-04-03 21:40:32 - INFO - [llm_engine.py:55] - [COLUMN] Completion generation started
2025-04-03 21:40:34 - INFO - [llm_engine.py:92] - [COLUMN] Completion generation completed in 1.83s
2025-04-03 21:40:34 - INFO - [llm_engine.py:93] - **************************
2025-04-03 21:40:34 - INFO - [feedback_manager.py:267] - Stage 1: Vector search for 'Get me all customer and order and order items deta...'
2025-04-03 21:40:35 - INFO - [feedback_manager.py:322] - Found 4 initial candidates from vector search
2025-04-03 21:40:35 - INFO - [feedback_manager.py:329] - Stage 2: Reranking 4 candidates
2025-04-03 21:40:35 - WARNING - [feedback_manager.py:355] - No candidates with positive reranking scores, falling back to vector search results
2025-04-03 21:40:35 - INFO - [azure_client.py:35] - SQL generation started for query: 'Get me all customer and order and order items details'
2025-04-03 21:40:35 - INFO - [azure_client.py:69] - Including schema information (1284 chars)
2025-04-03 21:40:35 - INFO - [azure_client.py:76] - Including 2 join conditions
2025-04-03 21:40:35 - INFO - [azure_client.py:97] - Including 2 SQL examples from manual similarity search
2025-04-03 21:40:35 - INFO - [azure_client.py:114] - PROMPT: [{'role': 'system', 'content': "You are an expert SQL assistant. Convert natural language questions into precise, executable SQL queries.\nYour task is to:\n1. Analyze the provided schema carefully, noting table relationships and column types\n2. Generate a SQL query that accurately answers the user's question\n3. Consider performance by selecting only necessary columns\n4. Use appropriate JOIN conditions based on primary/foreign key relationships or provided join conditions\n5. Include a brief explanation of your query\n\nRules:\n- Include table names and column references exactly as provided in the schema\n- Use appropriate SQL functions based on column data types\n- Consider NULL values in your conditions\n- Use table aliases for better readability when joining multiple tables\n- Add column aliases for computed values\n- Format the SQL query with proper indentation\n- If similar queries are provided, strictly use that as format or syntax\n- Return the SQL inside a code block tagged with ```sql\n\nExample output format:\nHere's a query that will [explanation]...\n\n```sql\nSELECT ...\nFROM ...\nWHERE ...\n```"}, {'role': 'user', 'content': "Here's the database schema:\nTable: customers\nDescription: Customer information and profiles\nColumns: customer_id (INTEGER): Unique customer identifier, first_name (TEXT): Customer's first name, last_name (TEXT): Customer's last name, email (TEXT): Customer's email address (unique), phone (TEXT): Customer's phone number, address (TEXT): Customer's street address, city (TEXT): Customer's city, state (TEXT): Customer's state/province, country (TEXT): Customer's country, postal_code (TEXT): Customer's postal/zip code, registration_date (TEXT): Date when customer registered\nPrimary Key(s): customer_id\n\nTable: orders\nDescription: Customer orders and transactions\nColumns: order_id (INTEGER): Unique order identifier, customer_id (INTEGER): Reference to customer who placed the order, order_date (TEXT): Date when order was placed, status (TEXT): Order status (pending, shipped, completed, etc.), total_amount (REAL): Total order amount\nPrimary Key(s): order_id\n\nTable: order_items\nDescription: Individual items within each order\nColumns: item_id (INTEGER): Unique order item identifier, order_id (INTEGER): Reference to parent order, product_id (INTEGER): Reference to purchased product, quantity (INTEGER): Quantity of product ordered, price (REAL): Price per unit at time of purchase\nPrimary Key(s): item_id\n"}, {'role': 'user', 'content': 'Use the following pre-defined join conditions when joining these tables:\n- When joining customers with orders, use: INNER JOIN orders ON customers.customer_id = orders.customer_id\n- When joining orders with order_items, use: INNER JOIN order_items ON orders.order_id = order_items.order_id\n'}, {'role': 'user', 'content': 'Here are some similar queries that were previously successful:\nQuestion: Get recently created orders\nSQL: select * from orders qualify row_number() over(order by order_date desc)=1\n\nQuestion: Get recently created orders\nSQL: select * from orders limit 1\n\n'}, {'role': 'user', 'content': 'Convert this question to SQL: Get me all customer and order and order items details'}]
2025-04-03 21:40:35 - INFO - [llm_engine.py:55] - [SQL_GEN] Completion generation started
2025-04-03 21:40:40 - INFO - [llm_engine.py:92] - [SQL_GEN] Completion generation completed in 5.21s
2025-04-03 21:40:40 - INFO - [llm_engine.py:93] - **************************
2025-04-03 21:40:40 - INFO - [azure_client.py:150] - Parsing SQL from model response
2025-04-03 21:40:40 - INFO - [azure_client.py:157] - Found SQL code block in response
2025-04-03 21:40:40 - INFO - [azure_client.py:171] - Extracted SQL query (682 chars) and explanation (546 chars)
2025-04-03 21:40:40 - INFO - [azure_client.py:124] - Generated SQL: SELECT 
    c.customer_id,
    c.first_name AS customer_first_name,
    c.last_name AS customer_last_name,
    c.email AS customer_email,
    c.phone AS customer_phone,
    c.address AS customer_address,
    c.city AS customer_city,
    c.state AS customer_state,
    c.country AS customer_country,
    c.postal_code AS customer_postal_code,
    o.order_id,
    o.order_date,
    o.status AS order_status,
    o.total_amount AS order_total_amount,
    oi.item_id,
    oi.product_id,
    oi.quantity AS item_quantity,
    oi.price AS item_price
FROM 
    customers c
INNER JOIN 
    orders o ON c.customer_id = o.customer_id
INNER JOIN 
    order_items oi ON o.order_id = oi.order_id
2025-04-03 21:40:40,440 - QUERY: 'Get me all customer and order and order items details' → SQL: SELECT 
    c.customer_id,
    c.first_name AS customer_first_name,
    c.last_name AS customer_last_name,
    c.email AS customer_email,
    c.phone AS customer_phone,
    c.address AS customer_address,
    c.city AS customer_city,
    c.state AS customer_state,
    c.country AS customer_country,
    c.postal_code AS customer_postal_code,
    o.order_id,
    o.order_date,
    o.status AS order_status,
    o.total_amount AS order_total_amount,
    oi.item_id,
    oi.product_id,
    oi.quantity AS item_quantity,
    oi.price AS item_price
FROM 
    customers c
INNER JOIN 
    orders o ON c.customer_id = o.customer_id
INNER JOIN 
    order_items oi ON o.order_id = oi.order_id
2025-04-03 21:40:40 - INFO - [azure_client.py:132] - SQL generation completed in 5.24s
2025-04-03 21:40:40 - INFO - [database.py:45] - Executing SQL query: SELECT 
    c.customer_id,
    c.first_name AS customer_first_name,
    c.last_name AS customer_last_name,
    c.email AS customer_email,
    c.phone AS customer_phone,
    c.address AS customer_address,
    c.city AS customer_city,
    c.state AS customer_state,
    c.country AS customer_country,
    c.postal_code AS customer_postal_code,
    o.order_id,
    o.order_date,
    o.status AS order_status,
    o.total_amount AS order_total_amount,
    oi.item_id,
    oi.product_id,
    oi.quantity AS item_quantity,
    oi.price AS item_price
FROM 
    customers c
INNER JOIN 
    orders o ON c.customer_id = o.customer_id
INNER JOIN 
    order_items oi ON o.order_id = oi.order_id
2025-04-03 21:40:40 - INFO - [database.py:66] - Query returned 11 rows with 18 columns
2025-04-03 21:40:40 - INFO - [database.py:75] - Query processing completed in 0.02s
2025-04-03 21:59:04 - INFO - [app.py:220] - Schema requested for workspace: Default
2025-04-03 21:59:08 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-04-03 21:59:08 - INFO - [feedback_manager.py:43] - Attempting database connection
2025-04-03 21:59:08 - INFO - [feedback_manager.py:47] - Database connection established in 0.00s
2025-04-03 21:59:08 - INFO - [feedback_manager.py:531] - Retrieved 4 samples (page 1, limit 10)
2025-04-03 22:02:04 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-04-03 22:02:04 - INFO - [feedback_manager.py:43] - Attempting database connection
2025-04-03 22:02:04 - INFO - [feedback_manager.py:47] - Database connection established in 0.00s
2025-04-03 22:02:04 - INFO - [feedback_manager.py:531] - Retrieved 4 samples (page 1, limit 10)
2025-04-03 22:02:08 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-04-03 22:02:08 - INFO - [feedback_manager.py:43] - Attempting database connection
2025-04-03 22:02:08 - INFO - [feedback_manager.py:47] - Database connection established in 0.00s
2025-04-03 22:02:08 - INFO - [feedback_manager.py:531] - Retrieved 4 samples (page 1, limit 10)
2025-04-03 22:54:59 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-04-03 22:54:59 - INFO - [feedback_manager.py:43] - Attempting database connection
2025-04-03 22:54:59 - INFO - [feedback_manager.py:47] - Database connection established in 0.01s
2025-04-03 22:54:59 - INFO - [feedback_manager.py:531] - Retrieved 4 samples (page 1, limit 10)
2025-04-03 22:55:07 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-04-03 22:55:07 - INFO - [feedback_manager.py:43] - Attempting database connection
2025-04-03 22:55:07 - INFO - [feedback_manager.py:47] - Database connection established in 0.01s
2025-04-03 22:55:07 - INFO - [feedback_manager.py:531] - Retrieved 4 samples (page 1, limit 10)
2025-04-03 22:55:13 - INFO - [app.py:220] - Schema requested for workspace: Default
2025-04-03 22:55:27 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-04-03 22:55:27 - INFO - [feedback_manager.py:43] - Attempting database connection
2025-04-03 22:55:27 - INFO - [feedback_manager.py:47] - Database connection established in 0.01s
2025-04-03 22:55:27 - INFO - [feedback_manager.py:531] - Retrieved 4 samples (page 1, limit 10)
2025-04-03 22:55:33 - INFO - [app.py:220] - Schema requested for workspace: Default
2025-04-03 22:57:46 - INFO - [app.py:220] - Schema requested for workspace: Default
2025-04-03 22:59:39 - INFO - [app.py:220] - Schema requested for workspace: Default
2025-04-03 22:59:43 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-04-03 22:59:43 - INFO - [feedback_manager.py:43] - Attempting database connection
2025-04-03 22:59:43 - INFO - [feedback_manager.py:47] - Database connection established in 0.00s
2025-04-03 22:59:43 - INFO - [feedback_manager.py:531] - Retrieved 4 samples (page 1, limit 10)
2025-04-03 23:02:52 - INFO - [app.py:220] - Schema requested for workspace: Default
2025-04-05 00:09:09 - INFO - [app.py:55] - Debug logging enabled for SQL generator and agents
2025-04-05 00:09:09 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 00:09:09 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 00:09:09 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 00:09:09 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 00:09:09 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 00:09:09 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 00:09:09 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 00:09:09 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 00:09:09 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 00:09:09 - INFO - [azure_client.py:11] - Initializing Azure AI Client using LLM Engine
2025-04-05 00:09:09 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 00:09:09 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 00:09:09 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 00:09:09 - INFO - [azure_client.py:17] - Azure AI Client initialized successfully
2025-04-05 00:09:09 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-04-05 00:09:09 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-04-05 00:09:12 - INFO - [azure_client.py:186] - Closing Azure AI client connection
2025-04-05 00:09:12 - INFO - [database.py:238] - Closing database connection
2025-04-05 00:09:12 - INFO - [feedback_manager.py:668] - Closing database connection
2025-04-05 00:09:29 - INFO - [app.py:55] - Debug logging enabled for SQL generator and agents
2025-04-05 00:09:29 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 00:09:29 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 00:09:29 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 00:09:29 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 00:09:29 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 00:09:29 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 00:09:29 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 00:09:29 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 00:09:29 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 00:09:29 - INFO - [azure_client.py:11] - Initializing Azure AI Client using LLM Engine
2025-04-05 00:09:29 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 00:09:29 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 00:09:29 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 00:09:29 - INFO - [azure_client.py:17] - Azure AI Client initialized successfully
2025-04-05 00:09:29 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-04-05 00:09:29 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-04-05 00:09:35 - INFO - [app.py:55] - Debug logging enabled for SQL generator and agents
2025-04-05 00:09:35 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 00:09:35 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 00:09:35 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 00:09:35 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 00:09:35 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 00:09:35 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 00:09:35 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 00:09:35 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 00:09:35 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 00:09:35 - INFO - [azure_client.py:11] - Initializing Azure AI Client using LLM Engine
2025-04-05 00:09:35 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 00:09:35 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 00:09:35 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 00:09:35 - INFO - [azure_client.py:17] - Azure AI Client initialized successfully
2025-04-05 00:09:35 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-04-05 00:09:35 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-04-05 00:09:42 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-04-05 00:09:42 - INFO - [feedback_manager.py:43] - Attempting database connection
2025-04-05 00:09:42 - INFO - [feedback_manager.py:47] - Database connection established in 0.02s
2025-04-05 00:09:42 - INFO - [feedback_manager.py:531] - Retrieved 4 samples (page 1, limit 10)
2025-04-05 00:09:45 - INFO - [app.py:220] - Schema requested for workspace: Default
2025-04-05 00:11:09 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-04-05 00:11:09 - INFO - [feedback_manager.py:43] - Attempting database connection
2025-04-05 00:11:09 - INFO - [feedback_manager.py:47] - Database connection established in 0.00s
2025-04-05 00:11:09 - INFO - [feedback_manager.py:531] - Retrieved 4 samples (page 1, limit 10)
2025-04-05 00:12:24 - INFO - [azure_client.py:186] - Closing Azure AI client connection
2025-04-05 00:12:24 - INFO - [database.py:238] - Closing database connection
2025-04-05 00:12:24 - INFO - [feedback_manager.py:668] - Closing database connection
2025-04-05 00:12:34 - INFO - [app.py:57] - Debug logging enabled for SQL generator and agents
2025-04-05 00:12:34 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 00:12:34 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 00:12:34 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 00:12:34 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 00:12:34 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 00:12:34 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 00:12:34 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 00:12:34 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 00:12:34 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 00:12:34 - INFO - [azure_client.py:11] - Initializing Azure AI Client using LLM Engine
2025-04-05 00:12:34 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 00:12:34 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 00:12:34 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 00:12:34 - INFO - [azure_client.py:17] - Azure AI Client initialized successfully
2025-04-05 00:12:34 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-04-05 00:12:34 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-04-05 00:12:42 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-04-05 00:12:42 - INFO - [feedback_manager.py:43] - Attempting database connection
2025-04-05 00:12:42 - INFO - [feedback_manager.py:47] - Database connection established in 0.01s
2025-04-05 00:12:42 - INFO - [feedback_manager.py:531] - Retrieved 4 samples (page 1, limit 10)
2025-04-05 00:12:53 - INFO - [azure_client.py:186] - Closing Azure AI client connection
2025-04-05 00:12:53 - INFO - [database.py:238] - Closing database connection
2025-04-05 00:12:53 - INFO - [feedback_manager.py:668] - Closing database connection
2025-04-05 00:12:59 - INFO - [app.py:57] - Debug logging enabled for SQL generator and agents
2025-04-05 00:12:59 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 00:12:59 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 00:12:59 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 00:12:59 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 00:12:59 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 00:12:59 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 00:12:59 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 00:12:59 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 00:12:59 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 00:12:59 - INFO - [azure_client.py:11] - Initializing Azure AI Client using LLM Engine
2025-04-05 00:12:59 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 00:12:59 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 00:12:59 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 00:12:59 - INFO - [azure_client.py:17] - Azure AI Client initialized successfully
2025-04-05 00:12:59 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-04-05 00:12:59 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-04-05 00:15:11 - INFO - [azure_client.py:186] - Closing Azure AI client connection
2025-04-05 00:15:11 - INFO - [database.py:238] - Closing database connection
2025-04-05 00:15:11 - INFO - [feedback_manager.py:668] - Closing database connection
2025-04-05 00:15:33 - INFO - [app.py:57] - Debug logging enabled for SQL generator and agents
2025-04-05 00:15:33 - CRITICAL - [llm_engine.py:23] - GITHUB_TOKEN environment variable not set
2025-04-05 00:16:00 - INFO - [app.py:57] - Debug logging enabled for SQL generator and agents
2025-04-05 00:16:00 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 00:16:00 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 00:16:00 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 00:16:00 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 00:16:00 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 00:16:00 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 00:16:00 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 00:16:00 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 00:16:00 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 00:16:00 - INFO - [azure_client.py:11] - Initializing Azure AI Client using LLM Engine
2025-04-05 00:16:00 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 00:16:00 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 00:16:00 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 00:16:00 - INFO - [azure_client.py:17] - Azure AI Client initialized successfully
2025-04-05 00:16:00 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-04-05 00:16:00 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-04-05 00:16:06 - INFO - [app.py:57] - Debug logging enabled for SQL generator and agents
2025-04-05 00:16:06 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 00:16:06 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 00:16:06 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 00:16:06 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 00:16:06 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 00:16:06 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 00:16:06 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 00:16:06 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 00:16:06 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 00:16:06 - INFO - [azure_client.py:11] - Initializing Azure AI Client using LLM Engine
2025-04-05 00:16:06 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 00:16:06 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 00:16:06 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 00:16:06 - INFO - [azure_client.py:17] - Azure AI Client initialized successfully
2025-04-05 00:16:06 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-04-05 00:16:06 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-04-05 00:17:33 - INFO - [azure_client.py:186] - Closing Azure AI client connection
2025-04-05 00:17:33 - INFO - [database.py:238] - Closing database connection
2025-04-05 00:17:33 - INFO - [feedback_manager.py:668] - Closing database connection
2025-04-05 00:17:38 - INFO - [app.py:57] - Debug logging enabled for SQL generator and agents
2025-04-05 00:17:38 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 00:17:38 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 00:17:38 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 00:17:38 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 00:17:38 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 00:17:38 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 00:17:38 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 00:17:38 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 00:17:38 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 00:17:38 - INFO - [azure_client.py:11] - Initializing Azure AI Client using LLM Engine
2025-04-05 00:17:38 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 00:17:38 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 00:17:38 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 00:17:38 - INFO - [azure_client.py:17] - Azure AI Client initialized successfully
2025-04-05 00:17:38 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-04-05 00:17:38 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-04-05 00:30:26 - INFO - [azure_client.py:186] - Closing Azure AI client connection
2025-04-05 00:30:26 - INFO - [database.py:238] - Closing database connection
2025-04-05 00:30:26 - INFO - [feedback_manager.py:668] - Closing database connection
2025-04-05 00:30:32 - INFO - [app.py:57] - Debug logging enabled for SQL generator and agents
2025-04-05 00:30:32 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 00:30:32 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 00:30:32 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 00:30:32 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 00:30:32 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 00:30:32 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 00:30:32 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 00:30:32 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 00:30:32 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 00:30:32 - INFO - [azure_client.py:11] - Initializing Azure AI Client using LLM Engine
2025-04-05 00:30:32 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 00:30:32 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 00:30:32 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 00:30:32 - INFO - [azure_client.py:17] - Azure AI Client initialized successfully
2025-04-05 00:30:32 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-04-05 00:30:32 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-04-05 00:31:01 - INFO - [azure_client.py:186] - Closing Azure AI client connection
2025-04-05 00:31:01 - INFO - [database.py:238] - Closing database connection
2025-04-05 00:31:01 - INFO - [feedback_manager.py:668] - Closing database connection
2025-04-05 00:31:11 - INFO - [app.py:57] - Debug logging enabled for SQL generator and agents
2025-04-05 00:31:11 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 00:31:11 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 00:31:11 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 00:31:11 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 00:31:11 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 00:31:11 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 00:31:11 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 00:31:11 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 00:31:11 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 00:31:11 - INFO - [azure_client.py:11] - Initializing Azure AI Client using LLM Engine
2025-04-05 00:31:11 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 00:31:11 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 00:31:11 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 00:31:11 - INFO - [azure_client.py:17] - Azure AI Client initialized successfully
2025-04-05 00:31:11 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-04-05 00:31:11 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-04-05 00:44:07 - INFO - [azure_client.py:186] - Closing Azure AI client connection
2025-04-05 00:44:07 - INFO - [database.py:238] - Closing database connection
2025-04-05 00:44:07 - INFO - [feedback_manager.py:668] - Closing database connection
2025-04-05 00:44:16 - INFO - [app.py:57] - Debug logging enabled for SQL generator and agents
2025-04-05 00:44:16 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 00:44:16 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 00:44:16 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 00:44:16 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 00:44:16 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 00:44:16 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 00:44:16 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 00:44:16 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 00:44:16 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 00:44:16 - INFO - [azure_client.py:11] - Initializing Azure AI Client using LLM Engine
2025-04-05 00:44:16 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 00:44:16 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 00:44:16 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 00:44:16 - INFO - [azure_client.py:17] - Azure AI Client initialized successfully
2025-04-05 00:44:16 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-04-05 00:44:16 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-04-05 00:44:38 - INFO - [azure_client.py:186] - Closing Azure AI client connection
2025-04-05 00:44:38 - INFO - [database.py:238] - Closing database connection
2025-04-05 00:44:38 - INFO - [feedback_manager.py:668] - Closing database connection
2025-04-05 00:44:45 - INFO - [app.py:57] - Debug logging enabled for SQL generator and agents
2025-04-05 00:44:45 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 00:44:45 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 00:44:45 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 00:44:45 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 00:44:45 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 00:44:45 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 00:44:45 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 00:44:45 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 00:44:45 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 00:44:45 - INFO - [azure_client.py:11] - Initializing Azure AI Client using LLM Engine
2025-04-05 00:44:45 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 00:44:45 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 00:44:45 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 00:44:45 - INFO - [azure_client.py:17] - Azure AI Client initialized successfully
2025-04-05 00:44:45 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-04-05 00:44:45 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-04-05 11:32:25 - INFO - [azure_client.py:186] - Closing Azure AI client connection
2025-04-05 11:32:25 - INFO - [database.py:238] - Closing database connection
2025-04-05 11:32:25 - INFO - [feedback_manager.py:668] - Closing database connection
2025-04-05 11:32:34 - INFO - [app.py:57] - Debug logging enabled for SQL generator and agents
2025-04-05 11:32:34 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 11:32:34 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 11:32:34 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 11:32:34 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 11:32:34 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 11:32:34 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 11:32:34 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 11:32:34 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 11:32:34 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 11:32:34 - INFO - [azure_client.py:11] - Initializing Azure AI Client using LLM Engine
2025-04-05 11:32:34 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 11:32:34 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 11:32:34 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 11:32:34 - INFO - [azure_client.py:17] - Azure AI Client initialized successfully
2025-04-05 11:32:34 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-04-05 11:32:34 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-04-05 11:40:31 - INFO - [azure_client.py:186] - Closing Azure AI client connection
2025-04-05 11:40:31 - INFO - [database.py:238] - Closing database connection
2025-04-05 11:40:31 - INFO - [feedback_manager.py:668] - Closing database connection
2025-04-05 11:40:35 - INFO - [app.py:57] - Debug logging enabled for SQL generator and agents
2025-04-05 11:40:35 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 11:40:35 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 11:40:35 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 11:40:35 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 11:40:35 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 11:40:35 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 11:40:35 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 11:40:35 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 11:40:35 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 11:40:35 - INFO - [azure_client.py:11] - Initializing Azure AI Client using LLM Engine
2025-04-05 11:40:35 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 11:40:35 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 11:40:35 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 11:40:35 - INFO - [azure_client.py:17] - Azure AI Client initialized successfully
2025-04-05 11:40:35 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-04-05 11:40:35 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-04-05 11:41:38 - INFO - [azure_client.py:186] - Closing Azure AI client connection
2025-04-05 11:41:38 - INFO - [database.py:238] - Closing database connection
2025-04-05 11:41:38 - INFO - [feedback_manager.py:668] - Closing database connection
2025-04-05 11:41:43 - INFO - [app.py:57] - Debug logging enabled for SQL generator and agents
2025-04-05 11:41:43 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 11:41:43 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 11:41:43 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 11:41:43 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 11:41:43 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 11:41:43 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 11:41:43 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 11:41:43 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 11:41:43 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 11:41:43 - INFO - [azure_client.py:11] - Initializing Azure AI Client using LLM Engine
2025-04-05 11:41:43 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 11:41:43 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 11:41:43 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 11:41:43 - INFO - [azure_client.py:17] - Azure AI Client initialized successfully
2025-04-05 11:41:43 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-04-05 11:41:43 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-04-05 11:42:17 - INFO - [azure_client.py:186] - Closing Azure AI client connection
2025-04-05 11:42:17 - INFO - [database.py:238] - Closing database connection
2025-04-05 11:42:17 - INFO - [feedback_manager.py:668] - Closing database connection
2025-04-05 11:42:26 - INFO - [app.py:57] - Debug logging enabled for SQL generator and agents
2025-04-05 11:42:26 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 11:42:26 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 11:42:26 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 11:42:26 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 11:42:26 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 11:42:26 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 11:42:26 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 11:42:26 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 11:42:26 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 11:42:26 - INFO - [azure_client.py:11] - Initializing Azure AI Client using LLM Engine
2025-04-05 11:42:26 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 11:42:26 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 11:42:26 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 11:42:26 - INFO - [azure_client.py:17] - Azure AI Client initialized successfully
2025-04-05 11:42:26 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-04-05 11:42:26 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-04-05 11:44:44 - INFO - [azure_client.py:186] - Closing Azure AI client connection
2025-04-05 11:44:44 - INFO - [database.py:238] - Closing database connection
2025-04-05 11:44:44 - INFO - [feedback_manager.py:668] - Closing database connection
2025-04-05 11:44:52 - INFO - [app.py:57] - Debug logging enabled for SQL generator and agents
2025-04-05 11:44:52 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 11:44:52 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 11:44:52 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 11:44:52 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 11:44:52 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 11:44:52 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 11:44:52 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 11:44:52 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 11:44:52 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 11:44:52 - INFO - [azure_client.py:11] - Initializing Azure AI Client using LLM Engine
2025-04-05 11:44:52 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 11:44:52 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 11:44:52 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 11:44:52 - INFO - [azure_client.py:17] - Azure AI Client initialized successfully
2025-04-05 11:44:52 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-04-05 11:44:52 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-04-05 11:46:18 - INFO - [azure_client.py:186] - Closing Azure AI client connection
2025-04-05 11:46:18 - INFO - [database.py:238] - Closing database connection
2025-04-05 11:46:18 - INFO - [feedback_manager.py:668] - Closing database connection
2025-04-05 11:46:22 - INFO - [app.py:57] - Debug logging enabled for SQL generator and agents
2025-04-05 11:46:22 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 11:46:22 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 11:46:22 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 11:46:22 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 11:46:22 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 11:46:22 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 11:46:22 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 11:46:22 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 11:46:22 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 11:46:22 - INFO - [azure_client.py:11] - Initializing Azure AI Client using LLM Engine
2025-04-05 11:46:22 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 11:46:22 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 11:46:22 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 11:46:22 - INFO - [azure_client.py:17] - Azure AI Client initialized successfully
2025-04-05 11:46:22 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-04-05 11:46:22 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-04-05 11:50:12 - INFO - [azure_client.py:186] - Closing Azure AI client connection
2025-04-05 11:50:12 - INFO - [database.py:238] - Closing database connection
2025-04-05 11:50:12 - INFO - [feedback_manager.py:668] - Closing database connection
2025-04-05 11:50:20 - INFO - [app.py:61] - Debug logging enabled for SQL generator and agents
2025-04-05 11:50:20 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 11:50:20 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 11:50:20 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 11:50:20 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 11:50:20 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 11:50:20 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 11:50:20 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 11:50:20 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 11:50:20 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 11:50:20 - INFO - [azure_client.py:11] - Initializing Azure AI Client using LLM Engine
2025-04-05 11:50:20 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 11:50:20 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 11:50:20 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 11:50:20 - INFO - [azure_client.py:17] - Azure AI Client initialized successfully
2025-04-05 11:50:20 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-04-05 11:50:20 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-04-05 11:54:34 - INFO - [azure_client.py:186] - Closing Azure AI client connection
2025-04-05 11:54:34 - INFO - [database.py:238] - Closing database connection
2025-04-05 11:54:34 - INFO - [feedback_manager.py:668] - Closing database connection
2025-04-05 11:54:40 - INFO - [app.py:61] - Debug logging enabled for SQL generator and agents
2025-04-05 11:54:40 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 11:54:40 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 11:54:40 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 11:54:40 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 11:54:40 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 11:54:40 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 11:54:40 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 11:54:40 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 11:54:40 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 11:54:40 - INFO - [azure_client.py:11] - Initializing Azure AI Client using LLM Engine
2025-04-05 11:54:40 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 11:54:40 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 11:54:40 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 11:54:40 - INFO - [azure_client.py:17] - Azure AI Client initialized successfully
2025-04-05 11:54:40 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-04-05 11:54:40 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-04-05 11:54:44 - INFO - [azure_client.py:186] - Closing Azure AI client connection
2025-04-05 11:54:44 - INFO - [database.py:238] - Closing database connection
2025-04-05 11:54:44 - INFO - [feedback_manager.py:668] - Closing database connection
2025-04-05 11:54:52 - INFO - [app.py:61] - Debug logging enabled for SQL generator and agents
2025-04-05 11:54:52 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 11:54:52 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 11:54:52 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 11:54:52 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 11:54:52 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 11:54:52 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 11:54:52 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 11:54:52 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 11:54:52 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 11:54:52 - INFO - [azure_client.py:11] - Initializing Azure AI Client using LLM Engine
2025-04-05 11:54:52 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 11:54:52 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 11:54:52 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 11:54:52 - INFO - [azure_client.py:17] - Azure AI Client initialized successfully
2025-04-05 11:54:52 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-04-05 11:54:52 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-04-05 11:56:29 - INFO - [azure_client.py:186] - Closing Azure AI client connection
2025-04-05 11:56:29 - INFO - [database.py:238] - Closing database connection
2025-04-05 11:56:29 - INFO - [feedback_manager.py:668] - Closing database connection
2025-04-05 11:56:39 - INFO - [app.py:61] - Debug logging enabled for SQL generator and agents
2025-04-05 11:56:39 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 11:56:39 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 11:56:39 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 11:56:39 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 11:56:39 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 11:56:39 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 11:56:39 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 11:56:39 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 11:56:39 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 11:56:39 - INFO - [azure_client.py:11] - Initializing Azure AI Client using LLM Engine
2025-04-05 11:56:39 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 11:56:39 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 11:56:39 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 11:56:39 - INFO - [azure_client.py:17] - Azure AI Client initialized successfully
2025-04-05 11:56:39 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-04-05 11:56:39 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-04-05 11:58:03 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-04-05 11:58:03 - INFO - [feedback_manager.py:43] - Attempting database connection
2025-04-05 11:58:03 - INFO - [feedback_manager.py:47] - Database connection established in 0.00s
2025-04-05 11:58:03 - INFO - [feedback_manager.py:531] - Retrieved 0 samples (page 1, limit 10)
2025-04-05 11:58:03 - INFO - [app.py:260] - Schema requested for workspace: dfd
2025-04-05 11:58:13 - INFO - [azure_client.py:186] - Closing Azure AI client connection
2025-04-05 11:58:13 - INFO - [database.py:238] - Closing database connection
2025-04-05 11:58:13 - INFO - [feedback_manager.py:668] - Closing database connection
2025-04-05 11:58:18 - INFO - [app.py:61] - Debug logging enabled for SQL generator and agents
2025-04-05 11:58:18 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 11:58:18 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 11:58:18 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 11:58:18 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 11:58:18 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 11:58:18 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 11:58:18 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 11:58:18 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 11:58:18 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 11:58:18 - INFO - [azure_client.py:11] - Initializing Azure AI Client using LLM Engine
2025-04-05 11:58:18 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 11:58:18 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 11:58:18 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 11:58:18 - INFO - [azure_client.py:17] - Azure AI Client initialized successfully
2025-04-05 11:58:18 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-04-05 11:58:18 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-04-05 11:59:33 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-04-05 11:59:33 - INFO - [feedback_manager.py:43] - Attempting database connection
2025-04-05 11:59:33 - INFO - [feedback_manager.py:47] - Database connection established in 0.00s
2025-04-05 11:59:33 - INFO - [feedback_manager.py:531] - Retrieved 0 samples (page 1, limit 10)
2025-04-05 12:07:34 - INFO - [azure_client.py:186] - Closing Azure AI client connection
2025-04-05 12:07:34 - INFO - [database.py:238] - Closing database connection
2025-04-05 12:07:34 - INFO - [feedback_manager.py:668] - Closing database connection
2025-04-05 12:07:39 - INFO - [app.py:61] - Debug logging enabled for SQL generator and agents
2025-04-05 12:07:39 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 12:07:39 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 12:07:39 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 12:07:39 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 12:07:39 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 12:07:39 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 12:07:39 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 12:07:39 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 12:07:39 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 12:07:39 - INFO - [azure_client.py:11] - Initializing Azure AI Client using LLM Engine
2025-04-05 12:07:39 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 12:07:39 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 12:07:39 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 12:07:39 - INFO - [azure_client.py:17] - Azure AI Client initialized successfully
2025-04-05 12:07:39 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-04-05 12:07:39 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-04-05 12:09:52 - INFO - [azure_client.py:186] - Closing Azure AI client connection
2025-04-05 12:09:52 - INFO - [database.py:238] - Closing database connection
2025-04-05 12:09:52 - INFO - [feedback_manager.py:668] - Closing database connection
2025-04-05 12:10:02 - INFO - [app.py:61] - Debug logging enabled for SQL generator and agents
2025-04-05 12:10:02 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 12:10:02 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 12:10:02 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 12:10:02 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 12:10:02 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 12:10:02 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 12:10:02 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 12:10:02 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 12:10:02 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 12:10:02 - INFO - [azure_client.py:11] - Initializing Azure AI Client using LLM Engine
2025-04-05 12:10:02 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 12:10:02 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 12:10:02 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 12:10:02 - INFO - [azure_client.py:17] - Azure AI Client initialized successfully
2025-04-05 12:10:02 - INFO - [database.py:18] - Database manager initialized with connection: sqlite:///text2sql.db
2025-04-05 12:10:02 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-04-05 12:12:10 - INFO - [azure_client.py:186] - Closing Azure AI client connection
2025-04-05 12:12:10 - INFO - [database.py:238] - Closing database connection
2025-04-05 12:12:10 - INFO - [feedback_manager.py:668] - Closing database connection
2025-04-05 12:12:18 - INFO - [azure_client.py:186] - Closing Azure AI client connection
2025-04-05 12:12:18 - INFO - [database.py:238] - Closing database connection
2025-04-05 12:12:18 - INFO - [feedback_manager.py:668] - Closing database connection
2025-04-05 12:21:02 - INFO - [app.py:61] - Debug logging enabled for SQL generator and agents
2025-04-05 12:21:02 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 12:21:02 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 12:21:02 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 12:21:02 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 12:21:02 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 12:21:02 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 12:21:02 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 12:21:02 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 12:21:02 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 12:21:02 - INFO - [azure_client.py:11] - Initializing Azure AI Client using LLM Engine
2025-04-05 12:21:02 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 12:21:02 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 12:21:02 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 12:21:02 - INFO - [azure_client.py:17] - Azure AI Client initialized successfully
2025-04-05 12:21:02 - INFO - [database.py:38] - Database manager initialized with connection: sqlite:///text2sql.db
2025-04-05 12:21:02 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-04-05 12:21:08 - INFO - [app.py:61] - Debug logging enabled for SQL generator and agents
2025-04-05 12:21:08 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 12:21:08 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 12:21:08 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 12:21:08 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 12:21:08 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 12:21:08 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 12:21:08 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 12:21:08 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 12:21:08 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 12:21:08 - INFO - [azure_client.py:11] - Initializing Azure AI Client using LLM Engine
2025-04-05 12:21:08 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 12:21:08 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 12:21:08 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 12:21:08 - INFO - [azure_client.py:17] - Azure AI Client initialized successfully
2025-04-05 12:21:08 - INFO - [database.py:38] - Database manager initialized with connection: sqlite:///text2sql.db
2025-04-05 12:21:08 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-04-05 12:25:04 - INFO - [azure_client.py:186] - Closing Azure AI client connection
2025-04-05 12:25:04 - INFO - [database.py:258] - Closing database connection
2025-04-05 12:25:04 - INFO - [feedback_manager.py:668] - Closing database connection
2025-04-05 12:25:10 - INFO - [app.py:61] - Debug logging enabled for SQL generator and agents
2025-04-05 12:25:10 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 12:25:10 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 12:25:10 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 12:25:10 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 12:25:10 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 12:25:10 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 12:25:10 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 12:25:10 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 12:25:10 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 12:25:10 - INFO - [azure_client.py:11] - Initializing Azure AI Client using LLM Engine
2025-04-05 12:25:10 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 12:25:10 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 12:25:10 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 12:25:10 - INFO - [azure_client.py:17] - Azure AI Client initialized successfully
2025-04-05 12:25:10 - INFO - [database.py:38] - Database manager initialized with connection: sqlite:///text2sql.db
2025-04-05 12:25:10 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-04-05 12:26:42 - INFO - [azure_client.py:186] - Closing Azure AI client connection
2025-04-05 12:26:42 - INFO - [database.py:258] - Closing database connection
2025-04-05 12:26:42 - INFO - [feedback_manager.py:668] - Closing database connection
2025-04-05 12:26:49 - INFO - [app.py:61] - Debug logging enabled for SQL generator and agents
2025-04-05 12:26:49 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 12:26:49 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 12:26:49 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 12:26:49 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 12:26:49 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 12:26:49 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 12:26:49 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 12:26:49 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 12:26:49 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 12:26:49 - INFO - [azure_client.py:11] - Initializing Azure AI Client using LLM Engine
2025-04-05 12:26:49 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 12:26:49 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 12:26:49 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 12:26:49 - INFO - [azure_client.py:17] - Azure AI Client initialized successfully
2025-04-05 12:26:49 - INFO - [database.py:38] - Database manager initialized with connection: sqlite:///text2sql.db
2025-04-05 12:26:49 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-04-05 12:27:34 - INFO - [azure_client.py:186] - Closing Azure AI client connection
2025-04-05 12:27:34 - INFO - [database.py:258] - Closing database connection
2025-04-05 12:27:34 - INFO - [feedback_manager.py:668] - Closing database connection
2025-04-05 12:27:39 - INFO - [app.py:62] - Debug logging enabled for SQL generator and agents
2025-04-05 12:27:39 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 12:27:39 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 12:27:39 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 12:27:39 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 12:27:39 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 12:27:39 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 12:27:39 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 12:27:39 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 12:27:39 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 12:27:39 - INFO - [azure_client.py:11] - Initializing Azure AI Client using LLM Engine
2025-04-05 12:27:39 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 12:27:39 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 12:27:39 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 12:27:39 - INFO - [azure_client.py:17] - Azure AI Client initialized successfully
2025-04-05 12:27:39 - INFO - [database.py:38] - Database manager initialized with connection: sqlite:///text2sql.db
2025-04-05 12:27:39 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-04-05 12:34:07 - INFO - [azure_client.py:186] - Closing Azure AI client connection
2025-04-05 12:34:07 - INFO - [database.py:258] - Closing database connection
2025-04-05 12:34:07 - INFO - [feedback_manager.py:668] - Closing database connection
2025-04-05 12:34:13 - INFO - [app.py:61] - Debug logging enabled for SQL generator and agents
2025-04-05 12:34:13 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 12:34:13 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 12:34:13 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 12:34:13 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 12:34:13 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 12:34:13 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 12:34:13 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 12:34:13 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 12:34:13 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 12:34:13 - INFO - [azure_client.py:11] - Initializing Azure AI Client using LLM Engine
2025-04-05 12:34:13 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 12:34:13 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 12:34:13 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 12:34:13 - INFO - [azure_client.py:17] - Azure AI Client initialized successfully
2025-04-05 12:34:13 - INFO - [database.py:38] - Database manager initialized with connection: sqlite:///text2sql.db
2025-04-05 12:34:13 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-04-05 12:34:19 - INFO - [azure_client.py:186] - Closing Azure AI client connection
2025-04-05 12:34:19 - INFO - [database.py:258] - Closing database connection
2025-04-05 12:34:19 - INFO - [feedback_manager.py:668] - Closing database connection
2025-04-05 12:34:30 - INFO - [app.py:61] - Debug logging enabled for SQL generator and agents
2025-04-05 12:34:30 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 12:34:30 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 12:34:30 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 12:34:30 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 12:34:30 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 12:34:30 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 12:34:30 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 12:34:30 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 12:34:30 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 12:34:30 - INFO - [azure_client.py:11] - Initializing Azure AI Client using LLM Engine
2025-04-05 12:34:30 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 12:34:30 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 12:34:30 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 12:34:30 - INFO - [azure_client.py:17] - Azure AI Client initialized successfully
2025-04-05 12:34:30 - INFO - [database.py:38] - Database manager initialized with connection: sqlite:///text2sql.db
2025-04-05 12:34:30 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-04-05 12:37:19 - INFO - [azure_client.py:186] - Closing Azure AI client connection
2025-04-05 12:37:19 - INFO - [database.py:258] - Closing database connection
2025-04-05 12:37:19 - INFO - [feedback_manager.py:668] - Closing database connection
2025-04-05 12:37:26 - INFO - [app.py:61] - Debug logging enabled for SQL generator and agents
2025-04-05 12:37:26 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 12:37:26 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 12:37:26 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 12:37:26 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 12:37:26 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 12:37:26 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 12:37:26 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 12:37:26 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 12:37:26 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 12:37:26 - INFO - [azure_client.py:11] - Initializing Azure AI Client using LLM Engine
2025-04-05 12:37:26 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 12:37:26 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 12:37:26 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 12:37:26 - INFO - [azure_client.py:17] - Azure AI Client initialized successfully
2025-04-05 12:37:26 - INFO - [database.py:38] - Database manager initialized with connection: sqlite:///text2sql.db
2025-04-05 12:37:26 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-04-05 12:38:34 - INFO - [azure_client.py:186] - Closing Azure AI client connection
2025-04-05 12:38:34 - INFO - [database.py:258] - Closing database connection
2025-04-05 12:38:34 - INFO - [feedback_manager.py:668] - Closing database connection
2025-04-05 12:38:39 - INFO - [app.py:61] - Debug logging enabled for SQL generator and agents
2025-04-05 12:38:39 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 12:38:39 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 12:38:39 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 12:38:39 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 12:38:39 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 12:38:39 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 12:38:39 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 12:38:39 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 12:38:39 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 12:38:39 - INFO - [azure_client.py:11] - Initializing Azure AI Client using LLM Engine
2025-04-05 12:38:39 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 12:38:39 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 12:38:39 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 12:38:39 - INFO - [azure_client.py:17] - Azure AI Client initialized successfully
2025-04-05 12:38:39 - INFO - [database.py:38] - Database manager initialized with connection: sqlite:///text2sql.db
2025-04-05 12:38:39 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-04-05 12:38:48 - INFO - [azure_client.py:186] - Closing Azure AI client connection
2025-04-05 12:38:48 - INFO - [database.py:258] - Closing database connection
2025-04-05 12:38:48 - INFO - [feedback_manager.py:668] - Closing database connection
2025-04-05 12:38:52 - INFO - [app.py:61] - Debug logging enabled for SQL generator and agents
2025-04-05 12:38:52 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 12:38:52 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 12:38:52 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 12:38:52 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 12:38:52 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 12:38:52 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 12:38:52 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 12:38:52 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 12:38:52 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 12:38:52 - INFO - [azure_client.py:11] - Initializing Azure AI Client using LLM Engine
2025-04-05 12:38:52 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 12:38:52 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 12:38:52 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 12:38:52 - INFO - [azure_client.py:17] - Azure AI Client initialized successfully
2025-04-05 12:38:52 - INFO - [database.py:38] - Database manager initialized with connection: sqlite:///text2sql.db
2025-04-05 12:38:52 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-04-05 12:41:01 - INFO - [azure_client.py:186] - Closing Azure AI client connection
2025-04-05 12:41:01 - INFO - [database.py:258] - Closing database connection
2025-04-05 12:41:01 - INFO - [feedback_manager.py:668] - Closing database connection
2025-04-05 12:41:06 - INFO - [app.py:61] - Debug logging enabled for SQL generator and agents
2025-04-05 12:41:06 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 12:41:06 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 12:41:06 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 12:41:06 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 12:41:06 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 12:41:06 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 12:41:06 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 12:41:06 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 12:41:06 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 12:41:06 - INFO - [azure_client.py:11] - Initializing Azure AI Client using LLM Engine
2025-04-05 12:41:06 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 12:41:06 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 12:41:06 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 12:41:06 - INFO - [azure_client.py:17] - Azure AI Client initialized successfully
2025-04-05 12:41:06 - INFO - [database.py:38] - Database manager initialized with connection: sqlite:///text2sql.db
2025-04-05 12:41:06 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-04-05 12:41:29 - INFO - [azure_client.py:186] - Closing Azure AI client connection
2025-04-05 12:41:29 - INFO - [database.py:258] - Closing database connection
2025-04-05 12:41:29 - INFO - [feedback_manager.py:668] - Closing database connection
2025-04-05 12:41:34 - INFO - [app.py:61] - Debug logging enabled for SQL generator and agents
2025-04-05 12:41:34 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 12:41:34 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 12:41:34 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 12:41:34 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 12:41:34 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 12:41:34 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 12:41:34 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 12:41:34 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 12:41:34 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 12:41:34 - INFO - [azure_client.py:11] - Initializing Azure AI Client using LLM Engine
2025-04-05 12:41:34 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 12:41:34 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 12:41:34 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 12:41:34 - INFO - [azure_client.py:17] - Azure AI Client initialized successfully
2025-04-05 12:41:34 - INFO - [database.py:38] - Database manager initialized with connection: sqlite:///text2sql.db
2025-04-05 12:41:34 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-04-05 12:42:05 - INFO - [azure_client.py:186] - Closing Azure AI client connection
2025-04-05 12:42:05 - INFO - [database.py:258] - Closing database connection
2025-04-05 12:42:05 - INFO - [feedback_manager.py:668] - Closing database connection
2025-04-05 12:42:09 - INFO - [app.py:61] - Debug logging enabled for SQL generator and agents
2025-04-05 12:42:09 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 12:42:09 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 12:42:09 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 12:42:09 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 12:42:09 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 12:42:09 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 12:42:09 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 12:42:09 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 12:42:09 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 12:42:09 - INFO - [azure_client.py:11] - Initializing Azure AI Client using LLM Engine
2025-04-05 12:42:09 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 12:42:09 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 12:42:09 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 12:42:09 - INFO - [azure_client.py:17] - Azure AI Client initialized successfully
2025-04-05 12:42:09 - INFO - [database.py:38] - Database manager initialized with connection: sqlite:///text2sql.db
2025-04-05 12:42:09 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-04-05 12:44:05 - INFO - [app.py:260] - Schema requested for workspace: 
2025-04-05 12:46:52 - INFO - [azure_client.py:186] - Closing Azure AI client connection
2025-04-05 12:46:52 - INFO - [database.py:258] - Closing database connection
2025-04-05 12:46:52 - INFO - [feedback_manager.py:668] - Closing database connection
2025-04-05 12:46:58 - INFO - [app.py:61] - Debug logging enabled for SQL generator and agents
2025-04-05 12:46:58 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 12:46:58 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 12:46:58 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 12:46:58 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 12:46:58 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 12:46:58 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 12:46:58 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 12:46:58 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 12:46:58 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 12:46:58 - INFO - [azure_client.py:11] - Initializing Azure AI Client using LLM Engine
2025-04-05 12:46:58 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 12:46:58 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 12:46:58 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 12:46:58 - INFO - [azure_client.py:17] - Azure AI Client initialized successfully
2025-04-05 12:46:58 - INFO - [database.py:38] - Database manager initialized with connection: sqlite:///text2sql.db
2025-04-05 12:46:58 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-04-05 12:47:43 - INFO - [azure_client.py:186] - Closing Azure AI client connection
2025-04-05 12:47:43 - INFO - [database.py:258] - Closing database connection
2025-04-05 12:47:43 - INFO - [feedback_manager.py:668] - Closing database connection
2025-04-05 12:47:52 - INFO - [app.py:62] - Debug logging enabled for SQL generator and agents
2025-04-05 12:47:52 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 12:47:52 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 12:47:52 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 12:47:52 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 12:47:52 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 12:47:52 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 12:47:52 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 12:47:52 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 12:47:52 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 12:47:52 - INFO - [azure_client.py:11] - Initializing Azure AI Client using LLM Engine
2025-04-05 12:47:52 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 12:47:52 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 12:47:52 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 12:47:52 - INFO - [azure_client.py:17] - Azure AI Client initialized successfully
2025-04-05 12:47:52 - INFO - [database.py:38] - Database manager initialized with connection: sqlite:///text2sql.db
2025-04-05 12:47:52 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-04-05 12:48:11 - INFO - [azure_client.py:186] - Closing Azure AI client connection
2025-04-05 12:48:11 - INFO - [database.py:258] - Closing database connection
2025-04-05 12:48:11 - INFO - [feedback_manager.py:668] - Closing database connection
2025-04-05 12:48:16 - INFO - [app.py:62] - Debug logging enabled for SQL generator and agents
2025-04-05 12:48:16 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 12:48:16 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 12:48:16 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 12:48:16 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 12:48:16 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 12:48:16 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 12:48:16 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 12:48:16 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 12:48:16 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 12:48:16 - INFO - [azure_client.py:11] - Initializing Azure AI Client using LLM Engine
2025-04-05 12:48:16 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 12:48:16 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 12:48:16 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 12:48:16 - INFO - [azure_client.py:17] - Azure AI Client initialized successfully
2025-04-05 12:48:16 - INFO - [database.py:38] - Database manager initialized with connection: sqlite:///text2sql.db
2025-04-05 12:48:16 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-04-05 12:50:02 - INFO - [azure_client.py:186] - Closing Azure AI client connection
2025-04-05 12:50:02 - INFO - [database.py:258] - Closing database connection
2025-04-05 12:50:02 - INFO - [feedback_manager.py:668] - Closing database connection
2025-04-05 12:50:11 - INFO - [app.py:62] - Debug logging enabled for SQL generator and agents
2025-04-05 12:50:11 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 12:50:11 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 12:50:11 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 12:50:11 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 12:50:11 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 12:50:11 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 12:50:11 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 12:50:11 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 12:50:11 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 12:50:11 - INFO - [azure_client.py:11] - Initializing Azure AI Client using LLM Engine
2025-04-05 12:50:11 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 12:50:11 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 12:50:11 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 12:50:11 - INFO - [azure_client.py:17] - Azure AI Client initialized successfully
2025-04-05 12:50:11 - INFO - [database.py:38] - Database manager initialized with connection: sqlite:///text2sql.db
2025-04-05 12:50:11 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-04-05 12:50:57 - INFO - [azure_client.py:186] - Closing Azure AI client connection
2025-04-05 12:50:57 - INFO - [database.py:258] - Closing database connection
2025-04-05 12:50:57 - INFO - [feedback_manager.py:668] - Closing database connection
2025-04-05 12:51:06 - INFO - [app.py:62] - Debug logging enabled for SQL generator and agents
2025-04-05 12:51:06 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 12:51:06 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 12:51:06 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 12:51:06 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 12:51:06 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 12:51:06 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 12:51:06 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 12:51:06 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 12:51:06 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 12:51:06 - INFO - [azure_client.py:11] - Initializing Azure AI Client using LLM Engine
2025-04-05 12:51:06 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 12:51:06 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 12:51:06 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 12:51:06 - INFO - [azure_client.py:17] - Azure AI Client initialized successfully
2025-04-05 12:51:06 - INFO - [database.py:38] - Database manager initialized with connection: sqlite:///text2sql.db
2025-04-05 12:51:06 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-04-05 12:51:30 - INFO - [azure_client.py:186] - Closing Azure AI client connection
2025-04-05 12:51:30 - INFO - [database.py:258] - Closing database connection
2025-04-05 12:51:30 - INFO - [feedback_manager.py:668] - Closing database connection
2025-04-05 12:51:34 - INFO - [app.py:62] - Debug logging enabled for SQL generator and agents
2025-04-05 12:51:34 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 12:51:34 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 12:51:34 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 12:51:34 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 12:51:34 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 12:51:34 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 12:51:34 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 12:51:34 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 12:51:34 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 12:51:34 - INFO - [azure_client.py:11] - Initializing Azure AI Client using LLM Engine
2025-04-05 12:51:34 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 12:51:34 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 12:51:34 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 12:51:34 - INFO - [azure_client.py:17] - Azure AI Client initialized successfully
2025-04-05 12:51:34 - INFO - [database.py:38] - Database manager initialized with connection: sqlite:///text2sql.db
2025-04-05 12:51:34 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-04-05 12:52:59 - INFO - [azure_client.py:186] - Closing Azure AI client connection
2025-04-05 12:52:59 - INFO - [database.py:258] - Closing database connection
2025-04-05 12:52:59 - INFO - [feedback_manager.py:668] - Closing database connection
2025-04-05 12:53:05 - INFO - [app.py:62] - Debug logging enabled for SQL generator and agents
2025-04-05 12:53:05 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 12:53:05 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 12:53:05 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 12:53:05 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 12:53:05 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 12:53:05 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 12:53:05 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 12:53:05 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 12:53:05 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 12:53:05 - INFO - [azure_client.py:11] - Initializing Azure AI Client using LLM Engine
2025-04-05 12:53:05 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 12:53:05 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 12:53:05 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 12:53:05 - INFO - [azure_client.py:17] - Azure AI Client initialized successfully
2025-04-05 12:53:05 - INFO - [database.py:38] - Database manager initialized with connection: sqlite:///text2sql.db
2025-04-05 12:53:05 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-04-05 12:53:38 - ERROR - [user_manager.py:389] - Error updating role permissions: int() argument must be a string, a bytes-like object or a real number, not 'NoneType'
2025-04-05 12:54:32 - ERROR - [user_manager.py:389] - Error updating role permissions: int() argument must be a string, a bytes-like object or a real number, not 'NoneType'
2025-04-05 12:56:01 - INFO - [azure_client.py:186] - Closing Azure AI client connection
2025-04-05 12:56:01 - INFO - [database.py:258] - Closing database connection
2025-04-05 12:56:01 - INFO - [feedback_manager.py:668] - Closing database connection
2025-04-05 12:56:07 - INFO - [app.py:62] - Debug logging enabled for SQL generator and agents
2025-04-05 12:56:07 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 12:56:07 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 12:56:07 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 12:56:07 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 12:56:07 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 12:56:07 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 12:56:07 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 12:56:07 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 12:56:07 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 12:56:07 - INFO - [azure_client.py:11] - Initializing Azure AI Client using LLM Engine
2025-04-05 12:56:07 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 12:56:07 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 12:56:07 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 12:56:07 - INFO - [azure_client.py:17] - Azure AI Client initialized successfully
2025-04-05 12:56:07 - INFO - [database.py:38] - Database manager initialized with connection: sqlite:///text2sql.db
2025-04-05 12:56:07 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-04-05 12:57:31 - INFO - [azure_client.py:186] - Closing Azure AI client connection
2025-04-05 12:57:31 - INFO - [database.py:258] - Closing database connection
2025-04-05 12:57:31 - INFO - [feedback_manager.py:668] - Closing database connection
2025-04-05 12:57:37 - INFO - [app.py:62] - Debug logging enabled for SQL generator and agents
2025-04-05 12:57:37 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 12:57:37 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 12:57:37 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 12:57:37 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 12:57:37 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 12:57:37 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 12:57:37 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 12:57:37 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 12:57:37 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 12:57:37 - INFO - [azure_client.py:11] - Initializing Azure AI Client using LLM Engine
2025-04-05 12:57:37 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 12:57:37 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 12:57:37 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 12:57:37 - INFO - [azure_client.py:17] - Azure AI Client initialized successfully
2025-04-05 12:57:37 - INFO - [database.py:38] - Database manager initialized with connection: sqlite:///text2sql.db
2025-04-05 12:57:37 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-04-05 12:58:25 - INFO - [azure_client.py:186] - Closing Azure AI client connection
2025-04-05 12:58:25 - INFO - [database.py:258] - Closing database connection
2025-04-05 12:58:25 - INFO - [feedback_manager.py:668] - Closing database connection
2025-04-05 12:58:34 - INFO - [app.py:63] - Debug logging enabled for SQL generator and agents
2025-04-05 12:58:34 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 12:58:34 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 12:58:34 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 12:58:34 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 12:58:34 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 12:58:34 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 12:58:34 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 12:58:34 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 12:58:34 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 12:58:34 - INFO - [azure_client.py:11] - Initializing Azure AI Client using LLM Engine
2025-04-05 12:58:34 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 12:58:34 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 12:58:34 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 12:58:34 - INFO - [azure_client.py:17] - Azure AI Client initialized successfully
2025-04-05 12:58:34 - INFO - [database.py:38] - Database manager initialized with connection: sqlite:///text2sql.db
2025-04-05 12:58:34 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-04-05 12:59:42 - INFO - [database.py:44] - Attempting database connection
2025-04-05 12:59:42 - INFO - [database.py:48] - Database connection established in 0.00s
2025-04-05 12:59:42 - INFO - [llm_engine.py:55] - [TABLE] Completion generation started
2025-04-05 12:59:43 - INFO - [llm_engine.py:92] - [TABLE] Completion generation completed in 1.77s
2025-04-05 12:59:43 - INFO - [llm_engine.py:93] - **************************
2025-04-05 12:59:43 - INFO - [feedback_manager.py:43] - Attempting database connection
2025-04-05 12:59:44 - INFO - [feedback_manager.py:47] - Database connection established in 0.00s
2025-04-05 12:59:44 - INFO - [feedback_manager.py:267] - Stage 1: Vector search for 'get me all customers...'
2025-04-05 12:59:44 - INFO - [feedback_manager.py:62] - Loading embedding model 'sentence-transformers/all-MiniLM-L12-v2'
2025-04-05 12:59:47 - INFO - [feedback_manager.py:65] - Embedding model loaded in 3.19s
2025-04-05 12:59:47 - WARNING - [feedback_manager.py:324] - No candidates found from vector search
2025-04-05 12:59:47 - INFO - [azure_client.py:35] - SQL generation started for query: 'get me all customers'
2025-04-05 12:59:47 - INFO - [azure_client.py:69] - Including schema information (587 chars)
2025-04-05 12:59:47 - INFO - [azure_client.py:104] - Including 3 SQL examples (no similarity examples found)
2025-04-05 12:59:47 - INFO - [azure_client.py:114] - PROMPT: [{'role': 'system', 'content': "You are an expert SQL assistant. Convert natural language questions into precise, executable SQL queries.\nYour task is to:\n1. Analyze the provided schema carefully, noting table relationships and column types\n2. Generate a SQL query that accurately answers the user's question\n3. Consider performance by selecting only necessary columns\n4. Use appropriate JOIN conditions based on primary/foreign key relationships or provided join conditions\n5. Include a brief explanation of your query\n\nRules:\n- Include table names and column references exactly as provided in the schema\n- Use appropriate SQL functions based on column data types\n- Consider NULL values in your conditions\n- Use table aliases for better readability when joining multiple tables\n- Add column aliases for computed values\n- Format the SQL query with proper indentation\n- If similar queries are provided, strictly use that as format or syntax\n- Return the SQL inside a code block tagged with ```sql\n\nExample output format:\nHere's a query that will [explanation]...\n\n```sql\nSELECT ...\nFROM ...\nWHERE ...\n```"}, {'role': 'user', 'content': "Here's the database schema:\nTable: customers\nDescription: Customer information and profiles\nColumns: customer_id (INTEGER) - Unique customer identifier, first_name (TEXT) - Customer's first name, last_name (TEXT) - Customer's last name, email (TEXT) - Customer's email address (unique), phone (TEXT) - Customer's phone number, address (TEXT) - Customer's street address, city (TEXT) - Customer's city, state (TEXT) - Customer's state/province, country (TEXT) - Customer's country, postal_code (TEXT) - Customer's postal/zip code, registration_date (TEXT) - Date when customer registered\nPrimary Key(s): customer_id\n"}, {'role': 'user', 'content': 'Here are some example queries and their SQL:\nQuestion: How many records are in the customers table?\nSQL: SELECT COUNT(*) AS record_count FROM customers\n\nQuestion: Get all columns from customers\nSQL: SELECT * FROM customers LIMIT 5\n\nQuestion: Get record from customers by customer_id\nSQL: SELECT * FROM customers WHERE customer_id = 1\n\n'}, {'role': 'user', 'content': 'Convert this question to SQL: get me all customers'}]
2025-04-05 12:59:47 - INFO - [llm_engine.py:55] - [SQL_GEN] Completion generation started
2025-04-05 12:59:49 - INFO - [llm_engine.py:92] - [SQL_GEN] Completion generation completed in 2.06s
2025-04-05 12:59:49 - INFO - [llm_engine.py:93] - **************************
2025-04-05 12:59:49 - INFO - [azure_client.py:150] - Parsing SQL from model response
2025-04-05 12:59:49 - INFO - [azure_client.py:157] - Found SQL code block in response
2025-04-05 12:59:49 - INFO - [azure_client.py:171] - Extracted SQL query (24 chars) and explanation (212 chars)
2025-04-05 12:59:49 - INFO - [azure_client.py:124] - Generated SQL: SELECT * FROM customers;
2025-04-05 12:59:49,441 - QUERY: 'get me all customers' → SQL: SELECT * FROM customers;
2025-04-05 12:59:49 - INFO - [azure_client.py:132] - SQL generation completed in 2.07s
2025-04-05 12:59:49 - INFO - [database.py:65] - Executing SQL query: SELECT * FROM customers;
2025-04-05 12:59:49 - INFO - [database.py:86] - Query returned 5 rows with 11 columns
2025-04-05 12:59:49 - INFO - [database.py:95] - Query processing completed in 0.03s
2025-04-05 12:59:49 - ERROR - [app.py:167] - Exception while processing query: Working outside of request context.

This typically means that you attempted to use functionality that needed
an active HTTP request. Consult the documentation on testing for
information about how to avoid this problem.
Traceback (most recent call last):
  File "/home/vijay/text2sql/app.py", line 156, in process_in_background
    if session.get('user_id'):
       ^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/werkzeug/local.py", line 318, in __get__
    obj = instance._get_current_object()
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/werkzeug/local.py", line 519, in _get_current_object
    raise RuntimeError(unbound_message) from None
RuntimeError: Working outside of request context.

This typically means that you attempted to use functionality that needed
an active HTTP request. Consult the documentation on testing for
information about how to avoid this problem.
2025-04-05 13:00:20 - INFO - [azure_client.py:186] - Closing Azure AI client connection
2025-04-05 13:00:20 - INFO - [database.py:258] - Closing database connection
2025-04-05 13:00:20 - INFO - [feedback_manager.py:668] - Closing database connection
2025-04-05 13:00:25 - INFO - [app.py:63] - Debug logging enabled for SQL generator and agents
2025-04-05 13:00:25 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 13:00:25 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 13:00:25 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 13:00:25 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 13:00:25 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 13:00:25 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 13:00:25 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 13:00:25 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 13:00:25 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 13:00:25 - INFO - [azure_client.py:11] - Initializing Azure AI Client using LLM Engine
2025-04-05 13:00:25 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 13:00:25 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 13:00:25 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 13:00:25 - INFO - [azure_client.py:17] - Azure AI Client initialized successfully
2025-04-05 13:00:25 - INFO - [database.py:38] - Database manager initialized with connection: sqlite:///text2sql.db
2025-04-05 13:00:25 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-04-05 13:00:36 - INFO - [app.py:266] - Schema requested for workspace: dfd
2025-04-05 13:00:40 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-04-05 13:00:40 - INFO - [feedback_manager.py:43] - Attempting database connection
2025-04-05 13:00:40 - INFO - [feedback_manager.py:47] - Database connection established in 0.00s
2025-04-05 13:00:40 - INFO - [feedback_manager.py:531] - Retrieved 0 samples (page 1, limit 10)
2025-04-05 13:00:46 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-04-05 13:00:46 - INFO - [feedback_manager.py:43] - Attempting database connection
2025-04-05 13:00:46 - INFO - [feedback_manager.py:47] - Database connection established in 0.00s
2025-04-05 13:00:46 - INFO - [feedback_manager.py:531] - Retrieved 0 samples (page 1, limit 10)
2025-04-05 13:00:57 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-04-05 13:00:57 - INFO - [feedback_manager.py:43] - Attempting database connection
2025-04-05 13:00:57 - INFO - [feedback_manager.py:47] - Database connection established in 0.00s
2025-04-05 13:00:57 - INFO - [feedback_manager.py:531] - Retrieved 0 samples (page 1, limit 10)
2025-04-05 13:01:26 - INFO - [azure_client.py:186] - Closing Azure AI client connection
2025-04-05 13:01:26 - INFO - [database.py:258] - Closing database connection
2025-04-05 13:01:26 - INFO - [feedback_manager.py:668] - Closing database connection
2025-04-05 13:01:35 - INFO - [app.py:63] - Debug logging enabled for SQL generator and agents
2025-04-05 13:01:35 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 13:01:35 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 13:01:35 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 13:01:35 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 13:01:35 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 13:01:35 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 13:01:35 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 13:01:35 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 13:01:35 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 13:01:35 - INFO - [azure_client.py:11] - Initializing Azure AI Client using LLM Engine
2025-04-05 13:01:35 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 13:01:35 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 13:01:35 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 13:01:35 - INFO - [azure_client.py:17] - Azure AI Client initialized successfully
2025-04-05 13:01:35 - INFO - [database.py:38] - Database manager initialized with connection: sqlite:///text2sql.db
2025-04-05 13:01:35 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-04-05 13:02:05 - INFO - [azure_client.py:186] - Closing Azure AI client connection
2025-04-05 13:02:05 - INFO - [database.py:258] - Closing database connection
2025-04-05 13:02:05 - INFO - [feedback_manager.py:668] - Closing database connection
2025-04-05 13:02:13 - INFO - [app.py:64] - Debug logging enabled for SQL generator and agents
2025-04-05 13:02:13 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 13:02:13 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 13:02:13 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 13:02:13 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 13:02:13 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 13:02:13 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 13:02:13 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 13:02:13 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 13:02:13 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 13:02:13 - INFO - [azure_client.py:11] - Initializing Azure AI Client using LLM Engine
2025-04-05 13:02:13 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 13:02:13 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 13:02:13 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 13:02:13 - INFO - [azure_client.py:17] - Azure AI Client initialized successfully
2025-04-05 13:02:13 - INFO - [database.py:38] - Database manager initialized with connection: sqlite:///text2sql.db
2025-04-05 13:02:13 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-04-05 13:03:03 - INFO - [azure_client.py:186] - Closing Azure AI client connection
2025-04-05 13:03:03 - INFO - [database.py:258] - Closing database connection
2025-04-05 13:03:03 - INFO - [feedback_manager.py:668] - Closing database connection
2025-04-05 13:03:11 - INFO - [app.py:64] - Debug logging enabled for SQL generator and agents
2025-04-05 13:03:11 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 13:03:11 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 13:03:11 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 13:03:11 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 13:03:11 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 13:03:11 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 13:03:11 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 13:03:11 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 13:03:11 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 13:03:11 - INFO - [azure_client.py:11] - Initializing Azure AI Client using LLM Engine
2025-04-05 13:03:11 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 13:03:11 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 13:03:11 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 13:03:11 - INFO - [azure_client.py:17] - Azure AI Client initialized successfully
2025-04-05 13:03:11 - INFO - [database.py:38] - Database manager initialized with connection: sqlite:///text2sql.db
2025-04-05 13:03:11 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-04-05 13:04:01 - INFO - [azure_client.py:186] - Closing Azure AI client connection
2025-04-05 13:04:01 - INFO - [database.py:258] - Closing database connection
2025-04-05 13:04:01 - INFO - [feedback_manager.py:668] - Closing database connection
2025-04-05 13:04:05 - INFO - [app.py:64] - Debug logging enabled for SQL generator and agents
2025-04-05 13:04:05 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 13:04:05 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 13:04:05 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 13:04:05 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 13:04:05 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 13:04:05 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 13:04:05 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 13:04:05 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 13:04:05 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 13:04:05 - INFO - [azure_client.py:11] - Initializing Azure AI Client using LLM Engine
2025-04-05 13:04:05 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 13:04:05 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 13:04:05 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 13:04:05 - INFO - [azure_client.py:17] - Azure AI Client initialized successfully
2025-04-05 13:04:05 - INFO - [database.py:38] - Database manager initialized with connection: sqlite:///text2sql.db
2025-04-05 13:04:05 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-04-05 13:04:07 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-04-05 13:04:07 - INFO - [feedback_manager.py:43] - Attempting database connection
2025-04-05 13:04:07 - INFO - [feedback_manager.py:47] - Database connection established in 0.00s
2025-04-05 13:04:07 - INFO - [feedback_manager.py:531] - Retrieved 0 samples (page 1, limit 10)
2025-04-05 13:04:15 - INFO - [database.py:44] - Attempting database connection
2025-04-05 13:04:15 - INFO - [database.py:48] - Database connection established in 0.00s
2025-04-05 13:04:15 - INFO - [llm_engine.py:55] - [TABLE] Completion generation started
2025-04-05 13:04:32 - INFO - [llm_engine.py:92] - [TABLE] Completion generation completed in 16.78s
2025-04-05 13:04:32 - INFO - [llm_engine.py:93] - **************************
2025-04-05 13:04:32 - INFO - [feedback_manager.py:43] - Attempting database connection
2025-04-05 13:04:32 - INFO - [feedback_manager.py:47] - Database connection established in 0.00s
2025-04-05 13:04:32 - INFO - [feedback_manager.py:267] - Stage 1: Vector search for 'Get me all the customers...'
2025-04-05 13:04:32 - INFO - [feedback_manager.py:62] - Loading embedding model 'sentence-transformers/all-MiniLM-L12-v2'
2025-04-05 13:04:35 - INFO - [feedback_manager.py:65] - Embedding model loaded in 2.64s
2025-04-05 13:04:35 - WARNING - [feedback_manager.py:324] - No candidates found from vector search
2025-04-05 13:04:35 - INFO - [azure_client.py:35] - SQL generation started for query: 'Get me all the customers'
2025-04-05 13:04:35 - INFO - [azure_client.py:69] - Including schema information (587 chars)
2025-04-05 13:04:35 - INFO - [azure_client.py:104] - Including 3 SQL examples (no similarity examples found)
2025-04-05 13:04:35 - INFO - [azure_client.py:114] - PROMPT: [{'role': 'system', 'content': "You are an expert SQL assistant. Convert natural language questions into precise, executable SQL queries.\nYour task is to:\n1. Analyze the provided schema carefully, noting table relationships and column types\n2. Generate a SQL query that accurately answers the user's question\n3. Consider performance by selecting only necessary columns\n4. Use appropriate JOIN conditions based on primary/foreign key relationships or provided join conditions\n5. Include a brief explanation of your query\n\nRules:\n- Include table names and column references exactly as provided in the schema\n- Use appropriate SQL functions based on column data types\n- Consider NULL values in your conditions\n- Use table aliases for better readability when joining multiple tables\n- Add column aliases for computed values\n- Format the SQL query with proper indentation\n- If similar queries are provided, strictly use that as format or syntax\n- Return the SQL inside a code block tagged with ```sql\n\nExample output format:\nHere's a query that will [explanation]...\n\n```sql\nSELECT ...\nFROM ...\nWHERE ...\n```"}, {'role': 'user', 'content': "Here's the database schema:\nTable: customers\nDescription: Customer information and profiles\nColumns: customer_id (INTEGER) - Unique customer identifier, first_name (TEXT) - Customer's first name, last_name (TEXT) - Customer's last name, email (TEXT) - Customer's email address (unique), phone (TEXT) - Customer's phone number, address (TEXT) - Customer's street address, city (TEXT) - Customer's city, state (TEXT) - Customer's state/province, country (TEXT) - Customer's country, postal_code (TEXT) - Customer's postal/zip code, registration_date (TEXT) - Date when customer registered\nPrimary Key(s): customer_id\n"}, {'role': 'user', 'content': 'Here are some example queries and their SQL:\nQuestion: How many records are in the customers table?\nSQL: SELECT COUNT(*) AS record_count FROM customers\n\nQuestion: Get all columns from customers\nSQL: SELECT * FROM customers LIMIT 5\n\nQuestion: Get record from customers by customer_id\nSQL: SELECT * FROM customers WHERE customer_id = 1\n\n'}, {'role': 'user', 'content': 'Convert this question to SQL: Get me all the customers'}]
2025-04-05 13:04:35 - INFO - [llm_engine.py:55] - [SQL_GEN] Completion generation started
2025-04-05 13:04:37 - INFO - [llm_engine.py:92] - [SQL_GEN] Completion generation completed in 2.38s
2025-04-05 13:04:37 - INFO - [llm_engine.py:93] - **************************
2025-04-05 13:04:37 - INFO - [azure_client.py:150] - Parsing SQL from model response
2025-04-05 13:04:37 - INFO - [azure_client.py:157] - Found SQL code block in response
2025-04-05 13:04:37 - INFO - [azure_client.py:171] - Extracted SQL query (24 chars) and explanation (308 chars)
2025-04-05 13:04:37 - INFO - [azure_client.py:124] - Generated SQL: SELECT * FROM customers;
2025-04-05 13:04:37,533 - QUERY: 'Get me all the customers' → SQL: SELECT * FROM customers;
2025-04-05 13:04:37 - INFO - [azure_client.py:132] - SQL generation completed in 2.39s
2025-04-05 13:04:37 - INFO - [database.py:65] - Executing SQL query: SELECT * FROM customers;
2025-04-05 13:04:37 - INFO - [database.py:86] - Query returned 5 rows with 11 columns
2025-04-05 13:04:37 - INFO - [database.py:95] - Query processing completed in 0.01s
2025-04-05 13:06:00 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-04-05 13:06:00 - INFO - [feedback_manager.py:43] - Attempting database connection
2025-04-05 13:06:00 - INFO - [feedback_manager.py:47] - Database connection established in 0.00s
2025-04-05 13:06:00 - INFO - [feedback_manager.py:531] - Retrieved 0 samples (page 1, limit 10)
2025-04-05 13:06:05 - INFO - [app.py:248] - Schema requested for workspace: dfd
2025-04-05 13:07:13 - INFO - [azure_client.py:186] - Closing Azure AI client connection
2025-04-05 13:07:13 - INFO - [database.py:258] - Closing database connection
2025-04-05 13:07:13 - INFO - [feedback_manager.py:668] - Closing database connection
2025-04-05 13:07:17 - INFO - [app.py:64] - Debug logging enabled for SQL generator and agents
2025-04-05 13:07:17 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 13:07:17 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 13:07:17 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 13:07:17 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 13:07:17 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 13:07:17 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 13:07:17 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 13:07:17 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 13:07:17 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 13:07:17 - INFO - [azure_client.py:11] - Initializing Azure AI Client using LLM Engine
2025-04-05 13:07:17 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 13:07:17 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 13:07:17 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 13:07:17 - INFO - [azure_client.py:17] - Azure AI Client initialized successfully
2025-04-05 13:07:17 - INFO - [database.py:38] - Database manager initialized with connection: sqlite:///text2sql.db
2025-04-05 13:07:17 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-04-05 13:07:42 - INFO - [azure_client.py:186] - Closing Azure AI client connection
2025-04-05 13:07:42 - INFO - [database.py:258] - Closing database connection
2025-04-05 13:07:42 - INFO - [feedback_manager.py:668] - Closing database connection
2025-04-05 13:07:49 - INFO - [app.py:64] - Debug logging enabled for SQL generator and agents
2025-04-05 13:07:49 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 13:07:49 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 13:07:49 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 13:07:49 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 13:07:49 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 13:07:49 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 13:07:49 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 13:07:49 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 13:07:49 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 13:07:49 - INFO - [azure_client.py:11] - Initializing Azure AI Client using LLM Engine
2025-04-05 13:07:49 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 13:07:49 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 13:07:49 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 13:07:49 - INFO - [azure_client.py:17] - Azure AI Client initialized successfully
2025-04-05 13:07:49 - INFO - [database.py:38] - Database manager initialized with connection: sqlite:///text2sql.db
2025-04-05 13:07:49 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-04-05 13:09:47 - INFO - [azure_client.py:186] - Closing Azure AI client connection
2025-04-05 13:09:47 - INFO - [database.py:258] - Closing database connection
2025-04-05 13:09:47 - INFO - [feedback_manager.py:668] - Closing database connection
2025-04-05 13:09:54 - INFO - [app.py:64] - Debug logging enabled for SQL generator and agents
2025-04-05 13:09:54 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 13:09:54 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 13:09:54 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 13:09:54 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 13:09:54 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 13:09:54 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 13:09:54 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 13:09:54 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 13:09:54 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 13:09:54 - INFO - [azure_client.py:11] - Initializing Azure AI Client using LLM Engine
2025-04-05 13:09:54 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 13:09:54 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 13:09:54 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 13:09:54 - INFO - [azure_client.py:17] - Azure AI Client initialized successfully
2025-04-05 13:09:54 - INFO - [database.py:38] - Database manager initialized with connection: sqlite:///text2sql.db
2025-04-05 13:09:54 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-04-05 13:14:02 - INFO - [azure_client.py:186] - Closing Azure AI client connection
2025-04-05 13:14:02 - INFO - [database.py:258] - Closing database connection
2025-04-05 13:14:02 - INFO - [feedback_manager.py:668] - Closing database connection
2025-04-05 13:14:09 - INFO - [app.py:64] - Debug logging enabled for SQL generator and agents
2025-04-05 13:14:09 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 13:14:09 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 13:14:09 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 13:14:09 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 13:14:09 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 13:14:09 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 13:14:09 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 13:14:09 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 13:14:09 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 13:14:09 - INFO - [azure_client.py:11] - Initializing Azure AI Client using LLM Engine
2025-04-05 13:14:09 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 13:14:09 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 13:14:09 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 13:14:09 - INFO - [azure_client.py:17] - Azure AI Client initialized successfully
2025-04-05 13:14:09 - INFO - [database.py:38] - Database manager initialized with connection: sqlite:///text2sql.db
2025-04-05 13:14:09 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-04-05 13:14:29 - INFO - [azure_client.py:186] - Closing Azure AI client connection
2025-04-05 13:14:29 - INFO - [database.py:258] - Closing database connection
2025-04-05 13:14:29 - INFO - [feedback_manager.py:668] - Closing database connection
2025-04-05 13:14:35 - INFO - [app.py:64] - Debug logging enabled for SQL generator and agents
2025-04-05 13:14:35 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 13:14:35 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 13:14:35 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 13:14:35 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 13:14:35 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 13:14:35 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 13:14:35 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 13:14:35 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 13:14:35 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 13:14:35 - INFO - [azure_client.py:11] - Initializing Azure AI Client using LLM Engine
2025-04-05 13:14:35 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 13:14:35 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 13:14:35 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 13:14:35 - INFO - [azure_client.py:17] - Azure AI Client initialized successfully
2025-04-05 13:14:35 - INFO - [database.py:38] - Database manager initialized with connection: sqlite:///text2sql.db
2025-04-05 13:14:35 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-04-05 13:23:56 - INFO - [app.py:248] - Schema requested for workspace: dfd
2025-04-05 13:23:59 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-04-05 13:23:59 - INFO - [feedback_manager.py:43] - Attempting database connection
2025-04-05 13:23:59 - INFO - [feedback_manager.py:47] - Database connection established in 0.00s
2025-04-05 13:23:59 - INFO - [feedback_manager.py:531] - Retrieved 0 samples (page 1, limit 10)
2025-04-05 13:25:03 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-04-05 13:25:03 - INFO - [feedback_manager.py:43] - Attempting database connection
2025-04-05 13:25:03 - INFO - [feedback_manager.py:47] - Database connection established in 0.00s
2025-04-05 13:25:03 - INFO - [feedback_manager.py:531] - Retrieved 0 samples (page 1, limit 10)
2025-04-05 13:25:15 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-04-05 13:25:15 - INFO - [feedback_manager.py:43] - Attempting database connection
2025-04-05 13:25:15 - INFO - [feedback_manager.py:47] - Database connection established in 0.00s
2025-04-05 13:25:15 - INFO - [feedback_manager.py:531] - Retrieved 0 samples (page 1, limit 10)
2025-04-05 13:25:15 - INFO - [app.py:248] - Schema requested for workspace: dfd
2025-04-05 13:39:00 - ERROR - [user_manager.py:41] - Password verification error: too many values to unpack (expected 2)
2025-04-05 13:39:04 - ERROR - [user_manager.py:41] - Password verification error: too many values to unpack (expected 2)
2025-04-05 13:39:11 - ERROR - [user_manager.py:41] - Password verification error: too many values to unpack (expected 2)
2025-04-05 13:39:30 - ERROR - [user_manager.py:41] - Password verification error: too many values to unpack (expected 2)
2025-04-05 13:40:50 - ERROR - [user_manager.py:41] - Password verification error: too many values to unpack (expected 2)
2025-04-05 13:42:22 - INFO - [azure_client.py:186] - Closing Azure AI client connection
2025-04-05 13:42:22 - INFO - [database.py:258] - Closing database connection
2025-04-05 13:42:22 - INFO - [feedback_manager.py:668] - Closing database connection
2025-04-05 13:42:31 - INFO - [app.py:64] - Debug logging enabled for SQL generator and agents
2025-04-05 13:42:31 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 13:42:31 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 13:42:31 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 13:42:31 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 13:42:31 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 13:42:31 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 13:42:31 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 13:42:31 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 13:42:31 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 13:42:31 - INFO - [azure_client.py:11] - Initializing Azure AI Client using LLM Engine
2025-04-05 13:42:31 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 13:42:31 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 13:42:31 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 13:42:31 - INFO - [azure_client.py:17] - Azure AI Client initialized successfully
2025-04-05 13:42:31 - INFO - [database.py:38] - Database manager initialized with connection: sqlite:///text2sql.db
2025-04-05 13:42:31 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-04-05 13:43:29 - INFO - [azure_client.py:186] - Closing Azure AI client connection
2025-04-05 13:43:29 - INFO - [database.py:258] - Closing database connection
2025-04-05 13:43:29 - INFO - [feedback_manager.py:668] - Closing database connection
2025-04-05 13:43:37 - INFO - [app.py:64] - Debug logging enabled for SQL generator and agents
2025-04-05 13:43:37 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 13:43:37 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 13:43:37 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 13:43:37 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 13:43:37 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 13:43:37 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 13:43:37 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 13:43:37 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 13:43:37 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 13:43:37 - INFO - [azure_client.py:11] - Initializing Azure AI Client using LLM Engine
2025-04-05 13:43:37 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 13:43:37 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 13:43:37 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 13:43:37 - INFO - [azure_client.py:17] - Azure AI Client initialized successfully
2025-04-05 13:43:37 - INFO - [database.py:38] - Database manager initialized with connection: sqlite:///text2sql.db
2025-04-05 13:43:37 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-04-05 13:43:56 - INFO - [azure_client.py:186] - Closing Azure AI client connection
2025-04-05 13:43:56 - INFO - [database.py:258] - Closing database connection
2025-04-05 13:43:56 - INFO - [feedback_manager.py:668] - Closing database connection
2025-04-05 13:44:01 - INFO - [app.py:64] - Debug logging enabled for SQL generator and agents
2025-04-05 13:44:01 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 13:44:01 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 13:44:01 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 13:44:01 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 13:44:01 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 13:44:01 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 13:44:01 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 13:44:01 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 13:44:01 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 13:44:01 - INFO - [azure_client.py:11] - Initializing Azure AI Client using LLM Engine
2025-04-05 13:44:01 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 13:44:01 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 13:44:01 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 13:44:01 - INFO - [azure_client.py:17] - Azure AI Client initialized successfully
2025-04-05 13:44:01 - INFO - [database.py:38] - Database manager initialized with connection: sqlite:///text2sql.db
2025-04-05 13:44:01 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-04-05 13:44:02 - INFO - [user_manager.py:37] - Verifying password: scrypt:32768:8:1$tD822WzLE9zgba3J$0367eda8678343e94179763c32bb505cb89dd390ca88d9b1408cea6470a4e227bc74b9776c774338fad934864da8f3a23f91f80e2320393ebef92f8e5bdf7125
2025-04-05 13:48:24 - INFO - [azure_client.py:186] - Closing Azure AI client connection
2025-04-05 13:48:24 - INFO - [database.py:258] - Closing database connection
2025-04-05 13:48:24 - INFO - [feedback_manager.py:668] - Closing database connection
2025-04-05 13:48:28 - INFO - [app.py:64] - Debug logging enabled for SQL generator and agents
2025-04-05 13:48:28 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 13:48:28 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 13:48:28 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 13:48:28 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 13:48:28 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 13:48:28 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 13:48:28 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 13:48:28 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 13:48:28 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 13:48:28 - INFO - [azure_client.py:11] - Initializing Azure AI Client using LLM Engine
2025-04-05 13:48:28 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 13:48:28 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 13:48:28 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 13:48:28 - INFO - [azure_client.py:17] - Azure AI Client initialized successfully
2025-04-05 13:48:28 - INFO - [database.py:38] - Database manager initialized with connection: sqlite:///text2sql.db
2025-04-05 13:48:28 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-04-05 13:48:36 - INFO - [user_manager.py:37] - Verifying password: scrypt:32768:8:1$tD822WzLE9zgba3J$0367eda8678343e94179763c32bb505cb89dd390ca88d9b1408cea6470a4e227bc74b9776c774338fad934864da8f3a23f91f80e2320393ebef92f8e5bdf7125
2025-04-05 13:48:36 - ERROR - [user_manager.py:43] - Password verification error: too many values to unpack (expected 2)
2025-04-05 13:50:46 - INFO - [azure_client.py:186] - Closing Azure AI client connection
2025-04-05 13:50:46 - INFO - [database.py:258] - Closing database connection
2025-04-05 13:50:46 - INFO - [feedback_manager.py:668] - Closing database connection
2025-04-05 13:50:52 - INFO - [app.py:64] - Debug logging enabled for SQL generator and agents
2025-04-05 13:50:52 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 13:50:52 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 13:50:52 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 13:50:52 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 13:50:52 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 13:50:52 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 13:50:52 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 13:50:52 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 13:50:52 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 13:50:52 - INFO - [azure_client.py:11] - Initializing Azure AI Client using LLM Engine
2025-04-05 13:50:52 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 13:50:52 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 13:50:52 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 13:50:52 - INFO - [azure_client.py:17] - Azure AI Client initialized successfully
2025-04-05 13:50:52 - INFO - [database.py:38] - Database manager initialized with connection: sqlite:///text2sql.db
2025-04-05 13:50:52 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-04-05 13:51:42 - INFO - [azure_client.py:186] - Closing Azure AI client connection
2025-04-05 13:51:42 - INFO - [database.py:258] - Closing database connection
2025-04-05 13:51:42 - INFO - [feedback_manager.py:668] - Closing database connection
2025-04-05 13:51:46 - INFO - [app.py:64] - Debug logging enabled for SQL generator and agents
2025-04-05 13:51:46 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 13:51:46 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 13:51:46 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 13:51:46 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 13:51:46 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 13:51:46 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 13:51:46 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 13:51:46 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 13:51:46 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 13:51:46 - INFO - [azure_client.py:11] - Initializing Azure AI Client using LLM Engine
2025-04-05 13:51:46 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 13:51:46 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 13:51:46 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 13:51:46 - INFO - [azure_client.py:17] - Azure AI Client initialized successfully
2025-04-05 13:51:46 - INFO - [database.py:38] - Database manager initialized with connection: sqlite:///text2sql.db
2025-04-05 13:51:46 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-04-05 13:52:07 - INFO - [user_manager.py:37] - Verifying password: scrypt:32768:8:1$tD822WzLE9zgba3J$0367eda8678343e94179763c32bb505cb89dd390ca88d9b1408cea6470a4e227bc74b9776c774338fad934864da8f3a23f91f80e2320393ebef92f8e5bdf7125
2025-04-05 13:52:07 - ERROR - [user_manager.py:43] - Password verification error: too many values to unpack (expected 2)
2025-04-05 13:52:39 - INFO - [azure_client.py:186] - Closing Azure AI client connection
2025-04-05 13:52:39 - INFO - [database.py:258] - Closing database connection
2025-04-05 13:52:39 - INFO - [feedback_manager.py:668] - Closing database connection
2025-04-05 13:52:44 - INFO - [app.py:64] - Debug logging enabled for SQL generator and agents
2025-04-05 13:52:44 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 13:52:44 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 13:52:44 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 13:52:44 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 13:52:44 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 13:52:44 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 13:52:44 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 13:52:44 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 13:52:44 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 13:52:44 - INFO - [azure_client.py:11] - Initializing Azure AI Client using LLM Engine
2025-04-05 13:52:44 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 13:52:44 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 13:52:44 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 13:52:44 - INFO - [azure_client.py:17] - Azure AI Client initialized successfully
2025-04-05 13:52:44 - INFO - [database.py:38] - Database manager initialized with connection: sqlite:///text2sql.db
2025-04-05 13:52:44 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-04-05 13:52:45 - INFO - [user_manager.py:38] - Verifying password: scrypt:32768:8:1$tD822WzLE9zgba3J$0367eda8678343e94179763c32bb505cb89dd390ca88d9b1408cea6470a4e227bc74b9776c774338fad934864da8f3a23f91f80e2320393ebef92f8e5bdf7125
2025-04-05 13:52:45 - ERROR - [user_manager.py:48] - Password verification error: too many values to unpack (expected 2)
Stack trace:
Traceback (most recent call last):
  File "/home/vijay/text2sql/src/utils/user_manager.py", line 39, in _verify_password
    salt, stored_hash = password_hash.split('$')
    ^^^^^^^^^^^^^^^^^
ValueError: too many values to unpack (expected 2)

2025-04-05 13:53:18 - INFO - [azure_client.py:186] - Closing Azure AI client connection
2025-04-05 13:53:18 - INFO - [database.py:258] - Closing database connection
2025-04-05 13:53:18 - INFO - [feedback_manager.py:668] - Closing database connection
2025-04-05 13:53:24 - INFO - [app.py:64] - Debug logging enabled for SQL generator and agents
2025-04-05 13:53:24 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 13:53:24 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 13:53:24 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 13:53:24 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 13:53:24 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 13:53:24 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 13:53:24 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 13:53:24 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 13:53:24 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 13:53:24 - INFO - [azure_client.py:11] - Initializing Azure AI Client using LLM Engine
2025-04-05 13:53:24 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 13:53:24 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 13:53:24 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 13:53:24 - INFO - [azure_client.py:17] - Azure AI Client initialized successfully
2025-04-05 13:53:24 - INFO - [database.py:38] - Database manager initialized with connection: sqlite:///text2sql.db
2025-04-05 13:53:24 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-04-05 13:53:26 - INFO - [user_manager.py:38] - Verifying password: scrypt:32768:8:1$tD822WzLE9zgba3J$0367eda8678343e94179763c32bb505cb89dd390ca88d9b1408cea6470a4e227bc74b9776c774338fad934864da8f3a23f91f80e2320393ebef92f8e5bdf7125
2025-04-05 13:53:26 - INFO - [user_manager.py:39] - split values ['scrypt:32768:8:1', 'tD822WzLE9zgba3J', '0367eda8678343e94179763c32bb505cb89dd390ca88d9b1408cea6470a4e227bc74b9776c774338fad934864da8f3a23f91f80e2320393ebef92f8e5bdf7125']
2025-04-05 13:53:26 - ERROR - [user_manager.py:49] - Password verification error: too many values to unpack (expected 2)
Stack trace:
Traceback (most recent call last):
  File "/home/vijay/text2sql/src/utils/user_manager.py", line 40, in _verify_password
    salt, stored_hash = password_hash.split('$')
    ^^^^^^^^^^^^^^^^^
ValueError: too many values to unpack (expected 2)

2025-04-05 13:53:53 - INFO - [user_manager.py:38] - Verifying password: 03383b3816fe60ec$c142c434d551197c27d50d772675af0677c0f166f2d79c70ae3f762f10084378
2025-04-05 13:53:53 - INFO - [user_manager.py:39] - split values ['03383b3816fe60ec', 'c142c434d551197c27d50d772675af0677c0f166f2d79c70ae3f762f10084378']
2025-04-05 13:56:01 - INFO - [azure_client.py:186] - Closing Azure AI client connection
2025-04-05 13:56:01 - INFO - [database.py:258] - Closing database connection
2025-04-05 13:56:01 - INFO - [feedback_manager.py:668] - Closing database connection
2025-04-05 13:56:05 - INFO - [app.py:64] - Debug logging enabled for SQL generator and agents
2025-04-05 13:56:05 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 13:56:05 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 13:56:05 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 13:56:05 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 13:56:05 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 13:56:05 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 13:56:05 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 13:56:05 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 13:56:05 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 13:56:05 - INFO - [azure_client.py:11] - Initializing Azure AI Client using LLM Engine
2025-04-05 13:56:05 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 13:56:05 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 13:56:05 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 13:56:05 - INFO - [azure_client.py:17] - Azure AI Client initialized successfully
2025-04-05 13:56:05 - INFO - [database.py:38] - Database manager initialized with connection: sqlite:///text2sql.db
2025-04-05 13:56:05 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-04-05 13:56:30 - INFO - [azure_client.py:186] - Closing Azure AI client connection
2025-04-05 13:56:30 - INFO - [database.py:258] - Closing database connection
2025-04-05 13:56:30 - INFO - [feedback_manager.py:668] - Closing database connection
2025-04-05 13:56:34 - INFO - [app.py:64] - Debug logging enabled for SQL generator and agents
2025-04-05 13:56:34 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 13:56:34 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 13:56:34 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 13:56:34 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 13:56:34 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 13:56:34 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 13:56:34 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 13:56:34 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 13:56:34 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 13:56:34 - INFO - [azure_client.py:11] - Initializing Azure AI Client using LLM Engine
2025-04-05 13:56:34 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 13:56:34 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 13:56:34 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 13:56:34 - INFO - [azure_client.py:17] - Azure AI Client initialized successfully
2025-04-05 13:56:34 - INFO - [database.py:38] - Database manager initialized with connection: sqlite:///text2sql.db
2025-04-05 13:56:34 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-04-05 13:56:35 - INFO - [user_manager.py:38] - Verifying password: scrypt:32768:8:1$tD822WzLE9zgba3J$0367eda8678343e94179763c32bb505cb89dd390ca88d9b1408cea6470a4e227bc74b9776c774338fad934864da8f3a23f91f80e2320393ebef92f8e5bdf7125
2025-04-05 13:56:35 - INFO - [user_manager.py:39] - split values ['scrypt:32768:8:1', 'tD822WzLE9zgba3J', '0367eda8678343e94179763c32bb505cb89dd390ca88d9b1408cea6470a4e227bc74b9776c774338fad934864da8f3a23f91f80e2320393ebef92f8e5bdf7125']
2025-04-05 13:56:35 - ERROR - [user_manager.py:49] - Password verification error: too many values to unpack (expected 2)
Stack trace:
Traceback (most recent call last):
  File "/home/vijay/text2sql/src/utils/user_manager.py", line 40, in _verify_password
    salt, stored_hash = password_hash.split('$')
    ^^^^^^^^^^^^^^^^^
ValueError: too many values to unpack (expected 2)

2025-04-05 13:59:59 - INFO - [azure_client.py:186] - Closing Azure AI client connection
2025-04-05 13:59:59 - INFO - [database.py:258] - Closing database connection
2025-04-05 13:59:59 - INFO - [feedback_manager.py:668] - Closing database connection
2025-04-05 14:00:04 - INFO - [azure_client.py:186] - Closing Azure AI client connection
2025-04-05 14:00:04 - INFO - [database.py:258] - Closing database connection
2025-04-05 14:00:04 - INFO - [feedback_manager.py:668] - Closing database connection
2025-04-05 14:00:44 - INFO - [app.py:66] - Debug logging enabled for SQL generator and agents
2025-04-05 14:00:44 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 14:00:44 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 14:00:44 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 14:00:44 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 14:00:44 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 14:00:44 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 14:00:44 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 14:00:44 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 14:00:44 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 14:00:44 - INFO - [azure_client.py:11] - Initializing Azure AI Client using LLM Engine
2025-04-05 14:00:44 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 14:00:44 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 14:00:44 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 14:00:44 - INFO - [azure_client.py:17] - Azure AI Client initialized successfully
2025-04-05 14:00:44 - INFO - [database.py:38] - Database manager initialized with connection: sqlite:///text2sql.db
2025-04-05 14:00:44 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-04-05 14:00:48 - INFO - [azure_client.py:186] - Closing Azure AI client connection
2025-04-05 14:00:48 - INFO - [database.py:258] - Closing database connection
2025-04-05 14:00:48 - INFO - [feedback_manager.py:668] - Closing database connection
2025-04-05 14:07:16 - INFO - [app.py:66] - Debug logging enabled for SQL generator and agents
2025-04-05 14:07:16 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 14:07:16 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 14:07:16 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 14:07:16 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 14:07:16 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 14:07:16 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 14:07:16 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 14:07:16 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 14:07:16 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 14:07:16 - INFO - [azure_client.py:11] - Initializing Azure AI Client using LLM Engine
2025-04-05 14:07:16 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 14:07:16 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 14:07:16 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 14:07:16 - INFO - [azure_client.py:17] - Azure AI Client initialized successfully
2025-04-05 14:07:16 - INFO - [database.py:38] - Database manager initialized with connection: sqlite:///text2sql.db
2025-04-05 14:07:16 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-04-05 14:07:20 - INFO - [app.py:66] - Debug logging enabled for SQL generator and agents
2025-04-05 14:07:20 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 14:07:20 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 14:07:20 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 14:07:20 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 14:07:20 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 14:07:20 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 14:07:20 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 14:07:20 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 14:07:20 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 14:07:20 - INFO - [azure_client.py:11] - Initializing Azure AI Client using LLM Engine
2025-04-05 14:07:20 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 14:07:20 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 14:07:20 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 14:07:20 - INFO - [azure_client.py:17] - Azure AI Client initialized successfully
2025-04-05 14:07:20 - INFO - [database.py:38] - Database manager initialized with connection: sqlite:///text2sql.db
2025-04-05 14:07:20 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-04-05 14:07:20 - ERROR - [user_manager.py:152] - Error deleting user: User not found
2025-04-05 14:07:21 - INFO - [azure_client.py:186] - Closing Azure AI client connection
2025-04-05 14:07:21 - INFO - [database.py:258] - Closing database connection
2025-04-05 14:07:21 - INFO - [feedback_manager.py:668] - Closing database connection
2025-04-05 14:07:38 - INFO - [app.py:66] - Debug logging enabled for SQL generator and agents
2025-04-05 14:07:38 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 14:07:38 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 14:07:38 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 14:07:38 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 14:07:38 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 14:07:38 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 14:07:38 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 14:07:38 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 14:07:38 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 14:07:38 - INFO - [azure_client.py:11] - Initializing Azure AI Client using LLM Engine
2025-04-05 14:07:38 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 14:07:38 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 14:07:38 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 14:07:38 - INFO - [azure_client.py:17] - Azure AI Client initialized successfully
2025-04-05 14:07:38 - INFO - [database.py:38] - Database manager initialized with connection: sqlite:///text2sql.db
2025-04-05 14:07:38 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-04-05 14:07:43 - INFO - [app.py:66] - Debug logging enabled for SQL generator and agents
2025-04-05 14:07:43 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 14:07:43 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 14:07:43 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 14:07:43 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 14:07:43 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 14:07:43 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 14:07:43 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 14:07:43 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 14:07:43 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 14:07:43 - INFO - [azure_client.py:11] - Initializing Azure AI Client using LLM Engine
2025-04-05 14:07:43 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 14:07:43 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 14:07:43 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 14:07:43 - INFO - [azure_client.py:17] - Azure AI Client initialized successfully
2025-04-05 14:07:43 - INFO - [database.py:38] - Database manager initialized with connection: sqlite:///text2sql.db
2025-04-05 14:07:43 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-04-05 14:09:33 - INFO - [azure_client.py:186] - Closing Azure AI client connection
2025-04-05 14:09:33 - INFO - [database.py:258] - Closing database connection
2025-04-05 14:09:33 - INFO - [feedback_manager.py:668] - Closing database connection
2025-04-05 14:09:37 - INFO - [app.py:66] - Debug logging enabled for SQL generator and agents
2025-04-05 14:09:37 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 14:09:37 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 14:09:37 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 14:09:37 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 14:09:37 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 14:09:37 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 14:09:37 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 14:09:37 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 14:09:37 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 14:09:37 - INFO - [azure_client.py:11] - Initializing Azure AI Client using LLM Engine
2025-04-05 14:09:37 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 14:09:37 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 14:09:37 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 14:09:37 - INFO - [azure_client.py:17] - Azure AI Client initialized successfully
2025-04-05 14:09:37 - INFO - [database.py:38] - Database manager initialized with connection: sqlite:///text2sql.db
2025-04-05 14:09:37 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-04-05 14:09:55 - INFO - [azure_client.py:186] - Closing Azure AI client connection
2025-04-05 14:09:55 - INFO - [database.py:258] - Closing database connection
2025-04-05 14:09:55 - INFO - [feedback_manager.py:668] - Closing database connection
2025-04-05 14:10:01 - INFO - [app.py:66] - Debug logging enabled for SQL generator and agents
2025-04-05 14:10:01 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 14:10:01 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 14:10:01 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 14:10:01 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 14:10:01 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 14:10:01 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 14:10:01 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 14:10:01 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 14:10:01 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 14:10:01 - INFO - [azure_client.py:11] - Initializing Azure AI Client using LLM Engine
2025-04-05 14:10:01 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 14:10:01 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 14:10:01 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 14:10:01 - INFO - [azure_client.py:17] - Azure AI Client initialized successfully
2025-04-05 14:10:01 - INFO - [database.py:38] - Database manager initialized with connection: sqlite:///text2sql.db
2025-04-05 14:10:01 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-04-05 14:11:39 - INFO - [azure_client.py:186] - Closing Azure AI client connection
2025-04-05 14:11:39 - INFO - [database.py:258] - Closing database connection
2025-04-05 14:11:39 - INFO - [feedback_manager.py:668] - Closing database connection
2025-04-05 14:11:45 - INFO - [app.py:66] - Debug logging enabled for SQL generator and agents
2025-04-05 14:11:45 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 14:11:45 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 14:11:45 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 14:11:45 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 14:11:45 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 14:11:45 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 14:11:45 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 14:11:45 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 14:11:45 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 14:11:45 - INFO - [azure_client.py:11] - Initializing Azure AI Client using LLM Engine
2025-04-05 14:11:45 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 14:11:45 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 14:11:45 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 14:11:45 - INFO - [azure_client.py:17] - Azure AI Client initialized successfully
2025-04-05 14:11:45 - INFO - [database.py:38] - Database manager initialized with connection: sqlite:///text2sql.db
2025-04-05 14:11:45 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-04-05 14:12:08 - INFO - [azure_client.py:186] - Closing Azure AI client connection
2025-04-05 14:12:08 - INFO - [database.py:258] - Closing database connection
2025-04-05 14:12:08 - INFO - [feedback_manager.py:668] - Closing database connection
2025-04-05 14:12:12 - INFO - [app.py:66] - Debug logging enabled for SQL generator and agents
2025-04-05 14:12:12 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 14:12:12 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 14:12:12 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 14:12:12 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 14:12:12 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 14:12:12 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 14:12:12 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 14:12:12 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 14:12:12 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 14:12:12 - INFO - [azure_client.py:11] - Initializing Azure AI Client using LLM Engine
2025-04-05 14:12:12 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 14:12:12 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 14:12:12 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 14:12:12 - INFO - [azure_client.py:17] - Azure AI Client initialized successfully
2025-04-05 14:12:12 - INFO - [database.py:38] - Database manager initialized with connection: sqlite:///text2sql.db
2025-04-05 14:12:12 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-04-05 14:12:32 - INFO - [azure_client.py:186] - Closing Azure AI client connection
2025-04-05 14:12:32 - INFO - [database.py:258] - Closing database connection
2025-04-05 14:12:32 - INFO - [feedback_manager.py:668] - Closing database connection
2025-04-05 14:12:38 - INFO - [app.py:66] - Debug logging enabled for SQL generator and agents
2025-04-05 14:12:38 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 14:12:38 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 14:12:38 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 14:12:38 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 14:12:38 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 14:12:38 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 14:12:38 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 14:12:38 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 14:12:38 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 14:12:38 - INFO - [azure_client.py:11] - Initializing Azure AI Client using LLM Engine
2025-04-05 14:12:38 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 14:12:38 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 14:12:38 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 14:12:38 - INFO - [azure_client.py:17] - Azure AI Client initialized successfully
2025-04-05 14:12:38 - INFO - [database.py:38] - Database manager initialized with connection: sqlite:///text2sql.db
2025-04-05 14:12:38 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-04-05 14:12:59 - INFO - [azure_client.py:186] - Closing Azure AI client connection
2025-04-05 14:12:59 - INFO - [database.py:258] - Closing database connection
2025-04-05 14:12:59 - INFO - [feedback_manager.py:668] - Closing database connection
2025-04-05 14:13:05 - INFO - [app.py:66] - Debug logging enabled for SQL generator and agents
2025-04-05 14:13:05 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 14:13:05 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 14:13:05 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 14:13:05 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 14:13:05 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 14:13:05 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 14:13:05 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 14:13:05 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 14:13:05 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 14:13:05 - INFO - [azure_client.py:11] - Initializing Azure AI Client using LLM Engine
2025-04-05 14:13:05 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 14:13:05 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 14:13:05 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 14:13:05 - INFO - [azure_client.py:17] - Azure AI Client initialized successfully
2025-04-05 14:13:05 - INFO - [database.py:38] - Database manager initialized with connection: sqlite:///text2sql.db
2025-04-05 14:13:05 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-04-05 14:14:14 - INFO - [azure_client.py:186] - Closing Azure AI client connection
2025-04-05 14:14:14 - INFO - [database.py:258] - Closing database connection
2025-04-05 14:14:14 - INFO - [feedback_manager.py:668] - Closing database connection
2025-04-05 14:14:20 - INFO - [app.py:66] - Debug logging enabled for SQL generator and agents
2025-04-05 14:14:20 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 14:14:20 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 14:14:20 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 14:14:20 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 14:14:20 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 14:14:20 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 14:14:20 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 14:14:20 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 14:14:20 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 14:14:20 - INFO - [azure_client.py:11] - Initializing Azure AI Client using LLM Engine
2025-04-05 14:14:20 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 14:14:20 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 14:14:20 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 14:14:20 - INFO - [azure_client.py:17] - Azure AI Client initialized successfully
2025-04-05 14:14:20 - INFO - [database.py:38] - Database manager initialized with connection: sqlite:///text2sql.db
2025-04-05 14:14:20 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-04-05 14:15:44 - INFO - [azure_client.py:186] - Closing Azure AI client connection
2025-04-05 14:15:44 - INFO - [database.py:258] - Closing database connection
2025-04-05 14:15:44 - INFO - [feedback_manager.py:668] - Closing database connection
2025-04-05 14:15:49 - INFO - [app.py:66] - Debug logging enabled for SQL generator and agents
2025-04-05 14:15:49 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 14:15:49 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 14:15:49 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 14:15:49 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 14:15:49 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 14:15:49 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 14:15:49 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 14:15:49 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 14:15:49 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 14:15:49 - INFO - [azure_client.py:11] - Initializing Azure AI Client using LLM Engine
2025-04-05 14:15:49 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 14:15:49 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 14:15:49 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 14:15:49 - INFO - [azure_client.py:17] - Azure AI Client initialized successfully
2025-04-05 14:15:49 - INFO - [database.py:38] - Database manager initialized with connection: sqlite:///text2sql.db
2025-04-05 14:15:49 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-04-05 14:16:02 - INFO - [azure_client.py:186] - Closing Azure AI client connection
2025-04-05 14:16:02 - INFO - [database.py:258] - Closing database connection
2025-04-05 14:16:02 - INFO - [feedback_manager.py:668] - Closing database connection
2025-04-05 14:16:08 - INFO - [app.py:66] - Debug logging enabled for SQL generator and agents
2025-04-05 14:16:08 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 14:16:08 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 14:16:08 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 14:16:08 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 14:16:08 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 14:16:08 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 14:16:08 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 14:16:08 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 14:16:08 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 14:16:08 - INFO - [azure_client.py:11] - Initializing Azure AI Client using LLM Engine
2025-04-05 14:16:08 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 14:16:08 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 14:16:08 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 14:16:08 - INFO - [azure_client.py:17] - Azure AI Client initialized successfully
2025-04-05 14:16:08 - INFO - [database.py:38] - Database manager initialized with connection: sqlite:///text2sql.db
2025-04-05 14:16:08 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-04-05 14:16:09 - INFO - [azure_client.py:186] - Closing Azure AI client connection
2025-04-05 14:16:09 - INFO - [database.py:258] - Closing database connection
2025-04-05 14:16:09 - INFO - [feedback_manager.py:668] - Closing database connection
2025-04-05 14:16:14 - INFO - [app.py:66] - Debug logging enabled for SQL generator and agents
2025-04-05 14:16:14 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 14:16:14 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 14:16:14 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 14:16:14 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 14:16:14 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 14:16:14 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 14:16:14 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 14:16:14 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 14:16:14 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 14:16:14 - INFO - [azure_client.py:11] - Initializing Azure AI Client using LLM Engine
2025-04-05 14:16:14 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 14:16:14 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 14:16:14 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 14:16:14 - INFO - [azure_client.py:17] - Azure AI Client initialized successfully
2025-04-05 14:16:14 - INFO - [database.py:38] - Database manager initialized with connection: sqlite:///text2sql.db
2025-04-05 14:16:14 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-04-05 14:17:43 - INFO - [azure_client.py:186] - Closing Azure AI client connection
2025-04-05 14:17:43 - INFO - [database.py:258] - Closing database connection
2025-04-05 14:17:43 - INFO - [feedback_manager.py:668] - Closing database connection
2025-04-05 14:17:49 - INFO - [app.py:66] - Debug logging enabled for SQL generator and agents
2025-04-05 14:17:49 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 14:17:49 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 14:17:49 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 14:17:49 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 14:17:49 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 14:17:49 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 14:17:49 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 14:17:49 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 14:17:49 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 14:17:49 - INFO - [azure_client.py:11] - Initializing Azure AI Client using LLM Engine
2025-04-05 14:17:49 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 14:17:49 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 14:17:49 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 14:17:49 - INFO - [azure_client.py:17] - Azure AI Client initialized successfully
2025-04-05 14:17:49 - INFO - [database.py:38] - Database manager initialized with connection: sqlite:///text2sql.db
2025-04-05 14:17:49 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-04-05 14:18:18 - INFO - [user_manager.py:36] - Verifying password: f392c0d46a59a4b5$22370a5678a2b92974c90bce029d8ad1bcc138aaa92ce5f25ae846f78bf0271f
2025-04-05 14:19:13 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-04-05 14:19:13 - INFO - [feedback_manager.py:43] - Attempting database connection
2025-04-05 14:19:13 - INFO - [feedback_manager.py:47] - Database connection established in 0.00s
2025-04-05 14:19:13 - INFO - [feedback_manager.py:531] - Retrieved 0 samples (page 1, limit 10)
2025-04-05 14:19:22 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-04-05 14:19:22 - INFO - [app.py:250] - Schema requested for workspace: dfd
2025-04-05 14:19:23 - INFO - [feedback_manager.py:43] - Attempting database connection
2025-04-05 14:19:23 - INFO - [feedback_manager.py:47] - Database connection established in 0.01s
2025-04-05 14:19:23 - INFO - [feedback_manager.py:531] - Retrieved 0 samples (page 1, limit 10)
2025-04-05 14:19:26 - INFO - [app.py:250] - Schema requested for workspace: dfd
2025-04-05 14:44:49 - INFO - [database.py:44] - Attempting database connection
2025-04-05 14:44:49 - INFO - [database.py:48] - Database connection established in 0.01s
2025-04-05 14:44:49 - INFO - [llm_engine.py:55] - [TABLE] Completion generation started
2025-04-05 14:44:50 - INFO - [llm_engine.py:92] - [TABLE] Completion generation completed in 1.29s
2025-04-05 14:44:50 - INFO - [llm_engine.py:93] - **************************
2025-04-05 14:44:50 - INFO - [feedback_manager.py:43] - Attempting database connection
2025-04-05 14:44:50 - INFO - [feedback_manager.py:47] - Database connection established in 0.00s
2025-04-05 14:44:50 - INFO - [feedback_manager.py:267] - Stage 1: Vector search for 'get me all customers...'
2025-04-05 14:44:50 - INFO - [feedback_manager.py:62] - Loading embedding model 'sentence-transformers/all-MiniLM-L12-v2'
2025-04-05 14:44:54 - INFO - [feedback_manager.py:65] - Embedding model loaded in 3.16s
2025-04-05 14:44:54 - WARNING - [feedback_manager.py:324] - No candidates found from vector search
2025-04-05 14:44:54 - INFO - [azure_client.py:35] - SQL generation started for query: 'get me all customers'
2025-04-05 14:44:54 - INFO - [azure_client.py:69] - Including schema information (587 chars)
2025-04-05 14:44:54 - INFO - [azure_client.py:104] - Including 3 SQL examples (no similarity examples found)
2025-04-05 14:44:54 - INFO - [azure_client.py:114] - PROMPT: [{'role': 'system', 'content': "You are an expert SQL assistant. Convert natural language questions into precise, executable SQL queries.\nYour task is to:\n1. Analyze the provided schema carefully, noting table relationships and column types\n2. Generate a SQL query that accurately answers the user's question\n3. Consider performance by selecting only necessary columns\n4. Use appropriate JOIN conditions based on primary/foreign key relationships or provided join conditions\n5. Include a brief explanation of your query\n\nRules:\n- Include table names and column references exactly as provided in the schema\n- Use appropriate SQL functions based on column data types\n- Consider NULL values in your conditions\n- Use table aliases for better readability when joining multiple tables\n- Add column aliases for computed values\n- Format the SQL query with proper indentation\n- If similar queries are provided, strictly use that as format or syntax\n- Return the SQL inside a code block tagged with ```sql\n\nExample output format:\nHere's a query that will [explanation]...\n\n```sql\nSELECT ...\nFROM ...\nWHERE ...\n```"}, {'role': 'user', 'content': "Here's the database schema:\nTable: customers\nDescription: Customer information and profiles\nColumns: customer_id (INTEGER) - Unique customer identifier, first_name (TEXT) - Customer's first name, last_name (TEXT) - Customer's last name, email (TEXT) - Customer's email address (unique), phone (TEXT) - Customer's phone number, address (TEXT) - Customer's street address, city (TEXT) - Customer's city, state (TEXT) - Customer's state/province, country (TEXT) - Customer's country, postal_code (TEXT) - Customer's postal/zip code, registration_date (TEXT) - Date when customer registered\nPrimary Key(s): customer_id\n"}, {'role': 'user', 'content': 'Here are some example queries and their SQL:\nQuestion: How many records are in the customers table?\nSQL: SELECT COUNT(*) AS record_count FROM customers\n\nQuestion: Get all columns from customers\nSQL: SELECT * FROM customers LIMIT 5\n\nQuestion: Get record from customers by customer_id\nSQL: SELECT * FROM customers WHERE customer_id = 1\n\n'}, {'role': 'user', 'content': 'Convert this question to SQL: get me all customers'}]
2025-04-05 14:44:54 - INFO - [llm_engine.py:55] - [SQL_GEN] Completion generation started
2025-04-05 14:44:56 - INFO - [llm_engine.py:92] - [SQL_GEN] Completion generation completed in 1.88s
2025-04-05 14:44:56 - INFO - [llm_engine.py:93] - **************************
2025-04-05 14:44:56 - INFO - [azure_client.py:150] - Parsing SQL from model response
2025-04-05 14:44:56 - INFO - [azure_client.py:157] - Found SQL code block in response
2025-04-05 14:44:56 - INFO - [azure_client.py:171] - Extracted SQL query (24 chars) and explanation (140 chars)
2025-04-05 14:44:56 - INFO - [azure_client.py:124] - Generated SQL: SELECT * FROM customers;
2025-04-05 14:44:56,174 - QUERY: 'get me all customers' → SQL: SELECT * FROM customers;
2025-04-05 14:44:56 - INFO - [azure_client.py:132] - SQL generation completed in 1.90s
2025-04-05 14:44:56 - INFO - [database.py:65] - Executing SQL query: SELECT * FROM customers;
2025-04-05 14:44:56 - INFO - [database.py:86] - Query returned 5 rows with 11 columns
2025-04-05 14:44:56 - INFO - [database.py:95] - Query processing completed in 0.04s
2025-04-05 14:54:28 - INFO - [database.py:44] - Attempting database connection
2025-04-05 14:54:28 - INFO - [database.py:48] - Database connection established in 0.01s
2025-04-05 14:54:28 - INFO - [llm_engine.py:55] - [TABLE] Completion generation started
2025-04-05 14:54:29 - ERROR - [llm_engine.py:98] - [TABLE] Completion generation error after 0.23s: ('Connection aborted.', RemoteDisconnected('Remote end closed connection without response'))
Traceback (most recent call last):
  File "/home/vijay/text2sql/src/utils/llm_engine.py", line 72, in generate_completion
    response = self.client.complete(
               ^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/ai/inference/_patch.py", line 728, in complete
    pipeline_response: PipelineResponse = self._client._pipeline.run(  # pylint: disable=protected-access
                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/_base.py", line 240, in run
    return first_node.send(pipeline_request)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/_base.py", line 96, in send
    response = self.next.send(request)
               ^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/_base.py", line 96, in send
    response = self.next.send(request)
               ^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/_base.py", line 96, in send
    response = self.next.send(request)
               ^^^^^^^^^^^^^^^^^^^^^^^
  [Previous line repeated 2 more times]
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/policies/_redirect.py", line 204, in send
    response = self.next.send(request)
               ^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/policies/_retry.py", line 573, in send
    raise err
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/policies/_retry.py", line 551, in send
    response = self.next.send(request)
               ^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/_base.py", line 96, in send
    response = self.next.send(request)
               ^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/_base.py", line 96, in send
    response = self.next.send(request)
               ^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/_base.py", line 96, in send
    response = self.next.send(request)
               ^^^^^^^^^^^^^^^^^^^^^^^
  [Previous line repeated 3 more times]
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/_base.py", line 128, in send
    self._sender.send(request.http_request, **request.context.options),
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/transport/_requests_basic.py", line 409, in send
    raise error
azure.core.exceptions.ServiceResponseError: ('Connection aborted.', RemoteDisconnected('Remote end closed connection without response'))
2025-04-05 14:54:29 - INFO - [llm_engine.py:55] - [COLUMN] Completion generation started
2025-04-05 14:54:31 - INFO - [llm_engine.py:92] - [COLUMN] Completion generation completed in 2.20s
2025-04-05 14:54:31 - INFO - [llm_engine.py:93] - **************************
2025-04-05 14:54:31 - ERROR - [background_tasks.py:60] - Exception while processing query: 'join_type'
Traceback (most recent call last):
  File "/home/vijay/text2sql/src/utils/background_tasks.py", line 38, in process_in_background
    result = self.sql_manager.process_query(
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/text2sql/src/models/sql_generator.py", line 71, in process_query
    sql_result = self._generate_sql(query, workspaces, explicit_tables, progress_callback)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/text2sql/src/models/sql_generator.py", line 222, in _generate_sql
    join_info = "\n".join([
                          ^
  File "/home/vijay/text2sql/src/models/sql_generator.py", line 224, in <listcomp>
    f"{join['join_type']} JOIN on {join['condition']}"
       ~~~~^^^^^^^^^^^^^
KeyError: 'join_type'
2025-04-05 14:56:01 - INFO - [database.py:44] - Attempting database connection
2025-04-05 14:56:01 - INFO - [database.py:48] - Database connection established in 0.00s
2025-04-05 14:56:01 - INFO - [llm_engine.py:55] - [TABLE] Completion generation started
2025-04-05 14:56:02 - INFO - [llm_engine.py:92] - [TABLE] Completion generation completed in 1.21s
2025-04-05 14:56:02 - INFO - [llm_engine.py:93] - **************************
2025-04-05 14:56:02 - INFO - [feedback_manager.py:267] - Stage 1: Vector search for 'get me all customers...'
2025-04-05 14:56:02 - WARNING - [feedback_manager.py:324] - No candidates found from vector search
2025-04-05 14:56:02 - INFO - [azure_client.py:35] - SQL generation started for query: 'get me all customers'
2025-04-05 14:56:02 - INFO - [azure_client.py:69] - Including schema information (587 chars)
2025-04-05 14:56:02 - INFO - [azure_client.py:104] - Including 3 SQL examples (no similarity examples found)
2025-04-05 14:56:02 - INFO - [azure_client.py:114] - PROMPT: [{'role': 'system', 'content': "You are an expert SQL assistant. Convert natural language questions into precise, executable SQL queries.\nYour task is to:\n1. Analyze the provided schema carefully, noting table relationships and column types\n2. Generate a SQL query that accurately answers the user's question\n3. Consider performance by selecting only necessary columns\n4. Use appropriate JOIN conditions based on primary/foreign key relationships or provided join conditions\n5. Include a brief explanation of your query\n\nRules:\n- Include table names and column references exactly as provided in the schema\n- Use appropriate SQL functions based on column data types\n- Consider NULL values in your conditions\n- Use table aliases for better readability when joining multiple tables\n- Add column aliases for computed values\n- Format the SQL query with proper indentation\n- If similar queries are provided, strictly use that as format or syntax\n- Return the SQL inside a code block tagged with ```sql\n\nExample output format:\nHere's a query that will [explanation]...\n\n```sql\nSELECT ...\nFROM ...\nWHERE ...\n```"}, {'role': 'user', 'content': "Here's the database schema:\nTable: customers\nDescription: Customer information and profiles\nColumns: customer_id (INTEGER) - Unique customer identifier, first_name (TEXT) - Customer's first name, last_name (TEXT) - Customer's last name, email (TEXT) - Customer's email address (unique), phone (TEXT) - Customer's phone number, address (TEXT) - Customer's street address, city (TEXT) - Customer's city, state (TEXT) - Customer's state/province, country (TEXT) - Customer's country, postal_code (TEXT) - Customer's postal/zip code, registration_date (TEXT) - Date when customer registered\nPrimary Key(s): customer_id\n"}, {'role': 'user', 'content': 'Here are some example queries and their SQL:\nQuestion: How many records are in the customers table?\nSQL: SELECT COUNT(*) AS record_count FROM customers\n\nQuestion: Get all columns from customers\nSQL: SELECT * FROM customers LIMIT 5\n\nQuestion: Get record from customers by customer_id\nSQL: SELECT * FROM customers WHERE customer_id = 1\n\n'}, {'role': 'user', 'content': 'Convert this question to SQL: get me all customers'}]
2025-04-05 14:56:02 - INFO - [llm_engine.py:55] - [SQL_GEN] Completion generation started
2025-04-05 14:56:02 - ERROR - [llm_engine.py:98] - [SQL_GEN] Completion generation error after 0.03s: ('Connection aborted.', RemoteDisconnected('Remote end closed connection without response'))
Traceback (most recent call last):
  File "/home/vijay/text2sql/src/utils/llm_engine.py", line 72, in generate_completion
    response = self.client.complete(
               ^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/ai/inference/_patch.py", line 728, in complete
    pipeline_response: PipelineResponse = self._client._pipeline.run(  # pylint: disable=protected-access
                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/_base.py", line 240, in run
    return first_node.send(pipeline_request)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/_base.py", line 96, in send
    response = self.next.send(request)
               ^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/_base.py", line 96, in send
    response = self.next.send(request)
               ^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/_base.py", line 96, in send
    response = self.next.send(request)
               ^^^^^^^^^^^^^^^^^^^^^^^
  [Previous line repeated 2 more times]
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/policies/_redirect.py", line 204, in send
    response = self.next.send(request)
               ^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/policies/_retry.py", line 573, in send
    raise err
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/policies/_retry.py", line 551, in send
    response = self.next.send(request)
               ^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/_base.py", line 96, in send
    response = self.next.send(request)
               ^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/_base.py", line 96, in send
    response = self.next.send(request)
               ^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/_base.py", line 96, in send
    response = self.next.send(request)
               ^^^^^^^^^^^^^^^^^^^^^^^
  [Previous line repeated 3 more times]
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/_base.py", line 128, in send
    self._sender.send(request.http_request, **request.context.options),
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/transport/_requests_basic.py", line 409, in send
    raise error
azure.core.exceptions.ServiceResponseError: ('Connection aborted.', RemoteDisconnected('Remote end closed connection without response'))
2025-04-05 14:56:02 - ERROR - [azure_client.py:138] - SQL generation error after 0.04s: ('Connection aborted.', RemoteDisconnected('Remote end closed connection without response'))
Traceback (most recent call last):
  File "/home/vijay/text2sql/src/utils/azure_client.py", line 117, in generate_sql
    raw_response = self.llm_engine.generate_completion(messages, log_prefix="SQL_GEN")
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/text2sql/src/utils/llm_engine.py", line 72, in generate_completion
    response = self.client.complete(
               ^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/ai/inference/_patch.py", line 728, in complete
    pipeline_response: PipelineResponse = self._client._pipeline.run(  # pylint: disable=protected-access
                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/_base.py", line 240, in run
    return first_node.send(pipeline_request)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/_base.py", line 96, in send
    response = self.next.send(request)
               ^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/_base.py", line 96, in send
    response = self.next.send(request)
               ^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/_base.py", line 96, in send
    response = self.next.send(request)
               ^^^^^^^^^^^^^^^^^^^^^^^
  [Previous line repeated 2 more times]
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/policies/_redirect.py", line 204, in send
    response = self.next.send(request)
               ^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/policies/_retry.py", line 573, in send
    raise err
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/policies/_retry.py", line 551, in send
    response = self.next.send(request)
               ^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/_base.py", line 96, in send
    response = self.next.send(request)
               ^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/_base.py", line 96, in send
    response = self.next.send(request)
               ^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/_base.py", line 96, in send
    response = self.next.send(request)
               ^^^^^^^^^^^^^^^^^^^^^^^
  [Previous line repeated 3 more times]
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/_base.py", line 128, in send
    self._sender.send(request.http_request, **request.context.options),
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/transport/_requests_basic.py", line 409, in send
    raise error
azure.core.exceptions.ServiceResponseError: ('Connection aborted.', RemoteDisconnected('Remote end closed connection without response'))
2025-04-05 14:56:14 - INFO - [azure_client.py:186] - Closing Azure AI client connection
2025-04-05 14:56:14 - INFO - [database.py:258] - Closing database connection
2025-04-05 14:56:14 - INFO - [feedback_manager.py:668] - Closing database connection
2025-04-05 14:56:22 - INFO - [app.py:66] - Debug logging enabled for SQL generator and agents
2025-04-05 14:56:22 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 14:56:22 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 14:56:22 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 14:56:22 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 14:56:22 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 14:56:22 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 14:56:22 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 14:56:22 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 14:56:22 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 14:56:22 - INFO - [azure_client.py:11] - Initializing Azure AI Client using LLM Engine
2025-04-05 14:56:22 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 14:56:22 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 14:56:22 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 14:56:22 - INFO - [azure_client.py:17] - Azure AI Client initialized successfully
2025-04-05 14:56:22 - INFO - [database.py:38] - Database manager initialized with connection: sqlite:///text2sql.db
2025-04-05 14:56:22 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-04-05 14:56:29 - INFO - [app.py:66] - Debug logging enabled for SQL generator and agents
2025-04-05 14:56:29 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 14:56:29 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 14:56:29 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 14:56:29 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 14:56:29 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 14:56:29 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 14:56:29 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 14:56:29 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 14:56:29 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 14:56:29 - INFO - [azure_client.py:11] - Initializing Azure AI Client using LLM Engine
2025-04-05 14:56:29 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 14:56:29 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 14:56:29 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 14:56:29 - INFO - [azure_client.py:17] - Azure AI Client initialized successfully
2025-04-05 14:56:29 - INFO - [database.py:38] - Database manager initialized with connection: sqlite:///text2sql.db
2025-04-05 14:56:29 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-04-05 14:56:38 - INFO - [database.py:44] - Attempting database connection
2025-04-05 14:56:38 - INFO - [database.py:48] - Database connection established in 0.01s
2025-04-05 14:56:38 - INFO - [llm_engine.py:55] - [TABLE] Completion generation started
2025-04-05 14:56:47 - INFO - [llm_engine.py:92] - [TABLE] Completion generation completed in 8.32s
2025-04-05 14:56:47 - INFO - [llm_engine.py:93] - **************************
2025-04-05 14:56:47 - INFO - [feedback_manager.py:43] - Attempting database connection
2025-04-05 14:56:47 - INFO - [feedback_manager.py:47] - Database connection established in 0.00s
2025-04-05 14:56:47 - INFO - [feedback_manager.py:267] - Stage 1: Vector search for 'get me all customers...'
2025-04-05 14:56:47 - INFO - [feedback_manager.py:62] - Loading embedding model 'sentence-transformers/all-MiniLM-L12-v2'
2025-04-05 14:56:50 - INFO - [feedback_manager.py:65] - Embedding model loaded in 2.89s
2025-04-05 14:56:50 - WARNING - [feedback_manager.py:324] - No candidates found from vector search
2025-04-05 14:56:50 - INFO - [azure_client.py:35] - SQL generation started for query: 'get me all customers'
2025-04-05 14:56:50 - INFO - [azure_client.py:69] - Including schema information (587 chars)
2025-04-05 14:56:50 - INFO - [azure_client.py:104] - Including 3 SQL examples (no similarity examples found)
2025-04-05 14:56:50 - INFO - [azure_client.py:114] - PROMPT: [{'role': 'system', 'content': "You are an expert SQL assistant. Convert natural language questions into precise, executable SQL queries.\nYour task is to:\n1. Analyze the provided schema carefully, noting table relationships and column types\n2. Generate a SQL query that accurately answers the user's question\n3. Consider performance by selecting only necessary columns\n4. Use appropriate JOIN conditions based on primary/foreign key relationships or provided join conditions\n5. Include a brief explanation of your query\n\nRules:\n- Include table names and column references exactly as provided in the schema\n- Use appropriate SQL functions based on column data types\n- Consider NULL values in your conditions\n- Use table aliases for better readability when joining multiple tables\n- Add column aliases for computed values\n- Format the SQL query with proper indentation\n- If similar queries are provided, strictly use that as format or syntax\n- Return the SQL inside a code block tagged with ```sql\n\nExample output format:\nHere's a query that will [explanation]...\n\n```sql\nSELECT ...\nFROM ...\nWHERE ...\n```"}, {'role': 'user', 'content': "Here's the database schema:\nTable: customers\nDescription: Customer information and profiles\nColumns: customer_id (INTEGER) - Unique customer identifier, first_name (TEXT) - Customer's first name, last_name (TEXT) - Customer's last name, email (TEXT) - Customer's email address (unique), phone (TEXT) - Customer's phone number, address (TEXT) - Customer's street address, city (TEXT) - Customer's city, state (TEXT) - Customer's state/province, country (TEXT) - Customer's country, postal_code (TEXT) - Customer's postal/zip code, registration_date (TEXT) - Date when customer registered\nPrimary Key(s): customer_id\n"}, {'role': 'user', 'content': 'Here are some example queries and their SQL:\nQuestion: How many records are in the customers table?\nSQL: SELECT COUNT(*) AS record_count FROM customers\n\nQuestion: Get all columns from customers\nSQL: SELECT * FROM customers LIMIT 5\n\nQuestion: Get record from customers by customer_id\nSQL: SELECT * FROM customers WHERE customer_id = 1\n\n'}, {'role': 'user', 'content': 'Convert this question to SQL: get me all customers'}]
2025-04-05 14:56:50 - INFO - [llm_engine.py:55] - [SQL_GEN] Completion generation started
2025-04-05 14:56:52 - INFO - [llm_engine.py:92] - [SQL_GEN] Completion generation completed in 2.12s
2025-04-05 14:56:52 - INFO - [llm_engine.py:93] - **************************
2025-04-05 14:56:52 - INFO - [azure_client.py:150] - Parsing SQL from model response
2025-04-05 14:56:52 - INFO - [azure_client.py:157] - Found SQL code block in response
2025-04-05 14:56:52 - INFO - [azure_client.py:171] - Extracted SQL query (24 chars) and explanation (241 chars)
2025-04-05 14:56:52 - INFO - [azure_client.py:124] - Generated SQL: SELECT * FROM customers;
2025-04-05 14:56:52,231 - QUERY: 'get me all customers' → SQL: SELECT * FROM customers;
2025-04-05 14:56:52 - INFO - [azure_client.py:132] - SQL generation completed in 2.15s
2025-04-05 14:56:52 - INFO - [database.py:65] - Executing SQL query: SELECT * FROM customers;
2025-04-05 14:56:52 - INFO - [database.py:86] - Query returned 5 rows with 11 columns
2025-04-05 14:56:52 - INFO - [database.py:95] - Query processing completed in 0.02s
2025-04-05 14:58:51 - INFO - [database.py:44] - Attempting database connection
2025-04-05 14:58:51 - INFO - [database.py:48] - Database connection established in 0.00s
2025-04-05 14:58:51 - INFO - [llm_engine.py:55] - [TABLE] Completion generation started
2025-04-05 14:58:52 - INFO - [llm_engine.py:92] - [TABLE] Completion generation completed in 0.48s
2025-04-05 14:58:52 - INFO - [llm_engine.py:93] - **************************
2025-04-05 14:58:52 - INFO - [feedback_manager.py:267] - Stage 1: Vector search for 'get me all customers...'
2025-04-05 14:58:52 - WARNING - [feedback_manager.py:324] - No candidates found from vector search
2025-04-05 14:58:52 - INFO - [azure_client.py:35] - SQL generation started for query: 'get me all customers'
2025-04-05 14:58:52 - INFO - [azure_client.py:69] - Including schema information (587 chars)
2025-04-05 14:58:52 - INFO - [azure_client.py:104] - Including 3 SQL examples (no similarity examples found)
2025-04-05 14:58:52 - INFO - [azure_client.py:114] - PROMPT: [{'role': 'system', 'content': "You are an expert SQL assistant. Convert natural language questions into precise, executable SQL queries.\nYour task is to:\n1. Analyze the provided schema carefully, noting table relationships and column types\n2. Generate a SQL query that accurately answers the user's question\n3. Consider performance by selecting only necessary columns\n4. Use appropriate JOIN conditions based on primary/foreign key relationships or provided join conditions\n5. Include a brief explanation of your query\n\nRules:\n- Include table names and column references exactly as provided in the schema\n- Use appropriate SQL functions based on column data types\n- Consider NULL values in your conditions\n- Use table aliases for better readability when joining multiple tables\n- Add column aliases for computed values\n- Format the SQL query with proper indentation\n- If similar queries are provided, strictly use that as format or syntax\n- Return the SQL inside a code block tagged with ```sql\n\nExample output format:\nHere's a query that will [explanation]...\n\n```sql\nSELECT ...\nFROM ...\nWHERE ...\n```"}, {'role': 'user', 'content': "Here's the database schema:\nTable: customers\nDescription: Customer information and profiles\nColumns: customer_id (INTEGER) - Unique customer identifier, first_name (TEXT) - Customer's first name, last_name (TEXT) - Customer's last name, email (TEXT) - Customer's email address (unique), phone (TEXT) - Customer's phone number, address (TEXT) - Customer's street address, city (TEXT) - Customer's city, state (TEXT) - Customer's state/province, country (TEXT) - Customer's country, postal_code (TEXT) - Customer's postal/zip code, registration_date (TEXT) - Date when customer registered\nPrimary Key(s): customer_id\n"}, {'role': 'user', 'content': 'Here are some example queries and their SQL:\nQuestion: How many records are in the customers table?\nSQL: SELECT COUNT(*) AS record_count FROM customers\n\nQuestion: Get all columns from customers\nSQL: SELECT * FROM customers LIMIT 5\n\nQuestion: Get record from customers by customer_id\nSQL: SELECT * FROM customers WHERE customer_id = 1\n\n'}, {'role': 'user', 'content': 'Convert this question to SQL: get me all customers'}]
2025-04-05 14:58:52 - INFO - [llm_engine.py:55] - [SQL_GEN] Completion generation started
2025-04-05 14:58:53 - INFO - [llm_engine.py:92] - [SQL_GEN] Completion generation completed in 1.25s
2025-04-05 14:58:53 - INFO - [llm_engine.py:93] - **************************
2025-04-05 14:58:53 - INFO - [azure_client.py:150] - Parsing SQL from model response
2025-04-05 14:58:53 - INFO - [azure_client.py:157] - Found SQL code block in response
2025-04-05 14:58:53 - INFO - [azure_client.py:171] - Extracted SQL query (24 chars) and explanation (182 chars)
2025-04-05 14:58:53 - INFO - [azure_client.py:124] - Generated SQL: SELECT * FROM customers;
2025-04-05 14:58:53,620 - QUERY: 'get me all customers' → SQL: SELECT * FROM customers;
2025-04-05 14:58:53 - INFO - [azure_client.py:132] - SQL generation completed in 1.27s
2025-04-05 14:58:53 - INFO - [database.py:65] - Executing SQL query: SELECT * FROM customers;
2025-04-05 14:58:53 - INFO - [database.py:86] - Query returned 5 rows with 11 columns
2025-04-05 14:58:53 - INFO - [database.py:95] - Query processing completed in 0.01s
2025-04-05 19:40:41 - INFO - [app.py:66] - Debug logging enabled for SQL generator and agents
2025-04-05 19:40:41 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 19:40:41 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 19:40:41 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 19:40:41 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 19:40:41 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 19:40:41 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 19:40:41 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 19:40:41 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 19:40:41 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 19:40:41 - INFO - [azure_client.py:11] - Initializing Azure AI Client using LLM Engine
2025-04-05 19:40:41 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 19:40:41 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 19:40:41 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 19:40:41 - INFO - [azure_client.py:17] - Azure AI Client initialized successfully
2025-04-05 19:40:41 - INFO - [database.py:38] - Database manager initialized with connection: sqlite:///text2sql.db
2025-04-05 19:40:41 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-04-05 19:40:48 - INFO - [app.py:66] - Debug logging enabled for SQL generator and agents
2025-04-05 19:40:48 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 19:40:48 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 19:40:48 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 19:40:48 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 19:40:48 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 19:40:48 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 19:40:48 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 19:40:48 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 19:40:48 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 19:40:48 - INFO - [azure_client.py:11] - Initializing Azure AI Client using LLM Engine
2025-04-05 19:40:48 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 19:40:48 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 19:40:48 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 19:40:48 - INFO - [azure_client.py:17] - Azure AI Client initialized successfully
2025-04-05 19:40:48 - INFO - [database.py:38] - Database manager initialized with connection: sqlite:///text2sql.db
2025-04-05 19:40:48 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-04-05 19:41:44 - INFO - [database.py:44] - Attempting database connection
2025-04-05 19:41:44 - INFO - [database.py:48] - Database connection established in 0.00s
2025-04-05 19:41:44 - INFO - [llm_engine.py:55] - [TABLE] Completion generation started
2025-04-05 19:41:45 - INFO - [llm_engine.py:92] - [TABLE] Completion generation completed in 1.23s
2025-04-05 19:41:45 - INFO - [llm_engine.py:93] - **************************
2025-04-05 19:41:45 - INFO - [feedback_manager.py:43] - Attempting database connection
2025-04-05 19:41:45 - INFO - [feedback_manager.py:47] - Database connection established in 0.00s
2025-04-05 19:41:45 - INFO - [feedback_manager.py:267] - Stage 1: Vector search for 'get me all the customer...'
2025-04-05 19:41:45 - INFO - [feedback_manager.py:62] - Loading embedding model 'sentence-transformers/all-MiniLM-L12-v2'
2025-04-05 19:41:48 - INFO - [feedback_manager.py:65] - Embedding model loaded in 2.82s
2025-04-05 19:41:48 - WARNING - [feedback_manager.py:324] - No candidates found from vector search
2025-04-05 19:41:48 - INFO - [azure_client.py:35] - SQL generation started for query: 'get me all the customer'
2025-04-05 19:41:48 - INFO - [azure_client.py:69] - Including schema information (587 chars)
2025-04-05 19:41:48 - INFO - [azure_client.py:104] - Including 3 SQL examples (no similarity examples found)
2025-04-05 19:41:48 - INFO - [azure_client.py:114] - PROMPT: [{'role': 'system', 'content': "You are an expert SQL assistant. Convert natural language questions into precise, executable SQL queries.\nYour task is to:\n1. Analyze the provided schema carefully, noting table relationships and column types\n2. Generate a SQL query that accurately answers the user's question\n3. Consider performance by selecting only necessary columns\n4. Use appropriate JOIN conditions based on primary/foreign key relationships or provided join conditions\n5. Include a brief explanation of your query\n\nRules:\n- Include table names and column references exactly as provided in the schema\n- Use appropriate SQL functions based on column data types\n- Consider NULL values in your conditions\n- Use table aliases for better readability when joining multiple tables\n- Add column aliases for computed values\n- Format the SQL query with proper indentation\n- If similar queries are provided, strictly use that as format or syntax\n- Return the SQL inside a code block tagged with ```sql\n\nExample output format:\nHere's a query that will [explanation]...\n\n```sql\nSELECT ...\nFROM ...\nWHERE ...\n```"}, {'role': 'user', 'content': "Here's the database schema:\nTable: customers\nDescription: Customer information and profiles\nColumns: customer_id (INTEGER) - Unique customer identifier, first_name (TEXT) - Customer's first name, last_name (TEXT) - Customer's last name, email (TEXT) - Customer's email address (unique), phone (TEXT) - Customer's phone number, address (TEXT) - Customer's street address, city (TEXT) - Customer's city, state (TEXT) - Customer's state/province, country (TEXT) - Customer's country, postal_code (TEXT) - Customer's postal/zip code, registration_date (TEXT) - Date when customer registered\nPrimary Key(s): customer_id\n"}, {'role': 'user', 'content': 'Here are some example queries and their SQL:\nQuestion: How many records are in the customers table?\nSQL: SELECT COUNT(*) AS record_count FROM customers\n\nQuestion: Get all columns from customers\nSQL: SELECT * FROM customers LIMIT 5\n\nQuestion: Get record from customers by customer_id\nSQL: SELECT * FROM customers WHERE customer_id = 1\n\n'}, {'role': 'user', 'content': 'Convert this question to SQL: get me all the customer'}]
2025-04-05 19:41:48 - INFO - [llm_engine.py:55] - [SQL_GEN] Completion generation started
2025-04-05 19:41:50 - INFO - [llm_engine.py:92] - [SQL_GEN] Completion generation completed in 1.88s
2025-04-05 19:41:50 - INFO - [llm_engine.py:93] - **************************
2025-04-05 19:41:50 - INFO - [azure_client.py:150] - Parsing SQL from model response
2025-04-05 19:41:50 - INFO - [azure_client.py:157] - Found SQL code block in response
2025-04-05 19:41:50 - INFO - [azure_client.py:171] - Extracted SQL query (24 chars) and explanation (204 chars)
2025-04-05 19:41:50 - INFO - [azure_client.py:124] - Generated SQL: SELECT *
FROM customers;
2025-04-05 19:41:50,564 - QUERY: 'get me all the customer' → SQL: SELECT *
FROM customers;
2025-04-05 19:41:50 - INFO - [azure_client.py:132] - SQL generation completed in 1.89s
2025-04-05 19:41:50 - INFO - [database.py:65] - Executing SQL query: SELECT *
FROM customers;
2025-04-05 19:41:50 - INFO - [database.py:86] - Query returned 5 rows with 11 columns
2025-04-05 19:41:50 - INFO - [database.py:95] - Query processing completed in 0.02s
2025-04-05 19:42:04 - INFO - [database.py:44] - Attempting database connection
2025-04-05 19:42:04 - INFO - [database.py:48] - Database connection established in 0.00s
2025-04-05 19:42:04 - INFO - [llm_engine.py:55] - [TABLE] Completion generation started
2025-04-05 19:42:05 - INFO - [llm_engine.py:92] - [TABLE] Completion generation completed in 0.52s
2025-04-05 19:42:05 - INFO - [llm_engine.py:93] - **************************
2025-04-05 19:42:05 - INFO - [feedback_manager.py:267] - Stage 1: Vector search for 'get me all the customers...'
2025-04-05 19:42:05 - WARNING - [feedback_manager.py:324] - No candidates found from vector search
2025-04-05 19:42:05 - INFO - [azure_client.py:35] - SQL generation started for query: 'get me all the customers'
2025-04-05 19:42:05 - INFO - [azure_client.py:69] - Including schema information (587 chars)
2025-04-05 19:42:05 - INFO - [azure_client.py:104] - Including 3 SQL examples (no similarity examples found)
2025-04-05 19:42:05 - INFO - [azure_client.py:114] - PROMPT: [{'role': 'system', 'content': "You are an expert SQL assistant. Convert natural language questions into precise, executable SQL queries.\nYour task is to:\n1. Analyze the provided schema carefully, noting table relationships and column types\n2. Generate a SQL query that accurately answers the user's question\n3. Consider performance by selecting only necessary columns\n4. Use appropriate JOIN conditions based on primary/foreign key relationships or provided join conditions\n5. Include a brief explanation of your query\n\nRules:\n- Include table names and column references exactly as provided in the schema\n- Use appropriate SQL functions based on column data types\n- Consider NULL values in your conditions\n- Use table aliases for better readability when joining multiple tables\n- Add column aliases for computed values\n- Format the SQL query with proper indentation\n- If similar queries are provided, strictly use that as format or syntax\n- Return the SQL inside a code block tagged with ```sql\n\nExample output format:\nHere's a query that will [explanation]...\n\n```sql\nSELECT ...\nFROM ...\nWHERE ...\n```"}, {'role': 'user', 'content': "Here's the database schema:\nTable: customers\nDescription: Customer information and profiles\nColumns: customer_id (INTEGER) - Unique customer identifier, first_name (TEXT) - Customer's first name, last_name (TEXT) - Customer's last name, email (TEXT) - Customer's email address (unique), phone (TEXT) - Customer's phone number, address (TEXT) - Customer's street address, city (TEXT) - Customer's city, state (TEXT) - Customer's state/province, country (TEXT) - Customer's country, postal_code (TEXT) - Customer's postal/zip code, registration_date (TEXT) - Date when customer registered\nPrimary Key(s): customer_id\n"}, {'role': 'user', 'content': 'Here are some example queries and their SQL:\nQuestion: How many records are in the customers table?\nSQL: SELECT COUNT(*) AS record_count FROM customers\n\nQuestion: Get all columns from customers\nSQL: SELECT * FROM customers LIMIT 5\n\nQuestion: Get record from customers by customer_id\nSQL: SELECT * FROM customers WHERE customer_id = 1\n\n'}, {'role': 'user', 'content': 'Convert this question to SQL: get me all the customers'}]
2025-04-05 19:42:05 - INFO - [llm_engine.py:55] - [SQL_GEN] Completion generation started
2025-04-05 19:42:07 - INFO - [llm_engine.py:92] - [SQL_GEN] Completion generation completed in 1.43s
2025-04-05 19:42:07 - INFO - [llm_engine.py:93] - **************************
2025-04-05 19:42:07 - INFO - [azure_client.py:150] - Parsing SQL from model response
2025-04-05 19:42:07 - INFO - [azure_client.py:157] - Found SQL code block in response
2025-04-05 19:42:07 - INFO - [azure_client.py:171] - Extracted SQL query (24 chars) and explanation (280 chars)
2025-04-05 19:42:07 - INFO - [azure_client.py:124] - Generated SQL: SELECT *
FROM customers;
2025-04-05 19:42:07,045 - QUERY: 'get me all the customers' → SQL: SELECT *
FROM customers;
2025-04-05 19:42:07 - INFO - [azure_client.py:132] - SQL generation completed in 1.46s
2025-04-05 19:42:07 - INFO - [database.py:65] - Executing SQL query: SELECT *
FROM customers;
2025-04-05 19:42:07 - INFO - [database.py:86] - Query returned 5 rows with 11 columns
2025-04-05 19:42:07 - INFO - [database.py:95] - Query processing completed in 0.01s
2025-04-05 19:45:17 - INFO - [database.py:44] - Attempting database connection
2025-04-05 19:45:17 - INFO - [database.py:48] - Database connection established in 0.00s
2025-04-05 19:45:17 - INFO - [llm_engine.py:55] - [TABLE] Completion generation started
2025-04-05 19:45:17 - INFO - [llm_engine.py:92] - [TABLE] Completion generation completed in 0.46s
2025-04-05 19:45:17 - INFO - [llm_engine.py:93] - **************************
2025-04-05 19:45:17 - INFO - [feedback_manager.py:267] - Stage 1: Vector search for 'get me all the customers...'
2025-04-05 19:45:17 - WARNING - [feedback_manager.py:324] - No candidates found from vector search
2025-04-05 19:45:17 - INFO - [azure_client.py:35] - SQL generation started for query: 'get me all the customers'
2025-04-05 19:45:17 - INFO - [azure_client.py:69] - Including schema information (587 chars)
2025-04-05 19:45:17 - INFO - [azure_client.py:104] - Including 3 SQL examples (no similarity examples found)
2025-04-05 19:45:17 - INFO - [azure_client.py:114] - PROMPT: [{'role': 'system', 'content': "You are an expert SQL assistant. Convert natural language questions into precise, executable SQL queries.\nYour task is to:\n1. Analyze the provided schema carefully, noting table relationships and column types\n2. Generate a SQL query that accurately answers the user's question\n3. Consider performance by selecting only necessary columns\n4. Use appropriate JOIN conditions based on primary/foreign key relationships or provided join conditions\n5. Include a brief explanation of your query\n\nRules:\n- Include table names and column references exactly as provided in the schema\n- Use appropriate SQL functions based on column data types\n- Consider NULL values in your conditions\n- Use table aliases for better readability when joining multiple tables\n- Add column aliases for computed values\n- Format the SQL query with proper indentation\n- If similar queries are provided, strictly use that as format or syntax\n- Return the SQL inside a code block tagged with ```sql\n\nExample output format:\nHere's a query that will [explanation]...\n\n```sql\nSELECT ...\nFROM ...\nWHERE ...\n```"}, {'role': 'user', 'content': "Here's the database schema:\nTable: customers\nDescription: Customer information and profiles\nColumns: customer_id (INTEGER) - Unique customer identifier, first_name (TEXT) - Customer's first name, last_name (TEXT) - Customer's last name, email (TEXT) - Customer's email address (unique), phone (TEXT) - Customer's phone number, address (TEXT) - Customer's street address, city (TEXT) - Customer's city, state (TEXT) - Customer's state/province, country (TEXT) - Customer's country, postal_code (TEXT) - Customer's postal/zip code, registration_date (TEXT) - Date when customer registered\nPrimary Key(s): customer_id\n"}, {'role': 'user', 'content': 'Here are some example queries and their SQL:\nQuestion: How many records are in the customers table?\nSQL: SELECT COUNT(*) AS record_count FROM customers\n\nQuestion: Get all columns from customers\nSQL: SELECT * FROM customers LIMIT 5\n\nQuestion: Get record from customers by customer_id\nSQL: SELECT * FROM customers WHERE customer_id = 1\n\n'}, {'role': 'user', 'content': 'Convert this question to SQL: get me all the customers'}]
2025-04-05 19:45:17 - INFO - [llm_engine.py:55] - [SQL_GEN] Completion generation started
2025-04-05 19:45:42 - INFO - [llm_engine.py:92] - [SQL_GEN] Completion generation completed in 25.00s
2025-04-05 19:45:42 - INFO - [llm_engine.py:93] - **************************
2025-04-05 19:45:42 - INFO - [azure_client.py:150] - Parsing SQL from model response
2025-04-05 19:45:42 - INFO - [azure_client.py:157] - Found SQL code block in response
2025-04-05 19:45:42 - INFO - [azure_client.py:171] - Extracted SQL query (24 chars) and explanation (257 chars)
2025-04-05 19:45:42 - INFO - [azure_client.py:124] - Generated SQL: SELECT *
FROM customers;
2025-04-05 19:45:42,736 - QUERY: 'get me all the customers' → SQL: SELECT *
FROM customers;
2025-04-05 19:45:42 - INFO - [azure_client.py:132] - SQL generation completed in 25.04s
2025-04-05 19:45:42 - INFO - [database.py:65] - Executing SQL query: SELECT *
FROM customers;
2025-04-05 19:45:42 - INFO - [database.py:86] - Query returned 5 rows with 11 columns
2025-04-05 19:45:42 - INFO - [database.py:95] - Query processing completed in 0.01s
2025-04-05 19:48:50 - INFO - [database.py:44] - Attempting database connection
2025-04-05 19:48:50 - INFO - [database.py:48] - Database connection established in 0.00s
2025-04-05 19:48:50 - INFO - [llm_engine.py:55] - [TABLE] Completion generation started
2025-04-05 19:48:51 - INFO - [llm_engine.py:92] - [TABLE] Completion generation completed in 0.43s
2025-04-05 19:48:51 - INFO - [llm_engine.py:93] - **************************
2025-04-05 19:48:51 - INFO - [feedback_manager.py:267] - Stage 1: Vector search for 'get me all the customers...'
2025-04-05 19:48:51 - WARNING - [feedback_manager.py:324] - No candidates found from vector search
2025-04-05 19:48:51 - INFO - [azure_client.py:35] - SQL generation started for query: 'get me all the customers'
2025-04-05 19:48:51 - INFO - [azure_client.py:69] - Including schema information (587 chars)
2025-04-05 19:48:51 - INFO - [azure_client.py:104] - Including 3 SQL examples (no similarity examples found)
2025-04-05 19:48:51 - INFO - [azure_client.py:114] - PROMPT: [{'role': 'system', 'content': "You are an expert SQL assistant. Convert natural language questions into precise, executable SQL queries.\nYour task is to:\n1. Analyze the provided schema carefully, noting table relationships and column types\n2. Generate a SQL query that accurately answers the user's question\n3. Consider performance by selecting only necessary columns\n4. Use appropriate JOIN conditions based on primary/foreign key relationships or provided join conditions\n5. Include a brief explanation of your query\n\nRules:\n- Include table names and column references exactly as provided in the schema\n- Use appropriate SQL functions based on column data types\n- Consider NULL values in your conditions\n- Use table aliases for better readability when joining multiple tables\n- Add column aliases for computed values\n- Format the SQL query with proper indentation\n- If similar queries are provided, strictly use that as format or syntax\n- Return the SQL inside a code block tagged with ```sql\n\nExample output format:\nHere's a query that will [explanation]...\n\n```sql\nSELECT ...\nFROM ...\nWHERE ...\n```"}, {'role': 'user', 'content': "Here's the database schema:\nTable: customers\nDescription: Customer information and profiles\nColumns: customer_id (INTEGER) - Unique customer identifier, first_name (TEXT) - Customer's first name, last_name (TEXT) - Customer's last name, email (TEXT) - Customer's email address (unique), phone (TEXT) - Customer's phone number, address (TEXT) - Customer's street address, city (TEXT) - Customer's city, state (TEXT) - Customer's state/province, country (TEXT) - Customer's country, postal_code (TEXT) - Customer's postal/zip code, registration_date (TEXT) - Date when customer registered\nPrimary Key(s): customer_id\n"}, {'role': 'user', 'content': 'Here are some example queries and their SQL:\nQuestion: How many records are in the customers table?\nSQL: SELECT COUNT(*) AS record_count FROM customers\n\nQuestion: Get all columns from customers\nSQL: SELECT * FROM customers LIMIT 5\n\nQuestion: Get record from customers by customer_id\nSQL: SELECT * FROM customers WHERE customer_id = 1\n\n'}, {'role': 'user', 'content': 'Convert this question to SQL: get me all the customers'}]
2025-04-05 19:48:51 - INFO - [llm_engine.py:55] - [SQL_GEN] Completion generation started
2025-04-05 19:48:52 - INFO - [llm_engine.py:92] - [SQL_GEN] Completion generation completed in 1.14s
2025-04-05 19:48:52 - INFO - [llm_engine.py:93] - **************************
2025-04-05 19:48:52 - INFO - [azure_client.py:150] - Parsing SQL from model response
2025-04-05 19:48:52 - INFO - [azure_client.py:157] - Found SQL code block in response
2025-04-05 19:48:52 - INFO - [azure_client.py:171] - Extracted SQL query (24 chars) and explanation (148 chars)
2025-04-05 19:48:52 - INFO - [azure_client.py:124] - Generated SQL: SELECT * FROM customers;
2025-04-05 19:48:52,534 - QUERY: 'get me all the customers' → SQL: SELECT * FROM customers;
2025-04-05 19:48:52 - INFO - [azure_client.py:132] - SQL generation completed in 1.17s
2025-04-05 19:48:52 - INFO - [database.py:65] - Executing SQL query: SELECT * FROM customers;
2025-04-05 19:48:52 - INFO - [database.py:86] - Query returned 5 rows with 11 columns
2025-04-05 19:48:52 - INFO - [database.py:95] - Query processing completed in 0.01s
2025-04-05 19:49:36 - INFO - [database.py:44] - Attempting database connection
2025-04-05 19:49:36 - INFO - [database.py:48] - Database connection established in 0.00s
2025-04-05 19:49:36 - INFO - [llm_engine.py:55] - [TABLE] Completion generation started
2025-04-05 19:49:44 - INFO - [llm_engine.py:92] - [TABLE] Completion generation completed in 7.88s
2025-04-05 19:49:44 - INFO - [llm_engine.py:93] - **************************
2025-04-05 19:49:44 - INFO - [feedback_manager.py:267] - Stage 1: Vector search for 'get me all the customers...'
2025-04-05 19:49:44 - WARNING - [feedback_manager.py:324] - No candidates found from vector search
2025-04-05 19:49:44 - INFO - [azure_client.py:35] - SQL generation started for query: 'get me all the customers'
2025-04-05 19:49:44 - INFO - [azure_client.py:69] - Including schema information (587 chars)
2025-04-05 19:49:44 - INFO - [azure_client.py:104] - Including 3 SQL examples (no similarity examples found)
2025-04-05 19:49:44 - INFO - [azure_client.py:114] - PROMPT: [{'role': 'system', 'content': "You are an expert SQL assistant. Convert natural language questions into precise, executable SQL queries.\nYour task is to:\n1. Analyze the provided schema carefully, noting table relationships and column types\n2. Generate a SQL query that accurately answers the user's question\n3. Consider performance by selecting only necessary columns\n4. Use appropriate JOIN conditions based on primary/foreign key relationships or provided join conditions\n5. Include a brief explanation of your query\n\nRules:\n- Include table names and column references exactly as provided in the schema\n- Use appropriate SQL functions based on column data types\n- Consider NULL values in your conditions\n- Use table aliases for better readability when joining multiple tables\n- Add column aliases for computed values\n- Format the SQL query with proper indentation\n- If similar queries are provided, strictly use that as format or syntax\n- Return the SQL inside a code block tagged with ```sql\n\nExample output format:\nHere's a query that will [explanation]...\n\n```sql\nSELECT ...\nFROM ...\nWHERE ...\n```"}, {'role': 'user', 'content': "Here's the database schema:\nTable: customers\nDescription: Customer information and profiles\nColumns: customer_id (INTEGER) - Unique customer identifier, first_name (TEXT) - Customer's first name, last_name (TEXT) - Customer's last name, email (TEXT) - Customer's email address (unique), phone (TEXT) - Customer's phone number, address (TEXT) - Customer's street address, city (TEXT) - Customer's city, state (TEXT) - Customer's state/province, country (TEXT) - Customer's country, postal_code (TEXT) - Customer's postal/zip code, registration_date (TEXT) - Date when customer registered\nPrimary Key(s): customer_id\n"}, {'role': 'user', 'content': 'Here are some example queries and their SQL:\nQuestion: How many records are in the customers table?\nSQL: SELECT COUNT(*) AS record_count FROM customers\n\nQuestion: Get all columns from customers\nSQL: SELECT * FROM customers LIMIT 5\n\nQuestion: Get record from customers by customer_id\nSQL: SELECT * FROM customers WHERE customer_id = 1\n\n'}, {'role': 'user', 'content': 'Convert this question to SQL: get me all the customers'}]
2025-04-05 19:49:44 - INFO - [llm_engine.py:55] - [SQL_GEN] Completion generation started
2025-04-05 19:49:46 - INFO - [llm_engine.py:92] - [SQL_GEN] Completion generation completed in 1.51s
2025-04-05 19:49:46 - INFO - [llm_engine.py:93] - **************************
2025-04-05 19:49:46 - INFO - [azure_client.py:150] - Parsing SQL from model response
2025-04-05 19:49:46 - INFO - [azure_client.py:157] - Found SQL code block in response
2025-04-05 19:49:46 - INFO - [azure_client.py:171] - Extracted SQL query (23 chars) and explanation (297 chars)
2025-04-05 19:49:46 - INFO - [azure_client.py:124] - Generated SQL: SELECT * FROM customers
2025-04-05 19:49:46,316 - QUERY: 'get me all the customers' → SQL: SELECT * FROM customers
2025-04-05 19:49:46 - INFO - [azure_client.py:132] - SQL generation completed in 1.52s
2025-04-05 19:49:46 - INFO - [database.py:65] - Executing SQL query: SELECT * FROM customers
2025-04-05 19:49:46 - INFO - [database.py:86] - Query returned 5 rows with 11 columns
2025-04-05 19:49:46 - INFO - [database.py:95] - Query processing completed in 0.01s
2025-04-05 19:51:21 - INFO - [database.py:44] - Attempting database connection
2025-04-05 19:51:21 - INFO - [database.py:48] - Database connection established in 0.00s
2025-04-05 19:51:21 - INFO - [llm_engine.py:55] - [TABLE] Completion generation started
2025-04-05 19:51:21 - INFO - [llm_engine.py:92] - [TABLE] Completion generation completed in 0.44s
2025-04-05 19:51:21 - INFO - [llm_engine.py:93] - **************************
2025-04-05 19:51:21 - INFO - [feedback_manager.py:267] - Stage 1: Vector search for 'get me all the customers...'
2025-04-05 19:51:21 - WARNING - [feedback_manager.py:324] - No candidates found from vector search
2025-04-05 19:51:21 - INFO - [azure_client.py:35] - SQL generation started for query: 'get me all the customers'
2025-04-05 19:51:21 - INFO - [azure_client.py:69] - Including schema information (587 chars)
2025-04-05 19:51:21 - INFO - [azure_client.py:104] - Including 3 SQL examples (no similarity examples found)
2025-04-05 19:51:21 - INFO - [azure_client.py:114] - PROMPT: [{'role': 'system', 'content': "You are an expert SQL assistant. Convert natural language questions into precise, executable SQL queries.\nYour task is to:\n1. Analyze the provided schema carefully, noting table relationships and column types\n2. Generate a SQL query that accurately answers the user's question\n3. Consider performance by selecting only necessary columns\n4. Use appropriate JOIN conditions based on primary/foreign key relationships or provided join conditions\n5. Include a brief explanation of your query\n\nRules:\n- Include table names and column references exactly as provided in the schema\n- Use appropriate SQL functions based on column data types\n- Consider NULL values in your conditions\n- Use table aliases for better readability when joining multiple tables\n- Add column aliases for computed values\n- Format the SQL query with proper indentation\n- If similar queries are provided, strictly use that as format or syntax\n- Return the SQL inside a code block tagged with ```sql\n\nExample output format:\nHere's a query that will [explanation]...\n\n```sql\nSELECT ...\nFROM ...\nWHERE ...\n```"}, {'role': 'user', 'content': "Here's the database schema:\nTable: customers\nDescription: Customer information and profiles\nColumns: customer_id (INTEGER) - Unique customer identifier, first_name (TEXT) - Customer's first name, last_name (TEXT) - Customer's last name, email (TEXT) - Customer's email address (unique), phone (TEXT) - Customer's phone number, address (TEXT) - Customer's street address, city (TEXT) - Customer's city, state (TEXT) - Customer's state/province, country (TEXT) - Customer's country, postal_code (TEXT) - Customer's postal/zip code, registration_date (TEXT) - Date when customer registered\nPrimary Key(s): customer_id\n"}, {'role': 'user', 'content': 'Here are some example queries and their SQL:\nQuestion: How many records are in the customers table?\nSQL: SELECT COUNT(*) AS record_count FROM customers\n\nQuestion: Get all columns from customers\nSQL: SELECT * FROM customers LIMIT 5\n\nQuestion: Get record from customers by customer_id\nSQL: SELECT * FROM customers WHERE customer_id = 1\n\n'}, {'role': 'user', 'content': 'Convert this question to SQL: get me all the customers'}]
2025-04-05 19:51:21 - INFO - [llm_engine.py:55] - [SQL_GEN] Completion generation started
2025-04-05 19:51:23 - INFO - [llm_engine.py:92] - [SQL_GEN] Completion generation completed in 1.78s
2025-04-05 19:51:23 - INFO - [llm_engine.py:93] - **************************
2025-04-05 19:51:23 - INFO - [azure_client.py:150] - Parsing SQL from model response
2025-04-05 19:51:23 - INFO - [azure_client.py:157] - Found SQL code block in response
2025-04-05 19:51:23 - INFO - [azure_client.py:171] - Extracted SQL query (24 chars) and explanation (381 chars)
2025-04-05 19:51:23 - INFO - [azure_client.py:124] - Generated SQL: SELECT * FROM customers;
2025-04-05 19:51:23,451 - QUERY: 'get me all the customers' → SQL: SELECT * FROM customers;
2025-04-05 19:51:23 - INFO - [azure_client.py:132] - SQL generation completed in 1.81s
2025-04-05 19:51:23 - INFO - [database.py:65] - Executing SQL query: SELECT * FROM customers;
2025-04-05 19:51:23 - INFO - [database.py:86] - Query returned 5 rows with 11 columns
2025-04-05 19:51:23 - INFO - [database.py:95] - Query processing completed in 0.02s
2025-04-05 19:54:09 - INFO - [database.py:44] - Attempting database connection
2025-04-05 19:54:09 - INFO - [database.py:48] - Database connection established in 0.00s
2025-04-05 19:54:09 - INFO - [llm_engine.py:55] - [TABLE] Completion generation started
2025-04-05 19:54:10 - INFO - [llm_engine.py:92] - [TABLE] Completion generation completed in 0.50s
2025-04-05 19:54:10 - INFO - [llm_engine.py:93] - **************************
2025-04-05 19:54:10 - INFO - [feedback_manager.py:267] - Stage 1: Vector search for 'get me all the customers...'
2025-04-05 19:54:10 - WARNING - [feedback_manager.py:324] - No candidates found from vector search
2025-04-05 19:54:10 - INFO - [azure_client.py:35] - SQL generation started for query: 'get me all the customers'
2025-04-05 19:54:10 - INFO - [azure_client.py:69] - Including schema information (587 chars)
2025-04-05 19:54:10 - INFO - [azure_client.py:104] - Including 3 SQL examples (no similarity examples found)
2025-04-05 19:54:10 - INFO - [azure_client.py:114] - PROMPT: [{'role': 'system', 'content': "You are an expert SQL assistant. Convert natural language questions into precise, executable SQL queries.\nYour task is to:\n1. Analyze the provided schema carefully, noting table relationships and column types\n2. Generate a SQL query that accurately answers the user's question\n3. Consider performance by selecting only necessary columns\n4. Use appropriate JOIN conditions based on primary/foreign key relationships or provided join conditions\n5. Include a brief explanation of your query\n\nRules:\n- Include table names and column references exactly as provided in the schema\n- Use appropriate SQL functions based on column data types\n- Consider NULL values in your conditions\n- Use table aliases for better readability when joining multiple tables\n- Add column aliases for computed values\n- Format the SQL query with proper indentation\n- If similar queries are provided, strictly use that as format or syntax\n- Return the SQL inside a code block tagged with ```sql\n\nExample output format:\nHere's a query that will [explanation]...\n\n```sql\nSELECT ...\nFROM ...\nWHERE ...\n```"}, {'role': 'user', 'content': "Here's the database schema:\nTable: customers\nDescription: Customer information and profiles\nColumns: customer_id (INTEGER) - Unique customer identifier, first_name (TEXT) - Customer's first name, last_name (TEXT) - Customer's last name, email (TEXT) - Customer's email address (unique), phone (TEXT) - Customer's phone number, address (TEXT) - Customer's street address, city (TEXT) - Customer's city, state (TEXT) - Customer's state/province, country (TEXT) - Customer's country, postal_code (TEXT) - Customer's postal/zip code, registration_date (TEXT) - Date when customer registered\nPrimary Key(s): customer_id\n"}, {'role': 'user', 'content': 'Here are some example queries and their SQL:\nQuestion: How many records are in the customers table?\nSQL: SELECT COUNT(*) AS record_count FROM customers\n\nQuestion: Get all columns from customers\nSQL: SELECT * FROM customers LIMIT 5\n\nQuestion: Get record from customers by customer_id\nSQL: SELECT * FROM customers WHERE customer_id = 1\n\n'}, {'role': 'user', 'content': 'Convert this question to SQL: get me all the customers'}]
2025-04-05 19:54:10 - INFO - [llm_engine.py:55] - [SQL_GEN] Completion generation started
2025-04-05 19:54:11 - INFO - [llm_engine.py:92] - [SQL_GEN] Completion generation completed in 1.27s
2025-04-05 19:54:11 - INFO - [llm_engine.py:93] - **************************
2025-04-05 19:54:11 - INFO - [azure_client.py:150] - Parsing SQL from model response
2025-04-05 19:54:11 - INFO - [azure_client.py:157] - Found SQL code block in response
2025-04-05 19:54:11 - INFO - [azure_client.py:171] - Extracted SQL query (24 chars) and explanation (162 chars)
2025-04-05 19:54:11 - INFO - [azure_client.py:124] - Generated SQL: SELECT * FROM customers;
2025-04-05 19:54:11,584 - QUERY: 'get me all the customers' → SQL: SELECT * FROM customers;
2025-04-05 19:54:11 - INFO - [azure_client.py:132] - SQL generation completed in 1.30s
2025-04-05 19:54:11 - INFO - [database.py:65] - Executing SQL query: SELECT * FROM customers;
2025-04-05 19:54:11 - INFO - [database.py:86] - Query returned 5 rows with 11 columns
2025-04-05 19:54:11 - INFO - [database.py:95] - Query processing completed in 0.01s
2025-04-05 19:57:54 - INFO - [database.py:44] - Attempting database connection
2025-04-05 19:57:54 - INFO - [database.py:48] - Database connection established in 0.00s
2025-04-05 19:57:54 - INFO - [llm_engine.py:55] - [TABLE] Completion generation started
2025-04-05 19:57:54 - INFO - [llm_engine.py:92] - [TABLE] Completion generation completed in 0.45s
2025-04-05 19:57:54 - INFO - [llm_engine.py:93] - **************************
2025-04-05 19:57:54 - INFO - [feedback_manager.py:267] - Stage 1: Vector search for 'get me count of customers by state...'
2025-04-05 19:57:54 - WARNING - [feedback_manager.py:324] - No candidates found from vector search
2025-04-05 19:57:54 - INFO - [azure_client.py:35] - SQL generation started for query: 'get me count of customers by state'
2025-04-05 19:57:54 - INFO - [azure_client.py:69] - Including schema information (587 chars)
2025-04-05 19:57:54 - INFO - [azure_client.py:104] - Including 3 SQL examples (no similarity examples found)
2025-04-05 19:57:54 - INFO - [azure_client.py:114] - PROMPT: [{'role': 'system', 'content': "You are an expert SQL assistant. Convert natural language questions into precise, executable SQL queries.\nYour task is to:\n1. Analyze the provided schema carefully, noting table relationships and column types\n2. Generate a SQL query that accurately answers the user's question\n3. Consider performance by selecting only necessary columns\n4. Use appropriate JOIN conditions based on primary/foreign key relationships or provided join conditions\n5. Include a brief explanation of your query\n\nRules:\n- Include table names and column references exactly as provided in the schema\n- Use appropriate SQL functions based on column data types\n- Consider NULL values in your conditions\n- Use table aliases for better readability when joining multiple tables\n- Add column aliases for computed values\n- Format the SQL query with proper indentation\n- If similar queries are provided, strictly use that as format or syntax\n- Return the SQL inside a code block tagged with ```sql\n\nExample output format:\nHere's a query that will [explanation]...\n\n```sql\nSELECT ...\nFROM ...\nWHERE ...\n```"}, {'role': 'user', 'content': "Here's the database schema:\nTable: customers\nDescription: Customer information and profiles\nColumns: customer_id (INTEGER) - Unique customer identifier, first_name (TEXT) - Customer's first name, last_name (TEXT) - Customer's last name, email (TEXT) - Customer's email address (unique), phone (TEXT) - Customer's phone number, address (TEXT) - Customer's street address, city (TEXT) - Customer's city, state (TEXT) - Customer's state/province, country (TEXT) - Customer's country, postal_code (TEXT) - Customer's postal/zip code, registration_date (TEXT) - Date when customer registered\nPrimary Key(s): customer_id\n"}, {'role': 'user', 'content': 'Here are some example queries and their SQL:\nQuestion: How many records are in the customers table?\nSQL: SELECT COUNT(*) AS record_count FROM customers\n\nQuestion: Get all columns from customers\nSQL: SELECT * FROM customers LIMIT 5\n\nQuestion: Get record from customers by customer_id\nSQL: SELECT * FROM customers WHERE customer_id = 1\n\n'}, {'role': 'user', 'content': 'Convert this question to SQL: get me count of customers by state'}]
2025-04-05 19:57:54 - INFO - [llm_engine.py:55] - [SQL_GEN] Completion generation started
2025-04-05 19:57:58 - INFO - [llm_engine.py:92] - [SQL_GEN] Completion generation completed in 3.47s
2025-04-05 19:57:58 - INFO - [llm_engine.py:93] - **************************
2025-04-05 19:57:58 - INFO - [azure_client.py:150] - Parsing SQL from model response
2025-04-05 19:57:58 - INFO - [azure_client.py:157] - Found SQL code block in response
2025-04-05 19:57:58 - INFO - [azure_client.py:171] - Extracted SQL query (110 chars) and explanation (742 chars)
2025-04-05 19:57:58 - INFO - [azure_client.py:124] - Generated SQL: SELECT state, COUNT(customer_id) AS customer_count
FROM customers
GROUP BY state
ORDER BY customer_count DESC;
2025-04-05 19:57:58,120 - QUERY: 'get me count of customers by state' → SQL: SELECT state, COUNT(customer_id) AS customer_count
FROM customers
GROUP BY state
ORDER BY customer_count DESC;
2025-04-05 19:57:58 - INFO - [azure_client.py:132] - SQL generation completed in 3.48s
2025-04-05 19:57:58 - INFO - [database.py:65] - Executing SQL query: SELECT state, COUNT(customer_id) AS customer_count
FROM customers
GROUP BY state
ORDER BY customer_count DESC;
2025-04-05 19:57:58 - INFO - [database.py:86] - Query returned 5 rows with 2 columns
2025-04-05 19:57:58 - INFO - [database.py:95] - Query processing completed in 0.01s
2025-04-05 19:58:20 - INFO - [database.py:44] - Attempting database connection
2025-04-05 19:58:20 - INFO - [database.py:48] - Database connection established in 0.00s
2025-04-05 19:58:20 - INFO - [llm_engine.py:55] - [TABLE] Completion generation started
2025-04-05 19:58:21 - INFO - [llm_engine.py:92] - [TABLE] Completion generation completed in 0.36s
2025-04-05 19:58:21 - INFO - [llm_engine.py:93] - **************************
2025-04-05 19:58:21 - INFO - [feedback_manager.py:267] - Stage 1: Vector search for 'get me count of customers by state...'
2025-04-05 19:58:21 - WARNING - [feedback_manager.py:324] - No candidates found from vector search
2025-04-05 19:58:21 - INFO - [azure_client.py:35] - SQL generation started for query: 'get me count of customers by state'
2025-04-05 19:58:21 - INFO - [azure_client.py:69] - Including schema information (587 chars)
2025-04-05 19:58:21 - INFO - [azure_client.py:104] - Including 3 SQL examples (no similarity examples found)
2025-04-05 19:58:21 - INFO - [azure_client.py:114] - PROMPT: [{'role': 'system', 'content': "You are an expert SQL assistant. Convert natural language questions into precise, executable SQL queries.\nYour task is to:\n1. Analyze the provided schema carefully, noting table relationships and column types\n2. Generate a SQL query that accurately answers the user's question\n3. Consider performance by selecting only necessary columns\n4. Use appropriate JOIN conditions based on primary/foreign key relationships or provided join conditions\n5. Include a brief explanation of your query\n\nRules:\n- Include table names and column references exactly as provided in the schema\n- Use appropriate SQL functions based on column data types\n- Consider NULL values in your conditions\n- Use table aliases for better readability when joining multiple tables\n- Add column aliases for computed values\n- Format the SQL query with proper indentation\n- If similar queries are provided, strictly use that as format or syntax\n- Return the SQL inside a code block tagged with ```sql\n\nExample output format:\nHere's a query that will [explanation]...\n\n```sql\nSELECT ...\nFROM ...\nWHERE ...\n```"}, {'role': 'user', 'content': "Here's the database schema:\nTable: customers\nDescription: Customer information and profiles\nColumns: customer_id (INTEGER) - Unique customer identifier, first_name (TEXT) - Customer's first name, last_name (TEXT) - Customer's last name, email (TEXT) - Customer's email address (unique), phone (TEXT) - Customer's phone number, address (TEXT) - Customer's street address, city (TEXT) - Customer's city, state (TEXT) - Customer's state/province, country (TEXT) - Customer's country, postal_code (TEXT) - Customer's postal/zip code, registration_date (TEXT) - Date when customer registered\nPrimary Key(s): customer_id\n"}, {'role': 'user', 'content': 'Here are some example queries and their SQL:\nQuestion: How many records are in the customers table?\nSQL: SELECT COUNT(*) AS record_count FROM customers\n\nQuestion: Get all columns from customers\nSQL: SELECT * FROM customers LIMIT 5\n\nQuestion: Get record from customers by customer_id\nSQL: SELECT * FROM customers WHERE customer_id = 1\n\n'}, {'role': 'user', 'content': 'Convert this question to SQL: get me count of customers by state'}]
2025-04-05 19:58:21 - INFO - [llm_engine.py:55] - [SQL_GEN] Completion generation started
2025-04-05 19:58:23 - INFO - [llm_engine.py:92] - [SQL_GEN] Completion generation completed in 2.61s
2025-04-05 19:58:23 - INFO - [llm_engine.py:93] - **************************
2025-04-05 19:58:23 - INFO - [azure_client.py:150] - Parsing SQL from model response
2025-04-05 19:58:23 - INFO - [azure_client.py:157] - Found SQL code block in response
2025-04-05 19:58:23 - INFO - [azure_client.py:171] - Extracted SQL query (100 chars) and explanation (365 chars)
2025-04-05 19:58:23 - INFO - [azure_client.py:124] - Generated SQL: SELECT state, COUNT(*) AS customer_count
FROM customers
GROUP BY state
ORDER BY customer_count DESC;
2025-04-05 19:58:23,938 - QUERY: 'get me count of customers by state' → SQL: SELECT state, COUNT(*) AS customer_count
FROM customers
GROUP BY state
ORDER BY customer_count DESC;
2025-04-05 19:58:23 - INFO - [azure_client.py:132] - SQL generation completed in 2.62s
2025-04-05 19:58:23 - INFO - [database.py:65] - Executing SQL query: SELECT state, COUNT(*) AS customer_count
FROM customers
GROUP BY state
ORDER BY customer_count DESC;
2025-04-05 19:58:23 - INFO - [database.py:86] - Query returned 5 rows with 2 columns
2025-04-05 19:58:23 - INFO - [database.py:95] - Query processing completed in 0.01s
2025-04-05 19:59:17 - INFO - [database.py:44] - Attempting database connection
2025-04-05 19:59:17 - INFO - [database.py:48] - Database connection established in 0.00s
2025-04-05 19:59:17 - INFO - [llm_engine.py:55] - [TABLE] Completion generation started
2025-04-05 19:59:18 - INFO - [llm_engine.py:92] - [TABLE] Completion generation completed in 0.36s
2025-04-05 19:59:18 - INFO - [llm_engine.py:93] - **************************
2025-04-05 19:59:18 - INFO - [feedback_manager.py:267] - Stage 1: Vector search for 'get me count of customers by state...'
2025-04-05 19:59:18 - WARNING - [feedback_manager.py:324] - No candidates found from vector search
2025-04-05 19:59:18 - INFO - [azure_client.py:35] - SQL generation started for query: 'get me count of customers by state'
2025-04-05 19:59:18 - INFO - [azure_client.py:69] - Including schema information (587 chars)
2025-04-05 19:59:18 - INFO - [azure_client.py:104] - Including 3 SQL examples (no similarity examples found)
2025-04-05 19:59:18 - INFO - [azure_client.py:114] - PROMPT: [{'role': 'system', 'content': "You are an expert SQL assistant. Convert natural language questions into precise, executable SQL queries.\nYour task is to:\n1. Analyze the provided schema carefully, noting table relationships and column types\n2. Generate a SQL query that accurately answers the user's question\n3. Consider performance by selecting only necessary columns\n4. Use appropriate JOIN conditions based on primary/foreign key relationships or provided join conditions\n5. Include a brief explanation of your query\n\nRules:\n- Include table names and column references exactly as provided in the schema\n- Use appropriate SQL functions based on column data types\n- Consider NULL values in your conditions\n- Use table aliases for better readability when joining multiple tables\n- Add column aliases for computed values\n- Format the SQL query with proper indentation\n- If similar queries are provided, strictly use that as format or syntax\n- Return the SQL inside a code block tagged with ```sql\n\nExample output format:\nHere's a query that will [explanation]...\n\n```sql\nSELECT ...\nFROM ...\nWHERE ...\n```"}, {'role': 'user', 'content': "Here's the database schema:\nTable: customers\nDescription: Customer information and profiles\nColumns: customer_id (INTEGER) - Unique customer identifier, first_name (TEXT) - Customer's first name, last_name (TEXT) - Customer's last name, email (TEXT) - Customer's email address (unique), phone (TEXT) - Customer's phone number, address (TEXT) - Customer's street address, city (TEXT) - Customer's city, state (TEXT) - Customer's state/province, country (TEXT) - Customer's country, postal_code (TEXT) - Customer's postal/zip code, registration_date (TEXT) - Date when customer registered\nPrimary Key(s): customer_id\n"}, {'role': 'user', 'content': 'Here are some example queries and their SQL:\nQuestion: How many records are in the customers table?\nSQL: SELECT COUNT(*) AS record_count FROM customers\n\nQuestion: Get all columns from customers\nSQL: SELECT * FROM customers LIMIT 5\n\nQuestion: Get record from customers by customer_id\nSQL: SELECT * FROM customers WHERE customer_id = 1\n\n'}, {'role': 'user', 'content': 'Convert this question to SQL: get me count of customers by state'}]
2025-04-05 19:59:18 - INFO - [llm_engine.py:55] - [SQL_GEN] Completion generation started
2025-04-05 19:59:20 - INFO - [llm_engine.py:92] - [SQL_GEN] Completion generation completed in 1.84s
2025-04-05 19:59:20 - INFO - [llm_engine.py:93] - **************************
2025-04-05 19:59:20 - INFO - [azure_client.py:150] - Parsing SQL from model response
2025-04-05 19:59:20 - INFO - [azure_client.py:157] - Found SQL code block in response
2025-04-05 19:59:20 - INFO - [azure_client.py:171] - Extracted SQL query (110 chars) and explanation (287 chars)
2025-04-05 19:59:20 - INFO - [azure_client.py:124] - Generated SQL: SELECT state, COUNT(customer_id) AS customer_count
FROM customers
GROUP BY state
ORDER BY customer_count DESC;
2025-04-05 19:59:20,114 - QUERY: 'get me count of customers by state' → SQL: SELECT state, COUNT(customer_id) AS customer_count
FROM customers
GROUP BY state
ORDER BY customer_count DESC;
2025-04-05 19:59:20 - INFO - [azure_client.py:132] - SQL generation completed in 1.86s
2025-04-05 19:59:20 - INFO - [database.py:65] - Executing SQL query: SELECT state, COUNT(customer_id) AS customer_count
FROM customers
GROUP BY state
ORDER BY customer_count DESC;
2025-04-05 19:59:20 - INFO - [database.py:86] - Query returned 5 rows with 2 columns
2025-04-05 19:59:20 - INFO - [database.py:95] - Query processing completed in 0.01s
2025-04-05 20:32:15 - INFO - [app.py:250] - Schema requested for workspace: dfd
2025-04-05 20:32:18 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-04-05 20:32:18 - INFO - [feedback_manager.py:43] - Attempting database connection
2025-04-05 20:32:18 - INFO - [feedback_manager.py:47] - Database connection established in 0.00s
2025-04-05 20:32:18 - INFO - [feedback_manager.py:531] - Retrieved 0 samples (page 1, limit 10)
2025-04-05 22:26:23 - INFO - [app.py:66] - Debug logging enabled for SQL generator and agents
2025-04-05 22:26:23 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 22:26:23 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 22:26:23 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 22:26:23 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 22:26:23 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 22:26:23 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 22:26:23 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 22:26:23 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 22:26:23 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 22:26:23 - INFO - [azure_client.py:11] - Initializing Azure AI Client using LLM Engine
2025-04-05 22:26:23 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 22:26:23 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 22:26:23 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 22:26:23 - INFO - [azure_client.py:17] - Azure AI Client initialized successfully
2025-04-05 22:26:23 - INFO - [database.py:38] - Database manager initialized with connection: sqlite:///text2sql.db
2025-04-05 22:26:23 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-04-05 22:26:27 - INFO - [app.py:66] - Debug logging enabled for SQL generator and agents
2025-04-05 22:26:27 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 22:26:27 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 22:26:27 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 22:26:27 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 22:26:27 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 22:26:27 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 22:26:27 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 22:26:27 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 22:26:27 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 22:26:27 - INFO - [azure_client.py:11] - Initializing Azure AI Client using LLM Engine
2025-04-05 22:26:27 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 22:26:27 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 22:26:27 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 22:26:27 - INFO - [azure_client.py:17] - Azure AI Client initialized successfully
2025-04-05 22:26:27 - INFO - [database.py:38] - Database manager initialized with connection: sqlite:///text2sql.db
2025-04-05 22:26:27 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-04-05 22:26:54 - INFO - [app.py:250] - Schema requested for workspace: dfd
2025-04-05 22:26:58 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-04-05 22:26:58 - INFO - [feedback_manager.py:43] - Attempting database connection
2025-04-05 22:26:58 - INFO - [feedback_manager.py:47] - Database connection established in 0.00s
2025-04-05 22:26:58 - INFO - [feedback_manager.py:531] - Retrieved 0 samples (page 1, limit 10)
2025-04-05 22:27:28 - INFO - [database.py:44] - Attempting database connection
2025-04-05 22:27:28 - INFO - [database.py:48] - Database connection established in 0.00s
2025-04-05 22:27:28 - INFO - [llm_engine.py:55] - [TABLE] Completion generation started
2025-04-05 22:27:29 - INFO - [llm_engine.py:92] - [TABLE] Completion generation completed in 1.24s
2025-04-05 22:27:29 - INFO - [llm_engine.py:93] - **************************
2025-04-05 22:27:29 - INFO - [feedback_manager.py:43] - Attempting database connection
2025-04-05 22:27:29 - INFO - [feedback_manager.py:47] - Database connection established in 0.00s
2025-04-05 22:27:29 - INFO - [feedback_manager.py:267] - Stage 1: Vector search for 'get me all the customers...'
2025-04-05 22:27:29 - INFO - [feedback_manager.py:62] - Loading embedding model 'sentence-transformers/all-MiniLM-L12-v2'
2025-04-05 22:27:33 - INFO - [feedback_manager.py:65] - Embedding model loaded in 3.68s
2025-04-05 22:27:33 - WARNING - [feedback_manager.py:324] - No candidates found from vector search
2025-04-05 22:27:33 - INFO - [azure_client.py:35] - SQL generation started for query: 'get me all the customers'
2025-04-05 22:27:33 - INFO - [azure_client.py:69] - Including schema information (587 chars)
2025-04-05 22:27:33 - INFO - [azure_client.py:104] - Including 3 SQL examples (no similarity examples found)
2025-04-05 22:27:33 - INFO - [azure_client.py:114] - PROMPT: [{'role': 'system', 'content': "You are an expert SQL assistant. Convert natural language questions into precise, executable SQL queries.\nYour task is to:\n1. Analyze the provided schema carefully, noting table relationships and column types\n2. Generate a SQL query that accurately answers the user's question\n3. Consider performance by selecting only necessary columns\n4. Use appropriate JOIN conditions based on primary/foreign key relationships or provided join conditions\n5. Include a brief explanation of your query\n\nRules:\n- Include table names and column references exactly as provided in the schema\n- Use appropriate SQL functions based on column data types\n- Consider NULL values in your conditions\n- Use table aliases for better readability when joining multiple tables\n- Add column aliases for computed values\n- Format the SQL query with proper indentation\n- If similar queries are provided, strictly use that as format or syntax\n- Return the SQL inside a code block tagged with ```sql\n\nExample output format:\nHere's a query that will [explanation]...\n\n```sql\nSELECT ...\nFROM ...\nWHERE ...\n```"}, {'role': 'user', 'content': "Here's the database schema:\nTable: customers\nDescription: Customer information and profiles\nColumns: customer_id (INTEGER) - Unique customer identifier, first_name (TEXT) - Customer's first name, last_name (TEXT) - Customer's last name, email (TEXT) - Customer's email address (unique), phone (TEXT) - Customer's phone number, address (TEXT) - Customer's street address, city (TEXT) - Customer's city, state (TEXT) - Customer's state/province, country (TEXT) - Customer's country, postal_code (TEXT) - Customer's postal/zip code, registration_date (TEXT) - Date when customer registered\nPrimary Key(s): customer_id\n"}, {'role': 'user', 'content': 'Here are some example queries and their SQL:\nQuestion: How many records are in the customers table?\nSQL: SELECT COUNT(*) AS record_count FROM customers\n\nQuestion: Get all columns from customers\nSQL: SELECT * FROM customers LIMIT 5\n\nQuestion: Get record from customers by customer_id\nSQL: SELECT * FROM customers WHERE customer_id = 1\n\n'}, {'role': 'user', 'content': 'Convert this question to SQL: get me all the customers'}]
2025-04-05 22:27:33 - INFO - [llm_engine.py:55] - [SQL_GEN] Completion generation started
2025-04-05 22:27:35 - INFO - [llm_engine.py:92] - [SQL_GEN] Completion generation completed in 2.15s
2025-04-05 22:27:35 - INFO - [llm_engine.py:93] - **************************
2025-04-05 22:27:35 - INFO - [azure_client.py:150] - Parsing SQL from model response
2025-04-05 22:27:35 - INFO - [azure_client.py:157] - Found SQL code block in response
2025-04-05 22:27:35 - INFO - [azure_client.py:171] - Extracted SQL query (24 chars) and explanation (252 chars)
2025-04-05 22:27:35 - INFO - [azure_client.py:124] - Generated SQL: SELECT * FROM customers;
2025-04-05 22:27:35,716 - QUERY: 'get me all the customers' → SQL: SELECT * FROM customers;
2025-04-05 22:27:35 - INFO - [azure_client.py:132] - SQL generation completed in 2.17s
2025-04-05 22:27:35 - INFO - [database.py:65] - Executing SQL query: SELECT * FROM customers;
2025-04-05 22:27:35 - INFO - [database.py:86] - Query returned 5 rows with 11 columns
2025-04-05 22:27:35 - INFO - [database.py:95] - Query processing completed in 0.03s
2025-04-05 22:28:35 - INFO - [app.py:250] - Schema requested for workspace: dfd
2025-04-05 22:31:29 - INFO - [app.py:250] - Schema requested for workspace: dfd
2025-04-05 22:32:01 - INFO - [app.py:250] - Schema requested for workspace: dfd
2025-04-05 22:32:04 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-04-05 22:32:04 - INFO - [feedback_manager.py:43] - Attempting database connection
2025-04-05 22:32:04 - INFO - [feedback_manager.py:47] - Database connection established in 0.00s
2025-04-05 22:32:04 - INFO - [feedback_manager.py:531] - Retrieved 0 samples (page 1, limit 10)
2025-04-05 22:36:17 - INFO - [app.py:250] - Schema requested for workspace: dfd
2025-04-05 22:36:30 - INFO - [database.py:44] - Attempting database connection
2025-04-05 22:36:30 - INFO - [database.py:48] - Database connection established in 0.00s
2025-04-05 22:36:30 - INFO - [llm_engine.py:55] - [TABLE] Completion generation started
2025-04-05 22:36:31 - ERROR - [llm_engine.py:98] - [TABLE] Completion generation error after 0.23s: ('Connection aborted.', RemoteDisconnected('Remote end closed connection without response'))
Traceback (most recent call last):
  File "/home/vijay/text2sql/src/utils/llm_engine.py", line 72, in generate_completion
    response = self.client.complete(
               ^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/ai/inference/_patch.py", line 728, in complete
    pipeline_response: PipelineResponse = self._client._pipeline.run(  # pylint: disable=protected-access
                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/_base.py", line 240, in run
    return first_node.send(pipeline_request)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/_base.py", line 96, in send
    response = self.next.send(request)
               ^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/_base.py", line 96, in send
    response = self.next.send(request)
               ^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/_base.py", line 96, in send
    response = self.next.send(request)
               ^^^^^^^^^^^^^^^^^^^^^^^
  [Previous line repeated 2 more times]
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/policies/_redirect.py", line 204, in send
    response = self.next.send(request)
               ^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/policies/_retry.py", line 573, in send
    raise err
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/policies/_retry.py", line 551, in send
    response = self.next.send(request)
               ^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/_base.py", line 96, in send
    response = self.next.send(request)
               ^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/_base.py", line 96, in send
    response = self.next.send(request)
               ^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/_base.py", line 96, in send
    response = self.next.send(request)
               ^^^^^^^^^^^^^^^^^^^^^^^
  [Previous line repeated 3 more times]
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/_base.py", line 128, in send
    self._sender.send(request.http_request, **request.context.options),
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/transport/_requests_basic.py", line 409, in send
    raise error
azure.core.exceptions.ServiceResponseError: ('Connection aborted.', RemoteDisconnected('Remote end closed connection without response'))
2025-04-05 22:36:31 - INFO - [llm_engine.py:55] - [COLUMN] Completion generation started
2025-04-05 22:36:33 - INFO - [llm_engine.py:92] - [COLUMN] Completion generation completed in 1.99s
2025-04-05 22:36:33 - INFO - [llm_engine.py:93] - **************************
2025-04-05 22:36:33 - ERROR - [background_tasks.py:60] - Exception while processing query: 'join_type'
Traceback (most recent call last):
  File "/home/vijay/text2sql/src/utils/background_tasks.py", line 38, in process_in_background
    result = self.sql_manager.process_query(
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/text2sql/src/models/sql_generator.py", line 71, in process_query
    sql_result = self._generate_sql(query, workspaces, explicit_tables, progress_callback)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/text2sql/src/models/sql_generator.py", line 222, in _generate_sql
    join_info = "\n".join([
                          ^
  File "/home/vijay/text2sql/src/models/sql_generator.py", line 224, in <listcomp>
    f"{join['join_type']} JOIN on {join['condition']}"
       ~~~~^^^^^^^^^^^^^
KeyError: 'join_type'
2025-04-05 22:36:56 - INFO - [database.py:44] - Attempting database connection
2025-04-05 22:36:56 - INFO - [database.py:48] - Database connection established in 0.00s
2025-04-05 22:36:56 - INFO - [llm_engine.py:55] - [TABLE] Completion generation started
2025-04-05 22:36:57 - INFO - [llm_engine.py:92] - [TABLE] Completion generation completed in 1.14s
2025-04-05 22:36:57 - INFO - [llm_engine.py:93] - **************************
2025-04-05 22:36:57 - INFO - [feedback_manager.py:267] - Stage 1: Vector search for 'get me all the customers...'
2025-04-05 22:36:57 - WARNING - [feedback_manager.py:324] - No candidates found from vector search
2025-04-05 22:36:57 - INFO - [azure_client.py:35] - SQL generation started for query: 'get me all the customers'
2025-04-05 22:36:57 - INFO - [azure_client.py:69] - Including schema information (587 chars)
2025-04-05 22:36:57 - INFO - [azure_client.py:104] - Including 3 SQL examples (no similarity examples found)
2025-04-05 22:36:57 - INFO - [azure_client.py:114] - PROMPT: [{'role': 'system', 'content': "You are an expert SQL assistant. Convert natural language questions into precise, executable SQL queries.\nYour task is to:\n1. Analyze the provided schema carefully, noting table relationships and column types\n2. Generate a SQL query that accurately answers the user's question\n3. Consider performance by selecting only necessary columns\n4. Use appropriate JOIN conditions based on primary/foreign key relationships or provided join conditions\n5. Include a brief explanation of your query\n\nRules:\n- Include table names and column references exactly as provided in the schema\n- Use appropriate SQL functions based on column data types\n- Consider NULL values in your conditions\n- Use table aliases for better readability when joining multiple tables\n- Add column aliases for computed values\n- Format the SQL query with proper indentation\n- If similar queries are provided, strictly use that as format or syntax\n- Return the SQL inside a code block tagged with ```sql\n\nExample output format:\nHere's a query that will [explanation]...\n\n```sql\nSELECT ...\nFROM ...\nWHERE ...\n```"}, {'role': 'user', 'content': "Here's the database schema:\nTable: customers\nDescription: Customer information and profiles\nColumns: customer_id (INTEGER) - Unique customer identifier, first_name (TEXT) - Customer's first name, last_name (TEXT) - Customer's last name, email (TEXT) - Customer's email address (unique), phone (TEXT) - Customer's phone number, address (TEXT) - Customer's street address, city (TEXT) - Customer's city, state (TEXT) - Customer's state/province, country (TEXT) - Customer's country, postal_code (TEXT) - Customer's postal/zip code, registration_date (TEXT) - Date when customer registered\nPrimary Key(s): customer_id\n"}, {'role': 'user', 'content': 'Here are some example queries and their SQL:\nQuestion: How many records are in the customers table?\nSQL: SELECT COUNT(*) AS record_count FROM customers\n\nQuestion: Get all columns from customers\nSQL: SELECT * FROM customers LIMIT 5\n\nQuestion: Get record from customers by customer_id\nSQL: SELECT * FROM customers WHERE customer_id = 1\n\n'}, {'role': 'user', 'content': 'Convert this question to SQL: get me all the customers'}]
2025-04-05 22:36:57 - INFO - [llm_engine.py:55] - [SQL_GEN] Completion generation started
2025-04-05 22:36:59 - INFO - [llm_engine.py:92] - [SQL_GEN] Completion generation completed in 1.94s
2025-04-05 22:36:59 - INFO - [llm_engine.py:93] - **************************
2025-04-05 22:36:59 - INFO - [azure_client.py:150] - Parsing SQL from model response
2025-04-05 22:36:59 - INFO - [azure_client.py:157] - Found SQL code block in response
2025-04-05 22:36:59 - INFO - [azure_client.py:171] - Extracted SQL query (24 chars) and explanation (160 chars)
2025-04-05 22:36:59 - INFO - [azure_client.py:124] - Generated SQL: SELECT * FROM customers;
2025-04-05 22:36:59,877 - QUERY: 'get me all the customers' → SQL: SELECT * FROM customers;
2025-04-05 22:36:59 - INFO - [azure_client.py:132] - SQL generation completed in 1.96s
2025-04-05 22:36:59 - INFO - [database.py:65] - Executing SQL query: SELECT * FROM customers;
2025-04-05 22:36:59 - INFO - [database.py:86] - Query returned 5 rows with 11 columns
2025-04-05 22:36:59 - INFO - [database.py:95] - Query processing completed in 0.01s
2025-04-05 22:38:11 - INFO - [app.py:250] - Schema requested for workspace: dfd
2025-04-05 22:42:50 - INFO - [app.py:250] - Schema requested for workspace: dfd
2025-04-05 22:42:54 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-04-05 22:42:54 - INFO - [feedback_manager.py:43] - Attempting database connection
2025-04-05 22:42:54 - INFO - [feedback_manager.py:47] - Database connection established in 0.00s
2025-04-05 22:42:54 - INFO - [feedback_manager.py:531] - Retrieved 0 samples (page 1, limit 10)
2025-04-05 22:42:57 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-04-05 22:42:57 - INFO - [feedback_manager.py:43] - Attempting database connection
2025-04-05 22:42:57 - INFO - [feedback_manager.py:47] - Database connection established in 0.00s
2025-04-05 22:42:57 - INFO - [feedback_manager.py:531] - Retrieved 0 samples (page 1, limit 10)
2025-04-05 22:42:57 - INFO - [app.py:250] - Schema requested for workspace: dfd
2025-04-05 22:45:30 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-04-05 22:45:30 - INFO - [feedback_manager.py:43] - Attempting database connection
2025-04-05 22:45:30 - INFO - [feedback_manager.py:47] - Database connection established in 0.00s
2025-04-05 22:45:30 - INFO - [feedback_manager.py:531] - Retrieved 0 samples (page 1, limit 10)
2025-04-05 22:45:31 - INFO - [app.py:250] - Schema requested for workspace: dfd
2025-04-05 22:46:28 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-04-05 22:46:28 - INFO - [feedback_manager.py:43] - Attempting database connection
2025-04-05 22:46:28 - INFO - [feedback_manager.py:47] - Database connection established in 0.00s
2025-04-05 22:46:28 - INFO - [feedback_manager.py:531] - Retrieved 0 samples (page 1, limit 10)
2025-04-05 22:49:05 - INFO - [app.py:250] - Schema requested for workspace: dfd
2025-04-05 22:49:08 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-04-05 22:49:08 - INFO - [feedback_manager.py:43] - Attempting database connection
2025-04-05 22:49:08 - INFO - [feedback_manager.py:47] - Database connection established in 0.00s
2025-04-05 22:49:08 - INFO - [feedback_manager.py:531] - Retrieved 0 samples (page 1, limit 10)
2025-04-05 22:52:01 - INFO - [app.py:250] - Schema requested for workspace: dfd
2025-04-05 22:52:04 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-04-05 22:52:04 - INFO - [feedback_manager.py:43] - Attempting database connection
2025-04-05 22:52:04 - INFO - [feedback_manager.py:47] - Database connection established in 0.00s
2025-04-05 22:52:04 - INFO - [feedback_manager.py:531] - Retrieved 0 samples (page 1, limit 10)
2025-04-05 22:52:11 - INFO - [app.py:250] - Schema requested for workspace: dfd
2025-04-05 22:52:14 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-04-05 22:52:14 - INFO - [feedback_manager.py:43] - Attempting database connection
2025-04-05 22:52:14 - INFO - [feedback_manager.py:47] - Database connection established in 0.00s
2025-04-05 22:52:14 - INFO - [feedback_manager.py:531] - Retrieved 0 samples (page 1, limit 10)
2025-04-05 22:52:20 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-04-05 22:52:20 - INFO - [feedback_manager.py:43] - Attempting database connection
2025-04-05 22:52:20 - INFO - [feedback_manager.py:47] - Database connection established in 0.00s
2025-04-05 22:52:20 - INFO - [feedback_manager.py:531] - Retrieved 0 samples (page 1, limit 10)
2025-04-05 22:53:10 - INFO - [app.py:250] - Schema requested for workspace: dfd
2025-04-05 22:53:12 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-04-05 22:53:12 - INFO - [feedback_manager.py:43] - Attempting database connection
2025-04-05 22:53:12 - INFO - [feedback_manager.py:47] - Database connection established in 0.00s
2025-04-05 22:53:12 - INFO - [feedback_manager.py:531] - Retrieved 0 samples (page 1, limit 10)
2025-04-05 22:57:20 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-04-05 22:57:20 - INFO - [feedback_manager.py:43] - Attempting database connection
2025-04-05 22:57:20 - INFO - [feedback_manager.py:47] - Database connection established in 0.00s
2025-04-05 22:57:20 - INFO - [feedback_manager.py:531] - Retrieved 0 samples (page 1, limit 10)
2025-04-05 22:57:26 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-04-05 22:57:26 - INFO - [feedback_manager.py:43] - Attempting database connection
2025-04-05 22:57:26 - INFO - [feedback_manager.py:47] - Database connection established in 0.00s
2025-04-05 22:57:26 - INFO - [feedback_manager.py:531] - Retrieved 0 samples (page 1, limit 10)
2025-04-05 22:57:34 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-04-05 22:57:34 - INFO - [feedback_manager.py:43] - Attempting database connection
2025-04-05 22:57:34 - INFO - [feedback_manager.py:47] - Database connection established in 0.00s
2025-04-05 22:57:34 - INFO - [feedback_manager.py:531] - Retrieved 0 samples (page 1, limit 10)
2025-04-05 22:59:00 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-04-05 22:59:00 - INFO - [feedback_manager.py:43] - Attempting database connection
2025-04-05 22:59:00 - INFO - [feedback_manager.py:47] - Database connection established in 0.00s
2025-04-05 22:59:00 - INFO - [feedback_manager.py:531] - Retrieved 0 samples (page 1, limit 10)
2025-04-05 22:59:48 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-04-05 22:59:48 - INFO - [feedback_manager.py:43] - Attempting database connection
2025-04-05 22:59:48 - INFO - [feedback_manager.py:47] - Database connection established in 0.00s
2025-04-05 22:59:48 - INFO - [feedback_manager.py:531] - Retrieved 0 samples (page 1, limit 10)
2025-04-05 22:59:59 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-04-05 22:59:59 - INFO - [feedback_manager.py:43] - Attempting database connection
2025-04-05 22:59:59 - INFO - [feedback_manager.py:47] - Database connection established in 0.00s
2025-04-05 22:59:59 - INFO - [feedback_manager.py:531] - Retrieved 0 samples (page 1, limit 10)
2025-04-05 23:00:38 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-04-05 23:00:38 - INFO - [feedback_manager.py:43] - Attempting database connection
2025-04-05 23:00:38 - INFO - [feedback_manager.py:47] - Database connection established in 0.00s
2025-04-05 23:00:38 - INFO - [feedback_manager.py:531] - Retrieved 0 samples (page 1, limit 10)
2025-04-05 23:00:46 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-04-05 23:00:46 - INFO - [feedback_manager.py:43] - Attempting database connection
2025-04-05 23:00:46 - INFO - [feedback_manager.py:47] - Database connection established in 0.00s
2025-04-05 23:00:46 - INFO - [feedback_manager.py:531] - Retrieved 0 samples (page 1, limit 10)
2025-04-05 23:02:24 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-04-05 23:02:24 - INFO - [feedback_manager.py:43] - Attempting database connection
2025-04-05 23:02:24 - INFO - [feedback_manager.py:47] - Database connection established in 0.00s
2025-04-05 23:02:24 - INFO - [feedback_manager.py:531] - Retrieved 0 samples (page 1, limit 10)
2025-04-05 23:02:33 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-04-05 23:02:33 - INFO - [feedback_manager.py:43] - Attempting database connection
2025-04-05 23:02:33 - INFO - [feedback_manager.py:47] - Database connection established in 0.00s
2025-04-05 23:02:33 - INFO - [feedback_manager.py:531] - Retrieved 0 samples (page 1, limit 10)
2025-04-05 23:02:37 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-04-05 23:02:37 - INFO - [feedback_manager.py:43] - Attempting database connection
2025-04-05 23:02:37 - INFO - [feedback_manager.py:47] - Database connection established in 0.00s
2025-04-05 23:02:37 - INFO - [feedback_manager.py:531] - Retrieved 0 samples (page 1, limit 10)
2025-04-05 23:02:50 - INFO - [app.py:250] - Schema requested for workspace: dfd
2025-04-05 23:02:56 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-04-05 23:02:56 - INFO - [feedback_manager.py:43] - Attempting database connection
2025-04-05 23:02:56 - INFO - [feedback_manager.py:47] - Database connection established in 0.00s
2025-04-05 23:02:56 - INFO - [feedback_manager.py:531] - Retrieved 0 samples (page 1, limit 10)
2025-04-05 23:03:04 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-04-05 23:03:04 - INFO - [feedback_manager.py:43] - Attempting database connection
2025-04-05 23:03:04 - INFO - [feedback_manager.py:47] - Database connection established in 0.00s
2025-04-05 23:03:04 - INFO - [feedback_manager.py:531] - Retrieved 0 samples (page 1, limit 10)
2025-04-05 23:03:17 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-04-05 23:03:17 - INFO - [feedback_manager.py:43] - Attempting database connection
2025-04-05 23:03:17 - INFO - [feedback_manager.py:47] - Database connection established in 0.00s
2025-04-05 23:03:17 - INFO - [feedback_manager.py:531] - Retrieved 0 samples (page 1, limit 10)
2025-04-05 23:03:19 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-04-05 23:03:19 - INFO - [feedback_manager.py:43] - Attempting database connection
2025-04-05 23:03:19 - INFO - [feedback_manager.py:47] - Database connection established in 0.00s
2025-04-05 23:03:19 - INFO - [feedback_manager.py:531] - Retrieved 0 samples (page 1, limit 10)
2025-04-05 23:03:26 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-04-05 23:03:26 - INFO - [feedback_manager.py:43] - Attempting database connection
2025-04-05 23:03:26 - INFO - [feedback_manager.py:47] - Database connection established in 0.00s
2025-04-05 23:03:26 - INFO - [feedback_manager.py:531] - Retrieved 0 samples (page 1, limit 10)
2025-04-05 23:03:28 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-04-05 23:03:28 - INFO - [feedback_manager.py:43] - Attempting database connection
2025-04-05 23:03:28 - INFO - [feedback_manager.py:47] - Database connection established in 0.00s
2025-04-05 23:03:28 - INFO - [feedback_manager.py:531] - Retrieved 0 samples (page 1, limit 10)
2025-04-05 23:03:31 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-04-05 23:03:31 - INFO - [feedback_manager.py:43] - Attempting database connection
2025-04-05 23:03:31 - INFO - [feedback_manager.py:47] - Database connection established in 0.00s
2025-04-05 23:03:31 - INFO - [feedback_manager.py:531] - Retrieved 0 samples (page 1, limit 10)
2025-04-05 23:03:32 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-04-05 23:03:32 - INFO - [feedback_manager.py:43] - Attempting database connection
2025-04-05 23:03:32 - INFO - [feedback_manager.py:47] - Database connection established in 0.00s
2025-04-05 23:03:32 - INFO - [feedback_manager.py:531] - Retrieved 0 samples (page 1, limit 10)
2025-04-05 23:03:46 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-04-05 23:03:46 - INFO - [feedback_manager.py:43] - Attempting database connection
2025-04-05 23:03:46 - INFO - [feedback_manager.py:47] - Database connection established in 0.00s
2025-04-05 23:03:46 - INFO - [feedback_manager.py:531] - Retrieved 0 samples (page 1, limit 10)
2025-04-05 23:04:31 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-04-05 23:04:31 - INFO - [feedback_manager.py:43] - Attempting database connection
2025-04-05 23:04:31 - INFO - [feedback_manager.py:47] - Database connection established in 0.00s
2025-04-05 23:04:31 - INFO - [feedback_manager.py:531] - Retrieved 0 samples (page 1, limit 10)
2025-04-05 23:04:56 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-04-05 23:04:56 - INFO - [feedback_manager.py:43] - Attempting database connection
2025-04-05 23:04:56 - INFO - [feedback_manager.py:47] - Database connection established in 0.00s
2025-04-05 23:04:56 - INFO - [feedback_manager.py:531] - Retrieved 0 samples (page 1, limit 10)
2025-04-05 23:04:57 - INFO - [app.py:250] - Schema requested for workspace: dfd
2025-04-05 23:05:01 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-04-05 23:05:01 - INFO - [feedback_manager.py:43] - Attempting database connection
2025-04-05 23:05:01 - INFO - [feedback_manager.py:47] - Database connection established in 0.00s
2025-04-05 23:05:01 - INFO - [feedback_manager.py:531] - Retrieved 0 samples (page 1, limit 10)
2025-04-05 23:05:02 - INFO - [app.py:250] - Schema requested for workspace: dfd
2025-04-05 23:06:15 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-04-05 23:06:15 - INFO - [feedback_manager.py:43] - Attempting database connection
2025-04-05 23:06:15 - INFO - [feedback_manager.py:47] - Database connection established in 0.00s
2025-04-05 23:06:15 - INFO - [feedback_manager.py:531] - Retrieved 0 samples (page 1, limit 10)
2025-04-05 23:06:17 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-04-05 23:06:17 - INFO - [feedback_manager.py:43] - Attempting database connection
2025-04-05 23:06:17 - INFO - [feedback_manager.py:47] - Database connection established in 0.00s
2025-04-05 23:06:17 - INFO - [feedback_manager.py:531] - Retrieved 0 samples (page 1, limit 10)
2025-04-05 23:07:03 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-04-05 23:07:03 - INFO - [feedback_manager.py:43] - Attempting database connection
2025-04-05 23:07:03 - INFO - [feedback_manager.py:47] - Database connection established in 0.00s
2025-04-05 23:07:03 - INFO - [feedback_manager.py:531] - Retrieved 0 samples (page 1, limit 10)
2025-04-05 23:07:36 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-04-05 23:07:36 - INFO - [feedback_manager.py:43] - Attempting database connection
2025-04-05 23:07:36 - INFO - [feedback_manager.py:47] - Database connection established in 0.00s
2025-04-05 23:07:36 - INFO - [feedback_manager.py:531] - Retrieved 0 samples (page 1, limit 10)
2025-04-05 23:09:09 - INFO - [app.py:250] - Schema requested for workspace: dfd
2025-04-05 23:09:13 - INFO - [app.py:250] - Schema requested for workspace: dfd
2025-04-05 23:09:16 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-04-05 23:09:16 - INFO - [feedback_manager.py:43] - Attempting database connection
2025-04-05 23:09:16 - INFO - [feedback_manager.py:47] - Database connection established in 0.00s
2025-04-05 23:09:16 - INFO - [feedback_manager.py:531] - Retrieved 0 samples (page 1, limit 10)
2025-04-05 23:11:59 - INFO - [app.py:66] - Debug logging enabled for SQL generator and agents
2025-04-05 23:11:59 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 23:11:59 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 23:11:59 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 23:11:59 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 23:11:59 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 23:11:59 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 23:11:59 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 23:11:59 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 23:11:59 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 23:11:59 - INFO - [azure_client.py:11] - Initializing Azure AI Client using LLM Engine
2025-04-05 23:11:59 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 23:11:59 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 23:11:59 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 23:11:59 - INFO - [azure_client.py:17] - Azure AI Client initialized successfully
2025-04-05 23:11:59 - INFO - [database.py:38] - Database manager initialized with connection: sqlite:///text2sql.db
2025-04-05 23:11:59 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-04-05 23:12:03 - INFO - [app.py:66] - Debug logging enabled for SQL generator and agents
2025-04-05 23:12:03 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 23:12:03 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 23:12:03 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 23:12:03 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 23:12:03 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 23:12:03 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 23:12:03 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 23:12:03 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 23:12:03 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 23:12:03 - INFO - [azure_client.py:11] - Initializing Azure AI Client using LLM Engine
2025-04-05 23:12:03 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 23:12:03 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 23:12:03 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 23:12:03 - INFO - [azure_client.py:17] - Azure AI Client initialized successfully
2025-04-05 23:12:03 - INFO - [database.py:38] - Database manager initialized with connection: sqlite:///text2sql.db
2025-04-05 23:12:03 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-04-05 23:15:13 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-04-05 23:15:13 - INFO - [feedback_manager.py:43] - Attempting database connection
2025-04-05 23:15:13 - INFO - [feedback_manager.py:47] - Database connection established in 0.00s
2025-04-05 23:15:13 - INFO - [feedback_manager.py:531] - Retrieved 0 samples (page 1, limit 10)
2025-04-05 23:16:51 - INFO - [database.py:44] - Attempting database connection
2025-04-05 23:16:51 - INFO - [database.py:48] - Database connection established in 0.00s
2025-04-05 23:16:51 - INFO - [llm_engine.py:55] - [TABLE] Completion generation started
2025-04-05 23:16:52 - INFO - [llm_engine.py:92] - [TABLE] Completion generation completed in 1.23s
2025-04-05 23:16:52 - INFO - [llm_engine.py:93] - **************************
2025-04-05 23:16:52 - INFO - [feedback_manager.py:43] - Attempting database connection
2025-04-05 23:16:52 - INFO - [feedback_manager.py:47] - Database connection established in 0.00s
2025-04-05 23:16:52 - INFO - [feedback_manager.py:267] - Stage 1: Vector search for 'get me all the customers...'
2025-04-05 23:16:52 - INFO - [feedback_manager.py:62] - Loading embedding model 'sentence-transformers/all-MiniLM-L12-v2'
2025-04-05 23:16:55 - INFO - [feedback_manager.py:65] - Embedding model loaded in 2.85s
2025-04-05 23:16:55 - WARNING - [feedback_manager.py:324] - No candidates found from vector search
2025-04-05 23:16:55 - INFO - [azure_client.py:35] - SQL generation started for query: 'get me all the customers'
2025-04-05 23:16:55 - INFO - [azure_client.py:69] - Including schema information (587 chars)
2025-04-05 23:16:55 - INFO - [azure_client.py:104] - Including 3 SQL examples (no similarity examples found)
2025-04-05 23:16:55 - INFO - [azure_client.py:114] - PROMPT: [{'role': 'system', 'content': "You are an expert SQL assistant. Convert natural language questions into precise, executable SQL queries.\nYour task is to:\n1. Analyze the provided schema carefully, noting table relationships and column types\n2. Generate a SQL query that accurately answers the user's question\n3. Consider performance by selecting only necessary columns\n4. Use appropriate JOIN conditions based on primary/foreign key relationships or provided join conditions\n5. Include a brief explanation of your query\n\nRules:\n- Include table names and column references exactly as provided in the schema\n- Use appropriate SQL functions based on column data types\n- Consider NULL values in your conditions\n- Use table aliases for better readability when joining multiple tables\n- Add column aliases for computed values\n- Format the SQL query with proper indentation\n- If similar queries are provided, strictly use that as format or syntax\n- Return the SQL inside a code block tagged with ```sql\n\nExample output format:\nHere's a query that will [explanation]...\n\n```sql\nSELECT ...\nFROM ...\nWHERE ...\n```"}, {'role': 'user', 'content': "Here's the database schema:\nTable: customers\nDescription: Customer information and profiles\nColumns: customer_id (INTEGER) - Unique customer identifier, first_name (TEXT) - Customer's first name, last_name (TEXT) - Customer's last name, email (TEXT) - Customer's email address (unique), phone (TEXT) - Customer's phone number, address (TEXT) - Customer's street address, city (TEXT) - Customer's city, state (TEXT) - Customer's state/province, country (TEXT) - Customer's country, postal_code (TEXT) - Customer's postal/zip code, registration_date (TEXT) - Date when customer registered\nPrimary Key(s): customer_id\n"}, {'role': 'user', 'content': 'Here are some example queries and their SQL:\nQuestion: How many records are in the customers table?\nSQL: SELECT COUNT(*) AS record_count FROM customers\n\nQuestion: Get all columns from customers\nSQL: SELECT * FROM customers LIMIT 5\n\nQuestion: Get record from customers by customer_id\nSQL: SELECT * FROM customers WHERE customer_id = 1\n\n'}, {'role': 'user', 'content': 'Convert this question to SQL: get me all the customers'}]
2025-04-05 23:16:55 - INFO - [llm_engine.py:55] - [SQL_GEN] Completion generation started
2025-04-05 23:16:58 - INFO - [llm_engine.py:92] - [SQL_GEN] Completion generation completed in 2.45s
2025-04-05 23:16:58 - INFO - [llm_engine.py:93] - **************************
2025-04-05 23:16:58 - INFO - [azure_client.py:150] - Parsing SQL from model response
2025-04-05 23:16:58 - INFO - [azure_client.py:157] - Found SQL code block in response
2025-04-05 23:16:58 - INFO - [azure_client.py:171] - Extracted SQL query (24 chars) and explanation (300 chars)
2025-04-05 23:16:58 - INFO - [azure_client.py:124] - Generated SQL: SELECT * FROM customers;
2025-04-05 23:16:58,154 - QUERY: 'get me all the customers' → SQL: SELECT * FROM customers;
2025-04-05 23:16:58 - INFO - [azure_client.py:132] - SQL generation completed in 2.49s
2025-04-05 23:16:58 - INFO - [database.py:65] - Executing SQL query: SELECT * FROM customers;
2025-04-05 23:16:58 - INFO - [database.py:86] - Query returned 5 rows with 11 columns
2025-04-05 23:16:58 - INFO - [database.py:95] - Query processing completed in 0.02s
2025-04-05 23:17:07 - INFO - [app.py:308] - Feedback received for query: 'get me all the customers...' - Rating: 1
2025-04-05 23:17:07 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-04-05 23:17:07 - INFO - [feedback_manager.py:43] - Attempting database connection
2025-04-05 23:17:07 - INFO - [feedback_manager.py:47] - Database connection established in 0.00s
2025-04-05 23:17:07 - INFO - [feedback_manager.py:62] - Loading embedding model 'sentence-transformers/all-MiniLM-L12-v2'
2025-04-05 23:17:10 - INFO - [feedback_manager.py:65] - Embedding model loaded in 3.14s
2025-04-05 23:17:11 - INFO - [feedback_manager.py:170] - Saved feedback for query: 'get me all the customers...' with rating 1
2025-04-05 23:17:11 - INFO - [app.py:250] - Schema requested for workspace: dfd
2025-04-05 23:17:15 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-04-05 23:17:15 - INFO - [feedback_manager.py:43] - Attempting database connection
2025-04-05 23:17:15 - INFO - [feedback_manager.py:47] - Database connection established in 0.01s
2025-04-05 23:17:15 - INFO - [feedback_manager.py:531] - Retrieved 1 samples (page 1, limit 10)
2025-04-05 23:18:30 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-04-05 23:18:30 - INFO - [feedback_manager.py:43] - Attempting database connection
2025-04-05 23:18:30 - INFO - [feedback_manager.py:47] - Database connection established in 0.00s
2025-04-05 23:18:30 - INFO - [feedback_manager.py:531] - Retrieved 1 samples (page 1, limit 10)
2025-04-05 23:22:10 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-04-05 23:22:10 - INFO - [feedback_manager.py:43] - Attempting database connection
2025-04-05 23:22:10 - INFO - [feedback_manager.py:47] - Database connection established in 0.00s
2025-04-05 23:22:10 - INFO - [feedback_manager.py:531] - Retrieved 1 samples (page 1, limit 10)
2025-04-05 23:23:13 - INFO - [app.py:250] - Schema requested for workspace: dfd
2025-04-05 23:23:18 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-04-05 23:23:18 - INFO - [feedback_manager.py:43] - Attempting database connection
2025-04-05 23:23:18 - INFO - [feedback_manager.py:47] - Database connection established in 0.00s
2025-04-05 23:23:18 - INFO - [feedback_manager.py:531] - Retrieved 1 samples (page 1, limit 10)
2025-04-05 23:24:05 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-04-05 23:24:05 - INFO - [feedback_manager.py:43] - Attempting database connection
2025-04-05 23:24:05 - INFO - [feedback_manager.py:47] - Database connection established in 0.00s
2025-04-05 23:24:05 - INFO - [feedback_manager.py:531] - Retrieved 1 samples (page 1, limit 10)
2025-04-05 23:29:00 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-04-05 23:29:00 - INFO - [feedback_manager.py:43] - Attempting database connection
2025-04-05 23:29:00 - INFO - [feedback_manager.py:47] - Database connection established in 0.00s
2025-04-05 23:29:00 - INFO - [feedback_manager.py:531] - Retrieved 1 samples (page 1, limit 10)
2025-04-05 23:29:26 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-04-05 23:29:26 - INFO - [feedback_manager.py:43] - Attempting database connection
2025-04-05 23:29:26 - INFO - [feedback_manager.py:47] - Database connection established in 0.00s
2025-04-05 23:29:26 - INFO - [feedback_manager.py:531] - Retrieved 1 samples (page 1, limit 10)
2025-04-05 23:33:46 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-04-05 23:33:46 - INFO - [feedback_manager.py:43] - Attempting database connection
2025-04-05 23:33:46 - INFO - [feedback_manager.py:47] - Database connection established in 0.00s
2025-04-05 23:33:46 - INFO - [feedback_manager.py:531] - Retrieved 1 samples (page 1, limit 10)
2025-04-05 23:34:10 - INFO - [app.py:250] - Schema requested for workspace: dfd
2025-04-05 23:34:15 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-04-05 23:34:15 - INFO - [feedback_manager.py:43] - Attempting database connection
2025-04-05 23:34:15 - INFO - [feedback_manager.py:47] - Database connection established in 0.00s
2025-04-05 23:34:15 - INFO - [feedback_manager.py:531] - Retrieved 1 samples (page 1, limit 10)
2025-04-05 23:35:45 - INFO - [app.py:250] - Schema requested for workspace: dfd
2025-04-05 23:35:51 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-04-05 23:35:51 - INFO - [feedback_manager.py:43] - Attempting database connection
2025-04-05 23:35:51 - INFO - [feedback_manager.py:47] - Database connection established in 0.00s
2025-04-05 23:35:51 - INFO - [feedback_manager.py:531] - Retrieved 1 samples (page 1, limit 10)
2025-04-05 23:35:54 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-04-05 23:35:54 - INFO - [feedback_manager.py:43] - Attempting database connection
2025-04-05 23:35:54 - INFO - [feedback_manager.py:47] - Database connection established in 0.00s
2025-04-05 23:35:54 - INFO - [feedback_manager.py:531] - Retrieved 1 samples (page 1, limit 10)
2025-04-05 23:36:38 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-04-05 23:36:38 - INFO - [feedback_manager.py:43] - Attempting database connection
2025-04-05 23:36:38 - INFO - [feedback_manager.py:47] - Database connection established in 0.00s
2025-04-05 23:36:38 - INFO - [feedback_manager.py:531] - Retrieved 1 samples (page 1, limit 10)
2025-04-05 23:36:41 - INFO - [app.py:250] - Schema requested for workspace: dfd
2025-04-05 23:36:46 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-04-05 23:36:46 - INFO - [feedback_manager.py:43] - Attempting database connection
2025-04-05 23:36:46 - INFO - [feedback_manager.py:47] - Database connection established in 0.00s
2025-04-05 23:36:46 - INFO - [feedback_manager.py:531] - Retrieved 1 samples (page 1, limit 10)
2025-04-05 23:39:10 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-04-05 23:39:10 - INFO - [feedback_manager.py:43] - Attempting database connection
2025-04-05 23:39:10 - INFO - [feedback_manager.py:47] - Database connection established in 0.00s
2025-04-05 23:39:10 - INFO - [feedback_manager.py:531] - Retrieved 1 samples (page 1, limit 10)
2025-04-05 23:45:32 - INFO - [azure_client.py:186] - Closing Azure AI client connection
2025-04-05 23:45:32 - INFO - [database.py:258] - Closing database connection
2025-04-05 23:45:32 - INFO - [feedback_manager.py:668] - Closing database connection
2025-04-05 23:45:37 - INFO - [app.py:66] - Debug logging enabled for SQL generator and agents
2025-04-05 23:45:37 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 23:45:37 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 23:45:37 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 23:45:37 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 23:45:37 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 23:45:37 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 23:45:37 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 23:45:37 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 23:45:37 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 23:45:37 - INFO - [azure_client.py:11] - Initializing Azure AI Client using LLM Engine
2025-04-05 23:45:37 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 23:45:37 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 23:45:37 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 23:45:37 - INFO - [azure_client.py:17] - Azure AI Client initialized successfully
2025-04-05 23:45:37 - INFO - [database.py:38] - Database manager initialized with connection: sqlite:///text2sql.db
2025-04-05 23:45:37 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-04-05 23:46:00 - INFO - [user_manager.py:36] - Verifying password: f392c0d46a59a4b5$22370a5678a2b92974c90bce029d8ad1bcc138aaa92ce5f25ae846f78bf0271f
2025-04-05 23:46:14 - INFO - [database.py:44] - Attempting database connection
2025-04-05 23:46:14 - INFO - [database.py:48] - Database connection established in 0.00s
2025-04-05 23:46:14 - INFO - [llm_engine.py:55] - [TABLE] Completion generation started
2025-04-05 23:46:15 - INFO - [llm_engine.py:92] - [TABLE] Completion generation completed in 1.23s
2025-04-05 23:46:15 - INFO - [llm_engine.py:93] - **************************
2025-04-05 23:46:15 - INFO - [feedback_manager.py:43] - Attempting database connection
2025-04-05 23:46:15 - INFO - [feedback_manager.py:47] - Database connection established in 0.00s
2025-04-05 23:46:15 - INFO - [feedback_manager.py:267] - Stage 1: Vector search for 'get me all the customer...'
2025-04-05 23:46:15 - INFO - [feedback_manager.py:62] - Loading embedding model 'sentence-transformers/all-MiniLM-L12-v2'
2025-04-05 23:46:18 - INFO - [feedback_manager.py:65] - Embedding model loaded in 2.64s
2025-04-05 23:46:18 - INFO - [feedback_manager.py:322] - Found 1 initial candidates from vector search
2025-04-05 23:46:18 - INFO - [feedback_manager.py:367] - Less than 3 candidates, skipping reranking
2025-04-05 23:46:18 - INFO - [azure_client.py:35] - SQL generation started for query: 'get me all the customer'
2025-04-05 23:46:18 - INFO - [azure_client.py:69] - Including schema information (587 chars)
2025-04-05 23:46:18 - INFO - [azure_client.py:97] - Including 1 SQL examples from feedback similarity search
2025-04-05 23:46:18 - INFO - [azure_client.py:114] - PROMPT: [{'role': 'system', 'content': "You are an expert SQL assistant. Convert natural language questions into precise, executable SQL queries.\nYour task is to:\n1. Analyze the provided schema carefully, noting table relationships and column types\n2. Generate a SQL query that accurately answers the user's question\n3. Consider performance by selecting only necessary columns\n4. Use appropriate JOIN conditions based on primary/foreign key relationships or provided join conditions\n5. Include a brief explanation of your query\n\nRules:\n- Include table names and column references exactly as provided in the schema\n- Use appropriate SQL functions based on column data types\n- Consider NULL values in your conditions\n- Use table aliases for better readability when joining multiple tables\n- Add column aliases for computed values\n- Format the SQL query with proper indentation\n- If similar queries are provided, strictly use that as format or syntax\n- Return the SQL inside a code block tagged with ```sql\n\nExample output format:\nHere's a query that will [explanation]...\n\n```sql\nSELECT ...\nFROM ...\nWHERE ...\n```"}, {'role': 'user', 'content': "Here's the database schema:\nTable: customers\nDescription: Customer information and profiles\nColumns: customer_id (INTEGER) - Unique customer identifier, first_name (TEXT) - Customer's first name, last_name (TEXT) - Customer's last name, email (TEXT) - Customer's email address (unique), phone (TEXT) - Customer's phone number, address (TEXT) - Customer's street address, city (TEXT) - Customer's city, state (TEXT) - Customer's state/province, country (TEXT) - Customer's country, postal_code (TEXT) - Customer's postal/zip code, registration_date (TEXT) - Date when customer registered\nPrimary Key(s): customer_id\n"}, {'role': 'user', 'content': 'Here are some similar queries that were previously successful:\nQuestion: get me all the customers\nSQL: SELECT * FROM customers;\n\n'}, {'role': 'user', 'content': 'Convert this question to SQL: get me all the customer'}]
2025-04-05 23:46:18 - INFO - [llm_engine.py:55] - [SQL_GEN] Completion generation started
2025-04-05 23:46:20 - INFO - [llm_engine.py:92] - [SQL_GEN] Completion generation completed in 2.14s
2025-04-05 23:46:20 - INFO - [llm_engine.py:93] - **************************
2025-04-05 23:46:20 - INFO - [azure_client.py:150] - Parsing SQL from model response
2025-04-05 23:46:20 - INFO - [azure_client.py:157] - Found SQL code block in response
2025-04-05 23:46:20 - INFO - [azure_client.py:171] - Extracted SQL query (24 chars) and explanation (220 chars)
2025-04-05 23:46:20 - INFO - [azure_client.py:124] - Generated SQL: SELECT *
FROM customers;
2025-04-05 23:46:20,755 - QUERY: 'get me all the customer' → SQL: SELECT *
FROM customers;
2025-04-05 23:46:20 - INFO - [azure_client.py:132] - SQL generation completed in 2.15s
2025-04-05 23:46:20 - INFO - [database.py:65] - Executing SQL query: SELECT *
FROM customers;
2025-04-05 23:46:20 - INFO - [database.py:86] - Query returned 5 rows with 11 columns
2025-04-05 23:46:20 - INFO - [database.py:95] - Query processing completed in 0.01s
2025-04-05 23:48:25 - INFO - [app.py:250] - Schema requested for workspace: dfd
2025-04-05 23:48:44 - INFO - [app.py:250] - Schema requested for workspace: dfd
2025-04-05 23:48:54 - INFO - [app.py:250] - Schema requested for workspace: dfd
2025-04-05 23:52:24 - INFO - [database.py:44] - Attempting database connection
2025-04-05 23:52:24 - INFO - [database.py:48] - Database connection established in 0.00s
2025-04-05 23:52:24 - INFO - [llm_engine.py:55] - [TABLE] Completion generation started
2025-04-05 23:52:24 - ERROR - [llm_engine.py:98] - [TABLE] Completion generation error after 0.04s: ('Connection aborted.', RemoteDisconnected('Remote end closed connection without response'))
Traceback (most recent call last):
  File "/home/vijay/text2sql/src/utils/llm_engine.py", line 72, in generate_completion
    response = self.client.complete(
               ^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/ai/inference/_patch.py", line 728, in complete
    pipeline_response: PipelineResponse = self._client._pipeline.run(  # pylint: disable=protected-access
                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/_base.py", line 240, in run
    return first_node.send(pipeline_request)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/_base.py", line 96, in send
    response = self.next.send(request)
               ^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/_base.py", line 96, in send
    response = self.next.send(request)
               ^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/_base.py", line 96, in send
    response = self.next.send(request)
               ^^^^^^^^^^^^^^^^^^^^^^^
  [Previous line repeated 2 more times]
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/policies/_redirect.py", line 204, in send
    response = self.next.send(request)
               ^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/policies/_retry.py", line 573, in send
    raise err
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/policies/_retry.py", line 551, in send
    response = self.next.send(request)
               ^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/_base.py", line 96, in send
    response = self.next.send(request)
               ^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/_base.py", line 96, in send
    response = self.next.send(request)
               ^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/_base.py", line 96, in send
    response = self.next.send(request)
               ^^^^^^^^^^^^^^^^^^^^^^^
  [Previous line repeated 3 more times]
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/_base.py", line 128, in send
    self._sender.send(request.http_request, **request.context.options),
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/transport/_requests_basic.py", line 409, in send
    raise error
azure.core.exceptions.ServiceResponseError: ('Connection aborted.', RemoteDisconnected('Remote end closed connection without response'))
2025-04-05 23:52:24 - INFO - [llm_engine.py:55] - [COLUMN] Completion generation started
2025-04-05 23:52:26 - INFO - [llm_engine.py:92] - [COLUMN] Completion generation completed in 1.66s
2025-04-05 23:52:26 - INFO - [llm_engine.py:93] - **************************
2025-04-05 23:52:26 - ERROR - [background_tasks.py:60] - Exception while processing query: 'join_type'
Traceback (most recent call last):
  File "/home/vijay/text2sql/src/utils/background_tasks.py", line 38, in process_in_background
    result = self.sql_manager.process_query(
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/text2sql/src/models/sql_generator.py", line 71, in process_query
    sql_result = self._generate_sql(query, workspaces, explicit_tables, progress_callback)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/text2sql/src/models/sql_generator.py", line 222, in _generate_sql
    join_info = "\n".join([
                          ^
  File "/home/vijay/text2sql/src/models/sql_generator.py", line 224, in <listcomp>
    f"{join['join_type']} JOIN on {join['condition']}"
       ~~~~^^^^^^^^^^^^^
KeyError: 'join_type'
2025-04-05 23:52:32 - INFO - [database.py:44] - Attempting database connection
2025-04-05 23:52:32 - INFO - [database.py:48] - Database connection established in 0.00s
2025-04-05 23:52:32 - INFO - [llm_engine.py:55] - [TABLE] Completion generation started
2025-04-05 23:52:33 - INFO - [llm_engine.py:92] - [TABLE] Completion generation completed in 1.09s
2025-04-05 23:52:33 - INFO - [llm_engine.py:93] - **************************
2025-04-05 23:52:33 - INFO - [feedback_manager.py:267] - Stage 1: Vector search for 'Get me count of customers by their city...'
2025-04-05 23:52:33 - INFO - [feedback_manager.py:322] - Found 1 initial candidates from vector search
2025-04-05 23:52:33 - INFO - [feedback_manager.py:367] - Less than 3 candidates, skipping reranking
2025-04-05 23:52:33 - INFO - [azure_client.py:35] - SQL generation started for query: 'Get me count of customers by their city'
2025-04-05 23:52:33 - INFO - [azure_client.py:69] - Including schema information (587 chars)
2025-04-05 23:52:33 - INFO - [azure_client.py:97] - Including 1 SQL examples from feedback similarity search
2025-04-05 23:52:33 - INFO - [azure_client.py:114] - PROMPT: [{'role': 'system', 'content': "You are an expert SQL assistant. Convert natural language questions into precise, executable SQL queries.\nYour task is to:\n1. Analyze the provided schema carefully, noting table relationships and column types\n2. Generate a SQL query that accurately answers the user's question\n3. Consider performance by selecting only necessary columns\n4. Use appropriate JOIN conditions based on primary/foreign key relationships or provided join conditions\n5. Include a brief explanation of your query\n\nRules:\n- Include table names and column references exactly as provided in the schema\n- Use appropriate SQL functions based on column data types\n- Consider NULL values in your conditions\n- Use table aliases for better readability when joining multiple tables\n- Add column aliases for computed values\n- Format the SQL query with proper indentation\n- If similar queries are provided, strictly use that as format or syntax\n- Return the SQL inside a code block tagged with ```sql\n\nExample output format:\nHere's a query that will [explanation]...\n\n```sql\nSELECT ...\nFROM ...\nWHERE ...\n```"}, {'role': 'user', 'content': "Here's the database schema:\nTable: customers\nDescription: Customer information and profiles\nColumns: customer_id (INTEGER) - Unique customer identifier, first_name (TEXT) - Customer's first name, last_name (TEXT) - Customer's last name, email (TEXT) - Customer's email address (unique), phone (TEXT) - Customer's phone number, address (TEXT) - Customer's street address, city (TEXT) - Customer's city, state (TEXT) - Customer's state/province, country (TEXT) - Customer's country, postal_code (TEXT) - Customer's postal/zip code, registration_date (TEXT) - Date when customer registered\nPrimary Key(s): customer_id\n"}, {'role': 'user', 'content': 'Here are some similar queries that were previously successful:\nQuestion: get me all the customers\nSQL: SELECT * FROM customers;\n\n'}, {'role': 'user', 'content': 'Convert this question to SQL: Get me count of customers by their city'}]
2025-04-05 23:52:33 - INFO - [llm_engine.py:55] - [SQL_GEN] Completion generation started
2025-04-05 23:52:33 - ERROR - [llm_engine.py:98] - [SQL_GEN] Completion generation error after 0.24s: ('Connection aborted.', RemoteDisconnected('Remote end closed connection without response'))
Traceback (most recent call last):
  File "/home/vijay/text2sql/src/utils/llm_engine.py", line 72, in generate_completion
    response = self.client.complete(
               ^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/ai/inference/_patch.py", line 728, in complete
    pipeline_response: PipelineResponse = self._client._pipeline.run(  # pylint: disable=protected-access
                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/_base.py", line 240, in run
    return first_node.send(pipeline_request)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/_base.py", line 96, in send
    response = self.next.send(request)
               ^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/_base.py", line 96, in send
    response = self.next.send(request)
               ^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/_base.py", line 96, in send
    response = self.next.send(request)
               ^^^^^^^^^^^^^^^^^^^^^^^
  [Previous line repeated 2 more times]
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/policies/_redirect.py", line 204, in send
    response = self.next.send(request)
               ^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/policies/_retry.py", line 573, in send
    raise err
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/policies/_retry.py", line 551, in send
    response = self.next.send(request)
               ^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/_base.py", line 96, in send
    response = self.next.send(request)
               ^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/_base.py", line 96, in send
    response = self.next.send(request)
               ^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/_base.py", line 96, in send
    response = self.next.send(request)
               ^^^^^^^^^^^^^^^^^^^^^^^
  [Previous line repeated 3 more times]
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/_base.py", line 128, in send
    self._sender.send(request.http_request, **request.context.options),
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/transport/_requests_basic.py", line 409, in send
    raise error
azure.core.exceptions.ServiceResponseError: ('Connection aborted.', RemoteDisconnected('Remote end closed connection without response'))
2025-04-05 23:52:33 - ERROR - [azure_client.py:138] - SQL generation error after 0.26s: ('Connection aborted.', RemoteDisconnected('Remote end closed connection without response'))
Traceback (most recent call last):
  File "/home/vijay/text2sql/src/utils/azure_client.py", line 117, in generate_sql
    raw_response = self.llm_engine.generate_completion(messages, log_prefix="SQL_GEN")
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/text2sql/src/utils/llm_engine.py", line 72, in generate_completion
    response = self.client.complete(
               ^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/ai/inference/_patch.py", line 728, in complete
    pipeline_response: PipelineResponse = self._client._pipeline.run(  # pylint: disable=protected-access
                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/_base.py", line 240, in run
    return first_node.send(pipeline_request)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/_base.py", line 96, in send
    response = self.next.send(request)
               ^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/_base.py", line 96, in send
    response = self.next.send(request)
               ^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/_base.py", line 96, in send
    response = self.next.send(request)
               ^^^^^^^^^^^^^^^^^^^^^^^
  [Previous line repeated 2 more times]
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/policies/_redirect.py", line 204, in send
    response = self.next.send(request)
               ^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/policies/_retry.py", line 573, in send
    raise err
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/policies/_retry.py", line 551, in send
    response = self.next.send(request)
               ^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/_base.py", line 96, in send
    response = self.next.send(request)
               ^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/_base.py", line 96, in send
    response = self.next.send(request)
               ^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/_base.py", line 96, in send
    response = self.next.send(request)
               ^^^^^^^^^^^^^^^^^^^^^^^
  [Previous line repeated 3 more times]
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/_base.py", line 128, in send
    self._sender.send(request.http_request, **request.context.options),
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/azure/core/pipeline/transport/_requests_basic.py", line 409, in send
    raise error
azure.core.exceptions.ServiceResponseError: ('Connection aborted.', RemoteDisconnected('Remote end closed connection without response'))
2025-04-05 23:52:43 - INFO - [database.py:44] - Attempting database connection
2025-04-05 23:52:44 - INFO - [database.py:48] - Database connection established in 0.00s
2025-04-05 23:52:44 - INFO - [llm_engine.py:55] - [TABLE] Completion generation started
2025-04-05 23:52:44 - INFO - [llm_engine.py:92] - [TABLE] Completion generation completed in 0.48s
2025-04-05 23:52:44 - INFO - [llm_engine.py:93] - **************************
2025-04-05 23:52:44 - INFO - [feedback_manager.py:267] - Stage 1: Vector search for 'Get me count of customers by their city...'
2025-04-05 23:52:44 - INFO - [feedback_manager.py:322] - Found 1 initial candidates from vector search
2025-04-05 23:52:44 - INFO - [feedback_manager.py:367] - Less than 3 candidates, skipping reranking
2025-04-05 23:52:44 - INFO - [azure_client.py:35] - SQL generation started for query: 'Get me count of customers by their city'
2025-04-05 23:52:44 - INFO - [azure_client.py:69] - Including schema information (587 chars)
2025-04-05 23:52:44 - INFO - [azure_client.py:97] - Including 1 SQL examples from feedback similarity search
2025-04-05 23:52:44 - INFO - [azure_client.py:114] - PROMPT: [{'role': 'system', 'content': "You are an expert SQL assistant. Convert natural language questions into precise, executable SQL queries.\nYour task is to:\n1. Analyze the provided schema carefully, noting table relationships and column types\n2. Generate a SQL query that accurately answers the user's question\n3. Consider performance by selecting only necessary columns\n4. Use appropriate JOIN conditions based on primary/foreign key relationships or provided join conditions\n5. Include a brief explanation of your query\n\nRules:\n- Include table names and column references exactly as provided in the schema\n- Use appropriate SQL functions based on column data types\n- Consider NULL values in your conditions\n- Use table aliases for better readability when joining multiple tables\n- Add column aliases for computed values\n- Format the SQL query with proper indentation\n- If similar queries are provided, strictly use that as format or syntax\n- Return the SQL inside a code block tagged with ```sql\n\nExample output format:\nHere's a query that will [explanation]...\n\n```sql\nSELECT ...\nFROM ...\nWHERE ...\n```"}, {'role': 'user', 'content': "Here's the database schema:\nTable: customers\nDescription: Customer information and profiles\nColumns: customer_id (INTEGER) - Unique customer identifier, first_name (TEXT) - Customer's first name, last_name (TEXT) - Customer's last name, email (TEXT) - Customer's email address (unique), phone (TEXT) - Customer's phone number, address (TEXT) - Customer's street address, city (TEXT) - Customer's city, state (TEXT) - Customer's state/province, country (TEXT) - Customer's country, postal_code (TEXT) - Customer's postal/zip code, registration_date (TEXT) - Date when customer registered\nPrimary Key(s): customer_id\n"}, {'role': 'user', 'content': 'Here are some similar queries that were previously successful:\nQuestion: get me all the customers\nSQL: SELECT * FROM customers;\n\n'}, {'role': 'user', 'content': 'Convert this question to SQL: Get me count of customers by their city'}]
2025-04-05 23:52:44 - INFO - [llm_engine.py:55] - [SQL_GEN] Completion generation started
2025-04-05 23:52:47 - INFO - [llm_engine.py:92] - [SQL_GEN] Completion generation completed in 2.61s
2025-04-05 23:52:47 - INFO - [llm_engine.py:93] - **************************
2025-04-05 23:52:47 - INFO - [azure_client.py:150] - Parsing SQL from model response
2025-04-05 23:52:47 - INFO - [azure_client.py:157] - Found SQL code block in response
2025-04-05 23:52:47 - INFO - [azure_client.py:171] - Extracted SQL query (108 chars) and explanation (290 chars)
2025-04-05 23:52:47 - INFO - [azure_client.py:124] - Generated SQL: SELECT city, COUNT(customer_id) AS customer_count
FROM customers
GROUP BY city
ORDER BY customer_count DESC;
2025-04-05 23:52:47,288 - QUERY: 'Get me count of customers by their city' → SQL: SELECT city, COUNT(customer_id) AS customer_count
FROM customers
GROUP BY city
ORDER BY customer_count DESC;
2025-04-05 23:52:47 - INFO - [azure_client.py:132] - SQL generation completed in 2.64s
2025-04-05 23:52:47 - INFO - [database.py:65] - Executing SQL query: SELECT city, COUNT(customer_id) AS customer_count
FROM customers
GROUP BY city
ORDER BY customer_count DESC;
2025-04-05 23:52:47 - INFO - [database.py:86] - Query returned 5 rows with 2 columns
2025-04-05 23:52:47 - INFO - [database.py:95] - Query processing completed in 0.01s
2025-04-05 23:53:16 - INFO - [azure_client.py:186] - Closing Azure AI client connection
2025-04-05 23:53:16 - INFO - [database.py:258] - Closing database connection
2025-04-05 23:53:16 - INFO - [feedback_manager.py:668] - Closing database connection
2025-04-05 23:53:24 - INFO - [app.py:66] - Debug logging enabled for SQL generator and agents
2025-04-05 23:53:24 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 23:53:24 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 23:53:24 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 23:53:24 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 23:53:24 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 23:53:24 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 23:53:24 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 23:53:24 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 23:53:24 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 23:53:24 - INFO - [azure_client.py:11] - Initializing Azure AI Client using LLM Engine
2025-04-05 23:53:24 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 23:53:24 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 23:53:24 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 23:53:24 - INFO - [azure_client.py:17] - Azure AI Client initialized successfully
2025-04-05 23:53:24 - INFO - [database.py:38] - Database manager initialized with connection: sqlite:///text2sql.db
2025-04-05 23:53:24 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-04-05 23:54:06 - INFO - [azure_client.py:186] - Closing Azure AI client connection
2025-04-05 23:54:06 - INFO - [database.py:258] - Closing database connection
2025-04-05 23:54:06 - INFO - [feedback_manager.py:668] - Closing database connection
2025-04-05 23:54:10 - INFO - [app.py:66] - Debug logging enabled for SQL generator and agents
2025-04-05 23:54:10 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 23:54:10 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 23:54:10 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 23:54:10 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 23:54:10 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 23:54:10 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 23:54:10 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 23:54:10 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 23:54:10 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 23:54:10 - INFO - [azure_client.py:11] - Initializing Azure AI Client using LLM Engine
2025-04-05 23:54:10 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 23:54:10 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 23:54:10 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 23:54:10 - INFO - [azure_client.py:17] - Azure AI Client initialized successfully
2025-04-05 23:54:10 - INFO - [database.py:38] - Database manager initialized with connection: sqlite:///text2sql.db
2025-04-05 23:54:10 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-04-05 23:55:10 - INFO - [azure_client.py:186] - Closing Azure AI client connection
2025-04-05 23:55:10 - INFO - [database.py:258] - Closing database connection
2025-04-05 23:55:10 - INFO - [feedback_manager.py:668] - Closing database connection
2025-04-05 23:55:14 - INFO - [app.py:66] - Debug logging enabled for SQL generator and agents
2025-04-05 23:55:14 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 23:55:14 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 23:55:14 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 23:55:14 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 23:55:14 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 23:55:14 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 23:55:14 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 23:55:14 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 23:55:14 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 23:55:14 - INFO - [azure_client.py:11] - Initializing Azure AI Client using LLM Engine
2025-04-05 23:55:14 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-05 23:55:14 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-05 23:55:14 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-05 23:55:14 - INFO - [azure_client.py:17] - Azure AI Client initialized successfully
2025-04-05 23:55:14 - INFO - [database.py:38] - Database manager initialized with connection: sqlite:///text2sql.db
2025-04-05 23:55:14 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-04-05 23:55:27 - INFO - [database.py:44] - Attempting database connection
2025-04-05 23:55:27 - INFO - [database.py:48] - Database connection established in 0.00s
2025-04-05 23:55:27 - INFO - [llm_engine.py:55] - [TABLE] Completion generation started
2025-04-05 23:55:29 - INFO - [llm_engine.py:92] - [TABLE] Completion generation completed in 1.20s
2025-04-05 23:55:29 - INFO - [llm_engine.py:93] - **************************
2025-04-05 23:55:29 - INFO - [feedback_manager.py:43] - Attempting database connection
2025-04-05 23:55:29 - INFO - [feedback_manager.py:47] - Database connection established in 0.00s
2025-04-05 23:55:29 - INFO - [feedback_manager.py:267] - Stage 1: Vector search for 'Get me all the customers...'
2025-04-05 23:55:29 - INFO - [feedback_manager.py:62] - Loading embedding model 'sentence-transformers/all-MiniLM-L12-v2'
2025-04-05 23:55:31 - INFO - [feedback_manager.py:65] - Embedding model loaded in 2.75s
2025-04-05 23:55:31 - INFO - [feedback_manager.py:322] - Found 1 initial candidates from vector search
2025-04-05 23:55:31 - INFO - [feedback_manager.py:367] - Less than 3 candidates, skipping reranking
2025-04-05 23:55:31 - INFO - [azure_client.py:35] - SQL generation started for query: 'Get me all the customers'
2025-04-05 23:55:31 - INFO - [azure_client.py:69] - Including schema information (587 chars)
2025-04-05 23:55:31 - INFO - [azure_client.py:97] - Including 1 SQL examples from feedback similarity search
2025-04-05 23:55:32 - INFO - [azure_client.py:114] - PROMPT: [{'role': 'system', 'content': "You are an expert SQL assistant. Convert natural language questions into precise, executable SQL queries.\nYour task is to:\n1. Analyze the provided schema carefully, noting table relationships and column types\n2. Generate a SQL query that accurately answers the user's question\n3. Consider performance by selecting only necessary columns\n4. Use appropriate JOIN conditions based on primary/foreign key relationships or provided join conditions\n5. Include a brief explanation of your query\n\nRules:\n- Include table names and column references exactly as provided in the schema\n- Use appropriate SQL functions based on column data types\n- Consider NULL values in your conditions\n- Use table aliases for better readability when joining multiple tables\n- Add column aliases for computed values\n- Format the SQL query with proper indentation\n- If similar queries are provided, strictly use that as format or syntax\n- Return the SQL inside a code block tagged with ```sql\n\nExample output format:\nHere's a query that will [explanation]...\n\n```sql\nSELECT ...\nFROM ...\nWHERE ...\n```"}, {'role': 'user', 'content': "Here's the database schema:\nTable: customers\nDescription: Customer information and profiles\nColumns: customer_id (INTEGER) - Unique customer identifier, first_name (TEXT) - Customer's first name, last_name (TEXT) - Customer's last name, email (TEXT) - Customer's email address (unique), phone (TEXT) - Customer's phone number, address (TEXT) - Customer's street address, city (TEXT) - Customer's city, state (TEXT) - Customer's state/province, country (TEXT) - Customer's country, postal_code (TEXT) - Customer's postal/zip code, registration_date (TEXT) - Date when customer registered\nPrimary Key(s): customer_id\n"}, {'role': 'user', 'content': 'Here are some similar queries that were previously successful:\nQuestion: get me all the customers\nSQL: SELECT * FROM customers;\n\n'}, {'role': 'user', 'content': 'Convert this question to SQL: Get me all the customers'}]
2025-04-05 23:55:32 - INFO - [llm_engine.py:55] - [SQL_GEN] Completion generation started
2025-04-05 23:55:34 - INFO - [llm_engine.py:92] - [SQL_GEN] Completion generation completed in 2.20s
2025-04-05 23:55:34 - INFO - [llm_engine.py:93] - **************************
2025-04-05 23:55:34 - INFO - [azure_client.py:150] - Parsing SQL from model response
2025-04-05 23:55:34 - INFO - [azure_client.py:157] - Found SQL code block in response
2025-04-05 23:55:34 - INFO - [azure_client.py:171] - Extracted SQL query (24 chars) and explanation (263 chars)
2025-04-05 23:55:34 - INFO - [azure_client.py:124] - Generated SQL: SELECT * FROM customers;
2025-04-05 23:55:34,238 - QUERY: 'Get me all the customers' → SQL: SELECT * FROM customers;
2025-04-05 23:55:34 - INFO - [azure_client.py:132] - SQL generation completed in 2.24s
2025-04-05 23:55:34 - INFO - [database.py:65] - Executing SQL query: SELECT * FROM customers;
2025-04-05 23:55:34 - INFO - [database.py:86] - Query returned 5 rows with 11 columns
2025-04-05 23:55:34 - INFO - [database.py:95] - Query processing completed in 0.02s
2025-04-05 23:58:32 - INFO - [app.py:254] - Schema requested for workspace: dfd
2025-04-05 23:59:24 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-04-05 23:59:24 - INFO - [feedback_manager.py:43] - Attempting database connection
2025-04-05 23:59:24 - INFO - [feedback_manager.py:47] - Database connection established in 0.00s
2025-04-05 23:59:24 - INFO - [feedback_manager.py:531] - Retrieved 1 samples (page 1, limit 10)
2025-04-06 00:01:33 - INFO - [app.py:254] - Schema requested for workspace: dfd
2025-04-06 00:02:33 - INFO - [app.py:254] - Schema requested for workspace: dfd
2025-04-06 00:02:52 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-04-06 00:02:52 - INFO - [feedback_manager.py:43] - Attempting database connection
2025-04-06 00:02:52 - INFO - [feedback_manager.py:47] - Database connection established in 0.00s
2025-04-06 00:02:52 - INFO - [feedback_manager.py:531] - Retrieved 1 samples (page 1, limit 10)
2025-04-06 00:05:41 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-04-06 00:05:41 - INFO - [feedback_manager.py:43] - Attempting database connection
2025-04-06 00:05:41 - INFO - [feedback_manager.py:47] - Database connection established in 0.01s
2025-04-06 00:05:41 - INFO - [feedback_manager.py:531] - Retrieved 1 samples (page 1, limit 10)
2025-04-06 00:09:45 - INFO - [app.py:254] - Schema requested for workspace: dfd
2025-04-06 00:09:51 - INFO - [app.py:138] - User explicitly specified tables: order_items
2025-04-06 00:09:51 - INFO - [database.py:44] - Attempting database connection
2025-04-06 00:09:51 - INFO - [database.py:48] - Database connection established in 0.00s
2025-04-06 00:09:51 - INFO - [feedback_manager.py:267] - Stage 1: Vector search for 'get all...'
2025-04-06 00:09:51 - INFO - [feedback_manager.py:322] - Found 1 initial candidates from vector search
2025-04-06 00:09:51 - INFO - [feedback_manager.py:367] - Less than 3 candidates, skipping reranking
2025-04-06 00:09:51 - INFO - [azure_client.py:35] - SQL generation started for query: 'get all'
2025-04-06 00:09:51 - INFO - [azure_client.py:69] - Including schema information (353 chars)
2025-04-06 00:09:51 - INFO - [azure_client.py:97] - Including 1 SQL examples from feedback similarity search
2025-04-06 00:09:51 - INFO - [azure_client.py:114] - PROMPT: [{'role': 'system', 'content': "You are an expert SQL assistant. Convert natural language questions into precise, executable SQL queries.\nYour task is to:\n1. Analyze the provided schema carefully, noting table relationships and column types\n2. Generate a SQL query that accurately answers the user's question\n3. Consider performance by selecting only necessary columns\n4. Use appropriate JOIN conditions based on primary/foreign key relationships or provided join conditions\n5. Include a brief explanation of your query\n\nRules:\n- Include table names and column references exactly as provided in the schema\n- Use appropriate SQL functions based on column data types\n- Consider NULL values in your conditions\n- Use table aliases for better readability when joining multiple tables\n- Add column aliases for computed values\n- Format the SQL query with proper indentation\n- If similar queries are provided, strictly use that as format or syntax\n- Return the SQL inside a code block tagged with ```sql\n\nExample output format:\nHere's a query that will [explanation]...\n\n```sql\nSELECT ...\nFROM ...\nWHERE ...\n```"}, {'role': 'user', 'content': "Here's the database schema:\nTable: order_items\nDescription: Individual items within each order\nColumns: item_id (INTEGER) - Unique order item identifier, order_id (INTEGER) - Reference to parent order, product_id (INTEGER) - Reference to purchased product, quantity (INTEGER) - Quantity of product ordered, price (REAL) - Price per unit at time of purchase\nPrimary Key(s): item_id\n"}, {'role': 'user', 'content': 'Here are some similar queries that were previously successful:\nQuestion: get me all the customers\nSQL: SELECT * FROM customers;\n\n'}, {'role': 'user', 'content': 'Convert this question to SQL: get all'}]
2025-04-06 00:09:51 - INFO - [llm_engine.py:55] - [SQL_GEN] Completion generation started
2025-04-06 00:09:54 - INFO - [llm_engine.py:92] - [SQL_GEN] Completion generation completed in 2.96s
2025-04-06 00:09:54 - INFO - [llm_engine.py:93] - **************************
2025-04-06 00:09:54 - INFO - [azure_client.py:150] - Parsing SQL from model response
2025-04-06 00:09:54 - INFO - [azure_client.py:157] - Found SQL code block in response
2025-04-06 00:09:54 - INFO - [azure_client.py:171] - Extracted SQL query (134 chars) and explanation (330 chars)
2025-04-06 00:09:54 - INFO - [azure_client.py:124] - Generated SQL: SELECT p.product_id, p.product_name
FROM products p
LEFT JOIN order_items oi ON p.product_id = oi.product_id
WHERE oi.item_id IS NULL;
2025-04-06 00:09:54,708 - QUERY: 'get all' → SQL: SELECT p.product_id, p.product_name
FROM products p
LEFT JOIN order_items oi ON p.product_id = oi.product_id
WHERE oi.item_id IS NULL;
2025-04-06 00:09:54 - INFO - [azure_client.py:132] - SQL generation completed in 2.98s
2025-04-06 00:09:54 - INFO - [database.py:65] - Executing SQL query: SELECT p.product_id, p.product_name
FROM products p
LEFT JOIN order_items oi ON p.product_id = oi.product_id
WHERE oi.item_id IS NULL;
2025-04-06 00:09:54 - ERROR - [database.py:122] - SQL error after 0.00s: (sqlite3.OperationalError) no such column: p.product_name
[SQL: SELECT p.product_id, p.product_name
FROM products p
LEFT JOIN order_items oi ON p.product_id = oi.product_id
WHERE oi.item_id IS NULL;]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/sqlalchemy/engine/default.py", line 748, in do_execute
    cursor.execute(statement, parameters)
sqlite3.OperationalError: no such column: p.product_name

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/vijay/text2sql/src/utils/database.py", line 78, in execute_query
    result = conn.execute(text(sql_query))
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 1414, in execute
    return meth(
           ^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/sqlalchemy/sql/elements.py", line 486, in _execute_on_connection
    return connection._execute_clauseelement(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
          ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 1842, in _execute_context
    return self._exec_single_context(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 2326, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/sqlalchemy/engine/default.py", line 748, in do_execute
    cursor.execute(statement, parameters)
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such column: p.product_name
[SQL: SELECT p.product_id, p.product_name
FROM products p
LEFT JOIN order_items oi ON p.product_id = oi.product_id
WHERE oi.item_id IS NULL;]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-04-06 00:10:19 - INFO - [app.py:138] - User explicitly specified tables: order_items
2025-04-06 00:10:19 - INFO - [database.py:44] - Attempting database connection
2025-04-06 00:10:19 - INFO - [database.py:48] - Database connection established in 0.00s
2025-04-06 00:10:19 - INFO - [feedback_manager.py:267] - Stage 1: Vector search for 'get all order items...'
2025-04-06 00:10:19 - INFO - [feedback_manager.py:322] - Found 1 initial candidates from vector search
2025-04-06 00:10:19 - INFO - [feedback_manager.py:367] - Less than 3 candidates, skipping reranking
2025-04-06 00:10:19 - INFO - [azure_client.py:35] - SQL generation started for query: 'get all order items'
2025-04-06 00:10:19 - INFO - [azure_client.py:69] - Including schema information (353 chars)
2025-04-06 00:10:19 - INFO - [azure_client.py:97] - Including 1 SQL examples from feedback similarity search
2025-04-06 00:10:19 - INFO - [azure_client.py:114] - PROMPT: [{'role': 'system', 'content': "You are an expert SQL assistant. Convert natural language questions into precise, executable SQL queries.\nYour task is to:\n1. Analyze the provided schema carefully, noting table relationships and column types\n2. Generate a SQL query that accurately answers the user's question\n3. Consider performance by selecting only necessary columns\n4. Use appropriate JOIN conditions based on primary/foreign key relationships or provided join conditions\n5. Include a brief explanation of your query\n\nRules:\n- Include table names and column references exactly as provided in the schema\n- Use appropriate SQL functions based on column data types\n- Consider NULL values in your conditions\n- Use table aliases for better readability when joining multiple tables\n- Add column aliases for computed values\n- Format the SQL query with proper indentation\n- If similar queries are provided, strictly use that as format or syntax\n- Return the SQL inside a code block tagged with ```sql\n\nExample output format:\nHere's a query that will [explanation]...\n\n```sql\nSELECT ...\nFROM ...\nWHERE ...\n```"}, {'role': 'user', 'content': "Here's the database schema:\nTable: order_items\nDescription: Individual items within each order\nColumns: item_id (INTEGER) - Unique order item identifier, order_id (INTEGER) - Reference to parent order, product_id (INTEGER) - Reference to purchased product, quantity (INTEGER) - Quantity of product ordered, price (REAL) - Price per unit at time of purchase\nPrimary Key(s): item_id\n"}, {'role': 'user', 'content': 'Here are some similar queries that were previously successful:\nQuestion: get me all the customers\nSQL: SELECT * FROM customers;\n\n'}, {'role': 'user', 'content': 'Convert this question to SQL: get all order items'}]
2025-04-06 00:10:19 - INFO - [llm_engine.py:55] - [SQL_GEN] Completion generation started
2025-04-06 00:11:01 - INFO - [azure_client.py:186] - Closing Azure AI client connection
2025-04-06 00:11:01 - INFO - [database.py:258] - Closing database connection
2025-04-06 00:11:01 - INFO - [feedback_manager.py:668] - Closing database connection
2025-04-06 00:34:32 - INFO - [app.py:66] - Debug logging enabled for SQL generator and agents
2025-04-06 00:34:32 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-06 00:34:32 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-06 00:34:32 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-06 00:34:32 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-06 00:34:32 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-06 00:34:32 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-06 00:34:32 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-06 00:34:32 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-06 00:34:32 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-06 00:34:32 - INFO - [azure_client.py:11] - Initializing Azure AI Client using LLM Engine
2025-04-06 00:34:32 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-06 00:34:32 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-06 00:34:32 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-06 00:34:32 - INFO - [azure_client.py:17] - Azure AI Client initialized successfully
2025-04-06 00:34:32 - INFO - [database.py:38] - Database manager initialized with connection: sqlite:///text2sql.db
2025-04-06 00:34:32 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-04-06 00:34:36 - INFO - [app.py:66] - Debug logging enabled for SQL generator and agents
2025-04-06 00:34:36 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-06 00:34:36 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-06 00:34:36 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-06 00:34:36 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-06 00:34:36 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-06 00:34:36 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-06 00:34:36 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-06 00:34:36 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-06 00:34:36 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-06 00:34:36 - INFO - [azure_client.py:11] - Initializing Azure AI Client using LLM Engine
2025-04-06 00:34:36 - INFO - [llm_engine.py:27] - Initializing LLM Engine with endpoint: https://models.inference.ai.azure.com
2025-04-06 00:34:36 - INFO - [llm_engine.py:28] - Using model: Phi-3-small-8k-instruct
2025-04-06 00:34:36 - INFO - [llm_engine.py:36] - LLM Engine initialized successfully
2025-04-06 00:34:36 - INFO - [azure_client.py:17] - Azure AI Client initialized successfully
2025-04-06 00:34:36 - INFO - [database.py:38] - Database manager initialized with connection: sqlite:///text2sql.db
2025-04-06 00:34:36 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-04-06 00:34:47 - INFO - [azure_client.py:186] - Closing Azure AI client connection
2025-04-06 00:34:47 - INFO - [database.py:258] - Closing database connection
2025-04-06 00:34:47 - INFO - [feedback_manager.py:668] - Closing database connection
2025-04-06 00:34:52 - INFO - [app.py:66] - Debug logging enabled for SQL generator and agents
2025-04-06 00:34:52 - INFO - [llm_engine.py:28] - Initializing LLM Engine with endpoint: https://openrouter.ai/api/v1
2025-04-06 00:34:52 - INFO - [llm_engine.py:29] - Using model: google/gemini-2.5-pro-exp-03-25:free
2025-04-06 00:34:52 - INFO - [llm_engine.py:37] - LLM Engine initialized successfully
2025-04-06 00:34:52 - INFO - [llm_engine.py:28] - Initializing LLM Engine with endpoint: https://openrouter.ai/api/v1
2025-04-06 00:34:52 - INFO - [llm_engine.py:29] - Using model: google/gemini-2.5-pro-exp-03-25:free
2025-04-06 00:34:52 - INFO - [llm_engine.py:37] - LLM Engine initialized successfully
2025-04-06 00:34:52 - INFO - [llm_engine.py:28] - Initializing LLM Engine with endpoint: https://openrouter.ai/api/v1
2025-04-06 00:34:52 - INFO - [llm_engine.py:29] - Using model: google/gemini-2.5-pro-exp-03-25:free
2025-04-06 00:34:52 - INFO - [llm_engine.py:37] - LLM Engine initialized successfully
2025-04-06 00:34:52 - INFO - [azure_client.py:11] - Initializing Azure AI Client using LLM Engine
2025-04-06 00:34:52 - INFO - [llm_engine.py:28] - Initializing LLM Engine with endpoint: https://openrouter.ai/api/v1
2025-04-06 00:34:52 - INFO - [llm_engine.py:29] - Using model: google/gemini-2.5-pro-exp-03-25:free
2025-04-06 00:34:52 - INFO - [llm_engine.py:37] - LLM Engine initialized successfully
2025-04-06 00:34:52 - INFO - [azure_client.py:17] - Azure AI Client initialized successfully
2025-04-06 00:34:52 - INFO - [database.py:38] - Database manager initialized with connection: sqlite:///text2sql.db
2025-04-06 00:34:52 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-04-06 00:35:30 - INFO - [azure_client.py:186] - Closing Azure AI client connection
2025-04-06 00:35:30 - INFO - [database.py:258] - Closing database connection
2025-04-06 00:35:30 - INFO - [feedback_manager.py:668] - Closing database connection
2025-04-06 00:35:34 - INFO - [app.py:66] - Debug logging enabled for SQL generator and agents
2025-04-06 00:35:34 - INFO - [llm_engine.py:28] - Initializing LLM Engine with endpoint: https://openrouter.ai/api/v1
2025-04-06 00:35:34 - INFO - [llm_engine.py:29] - Using model: google/gemini-2.5-pro-exp-03-25:free
2025-04-06 00:35:34 - INFO - [llm_engine.py:37] - LLM Engine initialized successfully
2025-04-06 00:35:34 - INFO - [llm_engine.py:28] - Initializing LLM Engine with endpoint: https://openrouter.ai/api/v1
2025-04-06 00:35:34 - INFO - [llm_engine.py:29] - Using model: google/gemini-2.5-pro-exp-03-25:free
2025-04-06 00:35:34 - INFO - [llm_engine.py:37] - LLM Engine initialized successfully
2025-04-06 00:35:34 - INFO - [llm_engine.py:28] - Initializing LLM Engine with endpoint: https://openrouter.ai/api/v1
2025-04-06 00:35:34 - INFO - [llm_engine.py:29] - Using model: google/gemini-2.5-pro-exp-03-25:free
2025-04-06 00:35:34 - INFO - [llm_engine.py:37] - LLM Engine initialized successfully
2025-04-06 00:35:34 - INFO - [azure_client.py:11] - Initializing Azure AI Client using LLM Engine
2025-04-06 00:35:34 - INFO - [llm_engine.py:28] - Initializing LLM Engine with endpoint: https://openrouter.ai/api/v1
2025-04-06 00:35:34 - INFO - [llm_engine.py:29] - Using model: google/gemini-2.5-pro-exp-03-25:free
2025-04-06 00:35:34 - INFO - [llm_engine.py:37] - LLM Engine initialized successfully
2025-04-06 00:35:34 - INFO - [azure_client.py:17] - Azure AI Client initialized successfully
2025-04-06 00:35:34 - INFO - [database.py:38] - Database manager initialized with connection: sqlite:///text2sql.db
2025-04-06 00:35:34 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-04-06 00:35:41 - INFO - [azure_client.py:186] - Closing Azure AI client connection
2025-04-06 00:35:41 - INFO - [database.py:258] - Closing database connection
2025-04-06 00:35:41 - INFO - [feedback_manager.py:668] - Closing database connection
2025-04-06 00:35:51 - INFO - [app.py:66] - Debug logging enabled for SQL generator and agents
2025-04-06 00:35:51 - INFO - [llm_engine.py:28] - Initializing LLM Engine with endpoint: https://openrouter.ai/api/v1
2025-04-06 00:35:51 - INFO - [llm_engine.py:29] - Using model: google/gemini-2.5-pro-exp-03-25:free
2025-04-06 00:35:51 - INFO - [llm_engine.py:37] - LLM Engine initialized successfully
2025-04-06 00:35:51 - INFO - [llm_engine.py:28] - Initializing LLM Engine with endpoint: https://openrouter.ai/api/v1
2025-04-06 00:35:51 - INFO - [llm_engine.py:29] - Using model: google/gemini-2.5-pro-exp-03-25:free
2025-04-06 00:35:51 - INFO - [llm_engine.py:37] - LLM Engine initialized successfully
2025-04-06 00:35:51 - INFO - [llm_engine.py:28] - Initializing LLM Engine with endpoint: https://openrouter.ai/api/v1
2025-04-06 00:35:51 - INFO - [llm_engine.py:29] - Using model: google/gemini-2.5-pro-exp-03-25:free
2025-04-06 00:35:51 - INFO - [llm_engine.py:37] - LLM Engine initialized successfully
2025-04-06 00:35:51 - INFO - [azure_client.py:11] - Initializing Azure AI Client using LLM Engine
2025-04-06 00:35:51 - INFO - [llm_engine.py:28] - Initializing LLM Engine with endpoint: https://openrouter.ai/api/v1
2025-04-06 00:35:51 - INFO - [llm_engine.py:29] - Using model: google/gemini-2.5-pro-exp-03-25:free
2025-04-06 00:35:51 - INFO - [llm_engine.py:37] - LLM Engine initialized successfully
2025-04-06 00:35:51 - INFO - [azure_client.py:17] - Azure AI Client initialized successfully
2025-04-06 00:35:51 - INFO - [database.py:38] - Database manager initialized with connection: sqlite:///text2sql.db
2025-04-06 00:35:51 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-04-06 00:35:55 - INFO - [app.py:66] - Debug logging enabled for SQL generator and agents
2025-04-06 00:35:55 - INFO - [llm_engine.py:28] - Initializing LLM Engine with endpoint: https://openrouter.ai/api/v1
2025-04-06 00:35:55 - INFO - [llm_engine.py:29] - Using model: google/gemini-2.5-pro-exp-03-25:free
2025-04-06 00:35:55 - INFO - [llm_engine.py:37] - LLM Engine initialized successfully
2025-04-06 00:35:55 - INFO - [llm_engine.py:28] - Initializing LLM Engine with endpoint: https://openrouter.ai/api/v1
2025-04-06 00:35:55 - INFO - [llm_engine.py:29] - Using model: google/gemini-2.5-pro-exp-03-25:free
2025-04-06 00:35:55 - INFO - [llm_engine.py:37] - LLM Engine initialized successfully
2025-04-06 00:35:55 - INFO - [llm_engine.py:28] - Initializing LLM Engine with endpoint: https://openrouter.ai/api/v1
2025-04-06 00:35:55 - INFO - [llm_engine.py:29] - Using model: google/gemini-2.5-pro-exp-03-25:free
2025-04-06 00:35:55 - INFO - [llm_engine.py:37] - LLM Engine initialized successfully
2025-04-06 00:35:55 - INFO - [azure_client.py:11] - Initializing Azure AI Client using LLM Engine
2025-04-06 00:35:55 - INFO - [llm_engine.py:28] - Initializing LLM Engine with endpoint: https://openrouter.ai/api/v1
2025-04-06 00:35:55 - INFO - [llm_engine.py:29] - Using model: google/gemini-2.5-pro-exp-03-25:free
2025-04-06 00:35:55 - INFO - [llm_engine.py:37] - LLM Engine initialized successfully
2025-04-06 00:35:55 - INFO - [azure_client.py:17] - Azure AI Client initialized successfully
2025-04-06 00:35:55 - INFO - [database.py:38] - Database manager initialized with connection: sqlite:///text2sql.db
2025-04-06 00:35:55 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-04-06 00:36:03 - INFO - [database.py:44] - Attempting database connection
2025-04-06 00:36:03 - INFO - [database.py:48] - Database connection established in 0.00s
2025-04-06 00:36:03 - INFO - [llm_engine.py:56] - [TABLE] Completion generation started
2025-04-06 00:36:08 - INFO - [llm_engine.py:119] - [TABLE] Completion generation completed in 5.36s
2025-04-06 00:36:08 - INFO - [llm_engine.py:120] - **************************
2025-04-06 00:36:08 - INFO - [llm_engine.py:56] - [COLUMN] Completion generation started
2025-04-06 00:36:18 - INFO - [llm_engine.py:119] - [COLUMN] Completion generation completed in 9.77s
2025-04-06 00:36:18 - INFO - [llm_engine.py:120] - **************************
2025-04-06 00:36:18 - INFO - [feedback_manager.py:43] - Attempting database connection
2025-04-06 00:36:18 - INFO - [feedback_manager.py:47] - Database connection established in 0.00s
2025-04-06 00:36:18 - INFO - [feedback_manager.py:267] - Stage 1: Vector search for 'get me all the customers...'
2025-04-06 00:36:18 - INFO - [feedback_manager.py:62] - Loading embedding model 'sentence-transformers/all-MiniLM-L12-v2'
2025-04-06 00:36:21 - INFO - [feedback_manager.py:65] - Embedding model loaded in 2.90s
2025-04-06 00:36:21 - INFO - [feedback_manager.py:322] - Found 1 initial candidates from vector search
2025-04-06 00:36:21 - INFO - [feedback_manager.py:367] - Less than 3 candidates, skipping reranking
2025-04-06 00:36:21 - INFO - [azure_client.py:35] - SQL generation started for query: 'get me all the customers'
2025-04-06 00:36:21 - INFO - [azure_client.py:69] - Including schema information (576 chars)
2025-04-06 00:36:21 - INFO - [azure_client.py:76] - Including 1 join conditions
2025-04-06 00:36:21 - INFO - [azure_client.py:97] - Including 1 SQL examples from feedback similarity search
2025-04-06 00:36:21 - INFO - [azure_client.py:114] - PROMPT: [{'role': 'system', 'content': "You are an expert SQL assistant. Convert natural language questions into precise, executable SQL queries.\nYour task is to:\n1. Analyze the provided schema carefully, noting table relationships and column types\n2. Generate a SQL query that accurately answers the user's question\n3. Consider performance by selecting only necessary columns\n4. Use appropriate JOIN conditions based on primary/foreign key relationships or provided join conditions\n5. Include a brief explanation of your query\n\nRules:\n- Include table names and column references exactly as provided in the schema\n- Use appropriate SQL functions based on column data types\n- Consider NULL values in your conditions\n- Use table aliases for better readability when joining multiple tables\n- Add column aliases for computed values\n- Format the SQL query with proper indentation\n- If similar queries are provided, strictly use that as format or syntax\n- Return the SQL inside a code block tagged with ```sql\n\nExample output format:\nHere's a query that will [explanation]...\n\n```sql\nSELECT ...\nFROM ...\nWHERE ...\n```"}, {'role': 'user', 'content': "Here's the database schema:\nTable: customers\nDescription: Customer information and profiles\nColumns: customer_id (INTEGER): Unique customer identifier, first_name (TEXT): Customer's first name, last_name (TEXT): Customer's last name, email (TEXT): Customer's email address (unique), phone (TEXT): Customer's phone number, address (TEXT): Customer's street address, city (TEXT): Customer's city, state (TEXT): Customer's state/province, country (TEXT): Customer's country, postal_code (TEXT): Customer's postal/zip code, registration_date (TEXT): Date when customer registered\nPrimary Key(s): customer_id\n"}, {'role': 'user', 'content': 'Use the following pre-defined join conditions when joining these tables:\n- When joining customers with customers, use: LEFT JOIN customers ON a=a\n'}, {'role': 'user', 'content': 'Here are some similar queries that were previously successful:\nQuestion: get me all the customers\nSQL: SELECT * FROM customers;\n\n'}, {'role': 'user', 'content': 'Convert this question to SQL: get me all the customers'}]
2025-04-06 00:36:21 - INFO - [llm_engine.py:56] - [SQL_GEN] Completion generation started
2025-04-06 00:36:28 - INFO - [llm_engine.py:119] - [SQL_GEN] Completion generation completed in 7.13s
2025-04-06 00:36:28 - INFO - [llm_engine.py:120] - **************************
2025-04-06 00:36:28 - INFO - [azure_client.py:150] - Parsing SQL from model response
2025-04-06 00:36:28 - INFO - [azure_client.py:157] - Found SQL code block in response
2025-04-06 00:36:28 - INFO - [azure_client.py:171] - Extracted SQL query (24 chars) and explanation (88 chars)
2025-04-06 00:36:28 - INFO - [azure_client.py:124] - Generated SQL: SELECT * FROM customers;
2025-04-06 00:36:28,544 - QUERY: 'get me all the customers' → SQL: SELECT * FROM customers;
2025-04-06 00:36:28 - INFO - [azure_client.py:132] - SQL generation completed in 7.15s
2025-04-06 00:36:28 - INFO - [database.py:65] - Executing SQL query: SELECT * FROM customers;
2025-04-06 00:36:28 - INFO - [database.py:86] - Query returned 5 rows with 11 columns
2025-04-06 00:36:28 - INFO - [database.py:95] - Query processing completed in 0.02s
2025-04-06 00:38:23 - INFO - [azure_client.py:186] - Closing Azure AI client connection
2025-04-06 00:38:23 - INFO - [database.py:258] - Closing database connection
2025-04-06 00:38:23 - INFO - [feedback_manager.py:668] - Closing database connection
2025-04-06 00:38:24 - INFO - [azure_client.py:186] - Closing Azure AI client connection
2025-04-06 00:38:24 - INFO - [database.py:258] - Closing database connection
2025-04-06 00:38:24 - INFO - [feedback_manager.py:668] - Closing database connection
2025-04-06 00:38:30 - INFO - [app.py:66] - Debug logging enabled for SQL generator and agents
2025-04-06 00:38:30 - INFO - [llm_engine.py:28] - Initializing LLM Engine with endpoint: https://openrouter.ai/api/v1
2025-04-06 00:38:30 - INFO - [llm_engine.py:29] - Using model: openrouter/quasar-alpha
2025-04-06 00:38:30 - INFO - [llm_engine.py:37] - LLM Engine initialized successfully
2025-04-06 00:38:30 - INFO - [llm_engine.py:28] - Initializing LLM Engine with endpoint: https://openrouter.ai/api/v1
2025-04-06 00:38:30 - INFO - [llm_engine.py:29] - Using model: openrouter/quasar-alpha
2025-04-06 00:38:30 - INFO - [llm_engine.py:37] - LLM Engine initialized successfully
2025-04-06 00:38:30 - INFO - [llm_engine.py:28] - Initializing LLM Engine with endpoint: https://openrouter.ai/api/v1
2025-04-06 00:38:30 - INFO - [llm_engine.py:29] - Using model: openrouter/quasar-alpha
2025-04-06 00:38:30 - INFO - [llm_engine.py:37] - LLM Engine initialized successfully
2025-04-06 00:38:30 - INFO - [azure_client.py:11] - Initializing Azure AI Client using LLM Engine
2025-04-06 00:38:30 - INFO - [llm_engine.py:28] - Initializing LLM Engine with endpoint: https://openrouter.ai/api/v1
2025-04-06 00:38:30 - INFO - [llm_engine.py:29] - Using model: openrouter/quasar-alpha
2025-04-06 00:38:30 - INFO - [llm_engine.py:37] - LLM Engine initialized successfully
2025-04-06 00:38:30 - INFO - [azure_client.py:17] - Azure AI Client initialized successfully
2025-04-06 00:38:30 - INFO - [database.py:38] - Database manager initialized with connection: sqlite:///text2sql.db
2025-04-06 00:38:30 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-04-06 00:38:33 - INFO - [app.py:66] - Debug logging enabled for SQL generator and agents
2025-04-06 00:38:33 - INFO - [llm_engine.py:28] - Initializing LLM Engine with endpoint: https://openrouter.ai/api/v1
2025-04-06 00:38:33 - INFO - [llm_engine.py:29] - Using model: openrouter/quasar-alpha
2025-04-06 00:38:33 - INFO - [llm_engine.py:37] - LLM Engine initialized successfully
2025-04-06 00:38:33 - INFO - [llm_engine.py:28] - Initializing LLM Engine with endpoint: https://openrouter.ai/api/v1
2025-04-06 00:38:33 - INFO - [llm_engine.py:29] - Using model: openrouter/quasar-alpha
2025-04-06 00:38:33 - INFO - [llm_engine.py:37] - LLM Engine initialized successfully
2025-04-06 00:38:33 - INFO - [llm_engine.py:28] - Initializing LLM Engine with endpoint: https://openrouter.ai/api/v1
2025-04-06 00:38:33 - INFO - [llm_engine.py:29] - Using model: openrouter/quasar-alpha
2025-04-06 00:38:33 - INFO - [llm_engine.py:37] - LLM Engine initialized successfully
2025-04-06 00:38:33 - INFO - [azure_client.py:11] - Initializing Azure AI Client using LLM Engine
2025-04-06 00:38:33 - INFO - [llm_engine.py:28] - Initializing LLM Engine with endpoint: https://openrouter.ai/api/v1
2025-04-06 00:38:33 - INFO - [llm_engine.py:29] - Using model: openrouter/quasar-alpha
2025-04-06 00:38:33 - INFO - [llm_engine.py:37] - LLM Engine initialized successfully
2025-04-06 00:38:33 - INFO - [azure_client.py:17] - Azure AI Client initialized successfully
2025-04-06 00:38:33 - INFO - [database.py:38] - Database manager initialized with connection: sqlite:///text2sql.db
2025-04-06 00:38:33 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-04-06 00:38:46 - INFO - [database.py:44] - Attempting database connection
2025-04-06 00:38:46 - INFO - [database.py:48] - Database connection established in 0.00s
2025-04-06 00:38:46 - INFO - [llm_engine.py:56] - [TABLE] Completion generation started
2025-04-06 00:38:48 - INFO - [llm_engine.py:119] - [TABLE] Completion generation completed in 1.60s
2025-04-06 00:38:48 - INFO - [llm_engine.py:120] - **************************
2025-04-06 00:38:48 - INFO - [feedback_manager.py:43] - Attempting database connection
2025-04-06 00:38:48 - INFO - [feedback_manager.py:47] - Database connection established in 0.00s
2025-04-06 00:38:48 - INFO - [feedback_manager.py:267] - Stage 1: Vector search for 'get me all the customers...'
2025-04-06 00:38:48 - INFO - [feedback_manager.py:62] - Loading embedding model 'sentence-transformers/all-MiniLM-L12-v2'
2025-04-06 00:38:51 - INFO - [feedback_manager.py:65] - Embedding model loaded in 2.96s
2025-04-06 00:38:51 - INFO - [feedback_manager.py:322] - Found 1 initial candidates from vector search
2025-04-06 00:38:51 - INFO - [feedback_manager.py:367] - Less than 3 candidates, skipping reranking
2025-04-06 00:38:51 - INFO - [azure_client.py:35] - SQL generation started for query: 'get me all the customers'
2025-04-06 00:38:51 - INFO - [azure_client.py:69] - Including schema information (587 chars)
2025-04-06 00:38:51 - INFO - [azure_client.py:97] - Including 1 SQL examples from feedback similarity search
2025-04-06 00:38:51 - INFO - [azure_client.py:114] - PROMPT: [{'role': 'system', 'content': "You are an expert SQL assistant. Convert natural language questions into precise, executable SQL queries.\nYour task is to:\n1. Analyze the provided schema carefully, noting table relationships and column types\n2. Generate a SQL query that accurately answers the user's question\n3. Consider performance by selecting only necessary columns\n4. Use appropriate JOIN conditions based on primary/foreign key relationships or provided join conditions\n5. Include a brief explanation of your query\n\nRules:\n- Include table names and column references exactly as provided in the schema\n- Use appropriate SQL functions based on column data types\n- Consider NULL values in your conditions\n- Use table aliases for better readability when joining multiple tables\n- Add column aliases for computed values\n- Format the SQL query with proper indentation\n- If similar queries are provided, strictly use that as format or syntax\n- Return the SQL inside a code block tagged with ```sql\n\nExample output format:\nHere's a query that will [explanation]...\n\n```sql\nSELECT ...\nFROM ...\nWHERE ...\n```"}, {'role': 'user', 'content': "Here's the database schema:\nTable: customers\nDescription: Customer information and profiles\nColumns: customer_id (INTEGER) - Unique customer identifier, first_name (TEXT) - Customer's first name, last_name (TEXT) - Customer's last name, email (TEXT) - Customer's email address (unique), phone (TEXT) - Customer's phone number, address (TEXT) - Customer's street address, city (TEXT) - Customer's city, state (TEXT) - Customer's state/province, country (TEXT) - Customer's country, postal_code (TEXT) - Customer's postal/zip code, registration_date (TEXT) - Date when customer registered\nPrimary Key(s): customer_id\n"}, {'role': 'user', 'content': 'Here are some similar queries that were previously successful:\nQuestion: get me all the customers\nSQL: SELECT * FROM customers;\n\n'}, {'role': 'user', 'content': 'Convert this question to SQL: get me all the customers'}]
2025-04-06 00:38:51 - INFO - [llm_engine.py:56] - [SQL_GEN] Completion generation started
2025-04-06 00:38:53 - INFO - [llm_engine.py:119] - [SQL_GEN] Completion generation completed in 2.17s
2025-04-06 00:38:53 - INFO - [llm_engine.py:120] - **************************
2025-04-06 00:38:53 - INFO - [azure_client.py:150] - Parsing SQL from model response
2025-04-06 00:38:53 - INFO - [azure_client.py:157] - Found SQL code block in response
2025-04-06 00:38:53 - INFO - [azure_client.py:171] - Extracted SQL query (24 chars) and explanation (102 chars)
2025-04-06 00:38:53 - INFO - [azure_client.py:124] - Generated SQL: SELECT *
FROM customers;
2025-04-06 00:38:53,619 - QUERY: 'get me all the customers' → SQL: SELECT *
FROM customers;
2025-04-06 00:38:53 - INFO - [azure_client.py:132] - SQL generation completed in 2.21s
2025-04-06 00:38:53 - INFO - [database.py:65] - Executing SQL query: SELECT *
FROM customers;
2025-04-06 00:38:53 - INFO - [database.py:86] - Query returned 5 rows with 11 columns
2025-04-06 00:38:53 - INFO - [database.py:95] - Query processing completed in 0.01s
2025-04-06 00:41:30 - INFO - [azure_client.py:186] - Closing Azure AI client connection
2025-04-06 00:41:30 - INFO - [database.py:258] - Closing database connection
2025-04-06 00:41:30 - INFO - [feedback_manager.py:668] - Closing database connection
2025-04-06 00:41:34 - INFO - [app.py:66] - Debug logging enabled for SQL generator and agents
2025-04-06 00:41:34 - INFO - [llm_engine.py:28] - Initializing LLM Engine with endpoint: https://openrouter.ai/api/v1
2025-04-06 00:41:34 - INFO - [llm_engine.py:29] - Using model: google/gemini-2.0-flash-exp:free
2025-04-06 00:41:34 - INFO - [llm_engine.py:37] - LLM Engine initialized successfully
2025-04-06 00:41:34 - INFO - [llm_engine.py:28] - Initializing LLM Engine with endpoint: https://openrouter.ai/api/v1
2025-04-06 00:41:34 - INFO - [llm_engine.py:29] - Using model: google/gemini-2.0-flash-exp:free
2025-04-06 00:41:34 - INFO - [llm_engine.py:37] - LLM Engine initialized successfully
2025-04-06 00:41:34 - INFO - [llm_engine.py:28] - Initializing LLM Engine with endpoint: https://openrouter.ai/api/v1
2025-04-06 00:41:34 - INFO - [llm_engine.py:29] - Using model: google/gemini-2.0-flash-exp:free
2025-04-06 00:41:34 - INFO - [llm_engine.py:37] - LLM Engine initialized successfully
2025-04-06 00:41:34 - INFO - [azure_client.py:11] - Initializing Azure AI Client using LLM Engine
2025-04-06 00:41:34 - INFO - [llm_engine.py:28] - Initializing LLM Engine with endpoint: https://openrouter.ai/api/v1
2025-04-06 00:41:34 - INFO - [llm_engine.py:29] - Using model: google/gemini-2.0-flash-exp:free
2025-04-06 00:41:34 - INFO - [llm_engine.py:37] - LLM Engine initialized successfully
2025-04-06 00:41:34 - INFO - [azure_client.py:17] - Azure AI Client initialized successfully
2025-04-06 00:41:34 - INFO - [database.py:38] - Database manager initialized with connection: sqlite:///text2sql.db
2025-04-06 00:41:34 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-04-06 00:41:49 - INFO - [database.py:44] - Attempting database connection
2025-04-06 00:41:49 - INFO - [database.py:48] - Database connection established in 0.00s
2025-04-06 00:41:49 - INFO - [llm_engine.py:56] - [TABLE] Completion generation started
2025-04-06 00:41:55 - INFO - [llm_engine.py:119] - [TABLE] Completion generation completed in 6.02s
2025-04-06 00:41:55 - INFO - [llm_engine.py:120] - **************************
2025-04-06 00:41:55 - INFO - [llm_engine.py:56] - [COLUMN] Completion generation started
2025-04-06 00:42:10 - INFO - [llm_engine.py:119] - [COLUMN] Completion generation completed in 14.77s
2025-04-06 00:42:10 - INFO - [llm_engine.py:120] - **************************
2025-04-06 00:42:10 - INFO - [feedback_manager.py:43] - Attempting database connection
2025-04-06 00:42:10 - INFO - [feedback_manager.py:47] - Database connection established in 0.00s
2025-04-06 00:42:10 - INFO - [feedback_manager.py:267] - Stage 1: Vector search for 'get me all the customers...'
2025-04-06 00:42:10 - INFO - [feedback_manager.py:62] - Loading embedding model 'sentence-transformers/all-MiniLM-L12-v2'
2025-04-06 00:42:13 - INFO - [feedback_manager.py:65] - Embedding model loaded in 3.04s
2025-04-06 00:42:13 - INFO - [feedback_manager.py:322] - Found 1 initial candidates from vector search
2025-04-06 00:42:13 - INFO - [feedback_manager.py:367] - Less than 3 candidates, skipping reranking
2025-04-06 00:42:13 - INFO - [azure_client.py:35] - SQL generation started for query: 'get me all the customers'
2025-04-06 00:42:13 - INFO - [azure_client.py:69] - Including schema information (576 chars)
2025-04-06 00:42:13 - INFO - [azure_client.py:76] - Including 1 join conditions
2025-04-06 00:42:13 - INFO - [azure_client.py:97] - Including 1 SQL examples from feedback similarity search
2025-04-06 00:42:13 - INFO - [azure_client.py:114] - PROMPT: [{'role': 'system', 'content': "You are an expert SQL assistant. Convert natural language questions into precise, executable SQL queries.\nYour task is to:\n1. Analyze the provided schema carefully, noting table relationships and column types\n2. Generate a SQL query that accurately answers the user's question\n3. Consider performance by selecting only necessary columns\n4. Use appropriate JOIN conditions based on primary/foreign key relationships or provided join conditions\n5. Include a brief explanation of your query\n\nRules:\n- Include table names and column references exactly as provided in the schema\n- Use appropriate SQL functions based on column data types\n- Consider NULL values in your conditions\n- Use table aliases for better readability when joining multiple tables\n- Add column aliases for computed values\n- Format the SQL query with proper indentation\n- If similar queries are provided, strictly use that as format or syntax\n- Return the SQL inside a code block tagged with ```sql\n\nExample output format:\nHere's a query that will [explanation]...\n\n```sql\nSELECT ...\nFROM ...\nWHERE ...\n```"}, {'role': 'user', 'content': "Here's the database schema:\nTable: customers\nDescription: Customer information and profiles\nColumns: customer_id (INTEGER): Unique customer identifier, first_name (TEXT): Customer's first name, last_name (TEXT): Customer's last name, email (TEXT): Customer's email address (unique), phone (TEXT): Customer's phone number, address (TEXT): Customer's street address, city (TEXT): Customer's city, state (TEXT): Customer's state/province, country (TEXT): Customer's country, postal_code (TEXT): Customer's postal/zip code, registration_date (TEXT): Date when customer registered\nPrimary Key(s): customer_id\n"}, {'role': 'user', 'content': 'Use the following pre-defined join conditions when joining these tables:\n- When joining customers with customers, use: LEFT JOIN customers ON a=a\n'}, {'role': 'user', 'content': 'Here are some similar queries that were previously successful:\nQuestion: get me all the customers\nSQL: SELECT * FROM customers;\n\n'}, {'role': 'user', 'content': 'Convert this question to SQL: get me all the customers'}]
2025-04-06 00:42:13 - INFO - [llm_engine.py:56] - [SQL_GEN] Completion generation started
2025-04-06 00:42:16 - INFO - [llm_engine.py:119] - [SQL_GEN] Completion generation completed in 2.76s
2025-04-06 00:42:16 - INFO - [llm_engine.py:120] - **************************
2025-04-06 00:42:16 - INFO - [azure_client.py:150] - Parsing SQL from model response
2025-04-06 00:42:16 - INFO - [azure_client.py:157] - Found SQL code block in response
2025-04-06 00:42:16 - INFO - [azure_client.py:171] - Extracted SQL query (24 chars) and explanation (128 chars)
2025-04-06 00:42:16 - INFO - [azure_client.py:124] - Generated SQL: SELECT * FROM customers;
2025-04-06 00:42:16,643 - QUERY: 'get me all the customers' → SQL: SELECT * FROM customers;
2025-04-06 00:42:16 - INFO - [azure_client.py:132] - SQL generation completed in 2.78s
2025-04-06 00:42:16 - INFO - [database.py:65] - Executing SQL query: SELECT * FROM customers;
2025-04-06 00:42:16 - INFO - [database.py:86] - Query returned 5 rows with 11 columns
2025-04-06 00:42:16 - INFO - [database.py:95] - Query processing completed in 0.01s
2025-04-06 00:45:18 - INFO - [azure_client.py:186] - Closing Azure AI client connection
2025-04-06 00:45:18 - INFO - [database.py:258] - Closing database connection
2025-04-06 00:45:18 - INFO - [feedback_manager.py:668] - Closing database connection
2025-04-06 00:45:23 - INFO - [app.py:66] - Debug logging enabled for SQL generator and agents
2025-04-06 00:45:23 - INFO - [llm_engine.py:28] - Initializing LLM Engine with endpoint: https://openrouter.ai/api/v1
2025-04-06 00:45:23 - INFO - [llm_engine.py:29] - Using model: openrouter/quasar-alpha
2025-04-06 00:45:23 - INFO - [llm_engine.py:37] - LLM Engine initialized successfully
2025-04-06 00:45:23 - INFO - [llm_engine.py:28] - Initializing LLM Engine with endpoint: https://openrouter.ai/api/v1
2025-04-06 00:45:23 - INFO - [llm_engine.py:29] - Using model: openrouter/quasar-alpha
2025-04-06 00:45:23 - INFO - [llm_engine.py:37] - LLM Engine initialized successfully
2025-04-06 00:45:23 - INFO - [llm_engine.py:28] - Initializing LLM Engine with endpoint: https://openrouter.ai/api/v1
2025-04-06 00:45:23 - INFO - [llm_engine.py:29] - Using model: openrouter/quasar-alpha
2025-04-06 00:45:23 - INFO - [llm_engine.py:37] - LLM Engine initialized successfully
2025-04-06 00:45:23 - INFO - [azure_client.py:11] - Initializing Azure AI Client using LLM Engine
2025-04-06 00:45:23 - INFO - [llm_engine.py:28] - Initializing LLM Engine with endpoint: https://openrouter.ai/api/v1
2025-04-06 00:45:23 - INFO - [llm_engine.py:29] - Using model: openrouter/quasar-alpha
2025-04-06 00:45:23 - INFO - [llm_engine.py:37] - LLM Engine initialized successfully
2025-04-06 00:45:23 - INFO - [azure_client.py:17] - Azure AI Client initialized successfully
2025-04-06 00:45:23 - INFO - [database.py:38] - Database manager initialized with connection: sqlite:///text2sql.db
2025-04-06 00:45:23 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-04-06 00:45:48 - INFO - [database.py:44] - Attempting database connection
2025-04-06 00:45:48 - INFO - [database.py:48] - Database connection established in 0.00s
2025-04-06 00:45:48 - INFO - [llm_engine.py:56] - [TABLE] Completion generation started
2025-04-06 00:45:50 - INFO - [llm_engine.py:119] - [TABLE] Completion generation completed in 1.52s
2025-04-06 00:45:50 - INFO - [llm_engine.py:120] - **************************
2025-04-06 00:45:50 - INFO - [llm_engine.py:56] - [COLUMN] Completion generation started
2025-04-06 00:45:51 - INFO - [llm_engine.py:119] - [COLUMN] Completion generation completed in 1.50s
2025-04-06 00:45:51 - INFO - [llm_engine.py:120] - **************************
2025-04-06 00:45:51 - INFO - [feedback_manager.py:43] - Attempting database connection
2025-04-06 00:45:51 - INFO - [feedback_manager.py:47] - Database connection established in 0.00s
2025-04-06 00:45:51 - INFO - [feedback_manager.py:267] - Stage 1: Vector search for 'get me count of customers by order date...'
2025-04-06 00:45:51 - INFO - [feedback_manager.py:62] - Loading embedding model 'sentence-transformers/all-MiniLM-L12-v2'
2025-04-06 00:45:54 - INFO - [feedback_manager.py:65] - Embedding model loaded in 2.51s
2025-04-06 00:45:54 - INFO - [feedback_manager.py:322] - Found 1 initial candidates from vector search
2025-04-06 00:45:54 - INFO - [feedback_manager.py:367] - Less than 3 candidates, skipping reranking
2025-04-06 00:45:54 - INFO - [azure_client.py:35] - SQL generation started for query: 'get me count of customers by order date'
2025-04-06 00:45:54 - INFO - [azure_client.py:69] - Including schema information (404 chars)
2025-04-06 00:45:54 - INFO - [azure_client.py:76] - Including 2 join conditions
2025-04-06 00:45:54 - INFO - [azure_client.py:97] - Including 1 SQL examples from feedback similarity search
2025-04-06 00:45:54 - INFO - [azure_client.py:114] - PROMPT: [{'role': 'system', 'content': "You are an expert SQL assistant. Convert natural language questions into precise, executable SQL queries.\nYour task is to:\n1. Analyze the provided schema carefully, noting table relationships and column types\n2. Generate a SQL query that accurately answers the user's question\n3. Consider performance by selecting only necessary columns\n4. Use appropriate JOIN conditions based on primary/foreign key relationships or provided join conditions\n5. Include a brief explanation of your query\n\nRules:\n- Include table names and column references exactly as provided in the schema\n- Use appropriate SQL functions based on column data types\n- Consider NULL values in your conditions\n- Use table aliases for better readability when joining multiple tables\n- Add column aliases for computed values\n- Format the SQL query with proper indentation\n- If similar queries are provided, strictly use that as format or syntax\n- Return the SQL inside a code block tagged with ```sql\n\nExample output format:\nHere's a query that will [explanation]...\n\n```sql\nSELECT ...\nFROM ...\nWHERE ...\n```"}, {'role': 'user', 'content': "Here's the database schema:\nTable: orders\nDescription: Customer orders and transactions\nColumns: order_id (INTEGER): Unique order identifier, customer_id (INTEGER): Reference to customer who placed the order, order_date (TEXT): Date when order was placed\nPrimary Key(s): order_id\n\nTable: customers\nDescription: Customer information and profiles\nColumns: customer_id (INTEGER): Unique customer identifier\nPrimary Key(s): customer_id\n"}, {'role': 'user', 'content': 'Use the following pre-defined join conditions when joining these tables:\n- When joining customers with orders, use: INNER JOIN orders ON customers.customer_id = orders.customer_id\n- When joining customers with customers, use: LEFT JOIN customers ON a=a\n'}, {'role': 'user', 'content': 'Here are some similar queries that were previously successful:\nQuestion: get me all the customers\nSQL: SELECT * FROM customers;\n\n'}, {'role': 'user', 'content': 'Convert this question to SQL: get me count of customers by order date'}]
2025-04-06 00:45:54 - INFO - [llm_engine.py:56] - [SQL_GEN] Completion generation started
2025-04-06 00:45:56 - INFO - [llm_engine.py:119] - [SQL_GEN] Completion generation completed in 1.66s
2025-04-06 00:45:56 - INFO - [llm_engine.py:120] - **************************
2025-04-06 00:45:56 - INFO - [azure_client.py:150] - Parsing SQL from model response
2025-04-06 00:45:56 - INFO - [azure_client.py:157] - Found SQL code block in response
2025-04-06 00:45:56 - INFO - [azure_client.py:171] - Extracted SQL query (170 chars) and explanation (151 chars)
2025-04-06 00:45:56 - INFO - [azure_client.py:124] - Generated SQL: SELECT 
    o.order_date,
    COUNT(DISTINCT c.customer_id) AS customer_count
FROM customers c
INNER JOIN orders o ON c.customer_id = o.customer_id
GROUP BY o.order_date;
2025-04-06 00:45:56,015 - QUERY: 'get me count of customers by order date' → SQL: SELECT 
    o.order_date,
    COUNT(DISTINCT c.customer_id) AS customer_count
FROM customers c
INNER JOIN orders o ON c.customer_id = o.customer_id
GROUP BY o.order_date;
2025-04-06 00:45:56 - INFO - [azure_client.py:132] - SQL generation completed in 1.67s
2025-04-06 00:45:56 - INFO - [database.py:65] - Executing SQL query: SELECT 
    o.order_date,
    COUNT(DISTINCT c.customer_id) AS customer_count
FROM customers c
INNER JOIN orders o ON c.customer_id = o.customer_id
GROUP BY o.order_date;
2025-04-06 00:45:56 - INFO - [database.py:86] - Query returned 8 rows with 2 columns
2025-04-06 00:45:56 - INFO - [database.py:95] - Query processing completed in 0.01s
2025-04-06 00:46:55 - INFO - [azure_client.py:186] - Closing Azure AI client connection
2025-04-06 00:46:55 - INFO - [database.py:258] - Closing database connection
2025-04-06 00:46:55 - INFO - [feedback_manager.py:668] - Closing database connection
2025-04-06 00:47:00 - INFO - [app.py:66] - Debug logging enabled for SQL generator and agents
2025-04-06 00:47:00 - INFO - [llm_engine.py:28] - Initializing LLM Engine with endpoint: https://openrouter.ai/api/v1
2025-04-06 00:47:00 - INFO - [llm_engine.py:29] - Using model: google/gemini-2.5-pro-exp-03-25:free
2025-04-06 00:47:00 - INFO - [llm_engine.py:37] - LLM Engine initialized successfully
2025-04-06 00:47:00 - INFO - [llm_engine.py:28] - Initializing LLM Engine with endpoint: https://openrouter.ai/api/v1
2025-04-06 00:47:00 - INFO - [llm_engine.py:29] - Using model: google/gemini-2.5-pro-exp-03-25:free
2025-04-06 00:47:00 - INFO - [llm_engine.py:37] - LLM Engine initialized successfully
2025-04-06 00:47:00 - INFO - [llm_engine.py:28] - Initializing LLM Engine with endpoint: https://openrouter.ai/api/v1
2025-04-06 00:47:00 - INFO - [llm_engine.py:29] - Using model: google/gemini-2.5-pro-exp-03-25:free
2025-04-06 00:47:00 - INFO - [llm_engine.py:37] - LLM Engine initialized successfully
2025-04-06 00:47:00 - INFO - [azure_client.py:11] - Initializing Azure AI Client using LLM Engine
2025-04-06 00:47:00 - INFO - [llm_engine.py:28] - Initializing LLM Engine with endpoint: https://openrouter.ai/api/v1
2025-04-06 00:47:00 - INFO - [llm_engine.py:29] - Using model: google/gemini-2.5-pro-exp-03-25:free
2025-04-06 00:47:00 - INFO - [llm_engine.py:37] - LLM Engine initialized successfully
2025-04-06 00:47:00 - INFO - [azure_client.py:17] - Azure AI Client initialized successfully
2025-04-06 00:47:00 - INFO - [database.py:38] - Database manager initialized with connection: sqlite:///text2sql.db
2025-04-06 00:47:00 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-04-06 00:47:03 - INFO - [database.py:44] - Attempting database connection
2025-04-06 00:47:03 - INFO - [database.py:48] - Database connection established in 0.00s
2025-04-06 00:47:03 - INFO - [llm_engine.py:56] - [TABLE] Completion generation started
2025-04-06 00:47:10 - INFO - [llm_engine.py:119] - [TABLE] Completion generation completed in 7.72s
2025-04-06 00:47:10 - INFO - [llm_engine.py:120] - **************************
2025-04-06 00:47:10 - INFO - [feedback_manager.py:43] - Attempting database connection
2025-04-06 00:47:10 - INFO - [feedback_manager.py:47] - Database connection established in 0.00s
2025-04-06 00:47:10 - INFO - [feedback_manager.py:267] - Stage 1: Vector search for 'get me count of customers by order date...'
2025-04-06 00:47:10 - INFO - [feedback_manager.py:62] - Loading embedding model 'sentence-transformers/all-MiniLM-L12-v2'
2025-04-06 00:47:13 - INFO - [feedback_manager.py:65] - Embedding model loaded in 2.57s
2025-04-06 00:47:13 - INFO - [feedback_manager.py:322] - Found 1 initial candidates from vector search
2025-04-06 00:47:13 - INFO - [feedback_manager.py:367] - Less than 3 candidates, skipping reranking
2025-04-06 00:47:13 - INFO - [azure_client.py:35] - SQL generation started for query: 'get me count of customers by order date'
2025-04-06 00:47:13 - INFO - [azure_client.py:69] - Including schema information (363 chars)
2025-04-06 00:47:13 - INFO - [azure_client.py:97] - Including 1 SQL examples from feedback similarity search
2025-04-06 00:47:13 - INFO - [azure_client.py:114] - PROMPT: [{'role': 'system', 'content': "You are an expert SQL assistant. Convert natural language questions into precise, executable SQL queries.\nYour task is to:\n1. Analyze the provided schema carefully, noting table relationships and column types\n2. Generate a SQL query that accurately answers the user's question\n3. Consider performance by selecting only necessary columns\n4. Use appropriate JOIN conditions based on primary/foreign key relationships or provided join conditions\n5. Include a brief explanation of your query\n\nRules:\n- Include table names and column references exactly as provided in the schema\n- Use appropriate SQL functions based on column data types\n- Consider NULL values in your conditions\n- Use table aliases for better readability when joining multiple tables\n- Add column aliases for computed values\n- Format the SQL query with proper indentation\n- If similar queries are provided, strictly use that as format or syntax\n- Return the SQL inside a code block tagged with ```sql\n\nExample output format:\nHere's a query that will [explanation]...\n\n```sql\nSELECT ...\nFROM ...\nWHERE ...\n```"}, {'role': 'user', 'content': "Here's the database schema:\nTable: orders\nDescription: Customer orders and transactions\nColumns: order_id (INTEGER) - Unique order identifier, customer_id (INTEGER) - Reference to customer who placed the order, order_date (TEXT) - Date when order was placed, status (TEXT) - Order status (pending, shipped, completed, etc.), total_amount (REAL) - Total order amount\nPrimary Key(s): order_id\n"}, {'role': 'user', 'content': 'Here are some similar queries that were previously successful:\nQuestion: get me all the customers\nSQL: SELECT * FROM customers;\n\n'}, {'role': 'user', 'content': 'Convert this question to SQL: get me count of customers by order date'}]
2025-04-06 00:47:13 - INFO - [llm_engine.py:56] - [SQL_GEN] Completion generation started
2025-04-06 00:47:16 - ERROR - [llm_engine.py:125] - [SQL_GEN] Completion generation error after 2.92s: 'NoneType' object is not subscriptable
Traceback (most recent call last):
  File "/home/vijay/text2sql/src/utils/llm_engine.py", line 110, in generate_completion
    completion_text = response.choices[0].message.content
                      ~~~~~~~~~~~~~~~~^^^
TypeError: 'NoneType' object is not subscriptable
2025-04-06 00:47:16 - ERROR - [azure_client.py:138] - SQL generation error after 2.92s: 'NoneType' object is not subscriptable
Traceback (most recent call last):
  File "/home/vijay/text2sql/src/utils/azure_client.py", line 117, in generate_sql
    raw_response = self.llm_engine.generate_completion(messages, log_prefix="SQL_GEN")
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/text2sql/src/utils/llm_engine.py", line 110, in generate_completion
    completion_text = response.choices[0].message.content
                      ~~~~~~~~~~~~~~~~^^^
TypeError: 'NoneType' object is not subscriptable
2025-04-06 00:47:25 - INFO - [database.py:44] - Attempting database connection
2025-04-06 00:47:25 - INFO - [database.py:48] - Database connection established in 0.00s
2025-04-06 00:47:25 - INFO - [llm_engine.py:56] - [TABLE] Completion generation started
2025-04-06 00:47:28 - ERROR - [llm_engine.py:125] - [TABLE] Completion generation error after 2.94s: 'NoneType' object is not subscriptable
Traceback (most recent call last):
  File "/home/vijay/text2sql/src/utils/llm_engine.py", line 110, in generate_completion
    completion_text = response.choices[0].message.content
                      ~~~~~~~~~~~~~~~~^^^
TypeError: 'NoneType' object is not subscriptable
2025-04-06 00:47:28 - INFO - [llm_engine.py:56] - [COLUMN] Completion generation started
2025-04-06 00:47:34 - INFO - [llm_engine.py:119] - [COLUMN] Completion generation completed in 5.92s
2025-04-06 00:47:34 - INFO - [llm_engine.py:120] - **************************
2025-04-06 00:47:34 - ERROR - [background_tasks.py:62] - Exception while processing query: 'join_type'
Traceback (most recent call last):
  File "/home/vijay/text2sql/src/utils/background_tasks.py", line 39, in process_in_background
    result = self.sql_manager.process_query(
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/text2sql/src/models/sql_generator.py", line 71, in process_query
    sql_result = self._generate_sql(query, workspaces, explicit_tables, progress_callback)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/text2sql/src/models/sql_generator.py", line 222, in _generate_sql
    join_info = "\n".join([
                          ^
  File "/home/vijay/text2sql/src/models/sql_generator.py", line 224, in <listcomp>
    f"{join['join_type']} JOIN on {join['condition']}"
       ~~~~^^^^^^^^^^^^^
KeyError: 'join_type'
2025-04-06 00:47:40 - INFO - [azure_client.py:186] - Closing Azure AI client connection
2025-04-06 00:47:40 - INFO - [database.py:258] - Closing database connection
2025-04-06 00:47:40 - INFO - [feedback_manager.py:668] - Closing database connection
2025-04-06 00:47:44 - INFO - [app.py:66] - Debug logging enabled for SQL generator and agents
2025-04-06 00:47:44 - INFO - [llm_engine.py:28] - Initializing LLM Engine with endpoint: https://openrouter.ai/api/v1
2025-04-06 00:47:44 - INFO - [llm_engine.py:29] - Using model: openrouter/quasar-alpha
2025-04-06 00:47:44 - INFO - [llm_engine.py:37] - LLM Engine initialized successfully
2025-04-06 00:47:44 - INFO - [llm_engine.py:28] - Initializing LLM Engine with endpoint: https://openrouter.ai/api/v1
2025-04-06 00:47:44 - INFO - [llm_engine.py:29] - Using model: openrouter/quasar-alpha
2025-04-06 00:47:44 - INFO - [llm_engine.py:37] - LLM Engine initialized successfully
2025-04-06 00:47:44 - INFO - [llm_engine.py:28] - Initializing LLM Engine with endpoint: https://openrouter.ai/api/v1
2025-04-06 00:47:44 - INFO - [llm_engine.py:29] - Using model: openrouter/quasar-alpha
2025-04-06 00:47:44 - INFO - [llm_engine.py:37] - LLM Engine initialized successfully
2025-04-06 00:47:44 - INFO - [azure_client.py:11] - Initializing Azure AI Client using LLM Engine
2025-04-06 00:47:44 - INFO - [llm_engine.py:28] - Initializing LLM Engine with endpoint: https://openrouter.ai/api/v1
2025-04-06 00:47:44 - INFO - [llm_engine.py:29] - Using model: openrouter/quasar-alpha
2025-04-06 00:47:44 - INFO - [llm_engine.py:37] - LLM Engine initialized successfully
2025-04-06 00:47:44 - INFO - [azure_client.py:17] - Azure AI Client initialized successfully
2025-04-06 00:47:44 - INFO - [database.py:38] - Database manager initialized with connection: sqlite:///text2sql.db
2025-04-06 00:47:44 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-04-06 00:47:47 - INFO - [database.py:44] - Attempting database connection
2025-04-06 00:47:47 - INFO - [database.py:48] - Database connection established in 0.00s
2025-04-06 00:47:47 - INFO - [llm_engine.py:56] - [TABLE] Completion generation started
2025-04-06 00:47:48 - INFO - [llm_engine.py:119] - [TABLE] Completion generation completed in 1.61s
2025-04-06 00:47:48 - INFO - [llm_engine.py:120] - **************************
2025-04-06 00:47:48 - INFO - [llm_engine.py:56] - [COLUMN] Completion generation started
2025-04-06 00:47:50 - INFO - [llm_engine.py:119] - [COLUMN] Completion generation completed in 1.51s
2025-04-06 00:47:50 - INFO - [llm_engine.py:120] - **************************
2025-04-06 00:47:50 - INFO - [feedback_manager.py:43] - Attempting database connection
2025-04-06 00:47:50 - INFO - [feedback_manager.py:47] - Database connection established in 0.00s
2025-04-06 00:47:50 - INFO - [feedback_manager.py:267] - Stage 1: Vector search for 'get me count of customers by order date...'
2025-04-06 00:47:50 - INFO - [feedback_manager.py:62] - Loading embedding model 'sentence-transformers/all-MiniLM-L12-v2'
2025-04-06 00:47:53 - INFO - [feedback_manager.py:65] - Embedding model loaded in 3.08s
2025-04-06 00:47:53 - INFO - [feedback_manager.py:322] - Found 1 initial candidates from vector search
2025-04-06 00:47:53 - INFO - [feedback_manager.py:367] - Less than 3 candidates, skipping reranking
2025-04-06 00:47:53 - INFO - [azure_client.py:35] - SQL generation started for query: 'get me count of customers by order date'
2025-04-06 00:47:53 - INFO - [azure_client.py:69] - Including schema information (404 chars)
2025-04-06 00:47:53 - INFO - [azure_client.py:76] - Including 2 join conditions
2025-04-06 00:47:53 - INFO - [azure_client.py:97] - Including 1 SQL examples from feedback similarity search
2025-04-06 00:47:53 - INFO - [azure_client.py:114] - PROMPT: [{'role': 'system', 'content': "You are an expert SQL assistant. Convert natural language questions into precise, executable SQL queries.\nYour task is to:\n1. Analyze the provided schema carefully, noting table relationships and column types\n2. Generate a SQL query that accurately answers the user's question\n3. Consider performance by selecting only necessary columns\n4. Use appropriate JOIN conditions based on primary/foreign key relationships or provided join conditions\n5. Include a brief explanation of your query\n\nRules:\n- Include table names and column references exactly as provided in the schema\n- Use appropriate SQL functions based on column data types\n- Consider NULL values in your conditions\n- Use table aliases for better readability when joining multiple tables\n- Add column aliases for computed values\n- Format the SQL query with proper indentation\n- If similar queries are provided, strictly use that as format or syntax\n- Return the SQL inside a code block tagged with ```sql\n\nExample output format:\nHere's a query that will [explanation]...\n\n```sql\nSELECT ...\nFROM ...\nWHERE ...\n```"}, {'role': 'user', 'content': "Here's the database schema:\nTable: orders\nDescription: Customer orders and transactions\nColumns: order_id (INTEGER): Unique order identifier, customer_id (INTEGER): Reference to customer who placed the order, order_date (TEXT): Date when order was placed\nPrimary Key(s): order_id\n\nTable: customers\nDescription: Customer information and profiles\nColumns: customer_id (INTEGER): Unique customer identifier\nPrimary Key(s): customer_id\n"}, {'role': 'user', 'content': 'Use the following pre-defined join conditions when joining these tables:\n- When joining customers with orders, use: INNER JOIN orders ON customers.customer_id = orders.customer_id\n- When joining customers with customers, use: LEFT JOIN customers ON a=a\n'}, {'role': 'user', 'content': 'Here are some similar queries that were previously successful:\nQuestion: get me all the customers\nSQL: SELECT * FROM customers;\n\n'}, {'role': 'user', 'content': 'Convert this question to SQL: get me count of customers by order date'}]
2025-04-06 00:47:53 - INFO - [llm_engine.py:56] - [SQL_GEN] Completion generation started
2025-04-06 00:47:55 - INFO - [llm_engine.py:119] - [SQL_GEN] Completion generation completed in 1.78s
2025-04-06 00:47:55 - INFO - [llm_engine.py:120] - **************************
2025-04-06 00:47:55 - INFO - [azure_client.py:150] - Parsing SQL from model response
2025-04-06 00:47:55 - INFO - [azure_client.py:157] - Found SQL code block in response
2025-04-06 00:47:55 - INFO - [azure_client.py:171] - Extracted SQL query (197 chars) and explanation (87 chars)
2025-04-06 00:47:55 - INFO - [azure_client.py:124] - Generated SQL: SELECT 
    orders.order_date,
    COUNT(DISTINCT customers.customer_id) AS customer_count
FROM customers
INNER JOIN orders ON customers.customer_id = orders.customer_id
GROUP BY orders.order_date;
2025-04-06 00:47:55,397 - QUERY: 'get me count of customers by order date' → SQL: SELECT 
    orders.order_date,
    COUNT(DISTINCT customers.customer_id) AS customer_count
FROM customers
INNER JOIN orders ON customers.customer_id = orders.customer_id
GROUP BY orders.order_date;
2025-04-06 00:47:55 - INFO - [azure_client.py:132] - SQL generation completed in 1.82s
2025-04-06 00:47:55 - INFO - [database.py:65] - Executing SQL query: SELECT 
    orders.order_date,
    COUNT(DISTINCT customers.customer_id) AS customer_count
FROM customers
INNER JOIN orders ON customers.customer_id = orders.customer_id
GROUP BY orders.order_date;
2025-04-06 00:47:55 - INFO - [database.py:86] - Query returned 8 rows with 2 columns
2025-04-06 00:47:55 - INFO - [database.py:95] - Query processing completed in 0.01s
2025-04-06 00:48:20 - INFO - [database.py:44] - Attempting database connection
2025-04-06 00:48:20 - INFO - [database.py:48] - Database connection established in 0.00s
2025-04-06 00:48:20 - INFO - [llm_engine.py:56] - [TABLE] Completion generation started
2025-04-06 00:48:22 - INFO - [llm_engine.py:119] - [TABLE] Completion generation completed in 1.61s
2025-04-06 00:48:22 - INFO - [llm_engine.py:120] - **************************
2025-04-06 00:48:22 - INFO - [llm_engine.py:56] - [COLUMN] Completion generation started
2025-04-06 00:48:23 - INFO - [llm_engine.py:119] - [COLUMN] Completion generation completed in 1.38s
2025-04-06 00:48:23 - INFO - [llm_engine.py:120] - **************************
2025-04-06 00:48:23 - INFO - [feedback_manager.py:267] - Stage 1: Vector search for 'get me count of customers by order month...'
2025-04-06 00:48:23 - INFO - [feedback_manager.py:322] - Found 1 initial candidates from vector search
2025-04-06 00:48:23 - INFO - [feedback_manager.py:367] - Less than 3 candidates, skipping reranking
2025-04-06 00:48:23 - INFO - [azure_client.py:35] - SQL generation started for query: 'get me count of customers by order month'
2025-04-06 00:48:23 - INFO - [azure_client.py:69] - Including schema information (404 chars)
2025-04-06 00:48:23 - INFO - [azure_client.py:76] - Including 2 join conditions
2025-04-06 00:48:23 - INFO - [azure_client.py:97] - Including 1 SQL examples from feedback similarity search
2025-04-06 00:48:23 - INFO - [azure_client.py:114] - PROMPT: [{'role': 'system', 'content': "You are an expert SQL assistant. Convert natural language questions into precise, executable SQL queries.\nYour task is to:\n1. Analyze the provided schema carefully, noting table relationships and column types\n2. Generate a SQL query that accurately answers the user's question\n3. Consider performance by selecting only necessary columns\n4. Use appropriate JOIN conditions based on primary/foreign key relationships or provided join conditions\n5. Include a brief explanation of your query\n\nRules:\n- Include table names and column references exactly as provided in the schema\n- Use appropriate SQL functions based on column data types\n- Consider NULL values in your conditions\n- Use table aliases for better readability when joining multiple tables\n- Add column aliases for computed values\n- Format the SQL query with proper indentation\n- If similar queries are provided, strictly use that as format or syntax\n- Return the SQL inside a code block tagged with ```sql\n\nExample output format:\nHere's a query that will [explanation]...\n\n```sql\nSELECT ...\nFROM ...\nWHERE ...\n```"}, {'role': 'user', 'content': "Here's the database schema:\nTable: customers\nDescription: Customer information and profiles\nColumns: customer_id (INTEGER): Unique customer identifier\nPrimary Key(s): customer_id\n\nTable: orders\nDescription: Customer orders and transactions\nColumns: order_id (INTEGER): Unique order identifier, customer_id (INTEGER): Reference to customer who placed the order, order_date (TEXT): Date when order was placed\nPrimary Key(s): order_id\n"}, {'role': 'user', 'content': 'Use the following pre-defined join conditions when joining these tables:\n- When joining customers with orders, use: INNER JOIN orders ON customers.customer_id = orders.customer_id\n- When joining customers with customers, use: LEFT JOIN customers ON a=a\n'}, {'role': 'user', 'content': 'Here are some similar queries that were previously successful:\nQuestion: get me all the customers\nSQL: SELECT * FROM customers;\n\n'}, {'role': 'user', 'content': 'Convert this question to SQL: get me count of customers by order month'}]
2025-04-06 00:48:23 - INFO - [llm_engine.py:56] - [SQL_GEN] Completion generation started
2025-04-06 00:48:25 - INFO - [llm_engine.py:119] - [SQL_GEN] Completion generation completed in 1.51s
2025-04-06 00:48:25 - INFO - [llm_engine.py:120] - **************************
2025-04-06 00:48:25 - INFO - [azure_client.py:150] - Parsing SQL from model response
2025-04-06 00:48:25 - INFO - [azure_client.py:157] - Found SQL code block in response
2025-04-06 00:48:25 - INFO - [azure_client.py:171] - Extracted SQL query (244 chars) and explanation (189 chars)
2025-04-06 00:48:25 - INFO - [azure_client.py:124] - Generated SQL: SELECT 
    strftime('%Y-%m', o.order_date) AS order_month,
    COUNT(DISTINCT c.customer_id) AS customer_count
FROM 
    customers c
INNER JOIN 
    orders o ON c.customer_id = o.customer_id
GROUP BY 
    order_month
ORDER BY 
    order_month;
2025-04-06 00:48:25,059 - QUERY: 'get me count of customers by order month' → SQL: SELECT 
    strftime('%Y-%m', o.order_date) AS order_month,
    COUNT(DISTINCT c.customer_id) AS customer_count
FROM 
    customers c
INNER JOIN 
    orders o ON c.customer_id = o.customer_id
GROUP BY 
    order_month
ORDER BY 
    order_month;
2025-04-06 00:48:25 - INFO - [azure_client.py:132] - SQL generation completed in 1.52s
2025-04-06 00:48:25 - INFO - [database.py:65] - Executing SQL query: SELECT 
    strftime('%Y-%m', o.order_date) AS order_month,
    COUNT(DISTINCT c.customer_id) AS customer_count
FROM 
    customers c
INNER JOIN 
    orders o ON c.customer_id = o.customer_id
GROUP BY 
    order_month
ORDER BY 
    order_month;
2025-04-06 00:48:25 - INFO - [database.py:86] - Query returned 2 rows with 2 columns
2025-04-06 00:48:25 - INFO - [database.py:95] - Query processing completed in 0.01s
2025-04-06 00:48:59 - INFO - [app.py:312] - Feedback received for query: 'get me count of customers by order month...' - Rating: 1
2025-04-06 00:48:59 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-04-06 00:48:59 - INFO - [feedback_manager.py:43] - Attempting database connection
2025-04-06 00:48:59 - INFO - [feedback_manager.py:47] - Database connection established in 0.00s
2025-04-06 00:48:59 - INFO - [feedback_manager.py:62] - Loading embedding model 'sentence-transformers/all-MiniLM-L12-v2'
2025-04-06 00:49:03 - INFO - [feedback_manager.py:65] - Embedding model loaded in 3.59s
2025-04-06 00:49:03 - INFO - [feedback_manager.py:170] - Saved feedback for query: 'get me count of customers by order month...' with rating 1
2025-04-06 00:49:07 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-04-06 00:49:07 - INFO - [feedback_manager.py:43] - Attempting database connection
2025-04-06 00:49:07 - INFO - [feedback_manager.py:47] - Database connection established in 0.00s
2025-04-06 00:49:07 - INFO - [feedback_manager.py:531] - Retrieved 2 samples (page 1, limit 10)
2025-04-06 10:20:05 - INFO - [database.py:44] - Attempting database connection
2025-04-06 10:20:05 - INFO - [database.py:48] - Database connection established in 0.01s
2025-04-06 10:20:05 - INFO - [llm_engine.py:56] - [TABLE] Completion generation started
2025-04-06 10:20:10 - INFO - [llm_engine.py:119] - [TABLE] Completion generation completed in 5.28s
2025-04-06 10:20:10 - INFO - [llm_engine.py:120] - **************************
2025-04-06 10:20:10 - INFO - [feedback_manager.py:267] - Stage 1: Vector search for 'get me all the orders...'
2025-04-06 10:20:10 - INFO - [feedback_manager.py:322] - Found 2 initial candidates from vector search
2025-04-06 10:20:10 - INFO - [feedback_manager.py:367] - Less than 3 candidates, skipping reranking
2025-04-06 10:20:10 - INFO - [azure_client.py:35] - SQL generation started for query: 'get me all the orders'
2025-04-06 10:20:10 - INFO - [azure_client.py:69] - Including schema information (363 chars)
2025-04-06 10:20:10 - INFO - [azure_client.py:97] - Including 2 SQL examples from feedback similarity search
2025-04-06 10:20:10 - INFO - [azure_client.py:114] - PROMPT: [{'role': 'system', 'content': "You are an expert SQL assistant. Convert natural language questions into precise, executable SQL queries.\nYour task is to:\n1. Analyze the provided schema carefully, noting table relationships and column types\n2. Generate a SQL query that accurately answers the user's question\n3. Consider performance by selecting only necessary columns\n4. Use appropriate JOIN conditions based on primary/foreign key relationships or provided join conditions\n5. Include a brief explanation of your query\n\nRules:\n- Include table names and column references exactly as provided in the schema\n- Use appropriate SQL functions based on column data types\n- Consider NULL values in your conditions\n- Use table aliases for better readability when joining multiple tables\n- Add column aliases for computed values\n- Format the SQL query with proper indentation\n- If similar queries are provided, strictly use that as format or syntax\n- Return the SQL inside a code block tagged with ```sql\n\nExample output format:\nHere's a query that will [explanation]...\n\n```sql\nSELECT ...\nFROM ...\nWHERE ...\n```"}, {'role': 'user', 'content': "Here's the database schema:\nTable: orders\nDescription: Customer orders and transactions\nColumns: order_id (INTEGER) - Unique order identifier, customer_id (INTEGER) - Reference to customer who placed the order, order_date (TEXT) - Date when order was placed, status (TEXT) - Order status (pending, shipped, completed, etc.), total_amount (REAL) - Total order amount\nPrimary Key(s): order_id\n"}, {'role': 'user', 'content': "Here are some similar queries that were previously successful:\nQuestion: get me all the customers\nSQL: SELECT * FROM customers;\n\nQuestion: get me count of customers by order month\nSQL: SELECT \n    strftime('%Y-%m', o.order_date) AS order_month,\n    COUNT(DISTINCT c.customer_id) AS customer_count\nFROM \n    customers c\nINNER JOIN \n    orders o ON c.customer_id = o.customer_id\nGROUP BY \n    order_month\nORDER BY \n    order_month;\n\n"}, {'role': 'user', 'content': 'Convert this question to SQL: get me all the orders'}]
2025-04-06 10:20:10 - INFO - [llm_engine.py:56] - [SQL_GEN] Completion generation started
2025-04-06 10:20:15 - INFO - [llm_engine.py:119] - [SQL_GEN] Completion generation completed in 4.49s
2025-04-06 10:20:15 - INFO - [llm_engine.py:120] - **************************
2025-04-06 10:20:15 - INFO - [azure_client.py:150] - Parsing SQL from model response
2025-04-06 10:20:15 - INFO - [azure_client.py:157] - Found SQL code block in response
2025-04-06 10:20:15 - INFO - [azure_client.py:171] - Extracted SQL query (21 chars) and explanation (73 chars)
2025-04-06 10:20:15 - INFO - [azure_client.py:124] - Generated SQL: SELECT *
FROM orders;
2025-04-06 10:20:15,446 - QUERY: 'get me all the orders' → SQL: SELECT *
FROM orders;
2025-04-06 10:20:15 - INFO - [azure_client.py:132] - SQL generation completed in 4.51s
2025-04-06 10:20:15 - INFO - [database.py:65] - Executing SQL query: SELECT *
FROM orders;
2025-04-06 10:20:15 - INFO - [database.py:86] - Query returned 8 rows with 5 columns
2025-04-06 10:20:15 - INFO - [database.py:95] - Query processing completed in 0.03s
2025-04-06 10:20:33 - INFO - [database.py:44] - Attempting database connection
2025-04-06 10:20:33 - INFO - [database.py:48] - Database connection established in 0.00s
2025-04-06 10:20:33 - INFO - [llm_engine.py:56] - [TABLE] Completion generation started
2025-04-06 10:20:35 - INFO - [llm_engine.py:119] - [TABLE] Completion generation completed in 2.49s
2025-04-06 10:20:35 - INFO - [llm_engine.py:120] - **************************
2025-04-06 10:20:35 - INFO - [feedback_manager.py:267] - Stage 1: Vector search for 'get me count of orders by customer...'
2025-04-06 10:20:35 - INFO - [feedback_manager.py:322] - Found 2 initial candidates from vector search
2025-04-06 10:20:35 - INFO - [feedback_manager.py:367] - Less than 3 candidates, skipping reranking
2025-04-06 10:20:35 - INFO - [azure_client.py:35] - SQL generation started for query: 'get me count of orders by customer'
2025-04-06 10:20:35 - INFO - [azure_client.py:69] - Including schema information (363 chars)
2025-04-06 10:20:35 - INFO - [azure_client.py:97] - Including 2 SQL examples from feedback similarity search
2025-04-06 10:20:35 - INFO - [azure_client.py:114] - PROMPT: [{'role': 'system', 'content': "You are an expert SQL assistant. Convert natural language questions into precise, executable SQL queries.\nYour task is to:\n1. Analyze the provided schema carefully, noting table relationships and column types\n2. Generate a SQL query that accurately answers the user's question\n3. Consider performance by selecting only necessary columns\n4. Use appropriate JOIN conditions based on primary/foreign key relationships or provided join conditions\n5. Include a brief explanation of your query\n\nRules:\n- Include table names and column references exactly as provided in the schema\n- Use appropriate SQL functions based on column data types\n- Consider NULL values in your conditions\n- Use table aliases for better readability when joining multiple tables\n- Add column aliases for computed values\n- Format the SQL query with proper indentation\n- If similar queries are provided, strictly use that as format or syntax\n- Return the SQL inside a code block tagged with ```sql\n\nExample output format:\nHere's a query that will [explanation]...\n\n```sql\nSELECT ...\nFROM ...\nWHERE ...\n```"}, {'role': 'user', 'content': "Here's the database schema:\nTable: orders\nDescription: Customer orders and transactions\nColumns: order_id (INTEGER) - Unique order identifier, customer_id (INTEGER) - Reference to customer who placed the order, order_date (TEXT) - Date when order was placed, status (TEXT) - Order status (pending, shipped, completed, etc.), total_amount (REAL) - Total order amount\nPrimary Key(s): order_id\n"}, {'role': 'user', 'content': "Here are some similar queries that were previously successful:\nQuestion: get me count of customers by order month\nSQL: SELECT \n    strftime('%Y-%m', o.order_date) AS order_month,\n    COUNT(DISTINCT c.customer_id) AS customer_count\nFROM \n    customers c\nINNER JOIN \n    orders o ON c.customer_id = o.customer_id\nGROUP BY \n    order_month\nORDER BY \n    order_month;\n\nQuestion: get me all the customers\nSQL: SELECT * FROM customers;\n\n"}, {'role': 'user', 'content': 'Convert this question to SQL: get me count of orders by customer'}]
2025-04-06 10:20:35 - INFO - [llm_engine.py:56] - [SQL_GEN] Completion generation started
2025-04-06 10:20:44 - INFO - [llm_engine.py:119] - [SQL_GEN] Completion generation completed in 8.22s
2025-04-06 10:20:44 - INFO - [llm_engine.py:120] - **************************
2025-04-06 10:20:44 - INFO - [azure_client.py:150] - Parsing SQL from model response
2025-04-06 10:20:44 - INFO - [azure_client.py:157] - Found SQL code block in response
2025-04-06 10:20:44 - INFO - [azure_client.py:171] - Extracted SQL query (139 chars) and explanation (77 chars)
2025-04-06 10:20:44 - INFO - [azure_client.py:124] - Generated SQL: SELECT 
    o.customer_id,
    COUNT(o.order_id) AS order_count
FROM 
    orders o
GROUP BY 
    o.customer_id
ORDER BY 
    o.customer_id;
2025-04-06 10:20:44,194 - QUERY: 'get me count of orders by customer' → SQL: SELECT 
    o.customer_id,
    COUNT(o.order_id) AS order_count
FROM 
    orders o
GROUP BY 
    o.customer_id
ORDER BY 
    o.customer_id;
2025-04-06 10:20:44 - INFO - [azure_client.py:132] - SQL generation completed in 8.25s
2025-04-06 10:20:44 - INFO - [database.py:65] - Executing SQL query: SELECT 
    o.customer_id,
    COUNT(o.order_id) AS order_count
FROM 
    orders o
GROUP BY 
    o.customer_id
ORDER BY 
    o.customer_id;
2025-04-06 10:20:44 - INFO - [database.py:86] - Query returned 5 rows with 2 columns
2025-04-06 10:20:44 - INFO - [database.py:95] - Query processing completed in 0.01s
2025-04-06 12:15:23 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-04-06 12:15:23 - INFO - [feedback_manager.py:43] - Attempting database connection
2025-04-06 12:15:23 - INFO - [feedback_manager.py:47] - Database connection established in 0.01s
2025-04-06 12:15:23 - INFO - [feedback_manager.py:531] - Retrieved 2 samples (page 1, limit 10)
2025-04-06 19:10:42 - INFO - [database.py:44] - Attempting database connection
2025-04-06 19:10:42 - INFO - [database.py:48] - Database connection established in 0.01s
2025-04-06 19:10:42 - INFO - [llm_engine.py:56] - [TABLE] Completion generation started
2025-04-06 19:10:44 - INFO - [llm_engine.py:119] - [TABLE] Completion generation completed in 1.73s
2025-04-06 19:10:44 - INFO - [llm_engine.py:120] - **************************
2025-04-06 19:10:44 - INFO - [feedback_manager.py:267] - Stage 1: Vector search for 'get me all the orders...'
2025-04-06 19:10:44 - INFO - [feedback_manager.py:322] - Found 2 initial candidates from vector search
2025-04-06 19:10:44 - INFO - [feedback_manager.py:367] - Less than 3 candidates, skipping reranking
2025-04-06 19:10:44 - INFO - [azure_client.py:35] - SQL generation started for query: 'get me all the orders'
2025-04-06 19:10:44 - INFO - [azure_client.py:69] - Including schema information (363 chars)
2025-04-06 19:10:44 - INFO - [azure_client.py:97] - Including 2 SQL examples from feedback similarity search
2025-04-06 19:10:44 - INFO - [azure_client.py:114] - PROMPT: [{'role': 'system', 'content': "You are an expert SQL assistant. Convert natural language questions into precise, executable SQL queries.\nYour task is to:\n1. Analyze the provided schema carefully, noting table relationships and column types\n2. Generate a SQL query that accurately answers the user's question\n3. Consider performance by selecting only necessary columns\n4. Use appropriate JOIN conditions based on primary/foreign key relationships or provided join conditions\n5. Include a brief explanation of your query\n\nRules:\n- Include table names and column references exactly as provided in the schema\n- Use appropriate SQL functions based on column data types\n- Consider NULL values in your conditions\n- Use table aliases for better readability when joining multiple tables\n- Add column aliases for computed values\n- Format the SQL query with proper indentation\n- If similar queries are provided, strictly use that as format or syntax\n- Return the SQL inside a code block tagged with ```sql\n\nExample output format:\nHere's a query that will [explanation]...\n\n```sql\nSELECT ...\nFROM ...\nWHERE ...\n```"}, {'role': 'user', 'content': "Here's the database schema:\nTable: orders\nDescription: Customer orders and transactions\nColumns: order_id (INTEGER) - Unique order identifier, customer_id (INTEGER) - Reference to customer who placed the order, order_date (TEXT) - Date when order was placed, status (TEXT) - Order status (pending, shipped, completed, etc.), total_amount (REAL) - Total order amount\nPrimary Key(s): order_id\n"}, {'role': 'user', 'content': "Here are some similar queries that were previously successful:\nQuestion: get me all the customers\nSQL: SELECT * FROM customers;\n\nQuestion: get me count of customers by order month\nSQL: SELECT \n    strftime('%Y-%m', o.order_date) AS order_month,\n    COUNT(DISTINCT c.customer_id) AS customer_count\nFROM \n    customers c\nINNER JOIN \n    orders o ON c.customer_id = o.customer_id\nGROUP BY \n    order_month\nORDER BY \n    order_month;\n\n"}, {'role': 'user', 'content': 'Convert this question to SQL: get me all the orders'}]
2025-04-06 19:10:44 - INFO - [llm_engine.py:56] - [SQL_GEN] Completion generation started
2025-04-06 19:10:46 - INFO - [llm_engine.py:119] - [SQL_GEN] Completion generation completed in 2.05s
2025-04-06 19:10:46 - INFO - [llm_engine.py:120] - **************************
2025-04-06 19:10:46 - INFO - [azure_client.py:150] - Parsing SQL from model response
2025-04-06 19:10:46 - INFO - [azure_client.py:157] - Found SQL code block in response
2025-04-06 19:10:46 - INFO - [azure_client.py:171] - Extracted SQL query (21 chars) and explanation (71 chars)
2025-04-06 19:10:46 - INFO - [azure_client.py:124] - Generated SQL: SELECT *
FROM orders;
2025-04-06 19:10:46,454 - QUERY: 'get me all the orders' → SQL: SELECT *
FROM orders;
2025-04-06 19:10:46 - INFO - [azure_client.py:132] - SQL generation completed in 2.08s
2025-04-06 19:10:46 - INFO - [database.py:65] - Executing SQL query: SELECT *
FROM orders;
2025-04-06 19:10:46 - INFO - [database.py:86] - Query returned 8 rows with 5 columns
2025-04-06 19:10:46 - INFO - [database.py:95] - Query processing completed in 0.06s
2025-04-06 19:11:20 - INFO - [database.py:44] - Attempting database connection
2025-04-06 19:11:20 - INFO - [database.py:48] - Database connection established in 0.00s
2025-04-06 19:11:20 - INFO - [llm_engine.py:56] - [TABLE] Completion generation started
2025-04-06 19:11:22 - INFO - [llm_engine.py:119] - [TABLE] Completion generation completed in 2.29s
2025-04-06 19:11:22 - INFO - [llm_engine.py:120] - **************************
2025-04-06 19:11:22 - INFO - [feedback_manager.py:267] - Stage 1: Vector search for 'get me total amount of orders by customer...'
2025-04-06 19:11:22 - INFO - [feedback_manager.py:322] - Found 2 initial candidates from vector search
2025-04-06 19:11:22 - INFO - [feedback_manager.py:367] - Less than 3 candidates, skipping reranking
2025-04-06 19:11:22 - INFO - [azure_client.py:35] - SQL generation started for query: 'get me total amount of orders by customer'
2025-04-06 19:11:22 - INFO - [azure_client.py:69] - Including schema information (363 chars)
2025-04-06 19:11:22 - INFO - [azure_client.py:97] - Including 2 SQL examples from feedback similarity search
2025-04-06 19:11:22 - INFO - [azure_client.py:114] - PROMPT: [{'role': 'system', 'content': "You are an expert SQL assistant. Convert natural language questions into precise, executable SQL queries.\nYour task is to:\n1. Analyze the provided schema carefully, noting table relationships and column types\n2. Generate a SQL query that accurately answers the user's question\n3. Consider performance by selecting only necessary columns\n4. Use appropriate JOIN conditions based on primary/foreign key relationships or provided join conditions\n5. Include a brief explanation of your query\n\nRules:\n- Include table names and column references exactly as provided in the schema\n- Use appropriate SQL functions based on column data types\n- Consider NULL values in your conditions\n- Use table aliases for better readability when joining multiple tables\n- Add column aliases for computed values\n- Format the SQL query with proper indentation\n- If similar queries are provided, strictly use that as format or syntax\n- Return the SQL inside a code block tagged with ```sql\n\nExample output format:\nHere's a query that will [explanation]...\n\n```sql\nSELECT ...\nFROM ...\nWHERE ...\n```"}, {'role': 'user', 'content': "Here's the database schema:\nTable: orders\nDescription: Customer orders and transactions\nColumns: order_id (INTEGER) - Unique order identifier, customer_id (INTEGER) - Reference to customer who placed the order, order_date (TEXT) - Date when order was placed, status (TEXT) - Order status (pending, shipped, completed, etc.), total_amount (REAL) - Total order amount\nPrimary Key(s): order_id\n"}, {'role': 'user', 'content': "Here are some similar queries that were previously successful:\nQuestion: get me count of customers by order month\nSQL: SELECT \n    strftime('%Y-%m', o.order_date) AS order_month,\n    COUNT(DISTINCT c.customer_id) AS customer_count\nFROM \n    customers c\nINNER JOIN \n    orders o ON c.customer_id = o.customer_id\nGROUP BY \n    order_month\nORDER BY \n    order_month;\n\nQuestion: get me all the customers\nSQL: SELECT * FROM customers;\n\n"}, {'role': 'user', 'content': 'Convert this question to SQL: get me total amount of orders by customer'}]
2025-04-06 19:11:22 - INFO - [llm_engine.py:56] - [SQL_GEN] Completion generation started
2025-04-06 19:11:24 - INFO - [llm_engine.py:119] - [SQL_GEN] Completion generation completed in 1.43s
2025-04-06 19:11:24 - INFO - [llm_engine.py:120] - **************************
2025-04-06 19:11:24 - INFO - [azure_client.py:150] - Parsing SQL from model response
2025-04-06 19:11:24 - INFO - [azure_client.py:157] - Found SQL code block in response
2025-04-06 19:11:24 - INFO - [azure_client.py:171] - Extracted SQL query (148 chars) and explanation (82 chars)
2025-04-06 19:11:24 - INFO - [azure_client.py:124] - Generated SQL: SELECT 
    o.customer_id,
    SUM(o.total_amount) AS total_order_amount
FROM 
    orders o
GROUP BY 
    o.customer_id
ORDER BY 
    o.customer_id;
2025-04-06 19:11:24,013 - QUERY: 'get me total amount of orders by customer' → SQL: SELECT 
    o.customer_id,
    SUM(o.total_amount) AS total_order_amount
FROM 
    orders o
GROUP BY 
    o.customer_id
ORDER BY 
    o.customer_id;
2025-04-06 19:11:24 - INFO - [azure_client.py:132] - SQL generation completed in 1.44s
2025-04-06 19:11:24 - INFO - [database.py:65] - Executing SQL query: SELECT 
    o.customer_id,
    SUM(o.total_amount) AS total_order_amount
FROM 
    orders o
GROUP BY 
    o.customer_id
ORDER BY 
    o.customer_id;
2025-04-06 19:11:24 - INFO - [database.py:86] - Query returned 5 rows with 2 columns
2025-04-06 19:11:24 - INFO - [database.py:95] - Query processing completed in 0.02s
2025-04-06 19:14:43 - INFO - [database.py:44] - Attempting database connection
2025-04-06 19:14:43 - INFO - [database.py:48] - Database connection established in 0.01s
2025-04-06 19:14:43 - INFO - [llm_engine.py:56] - [TABLE] Completion generation started
2025-04-06 19:14:44 - INFO - [llm_engine.py:119] - [TABLE] Completion generation completed in 1.69s
2025-04-06 19:14:44 - INFO - [llm_engine.py:120] - **************************
2025-04-06 19:14:44 - INFO - [llm_engine.py:56] - [COLUMN] Completion generation started
2025-04-06 19:14:46 - INFO - [llm_engine.py:119] - [COLUMN] Completion generation completed in 1.40s
2025-04-06 19:14:46 - INFO - [llm_engine.py:120] - **************************
2025-04-06 19:14:46 - INFO - [feedback_manager.py:267] - Stage 1: Vector search for 'get xx for each customer orders...'
2025-04-06 19:14:46 - INFO - [feedback_manager.py:322] - Found 2 initial candidates from vector search
2025-04-06 19:14:46 - INFO - [feedback_manager.py:367] - Less than 3 candidates, skipping reranking
2025-04-06 19:14:46 - INFO - [azure_client.py:35] - SQL generation started for query: 'get xx for each customer orders'
2025-04-06 19:14:46 - INFO - [azure_client.py:69] - Including schema information (941 chars)
2025-04-06 19:14:46 - INFO - [azure_client.py:76] - Including 3 join conditions
2025-04-06 19:14:46 - INFO - [azure_client.py:97] - Including 2 SQL examples from feedback similarity search
2025-04-06 19:14:46 - INFO - [azure_client.py:114] - PROMPT: [{'role': 'system', 'content': "You are an expert SQL assistant. Convert natural language questions into precise, executable SQL queries.\nYour task is to:\n1. Analyze the provided schema carefully, noting table relationships and column types\n2. Generate a SQL query that accurately answers the user's question\n3. Consider performance by selecting only necessary columns\n4. Use appropriate JOIN conditions based on primary/foreign key relationships or provided join conditions\n5. Include a brief explanation of your query\n\nRules:\n- Include table names and column references exactly as provided in the schema\n- Use appropriate SQL functions based on column data types\n- Consider NULL values in your conditions\n- Use table aliases for better readability when joining multiple tables\n- Add column aliases for computed values\n- Format the SQL query with proper indentation\n- If similar queries are provided, strictly use that as format or syntax\n- Return the SQL inside a code block tagged with ```sql\n\nExample output format:\nHere's a query that will [explanation]...\n\n```sql\nSELECT ...\nFROM ...\nWHERE ...\n```"}, {'role': 'user', 'content': "Here's the database schema:\nTable: orders\nDescription: Customer orders and transactions\nColumns: order_id (INTEGER): Unique order identifier, customer_id (INTEGER): Reference to customer who placed the order, order_date (TEXT): Date when order was placed, status (TEXT): Order status (pending, shipped, completed, etc.), total_amount (REAL): Total order amount\nPrimary Key(s): order_id\n\nTable: order_items\nDescription: Individual items within each order\nColumns: item_id (INTEGER): Unique order item identifier, order_id (INTEGER): Reference to parent order, product_id (INTEGER): Reference to purchased product, quantity (INTEGER): Quantity of product ordered, price (REAL): Price per unit at time of purchase\nPrimary Key(s): item_id\n\nTable: customers\nDescription: Customer information and profiles\nColumns: customer_id (INTEGER): Unique customer identifier, first_name (TEXT): Customer's first name, last_name (TEXT): Customer's last name\nPrimary Key(s): customer_id\n"}, {'role': 'user', 'content': 'Use the following pre-defined join conditions when joining these tables:\n- When joining customers with orders, use: INNER JOIN orders ON customers.customer_id = orders.customer_id\n- When joining orders with order_items, use: INNER JOIN order_items ON orders.order_id = order_items.order_id\n- When joining customers with customers, use: LEFT JOIN customers ON a=a\n'}, {'role': 'user', 'content': "Here are some similar queries that were previously successful:\nQuestion: get me count of customers by order month\nSQL: SELECT \n    strftime('%Y-%m', o.order_date) AS order_month,\n    COUNT(DISTINCT c.customer_id) AS customer_count\nFROM \n    customers c\nINNER JOIN \n    orders o ON c.customer_id = o.customer_id\nGROUP BY \n    order_month\nORDER BY \n    order_month;\n\nQuestion: get me all the customers\nSQL: SELECT * FROM customers;\n\n"}, {'role': 'user', 'content': 'Convert this question to SQL: get xx for each customer orders'}]
2025-04-06 19:14:46 - INFO - [llm_engine.py:56] - [SQL_GEN] Completion generation started
2025-04-06 19:14:49 - INFO - [llm_engine.py:119] - [SQL_GEN] Completion generation completed in 2.79s
2025-04-06 19:14:49 - INFO - [llm_engine.py:120] - **************************
2025-04-06 19:14:49 - INFO - [azure_client.py:150] - Parsing SQL from model response
2025-04-06 19:14:49 - INFO - [azure_client.py:157] - Found SQL code block in response
2025-04-06 19:14:49 - INFO - [azure_client.py:171] - Extracted SQL query (313 chars) and explanation (393 chars)
2025-04-06 19:14:49 - INFO - [azure_client.py:124] - Generated SQL: SELECT
    c.customer_id,
    c.first_name,
    c.last_name,
    COUNT(o.order_id) AS total_orders,
    SUM(o.total_amount) AS total_order_amount
FROM
    customers c
INNER JOIN
    orders o ON c.customer_id = o.customer_id
GROUP BY
    c.customer_id,
    c.first_name,
    c.last_name
ORDER BY
    c.customer_id;
2025-04-06 19:14:49,176 - QUERY: 'get xx for each customer orders' → SQL: SELECT
    c.customer_id,
    c.first_name,
    c.last_name,
    COUNT(o.order_id) AS total_orders,
    SUM(o.total_amount) AS total_order_amount
FROM
    customers c
INNER JOIN
    orders o ON c.customer_id = o.customer_id
GROUP BY
    c.customer_id,
    c.first_name,
    c.last_name
ORDER BY
    c.customer_id;
2025-04-06 19:14:49 - INFO - [azure_client.py:132] - SQL generation completed in 2.81s
2025-04-06 19:14:49 - INFO - [database.py:65] - Executing SQL query: SELECT
    c.customer_id,
    c.first_name,
    c.last_name,
    COUNT(o.order_id) AS total_orders,
    SUM(o.total_amount) AS total_order_amount
FROM
    customers c
INNER JOIN
    orders o ON c.customer_id = o.customer_id
GROUP BY
    c.customer_id,
    c.first_name,
    c.last_name
ORDER BY
    c.customer_id;
2025-04-06 19:14:49 - INFO - [database.py:86] - Query returned 5 rows with 5 columns
2025-04-06 19:14:49 - INFO - [database.py:95] - Query processing completed in 0.03s
2025-04-06 19:15:05 - INFO - [database.py:44] - Attempting database connection
2025-04-06 19:15:05 - INFO - [database.py:48] - Database connection established in 0.00s
2025-04-06 19:15:05 - INFO - [llm_engine.py:56] - [TABLE] Completion generation started
2025-04-06 19:15:07 - INFO - [llm_engine.py:119] - [TABLE] Completion generation completed in 1.89s
2025-04-06 19:15:07 - INFO - [llm_engine.py:120] - **************************
2025-04-06 19:15:07 - INFO - [feedback_manager.py:267] - Stage 1: Vector search for 'get column dfdf for each customer orders...'
2025-04-06 19:15:07 - INFO - [feedback_manager.py:322] - Found 2 initial candidates from vector search
2025-04-06 19:15:07 - INFO - [feedback_manager.py:367] - Less than 3 candidates, skipping reranking
2025-04-06 19:15:07 - INFO - [azure_client.py:35] - SQL generation started for query: 'get column dfdf for each customer orders'
2025-04-06 19:15:07 - INFO - [azure_client.py:69] - Including schema information (363 chars)
2025-04-06 19:15:07 - INFO - [azure_client.py:97] - Including 2 SQL examples from feedback similarity search
2025-04-06 19:15:07 - INFO - [azure_client.py:114] - PROMPT: [{'role': 'system', 'content': "You are an expert SQL assistant. Convert natural language questions into precise, executable SQL queries.\nYour task is to:\n1. Analyze the provided schema carefully, noting table relationships and column types\n2. Generate a SQL query that accurately answers the user's question\n3. Consider performance by selecting only necessary columns\n4. Use appropriate JOIN conditions based on primary/foreign key relationships or provided join conditions\n5. Include a brief explanation of your query\n\nRules:\n- Include table names and column references exactly as provided in the schema\n- Use appropriate SQL functions based on column data types\n- Consider NULL values in your conditions\n- Use table aliases for better readability when joining multiple tables\n- Add column aliases for computed values\n- Format the SQL query with proper indentation\n- If similar queries are provided, strictly use that as format or syntax\n- Return the SQL inside a code block tagged with ```sql\n\nExample output format:\nHere's a query that will [explanation]...\n\n```sql\nSELECT ...\nFROM ...\nWHERE ...\n```"}, {'role': 'user', 'content': "Here's the database schema:\nTable: orders\nDescription: Customer orders and transactions\nColumns: order_id (INTEGER) - Unique order identifier, customer_id (INTEGER) - Reference to customer who placed the order, order_date (TEXT) - Date when order was placed, status (TEXT) - Order status (pending, shipped, completed, etc.), total_amount (REAL) - Total order amount\nPrimary Key(s): order_id\n"}, {'role': 'user', 'content': "Here are some similar queries that were previously successful:\nQuestion: get me count of customers by order month\nSQL: SELECT \n    strftime('%Y-%m', o.order_date) AS order_month,\n    COUNT(DISTINCT c.customer_id) AS customer_count\nFROM \n    customers c\nINNER JOIN \n    orders o ON c.customer_id = o.customer_id\nGROUP BY \n    order_month\nORDER BY \n    order_month;\n\nQuestion: get me all the customers\nSQL: SELECT * FROM customers;\n\n"}, {'role': 'user', 'content': 'Convert this question to SQL: get column dfdf for each customer orders'}]
2025-04-06 19:15:07 - INFO - [llm_engine.py:56] - [SQL_GEN] Completion generation started
2025-04-06 19:15:11 - INFO - [llm_engine.py:119] - [SQL_GEN] Completion generation completed in 4.10s
2025-04-06 19:15:11 - INFO - [llm_engine.py:120] - **************************
2025-04-06 19:15:11 - INFO - [azure_client.py:150] - Parsing SQL from model response
2025-04-06 19:15:11 - INFO - [azure_client.py:157] - Found SQL code block in response
2025-04-06 19:15:11 - INFO - [azure_client.py:171] - Extracted SQL query (118 chars) and explanation (799 chars)
2025-04-06 19:15:11 - INFO - [azure_client.py:124] - Generated SQL: SELECT 
    c.customer_id,
    o.dfdf
FROM 
    customers c
INNER JOIN 
    orders o ON c.customer_id = o.customer_id;
2025-04-06 19:15:11,459 - QUERY: 'get column dfdf for each customer orders' → SQL: SELECT 
    c.customer_id,
    o.dfdf
FROM 
    customers c
INNER JOIN 
    orders o ON c.customer_id = o.customer_id;
2025-04-06 19:15:11 - INFO - [azure_client.py:132] - SQL generation completed in 4.11s
2025-04-06 19:15:11 - INFO - [database.py:65] - Executing SQL query: SELECT 
    c.customer_id,
    o.dfdf
FROM 
    customers c
INNER JOIN 
    orders o ON c.customer_id = o.customer_id;
2025-04-06 19:15:11 - ERROR - [database.py:122] - SQL error after 0.00s: (sqlite3.OperationalError) no such column: o.dfdf
[SQL: SELECT 
    c.customer_id,
    o.dfdf
FROM 
    customers c
INNER JOIN 
    orders o ON c.customer_id = o.customer_id;]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/sqlalchemy/engine/default.py", line 748, in do_execute
    cursor.execute(statement, parameters)
sqlite3.OperationalError: no such column: o.dfdf

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/vijay/text2sql/src/utils/database.py", line 78, in execute_query
    result = conn.execute(text(sql_query))
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 1414, in execute
    return meth(
           ^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/sqlalchemy/sql/elements.py", line 486, in _execute_on_connection
    return connection._execute_clauseelement(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
          ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 1842, in _execute_context
    return self._exec_single_context(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 2326, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/sqlalchemy/engine/default.py", line 748, in do_execute
    cursor.execute(statement, parameters)
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such column: o.dfdf
[SQL: SELECT 
    c.customer_id,
    o.dfdf
FROM 
    customers c
INNER JOIN 
    orders o ON c.customer_id = o.customer_id;]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-04-06 19:16:11 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-04-06 19:16:11 - INFO - [feedback_manager.py:43] - Attempting database connection
2025-04-06 19:16:11 - INFO - [feedback_manager.py:47] - Database connection established in 0.00s
2025-04-06 19:16:11 - INFO - [feedback_manager.py:531] - Retrieved 2 samples (page 1, limit 10)
2025-04-06 19:25:55 - INFO - [azure_client.py:186] - Closing Azure AI client connection
2025-04-06 19:25:55 - INFO - [database.py:258] - Closing database connection
2025-04-06 19:25:55 - INFO - [feedback_manager.py:668] - Closing database connection
2025-04-06 19:26:16 - INFO - [app.py:66] - Debug logging enabled for SQL generator and agents
2025-04-06 19:26:16 - INFO - [llm_engine.py:28] - Initializing LLM Engine with endpoint: https://openrouter.ai/api/v1
2025-04-06 19:26:16 - INFO - [llm_engine.py:29] - Using model: openrouter/quasar-alpha
2025-04-06 19:26:16 - INFO - [llm_engine.py:37] - LLM Engine initialized successfully
2025-04-06 19:26:16 - INFO - [llm_engine.py:28] - Initializing LLM Engine with endpoint: https://openrouter.ai/api/v1
2025-04-06 19:26:16 - INFO - [llm_engine.py:29] - Using model: openrouter/quasar-alpha
2025-04-06 19:26:16 - INFO - [llm_engine.py:37] - LLM Engine initialized successfully
2025-04-06 19:26:16 - INFO - [llm_engine.py:28] - Initializing LLM Engine with endpoint: https://openrouter.ai/api/v1
2025-04-06 19:26:16 - INFO - [llm_engine.py:29] - Using model: openrouter/quasar-alpha
2025-04-06 19:26:16 - INFO - [llm_engine.py:37] - LLM Engine initialized successfully
2025-04-06 19:26:16 - INFO - [azure_client.py:11] - Initializing Azure AI Client using LLM Engine
2025-04-06 19:26:16 - INFO - [llm_engine.py:28] - Initializing LLM Engine with endpoint: https://openrouter.ai/api/v1
2025-04-06 19:26:16 - INFO - [llm_engine.py:29] - Using model: openrouter/quasar-alpha
2025-04-06 19:26:16 - INFO - [llm_engine.py:37] - LLM Engine initialized successfully
2025-04-06 19:26:16 - INFO - [azure_client.py:17] - Azure AI Client initialized successfully
2025-04-06 19:26:16 - INFO - [database.py:38] - Database manager initialized with connection: sqlite:///text2sql.db
2025-04-06 19:26:16 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-04-06 19:27:39 - INFO - [azure_client.py:186] - Closing Azure AI client connection
2025-04-06 19:27:39 - INFO - [database.py:258] - Closing database connection
2025-04-06 19:27:39 - INFO - [feedback_manager.py:668] - Closing database connection
2025-04-06 19:27:44 - INFO - [app.py:66] - Debug logging enabled for SQL generator and agents
2025-04-06 19:27:44 - INFO - [llm_engine.py:28] - Initializing LLM Engine with endpoint: https://openrouter.ai/api/v1
2025-04-06 19:27:44 - INFO - [llm_engine.py:29] - Using model: openrouter/quasar-alpha
2025-04-06 19:27:44 - INFO - [llm_engine.py:37] - LLM Engine initialized successfully
2025-04-06 19:27:44 - INFO - [llm_engine.py:28] - Initializing LLM Engine with endpoint: https://openrouter.ai/api/v1
2025-04-06 19:27:44 - INFO - [llm_engine.py:29] - Using model: openrouter/quasar-alpha
2025-04-06 19:27:44 - INFO - [llm_engine.py:37] - LLM Engine initialized successfully
2025-04-06 19:27:44 - INFO - [llm_engine.py:28] - Initializing LLM Engine with endpoint: https://openrouter.ai/api/v1
2025-04-06 19:27:44 - INFO - [llm_engine.py:29] - Using model: openrouter/quasar-alpha
2025-04-06 19:27:44 - INFO - [llm_engine.py:37] - LLM Engine initialized successfully
2025-04-06 19:27:44 - INFO - [azure_client.py:11] - Initializing Azure AI Client using LLM Engine
2025-04-06 19:27:44 - INFO - [llm_engine.py:28] - Initializing LLM Engine with endpoint: https://openrouter.ai/api/v1
2025-04-06 19:27:44 - INFO - [llm_engine.py:29] - Using model: openrouter/quasar-alpha
2025-04-06 19:27:44 - INFO - [llm_engine.py:37] - LLM Engine initialized successfully
2025-04-06 19:27:44 - INFO - [azure_client.py:17] - Azure AI Client initialized successfully
2025-04-06 19:27:44 - INFO - [database.py:38] - Database manager initialized with connection: sqlite:///text2sql.db
2025-04-06 19:27:44 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-04-06 19:28:29 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-04-06 19:28:29 - INFO - [feedback_manager.py:43] - Attempting database connection
2025-04-06 19:28:29 - INFO - [feedback_manager.py:47] - Database connection established in 0.00s
2025-04-06 19:28:29 - INFO - [feedback_manager.py:531] - Retrieved 2 samples (page 1, limit 10)
2025-04-06 19:29:52 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-04-06 19:29:52 - INFO - [feedback_manager.py:43] - Attempting database connection
2025-04-06 19:29:52 - INFO - [feedback_manager.py:47] - Database connection established in 0.00s
2025-04-06 19:29:52 - INFO - [feedback_manager.py:531] - Retrieved 2 samples (page 1, limit 10)
2025-04-06 19:31:23 - INFO - [app.py:138] - User explicitly specified tables: customers, order_items
2025-04-06 19:31:23 - INFO - [database.py:44] - Attempting database connection
2025-04-06 19:31:23 - INFO - [database.py:48] - Database connection established in 0.00s
2025-04-06 19:31:23 - INFO - [llm_engine.py:56] - [COLUMN] Completion generation started
2025-04-06 19:31:25 - INFO - [llm_engine.py:119] - [COLUMN] Completion generation completed in 1.71s
2025-04-06 19:31:25 - INFO - [llm_engine.py:120] - **************************
2025-04-06 19:31:25 - INFO - [feedback_manager.py:43] - Attempting database connection
2025-04-06 19:31:25 - INFO - [feedback_manager.py:47] - Database connection established in 0.00s
2025-04-06 19:31:25 - INFO - [feedback_manager.py:267] - Stage 1: Vector search for 'table customers table order_items...'
2025-04-06 19:31:25 - INFO - [feedback_manager.py:62] - Loading embedding model 'sentence-transformers/all-MiniLM-L12-v2'
2025-04-06 19:31:27 - INFO - [feedback_manager.py:65] - Embedding model loaded in 2.82s
2025-04-06 19:31:28 - INFO - [feedback_manager.py:322] - Found 2 initial candidates from vector search
2025-04-06 19:31:28 - INFO - [feedback_manager.py:367] - Less than 3 candidates, skipping reranking
2025-04-06 19:31:28 - INFO - [azure_client.py:35] - SQL generation started for query: 'table customers table order_items'
2025-04-06 19:31:28 - INFO - [azure_client.py:69] - Including schema information (500 chars)
2025-04-06 19:31:28 - INFO - [azure_client.py:76] - Including 1 join conditions
2025-04-06 19:31:28 - INFO - [azure_client.py:97] - Including 2 SQL examples from feedback similarity search
2025-04-06 19:31:28 - INFO - [azure_client.py:114] - PROMPT: [{'role': 'system', 'content': "You are an expert SQL assistant. Convert natural language questions into precise, executable SQL queries.\nYour task is to:\n1. Analyze the provided schema carefully, noting table relationships and column types\n2. Generate a SQL query that accurately answers the user's question\n3. Consider performance by selecting only necessary columns\n4. Use appropriate JOIN conditions based on primary/foreign key relationships or provided join conditions\n5. Include a brief explanation of your query\n\nRules:\n- Include table names and column references exactly as provided in the schema\n- Use appropriate SQL functions based on column data types\n- Consider NULL values in your conditions\n- Use table aliases for better readability when joining multiple tables\n- Add column aliases for computed values\n- Format the SQL query with proper indentation\n- If similar queries are provided, strictly use that as format or syntax\n- Return the SQL inside a code block tagged with ```sql\n\nExample output format:\nHere's a query that will [explanation]...\n\n```sql\nSELECT ...\nFROM ...\nWHERE ...\n```"}, {'role': 'user', 'content': "Here's the database schema:\nTable: customers\nDescription: Customer information and profiles\nColumns: customer_id (INTEGER): Unique customer identifier\nPrimary Key(s): customer_id\n\nTable: order_items\nDescription: Individual items within each order\nColumns: item_id (INTEGER): Unique order item identifier, order_id (INTEGER): Reference to parent order, product_id (INTEGER): Reference to purchased product, quantity (INTEGER): Quantity of product ordered, price (REAL): Price per unit at time of purchase\nPrimary Key(s): item_id\n"}, {'role': 'user', 'content': 'Use the following pre-defined join conditions when joining these tables:\n- When joining customers with customers, use: LEFT JOIN customers ON a=a\n'}, {'role': 'user', 'content': "Here are some similar queries that were previously successful:\nQuestion: get me count of customers by order month\nSQL: SELECT \n    strftime('%Y-%m', o.order_date) AS order_month,\n    COUNT(DISTINCT c.customer_id) AS customer_count\nFROM \n    customers c\nINNER JOIN \n    orders o ON c.customer_id = o.customer_id\nGROUP BY \n    order_month\nORDER BY \n    order_month;\n\nQuestion: get me all the customers\nSQL: SELECT * FROM customers;\n\n"}, {'role': 'user', 'content': 'Convert this question to SQL: table customers table order_items'}]
2025-04-06 19:31:28 - INFO - [llm_engine.py:56] - [SQL_GEN] Completion generation started
2025-04-06 19:31:29 - INFO - [llm_engine.py:119] - [SQL_GEN] Completion generation completed in 1.32s
2025-04-06 19:31:29 - INFO - [llm_engine.py:120] - **************************
2025-04-06 19:31:29 - INFO - [azure_client.py:150] - Parsing SQL from model response
2025-04-06 19:31:29 - INFO - [azure_client.py:157] - Found SQL code block in response
2025-04-06 19:31:29 - INFO - [azure_client.py:171] - Extracted SQL query (56 chars) and explanation (174 chars)
2025-04-06 19:31:29 - INFO - [azure_client.py:124] - Generated SQL: SELECT 
    *
FROM 
    customers c,
    order_items oi;
2025-04-06 19:31:29,399 - QUERY: 'table customers table order_items' → SQL: SELECT 
    *
FROM 
    customers c,
    order_items oi;
2025-04-06 19:31:29 - INFO - [azure_client.py:132] - SQL generation completed in 1.34s
2025-04-06 19:31:29 - INFO - [database.py:65] - Executing SQL query: SELECT 
    *
FROM 
    customers c,
    order_items oi;
2025-04-06 19:31:29 - INFO - [database.py:86] - Query returned 55 rows with 16 columns
2025-04-06 19:31:29 - INFO - [database.py:95] - Query processing completed in 0.03s
2025-04-06 19:33:43 - INFO - [app.py:312] - Feedback received for query: '@customers @order_items ...' - Rating: 0
2025-04-06 19:33:43 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-04-06 19:33:43 - INFO - [feedback_manager.py:43] - Attempting database connection
2025-04-06 19:33:43 - INFO - [feedback_manager.py:47] - Database connection established in 0.00s
2025-04-06 19:33:43 - INFO - [feedback_manager.py:62] - Loading embedding model 'sentence-transformers/all-MiniLM-L12-v2'
2025-04-06 19:33:46 - INFO - [feedback_manager.py:65] - Embedding model loaded in 3.48s
2025-04-06 19:33:46 - INFO - [feedback_manager.py:170] - Saved feedback for query: '@customers @order_items ...' with rating 0
2025-04-06 19:33:48 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-04-06 19:33:48 - INFO - [feedback_manager.py:43] - Attempting database connection
2025-04-06 19:33:48 - INFO - [feedback_manager.py:47] - Database connection established in 0.00s
2025-04-06 19:33:48 - INFO - [feedback_manager.py:531] - Retrieved 2 samples (page 1, limit 10)
2025-04-06 19:47:06 - INFO - [app.py:254] - Schema requested for workspace: dfd
2025-04-06 22:41:45 - INFO - [app.py:254] - Schema requested for workspace: dfd
2025-04-07 01:47:23 - INFO - [app.py:67] - Debug logging enabled for SQL generator and agents
2025-04-07 01:47:23 - INFO - [llm_engine.py:28] - Initializing LLM Engine with endpoint: https://openrouter.ai/api/v1
2025-04-07 01:47:23 - INFO - [llm_engine.py:29] - Using model: openrouter/quasar-alpha
2025-04-07 01:47:23 - INFO - [llm_engine.py:37] - LLM Engine initialized successfully
2025-04-07 01:47:23 - INFO - [llm_engine.py:28] - Initializing LLM Engine with endpoint: https://openrouter.ai/api/v1
2025-04-07 01:47:23 - INFO - [llm_engine.py:29] - Using model: openrouter/quasar-alpha
2025-04-07 01:47:23 - INFO - [llm_engine.py:37] - LLM Engine initialized successfully
2025-04-07 01:47:23 - INFO - [llm_engine.py:28] - Initializing LLM Engine with endpoint: https://openrouter.ai/api/v1
2025-04-07 01:47:23 - INFO - [llm_engine.py:29] - Using model: openrouter/quasar-alpha
2025-04-07 01:47:23 - INFO - [llm_engine.py:37] - LLM Engine initialized successfully
2025-04-07 01:47:23 - INFO - [azure_client.py:11] - Initializing Azure AI Client using LLM Engine
2025-04-07 01:47:23 - INFO - [llm_engine.py:28] - Initializing LLM Engine with endpoint: https://openrouter.ai/api/v1
2025-04-07 01:47:23 - INFO - [llm_engine.py:29] - Using model: openrouter/quasar-alpha
2025-04-07 01:47:23 - INFO - [llm_engine.py:37] - LLM Engine initialized successfully
2025-04-07 01:47:23 - INFO - [azure_client.py:17] - Azure AI Client initialized successfully
2025-04-07 01:47:23 - INFO - [database.py:38] - Database manager initialized with connection: sqlite:///text2sql.db
2025-04-07 01:47:23 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-04-07 01:47:23 - INFO - [azure_client.py:186] - Closing Azure AI client connection
2025-04-07 01:47:23 - INFO - [database.py:258] - Closing database connection
2025-04-07 01:47:23 - INFO - [feedback_manager.py:668] - Closing database connection
2025-04-07 01:47:45 - INFO - [app.py:67] - Debug logging enabled for SQL generator and agents
2025-04-07 01:47:45 - INFO - [llm_engine.py:28] - Initializing LLM Engine with endpoint: https://openrouter.ai/api/v1
2025-04-07 01:47:45 - INFO - [llm_engine.py:29] - Using model: openrouter/quasar-alpha
2025-04-07 01:47:45 - INFO - [llm_engine.py:37] - LLM Engine initialized successfully
2025-04-07 01:47:45 - INFO - [llm_engine.py:28] - Initializing LLM Engine with endpoint: https://openrouter.ai/api/v1
2025-04-07 01:47:45 - INFO - [llm_engine.py:29] - Using model: openrouter/quasar-alpha
2025-04-07 01:47:45 - INFO - [llm_engine.py:37] - LLM Engine initialized successfully
2025-04-07 01:47:45 - INFO - [llm_engine.py:28] - Initializing LLM Engine with endpoint: https://openrouter.ai/api/v1
2025-04-07 01:47:45 - INFO - [llm_engine.py:29] - Using model: openrouter/quasar-alpha
2025-04-07 01:47:45 - INFO - [llm_engine.py:37] - LLM Engine initialized successfully
2025-04-07 01:47:45 - INFO - [azure_client.py:11] - Initializing Azure AI Client using LLM Engine
2025-04-07 01:47:45 - INFO - [llm_engine.py:28] - Initializing LLM Engine with endpoint: https://openrouter.ai/api/v1
2025-04-07 01:47:45 - INFO - [llm_engine.py:29] - Using model: openrouter/quasar-alpha
2025-04-07 01:47:45 - INFO - [llm_engine.py:37] - LLM Engine initialized successfully
2025-04-07 01:47:45 - INFO - [azure_client.py:17] - Azure AI Client initialized successfully
2025-04-07 01:47:45 - INFO - [database.py:38] - Database manager initialized with connection: sqlite:///text2sql.db
2025-04-07 01:47:45 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-04-07 01:47:51 - INFO - [app.py:67] - Debug logging enabled for SQL generator and agents
2025-04-07 01:47:51 - INFO - [llm_engine.py:28] - Initializing LLM Engine with endpoint: https://openrouter.ai/api/v1
2025-04-07 01:47:51 - INFO - [llm_engine.py:29] - Using model: openrouter/quasar-alpha
2025-04-07 01:47:51 - INFO - [llm_engine.py:37] - LLM Engine initialized successfully
2025-04-07 01:47:51 - INFO - [llm_engine.py:28] - Initializing LLM Engine with endpoint: https://openrouter.ai/api/v1
2025-04-07 01:47:51 - INFO - [llm_engine.py:29] - Using model: openrouter/quasar-alpha
2025-04-07 01:47:52 - INFO - [llm_engine.py:37] - LLM Engine initialized successfully
2025-04-07 01:47:52 - INFO - [llm_engine.py:28] - Initializing LLM Engine with endpoint: https://openrouter.ai/api/v1
2025-04-07 01:47:52 - INFO - [llm_engine.py:29] - Using model: openrouter/quasar-alpha
2025-04-07 01:47:52 - INFO - [llm_engine.py:37] - LLM Engine initialized successfully
2025-04-07 01:47:52 - INFO - [azure_client.py:11] - Initializing Azure AI Client using LLM Engine
2025-04-07 01:47:52 - INFO - [llm_engine.py:28] - Initializing LLM Engine with endpoint: https://openrouter.ai/api/v1
2025-04-07 01:47:52 - INFO - [llm_engine.py:29] - Using model: openrouter/quasar-alpha
2025-04-07 01:47:52 - INFO - [llm_engine.py:37] - LLM Engine initialized successfully
2025-04-07 01:47:52 - INFO - [azure_client.py:17] - Azure AI Client initialized successfully
2025-04-07 01:47:52 - INFO - [database.py:38] - Database manager initialized with connection: sqlite:///text2sql.db
2025-04-07 01:47:52 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-04-07 01:48:20 - INFO - [user_manager.py:48] - Upgrading password hash from SHA-256 to bcrypt
2025-04-07 01:50:23 - INFO - [azure_client.py:186] - Closing Azure AI client connection
2025-04-07 01:50:23 - INFO - [database.py:258] - Closing database connection
2025-04-07 01:50:23 - INFO - [feedback_manager.py:668] - Closing database connection
2025-04-07 01:50:28 - INFO - [app.py:67] - Debug logging enabled for SQL generator and agents
2025-04-07 01:50:28 - INFO - [llm_engine.py:28] - Initializing LLM Engine with endpoint: https://openrouter.ai/api/v1
2025-04-07 01:50:28 - INFO - [llm_engine.py:29] - Using model: openrouter/quasar-alpha
2025-04-07 01:50:28 - INFO - [llm_engine.py:37] - LLM Engine initialized successfully
2025-04-07 01:50:28 - INFO - [llm_engine.py:28] - Initializing LLM Engine with endpoint: https://openrouter.ai/api/v1
2025-04-07 01:50:28 - INFO - [llm_engine.py:29] - Using model: openrouter/quasar-alpha
2025-04-07 01:50:28 - INFO - [llm_engine.py:37] - LLM Engine initialized successfully
2025-04-07 01:50:28 - INFO - [llm_engine.py:28] - Initializing LLM Engine with endpoint: https://openrouter.ai/api/v1
2025-04-07 01:50:28 - INFO - [llm_engine.py:29] - Using model: openrouter/quasar-alpha
2025-04-07 01:50:28 - INFO - [llm_engine.py:37] - LLM Engine initialized successfully
2025-04-07 01:50:28 - INFO - [azure_client.py:11] - Initializing Azure AI Client using LLM Engine
2025-04-07 01:50:28 - INFO - [llm_engine.py:28] - Initializing LLM Engine with endpoint: https://openrouter.ai/api/v1
2025-04-07 01:50:28 - INFO - [llm_engine.py:29] - Using model: openrouter/quasar-alpha
2025-04-07 01:50:28 - INFO - [llm_engine.py:37] - LLM Engine initialized successfully
2025-04-07 01:50:28 - INFO - [azure_client.py:17] - Azure AI Client initialized successfully
2025-04-07 01:50:28 - INFO - [database.py:38] - Database manager initialized with connection: sqlite:///text2sql.db
2025-04-07 01:50:28 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-04-07 01:51:48 - INFO - [azure_client.py:186] - Closing Azure AI client connection
2025-04-07 01:51:48 - INFO - [database.py:258] - Closing database connection
2025-04-07 01:51:48 - INFO - [feedback_manager.py:668] - Closing database connection
2025-04-07 01:51:57 - INFO - [app.py:67] - Debug logging enabled for SQL generator and agents
2025-04-07 01:51:57 - INFO - [llm_engine.py:28] - Initializing LLM Engine with endpoint: https://openrouter.ai/api/v1
2025-04-07 01:51:57 - INFO - [llm_engine.py:29] - Using model: openrouter/quasar-alpha
2025-04-07 01:51:57 - INFO - [llm_engine.py:37] - LLM Engine initialized successfully
2025-04-07 01:51:57 - INFO - [llm_engine.py:28] - Initializing LLM Engine with endpoint: https://openrouter.ai/api/v1
2025-04-07 01:51:57 - INFO - [llm_engine.py:29] - Using model: openrouter/quasar-alpha
2025-04-07 01:51:57 - INFO - [llm_engine.py:37] - LLM Engine initialized successfully
2025-04-07 01:51:57 - INFO - [llm_engine.py:28] - Initializing LLM Engine with endpoint: https://openrouter.ai/api/v1
2025-04-07 01:51:57 - INFO - [llm_engine.py:29] - Using model: openrouter/quasar-alpha
2025-04-07 01:51:57 - INFO - [llm_engine.py:37] - LLM Engine initialized successfully
2025-04-07 01:51:57 - INFO - [azure_client.py:11] - Initializing Azure AI Client using LLM Engine
2025-04-07 01:51:57 - INFO - [llm_engine.py:28] - Initializing LLM Engine with endpoint: https://openrouter.ai/api/v1
2025-04-07 01:51:57 - INFO - [llm_engine.py:29] - Using model: openrouter/quasar-alpha
2025-04-07 01:51:57 - INFO - [llm_engine.py:37] - LLM Engine initialized successfully
2025-04-07 01:51:57 - INFO - [azure_client.py:17] - Azure AI Client initialized successfully
2025-04-07 01:51:57 - INFO - [database.py:38] - Database manager initialized with connection: sqlite:///text2sql.db
2025-04-07 01:51:57 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-04-07 01:52:16 - INFO - [azure_client.py:186] - Closing Azure AI client connection
2025-04-07 01:52:16 - INFO - [database.py:258] - Closing database connection
2025-04-07 01:52:16 - INFO - [feedback_manager.py:668] - Closing database connection
2025-04-07 01:52:22 - INFO - [app.py:67] - Debug logging enabled for SQL generator and agents
2025-04-07 01:52:22 - INFO - [llm_engine.py:28] - Initializing LLM Engine with endpoint: https://openrouter.ai/api/v1
2025-04-07 01:52:22 - INFO - [llm_engine.py:29] - Using model: openrouter/quasar-alpha
2025-04-07 01:52:22 - INFO - [llm_engine.py:37] - LLM Engine initialized successfully
2025-04-07 01:52:22 - INFO - [llm_engine.py:28] - Initializing LLM Engine with endpoint: https://openrouter.ai/api/v1
2025-04-07 01:52:22 - INFO - [llm_engine.py:29] - Using model: openrouter/quasar-alpha
2025-04-07 01:52:22 - INFO - [llm_engine.py:37] - LLM Engine initialized successfully
2025-04-07 01:52:22 - INFO - [llm_engine.py:28] - Initializing LLM Engine with endpoint: https://openrouter.ai/api/v1
2025-04-07 01:52:22 - INFO - [llm_engine.py:29] - Using model: openrouter/quasar-alpha
2025-04-07 01:52:22 - INFO - [llm_engine.py:37] - LLM Engine initialized successfully
2025-04-07 01:52:22 - INFO - [azure_client.py:11] - Initializing Azure AI Client using LLM Engine
2025-04-07 01:52:22 - INFO - [llm_engine.py:28] - Initializing LLM Engine with endpoint: https://openrouter.ai/api/v1
2025-04-07 01:52:22 - INFO - [llm_engine.py:29] - Using model: openrouter/quasar-alpha
2025-04-07 01:52:22 - INFO - [llm_engine.py:37] - LLM Engine initialized successfully
2025-04-07 01:52:22 - INFO - [azure_client.py:17] - Azure AI Client initialized successfully
2025-04-07 01:52:22 - INFO - [database.py:38] - Database manager initialized with connection: sqlite:///text2sql.db
2025-04-07 01:52:22 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-04-07 01:54:11 - INFO - [azure_client.py:186] - Closing Azure AI client connection
2025-04-07 01:54:11 - INFO - [database.py:258] - Closing database connection
2025-04-07 01:54:11 - INFO - [feedback_manager.py:668] - Closing database connection
2025-04-07 01:54:19 - INFO - [app.py:67] - Debug logging enabled for SQL generator and agents
2025-04-07 01:54:19 - INFO - [llm_engine.py:28] - Initializing LLM Engine with endpoint: https://openrouter.ai/api/v1
2025-04-07 01:54:19 - INFO - [llm_engine.py:29] - Using model: openrouter/quasar-alpha
2025-04-07 01:54:20 - INFO - [llm_engine.py:37] - LLM Engine initialized successfully
2025-04-07 01:54:20 - INFO - [llm_engine.py:28] - Initializing LLM Engine with endpoint: https://openrouter.ai/api/v1
2025-04-07 01:54:20 - INFO - [llm_engine.py:29] - Using model: openrouter/quasar-alpha
2025-04-07 01:54:20 - INFO - [llm_engine.py:37] - LLM Engine initialized successfully
2025-04-07 01:54:20 - INFO - [llm_engine.py:28] - Initializing LLM Engine with endpoint: https://openrouter.ai/api/v1
2025-04-07 01:54:20 - INFO - [llm_engine.py:29] - Using model: openrouter/quasar-alpha
2025-04-07 01:54:20 - INFO - [llm_engine.py:37] - LLM Engine initialized successfully
2025-04-07 01:54:20 - INFO - [azure_client.py:11] - Initializing Azure AI Client using LLM Engine
2025-04-07 01:54:20 - INFO - [llm_engine.py:28] - Initializing LLM Engine with endpoint: https://openrouter.ai/api/v1
2025-04-07 01:54:20 - INFO - [llm_engine.py:29] - Using model: openrouter/quasar-alpha
2025-04-07 01:54:20 - INFO - [llm_engine.py:37] - LLM Engine initialized successfully
2025-04-07 01:54:20 - INFO - [azure_client.py:17] - Azure AI Client initialized successfully
2025-04-07 01:54:20 - INFO - [database.py:38] - Database manager initialized with connection: sqlite:///text2sql.db
2025-04-07 01:54:20 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-04-07 01:54:50 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-04-07 01:54:50 - INFO - [feedback_manager.py:43] - Attempting database connection
2025-04-07 01:54:50 - INFO - [feedback_manager.py:47] - Database connection established in 0.00s
2025-04-07 01:54:50 - INFO - [feedback_manager.py:531] - Retrieved 2 samples (page 1, limit 10)
2025-04-07 01:54:58 - INFO - [app.py:267] - Schema requested for workspace: dfd
2025-04-07 01:55:13 - INFO - [azure_client.py:186] - Closing Azure AI client connection
2025-04-07 01:55:13 - INFO - [database.py:258] - Closing database connection
2025-04-07 01:55:13 - INFO - [feedback_manager.py:668] - Closing database connection
2025-04-07 01:55:19 - INFO - [app.py:67] - Debug logging enabled for SQL generator and agents
2025-04-07 01:55:19 - INFO - [llm_engine.py:28] - Initializing LLM Engine with endpoint: https://openrouter.ai/api/v1
2025-04-07 01:55:19 - INFO - [llm_engine.py:29] - Using model: openrouter/quasar-alpha
2025-04-07 01:55:19 - INFO - [llm_engine.py:37] - LLM Engine initialized successfully
2025-04-07 01:55:19 - INFO - [llm_engine.py:28] - Initializing LLM Engine with endpoint: https://openrouter.ai/api/v1
2025-04-07 01:55:19 - INFO - [llm_engine.py:29] - Using model: openrouter/quasar-alpha
2025-04-07 01:55:19 - INFO - [llm_engine.py:37] - LLM Engine initialized successfully
2025-04-07 01:55:19 - INFO - [llm_engine.py:28] - Initializing LLM Engine with endpoint: https://openrouter.ai/api/v1
2025-04-07 01:55:19 - INFO - [llm_engine.py:29] - Using model: openrouter/quasar-alpha
2025-04-07 01:55:19 - INFO - [llm_engine.py:37] - LLM Engine initialized successfully
2025-04-07 01:55:19 - INFO - [azure_client.py:11] - Initializing Azure AI Client using LLM Engine
2025-04-07 01:55:19 - INFO - [llm_engine.py:28] - Initializing LLM Engine with endpoint: https://openrouter.ai/api/v1
2025-04-07 01:55:19 - INFO - [llm_engine.py:29] - Using model: openrouter/quasar-alpha
2025-04-07 01:55:19 - INFO - [llm_engine.py:37] - LLM Engine initialized successfully
2025-04-07 01:55:19 - INFO - [azure_client.py:17] - Azure AI Client initialized successfully
2025-04-07 01:55:19 - INFO - [database.py:38] - Database manager initialized with connection: sqlite:///text2sql.db
2025-04-07 01:55:19 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-04-07 01:55:28 - INFO - [app.py:267] - Schema requested for workspace: dfd
2025-04-07 01:57:35 - INFO - [database.py:44] - Attempting database connection
2025-04-07 01:57:35 - INFO - [database.py:48] - Database connection established in 0.00s
2025-04-07 01:57:35 - INFO - [llm_engine.py:56] - [TABLE] Completion generation started
2025-04-07 01:57:37 - INFO - [llm_engine.py:119] - [TABLE] Completion generation completed in 1.53s
2025-04-07 01:57:37 - INFO - [llm_engine.py:120] - **************************
2025-04-07 01:57:37 - INFO - [feedback_manager.py:43] - Attempting database connection
2025-04-07 01:57:37 - INFO - [feedback_manager.py:47] - Database connection established in 0.00s
2025-04-07 01:57:37 - INFO - [feedback_manager.py:267] - Stage 1: Vector search for 'get me all the customers...'
2025-04-07 01:57:37 - INFO - [feedback_manager.py:62] - Loading embedding model 'sentence-transformers/all-MiniLM-L12-v2'
2025-04-07 01:57:40 - INFO - [feedback_manager.py:65] - Embedding model loaded in 3.00s
2025-04-07 01:57:40 - INFO - [feedback_manager.py:322] - Found 2 initial candidates from vector search
2025-04-07 01:57:40 - INFO - [feedback_manager.py:367] - Less than 3 candidates, skipping reranking
2025-04-07 01:57:40 - INFO - [azure_client.py:35] - SQL generation started for query: 'get me all the customers'
2025-04-07 01:57:40 - INFO - [azure_client.py:69] - Including schema information (74 chars)
2025-04-07 01:57:40 - INFO - [azure_client.py:97] - Including 2 SQL examples from feedback similarity search
2025-04-07 01:57:40 - INFO - [azure_client.py:114] - PROMPT: [{'role': 'system', 'content': "You are an expert SQL assistant. Convert natural language questions into precise, executable SQL queries.\nYour task is to:\n1. Analyze the provided schema carefully, noting table relationships and column types\n2. Generate a SQL query that accurately answers the user's question\n3. Consider performance by selecting only necessary columns\n4. Use appropriate JOIN conditions based on primary/foreign key relationships or provided join conditions\n5. Include a brief explanation of your query\n\nRules:\n- Include table names and column references exactly as provided in the schema\n- Use appropriate SQL functions based on column data types\n- Consider NULL values in your conditions\n- Use table aliases for better readability when joining multiple tables\n- Add column aliases for computed values\n- Format the SQL query with proper indentation\n- If similar queries are provided, strictly use that as format or syntax\n- Return the SQL inside a code block tagged with ```sql\n\nExample output format:\nHere's a query that will [explanation]...\n\n```sql\nSELECT ...\nFROM ...\nWHERE ...\n```"}, {'role': 'user', 'content': "Here's the database schema:\nTable: customers\nDescription: Customer information and profiles\nColumns: \n"}, {'role': 'user', 'content': "Here are some similar queries that were previously successful:\nQuestion: get me all the customers\nSQL: SELECT * FROM customers;\n\nQuestion: get me count of customers by order month\nSQL: SELECT \n    strftime('%Y-%m', o.order_date) AS order_month,\n    COUNT(DISTINCT c.customer_id) AS customer_count\nFROM \n    customers c\nINNER JOIN \n    orders o ON c.customer_id = o.customer_id\nGROUP BY \n    order_month\nORDER BY \n    order_month;\n\n"}, {'role': 'user', 'content': 'Convert this question to SQL: get me all the customers'}]
2025-04-07 01:57:40 - INFO - [llm_engine.py:56] - [SQL_GEN] Completion generation started
2025-04-07 01:57:41 - INFO - [llm_engine.py:119] - [SQL_GEN] Completion generation completed in 1.08s
2025-04-07 01:57:41 - INFO - [llm_engine.py:120] - **************************
2025-04-07 01:57:41 - INFO - [azure_client.py:150] - Parsing SQL from model response
2025-04-07 01:57:41 - INFO - [azure_client.py:157] - Found SQL code block in response
2025-04-07 01:57:41 - INFO - [azure_client.py:171] - Extracted SQL query (25 chars) and explanation (91 chars)
2025-04-07 01:57:41 - INFO - [azure_client.py:124] - Generated SQL: SELECT * 
FROM customers;
2025-04-07 01:57:41,342 - QUERY: 'get me all the customers' → SQL: SELECT * 
FROM customers;
2025-04-07 01:57:41 - INFO - [azure_client.py:132] - SQL generation completed in 1.11s
2025-04-07 01:57:41 - INFO - [database.py:65] - Executing SQL query: SELECT * 
FROM customers;
2025-04-07 01:57:41 - INFO - [database.py:86] - Query returned 5 rows with 11 columns
2025-04-07 01:57:41 - INFO - [database.py:95] - Query processing completed in 0.03s
2025-04-07 02:01:18 - INFO - [feedback_manager.py:32] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-04-07 02:01:18 - INFO - [feedback_manager.py:43] - Attempting database connection
2025-04-07 02:01:18 - INFO - [feedback_manager.py:47] - Database connection established in 0.00s
2025-04-07 02:01:18 - INFO - [feedback_manager.py:531] - Retrieved 2 samples (page 1, limit 10)
2025-04-07 08:26:25 - INFO - [app.py:267] - Schema requested for workspace: dfd
2025-04-07 08:37:24 - INFO - [database.py:44] - Attempting database connection
2025-04-07 08:37:24 - INFO - [database.py:48] - Database connection established in 0.01s
2025-04-07 08:37:24 - INFO - [llm_engine.py:56] - [TABLE] Completion generation started
2025-04-07 08:37:26 - INFO - [llm_engine.py:119] - [TABLE] Completion generation completed in 1.85s
2025-04-07 08:37:26 - INFO - [llm_engine.py:120] - **************************
2025-04-07 08:37:26 - INFO - [feedback_manager.py:267] - Stage 1: Vector search for 'who are you...'
2025-04-07 08:37:26 - INFO - [feedback_manager.py:322] - Found 2 initial candidates from vector search
2025-04-07 08:37:26 - INFO - [feedback_manager.py:367] - Less than 3 candidates, skipping reranking
2025-04-07 08:37:26 - INFO - [azure_client.py:35] - SQL generation started for query: 'who are you'
2025-04-07 08:37:26 - INFO - [azure_client.py:69] - Including schema information (588 chars)
2025-04-07 08:37:26 - INFO - [azure_client.py:97] - Including 2 SQL examples from feedback similarity search
2025-04-07 08:37:26 - INFO - [azure_client.py:114] - PROMPT: [{'role': 'system', 'content': "You are an expert SQL assistant. Convert natural language questions into precise, executable SQL queries.\nYour task is to:\n1. Analyze the provided schema carefully, noting table relationships and column types\n2. Generate a SQL query that accurately answers the user's question\n3. Consider performance by selecting only necessary columns\n4. Use appropriate JOIN conditions based on primary/foreign key relationships or provided join conditions\n5. Include a brief explanation of your query\n\nRules:\n- Include table names and column references exactly as provided in the schema\n- Use appropriate SQL functions based on column data types\n- Consider NULL values in your conditions\n- Use table aliases for better readability when joining multiple tables\n- Add column aliases for computed values\n- Format the SQL query with proper indentation\n- If similar queries are provided, strictly use that as format or syntax\n- Return the SQL inside a code block tagged with ```sql\n\nExample output format:\nHere's a query that will [explanation]...\n\n```sql\nSELECT ...\nFROM ...\nWHERE ...\n```"}, {'role': 'user', 'content': "Here's the database schema:\nTable: customers1\nDescription: Customer information and profiles\nColumns: customer_id (INTEGER) - Unique customer identifier, first_name (TEXT) - Customer's first name, last_name (TEXT) - Customer's last name, email (TEXT) - Customer's email address (unique), phone (TEXT) - Customer's phone number, address (TEXT) - Customer's street address, city (TEXT) - Customer's city, state (TEXT) - Customer's state/province, country (TEXT) - Customer's country, postal_code (TEXT) - Customer's postal/zip code, registration_date (TEXT) - Date when customer registered\nPrimary Key(s): customer_id\n"}, {'role': 'user', 'content': "Here are some similar queries that were previously successful:\nQuestion: get me all the customers\nSQL: SELECT * FROM customers;\n\nQuestion: get me count of customers by order month\nSQL: SELECT \n    strftime('%Y-%m', o.order_date) AS order_month,\n    COUNT(DISTINCT c.customer_id) AS customer_count\nFROM \n    customers c\nINNER JOIN \n    orders o ON c.customer_id = o.customer_id\nGROUP BY \n    order_month\nORDER BY \n    order_month;\n\n"}, {'role': 'user', 'content': 'Convert this question to SQL: who are you'}]
2025-04-07 08:37:26 - INFO - [llm_engine.py:56] - [SQL_GEN] Completion generation started
2025-04-07 08:37:27 - INFO - [llm_engine.py:119] - [SQL_GEN] Completion generation completed in 1.48s
2025-04-07 08:37:27 - INFO - [llm_engine.py:120] - **************************
2025-04-07 08:37:27 - INFO - [azure_client.py:150] - Parsing SQL from model response
2025-04-07 08:37:27 - INFO - [azure_client.py:157] - Found SQL code block in response
2025-04-07 08:37:27 - INFO - [azure_client.py:171] - Extracted SQL query (36 chars) and explanation (165 chars)
2025-04-07 08:37:27 - INFO - [azure_client.py:124] - Generated SQL: SELECT 
    * 
FROM 
    customers1;
2025-04-07 08:37:27,758 - QUERY: 'who are you' → SQL: SELECT 
    * 
FROM 
    customers1;
2025-04-07 08:37:27 - INFO - [azure_client.py:132] - SQL generation completed in 1.49s
2025-04-07 08:37:27 - INFO - [database.py:65] - Executing SQL query: SELECT 
    * 
FROM 
    customers1;
2025-04-07 08:37:27 - ERROR - [database.py:122] - SQL error after 0.01s: (sqlite3.OperationalError) no such table: customers1
[SQL: SELECT 
    * 
FROM 
    customers1;]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/sqlalchemy/engine/default.py", line 748, in do_execute
    cursor.execute(statement, parameters)
sqlite3.OperationalError: no such table: customers1

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/vijay/text2sql/src/utils/database.py", line 78, in execute_query
    result = conn.execute(text(sql_query))
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 1414, in execute
    return meth(
           ^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/sqlalchemy/sql/elements.py", line 486, in _execute_on_connection
    return connection._execute_clauseelement(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
          ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 1842, in _execute_context
    return self._exec_single_context(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 2326, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/sqlalchemy/engine/default.py", line 748, in do_execute
    cursor.execute(statement, parameters)
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: customers1
[SQL: SELECT 
    * 
FROM 
    customers1;]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-04-07 13:39:58 - INFO - [database.py:44] - Attempting database connection
2025-04-07 13:39:58 - INFO - [database.py:48] - Database connection established in 0.05s
2025-04-07 13:39:58 - INFO - [llm_engine.py:56] - [TABLE] Completion generation started
2025-04-07 13:40:00 - INFO - [llm_engine.py:119] - [TABLE] Completion generation completed in 1.80s
2025-04-07 13:40:00 - INFO - [llm_engine.py:120] - **************************
2025-04-07 13:40:00 - INFO - [feedback_manager.py:267] - Stage 1: Vector search for 'who are you...'
2025-04-07 13:40:00 - INFO - [feedback_manager.py:322] - Found 2 initial candidates from vector search
2025-04-07 13:40:00 - INFO - [feedback_manager.py:367] - Less than 3 candidates, skipping reranking
2025-04-07 13:40:00 - INFO - [azure_client.py:35] - SQL generation started for query: 'who are you'
2025-04-07 13:40:00 - INFO - [azure_client.py:69] - Including schema information (588 chars)
2025-04-07 13:40:00 - INFO - [azure_client.py:97] - Including 2 SQL examples from feedback similarity search
2025-04-07 13:40:00 - INFO - [azure_client.py:114] - PROMPT: [{'role': 'system', 'content': "You are an expert SQL assistant. Convert natural language questions into precise, executable SQL queries.\nYour task is to:\n1. Analyze the provided schema carefully, noting table relationships and column types\n2. Generate a SQL query that accurately answers the user's question\n3. Consider performance by selecting only necessary columns\n4. Use appropriate JOIN conditions based on primary/foreign key relationships or provided join conditions\n5. Include a brief explanation of your query\n\nRules:\n- Include table names and column references exactly as provided in the schema\n- Use appropriate SQL functions based on column data types\n- Consider NULL values in your conditions\n- Use table aliases for better readability when joining multiple tables\n- Add column aliases for computed values\n- Format the SQL query with proper indentation\n- If similar queries are provided, strictly use that as format or syntax\n- Return the SQL inside a code block tagged with ```sql\n\nExample output format:\nHere's a query that will [explanation]...\n\n```sql\nSELECT ...\nFROM ...\nWHERE ...\n```"}, {'role': 'user', 'content': "Here's the database schema:\nTable: customers1\nDescription: Customer information and profiles\nColumns: customer_id (INTEGER) - Unique customer identifier, first_name (TEXT) - Customer's first name, last_name (TEXT) - Customer's last name, email (TEXT) - Customer's email address (unique), phone (TEXT) - Customer's phone number, address (TEXT) - Customer's street address, city (TEXT) - Customer's city, state (TEXT) - Customer's state/province, country (TEXT) - Customer's country, postal_code (TEXT) - Customer's postal/zip code, registration_date (TEXT) - Date when customer registered\nPrimary Key(s): customer_id\n"}, {'role': 'user', 'content': "Here are some similar queries that were previously successful:\nQuestion: get me all the customers\nSQL: SELECT * FROM customers;\n\nQuestion: get me count of customers by order month\nSQL: SELECT \n    strftime('%Y-%m', o.order_date) AS order_month,\n    COUNT(DISTINCT c.customer_id) AS customer_count\nFROM \n    customers c\nINNER JOIN \n    orders o ON c.customer_id = o.customer_id\nGROUP BY \n    order_month\nORDER BY \n    order_month;\n\n"}, {'role': 'user', 'content': 'Convert this question to SQL: who are you'}]
2025-04-07 13:40:00 - INFO - [llm_engine.py:56] - [SQL_GEN] Completion generation started
2025-04-07 13:40:02 - INFO - [llm_engine.py:119] - [SQL_GEN] Completion generation completed in 1.86s
2025-04-07 13:40:02 - INFO - [llm_engine.py:120] - **************************
2025-04-07 13:40:02 - INFO - [azure_client.py:150] - Parsing SQL from model response
2025-04-07 13:40:02 - INFO - [azure_client.py:157] - Found SQL code block in response
2025-04-07 13:40:02 - INFO - [azure_client.py:171] - Extracted SQL query (36 chars) and explanation (142 chars)
2025-04-07 13:40:02 - INFO - [azure_client.py:124] - Generated SQL: SELECT 
    * 
FROM 
    customers1;
2025-04-07 13:40:02,777 - QUERY: 'who are you' → SQL: SELECT 
    * 
FROM 
    customers1;
2025-04-07 13:40:02 - INFO - [azure_client.py:132] - SQL generation completed in 1.88s
2025-04-07 13:40:02 - INFO - [database.py:65] - Executing SQL query: SELECT 
    * 
FROM 
    customers1;
2025-04-07 13:40:02 - ERROR - [database.py:122] - SQL error after 0.05s: (sqlite3.OperationalError) no such table: customers1
[SQL: SELECT 
    * 
FROM 
    customers1;]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/sqlalchemy/engine/default.py", line 748, in do_execute
    cursor.execute(statement, parameters)
sqlite3.OperationalError: no such table: customers1

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/vijay/text2sql/src/utils/database.py", line 78, in execute_query
    result = conn.execute(text(sql_query))
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 1414, in execute
    return meth(
           ^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/sqlalchemy/sql/elements.py", line 486, in _execute_on_connection
    return connection._execute_clauseelement(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
          ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 1842, in _execute_context
    return self._exec_single_context(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 2326, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/sqlalchemy/engine/default.py", line 748, in do_execute
    cursor.execute(statement, parameters)
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: customers1
[SQL: SELECT 
    * 
FROM 
    customers1;]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-04-07 17:19:13 - INFO - [database.py:44] - Attempting database connection
2025-04-07 17:19:13 - INFO - [database.py:48] - Database connection established in 0.04s
2025-04-07 17:19:13 - INFO - [llm_engine.py:56] - [TABLE] Completion generation started
2025-04-07 17:19:15 - INFO - [llm_engine.py:119] - [TABLE] Completion generation completed in 1.80s
2025-04-07 17:19:15 - INFO - [llm_engine.py:120] - **************************
2025-04-07 17:19:15 - INFO - [feedback_manager.py:267] - Stage 1: Vector search for 'get me count of customers...'
2025-04-07 17:19:15 - INFO - [feedback_manager.py:322] - Found 2 initial candidates from vector search
2025-04-07 17:19:15 - INFO - [feedback_manager.py:367] - Less than 3 candidates, skipping reranking
2025-04-07 17:19:15 - INFO - [azure_client.py:35] - SQL generation started for query: 'get me count of customers'
2025-04-07 17:19:15 - INFO - [azure_client.py:69] - Including schema information (74 chars)
2025-04-07 17:19:15 - INFO - [azure_client.py:97] - Including 2 SQL examples from feedback similarity search
2025-04-07 17:19:15 - INFO - [azure_client.py:114] - PROMPT: [{'role': 'system', 'content': "You are an expert SQL assistant. Convert natural language questions into precise, executable SQL queries.\nYour task is to:\n1. Analyze the provided schema carefully, noting table relationships and column types\n2. Generate a SQL query that accurately answers the user's question\n3. Consider performance by selecting only necessary columns\n4. Use appropriate JOIN conditions based on primary/foreign key relationships or provided join conditions\n5. Include a brief explanation of your query\n\nRules:\n- Include table names and column references exactly as provided in the schema\n- Use appropriate SQL functions based on column data types\n- Consider NULL values in your conditions\n- Use table aliases for better readability when joining multiple tables\n- Add column aliases for computed values\n- Format the SQL query with proper indentation\n- If similar queries are provided, strictly use that as format or syntax\n- Return the SQL inside a code block tagged with ```sql\n\nExample output format:\nHere's a query that will [explanation]...\n\n```sql\nSELECT ...\nFROM ...\nWHERE ...\n```"}, {'role': 'user', 'content': "Here's the database schema:\nTable: customers\nDescription: Customer information and profiles\nColumns: \n"}, {'role': 'user', 'content': "Here are some similar queries that were previously successful:\nQuestion: get me count of customers by order month\nSQL: SELECT \n    strftime('%Y-%m', o.order_date) AS order_month,\n    COUNT(DISTINCT c.customer_id) AS customer_count\nFROM \n    customers c\nINNER JOIN \n    orders o ON c.customer_id = o.customer_id\nGROUP BY \n    order_month\nORDER BY \n    order_month;\n\nQuestion: get me all the customers\nSQL: SELECT * FROM customers;\n\n"}, {'role': 'user', 'content': 'Convert this question to SQL: get me count of customers'}]
2025-04-07 17:19:15 - INFO - [llm_engine.py:56] - [SQL_GEN] Completion generation started
2025-04-07 17:19:16 - INFO - [llm_engine.py:119] - [SQL_GEN] Completion generation completed in 1.56s
2025-04-07 17:19:16 - INFO - [llm_engine.py:120] - **************************
2025-04-07 17:19:16 - INFO - [azure_client.py:150] - Parsing SQL from model response
2025-04-07 17:19:16 - INFO - [azure_client.py:157] - Found SQL code block in response
2025-04-07 17:19:16 - INFO - [azure_client.py:171] - Extracted SQL query (59 chars) and explanation (88 chars)
2025-04-07 17:19:17 - INFO - [azure_client.py:124] - Generated SQL: SELECT 
    COUNT(*) AS customer_count
FROM 
    customers;
2025-04-07 17:19:17,005 - QUERY: 'get me count of customers' → SQL: SELECT 
    COUNT(*) AS customer_count
FROM 
    customers;
2025-04-07 17:19:17 - INFO - [azure_client.py:132] - SQL generation completed in 1.59s
2025-04-07 17:19:17 - INFO - [database.py:65] - Executing SQL query: SELECT 
    COUNT(*) AS customer_count
FROM 
    customers;
2025-04-07 17:19:17 - INFO - [database.py:86] - Query returned 1 rows with 1 columns
2025-04-07 17:19:17 - INFO - [database.py:95] - Query processing completed in 0.14s
2025-04-07 17:19:40 - INFO - [app.py:267] - Schema requested for workspace: dfd
2025-04-07 20:48:31 - INFO - [app.py:67] - Debug logging enabled for SQL generator and agents
2025-04-07 20:48:31 - INFO - [llm_engine.py:28] - Initializing LLM Engine with endpoint: https://openrouter.ai/api/v1
2025-04-07 20:48:31 - INFO - [llm_engine.py:29] - Using model: openrouter/quasar-alpha
2025-04-07 20:48:32 - INFO - [llm_engine.py:37] - LLM Engine initialized successfully
2025-04-07 20:48:32 - INFO - [llm_engine.py:28] - Initializing LLM Engine with endpoint: https://openrouter.ai/api/v1
2025-04-07 20:48:32 - INFO - [llm_engine.py:29] - Using model: openrouter/quasar-alpha
2025-04-07 20:48:32 - INFO - [llm_engine.py:37] - LLM Engine initialized successfully
2025-04-07 20:48:32 - INFO - [llm_engine.py:28] - Initializing LLM Engine with endpoint: https://openrouter.ai/api/v1
2025-04-07 20:48:32 - INFO - [llm_engine.py:29] - Using model: openrouter/quasar-alpha
2025-04-07 20:48:32 - INFO - [llm_engine.py:37] - LLM Engine initialized successfully
2025-04-07 20:48:32 - INFO - [azure_client.py:11] - Initializing Azure AI Client using LLM Engine
2025-04-07 20:48:32 - INFO - [llm_engine.py:28] - Initializing LLM Engine with endpoint: https://openrouter.ai/api/v1
2025-04-07 20:48:32 - INFO - [llm_engine.py:29] - Using model: openrouter/quasar-alpha
2025-04-07 20:48:32 - INFO - [llm_engine.py:37] - LLM Engine initialized successfully
2025-04-07 20:48:32 - INFO - [azure_client.py:17] - Azure AI Client initialized successfully
2025-04-07 20:48:32 - INFO - [database.py:38] - Database manager initialized with connection: sqlite:///text2sql.db
2025-04-07 20:48:32 - INFO - [feedback_manager.py:35] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-04-07 20:48:32 - INFO - [azure_client.py:186] - Closing Azure AI client connection
2025-04-07 20:48:32 - INFO - [database.py:258] - Closing database connection
2025-04-07 20:48:32 - INFO - [feedback_manager.py:750] - Closing database connections
2025-04-07 20:48:32 - INFO - [vector_store.py:288] - Closing vector database connection
2025-04-07 20:48:45 - INFO - [app.py:67] - Debug logging enabled for SQL generator and agents
2025-04-07 20:48:45 - INFO - [llm_engine.py:28] - Initializing LLM Engine with endpoint: https://openrouter.ai/api/v1
2025-04-07 20:48:45 - INFO - [llm_engine.py:29] - Using model: openrouter/quasar-alpha
2025-04-07 20:48:45 - INFO - [llm_engine.py:37] - LLM Engine initialized successfully
2025-04-07 20:48:45 - INFO - [llm_engine.py:28] - Initializing LLM Engine with endpoint: https://openrouter.ai/api/v1
2025-04-07 20:48:45 - INFO - [llm_engine.py:29] - Using model: openrouter/quasar-alpha
2025-04-07 20:48:45 - INFO - [llm_engine.py:37] - LLM Engine initialized successfully
2025-04-07 20:48:45 - INFO - [llm_engine.py:28] - Initializing LLM Engine with endpoint: https://openrouter.ai/api/v1
2025-04-07 20:48:45 - INFO - [llm_engine.py:29] - Using model: openrouter/quasar-alpha
2025-04-07 20:48:45 - INFO - [llm_engine.py:37] - LLM Engine initialized successfully
2025-04-07 20:48:45 - INFO - [azure_client.py:11] - Initializing Azure AI Client using LLM Engine
2025-04-07 20:48:45 - INFO - [llm_engine.py:28] - Initializing LLM Engine with endpoint: https://openrouter.ai/api/v1
2025-04-07 20:48:45 - INFO - [llm_engine.py:29] - Using model: openrouter/quasar-alpha
2025-04-07 20:48:45 - INFO - [llm_engine.py:37] - LLM Engine initialized successfully
2025-04-07 20:48:45 - INFO - [azure_client.py:17] - Azure AI Client initialized successfully
2025-04-07 20:48:45 - INFO - [database.py:38] - Database manager initialized with connection: sqlite:///text2sql.db
2025-04-07 20:48:45 - INFO - [feedback_manager.py:35] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-04-07 20:48:54 - INFO - [app.py:67] - Debug logging enabled for SQL generator and agents
2025-04-07 20:48:54 - INFO - [llm_engine.py:28] - Initializing LLM Engine with endpoint: https://openrouter.ai/api/v1
2025-04-07 20:48:54 - INFO - [llm_engine.py:29] - Using model: openrouter/quasar-alpha
2025-04-07 20:48:54 - INFO - [llm_engine.py:37] - LLM Engine initialized successfully
2025-04-07 20:48:54 - INFO - [llm_engine.py:28] - Initializing LLM Engine with endpoint: https://openrouter.ai/api/v1
2025-04-07 20:48:54 - INFO - [llm_engine.py:29] - Using model: openrouter/quasar-alpha
2025-04-07 20:48:54 - INFO - [llm_engine.py:37] - LLM Engine initialized successfully
2025-04-07 20:48:54 - INFO - [llm_engine.py:28] - Initializing LLM Engine with endpoint: https://openrouter.ai/api/v1
2025-04-07 20:48:54 - INFO - [llm_engine.py:29] - Using model: openrouter/quasar-alpha
2025-04-07 20:48:54 - INFO - [llm_engine.py:37] - LLM Engine initialized successfully
2025-04-07 20:48:54 - INFO - [azure_client.py:11] - Initializing Azure AI Client using LLM Engine
2025-04-07 20:48:54 - INFO - [llm_engine.py:28] - Initializing LLM Engine with endpoint: https://openrouter.ai/api/v1
2025-04-07 20:48:54 - INFO - [llm_engine.py:29] - Using model: openrouter/quasar-alpha
2025-04-07 20:48:54 - INFO - [llm_engine.py:37] - LLM Engine initialized successfully
2025-04-07 20:48:54 - INFO - [azure_client.py:17] - Azure AI Client initialized successfully
2025-04-07 20:48:54 - INFO - [database.py:38] - Database manager initialized with connection: sqlite:///text2sql.db
2025-04-07 20:48:54 - INFO - [feedback_manager.py:35] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-04-07 20:50:45 - INFO - [azure_client.py:186] - Closing Azure AI client connection
2025-04-07 20:50:45 - INFO - [database.py:258] - Closing database connection
2025-04-07 20:50:45 - INFO - [feedback_manager.py:750] - Closing database connections
2025-04-07 20:50:45 - INFO - [vector_store.py:288] - Closing vector database connection
2025-04-07 20:50:54 - INFO - [app.py:67] - Debug logging enabled for SQL generator and agents
2025-04-07 20:50:54 - INFO - [llm_engine.py:28] - Initializing LLM Engine with endpoint: https://openrouter.ai/api/v1
2025-04-07 20:50:54 - INFO - [llm_engine.py:29] - Using model: openrouter/quasar-alpha
2025-04-07 20:50:54 - INFO - [llm_engine.py:37] - LLM Engine initialized successfully
2025-04-07 20:50:54 - INFO - [llm_engine.py:28] - Initializing LLM Engine with endpoint: https://openrouter.ai/api/v1
2025-04-07 20:50:54 - INFO - [llm_engine.py:29] - Using model: openrouter/quasar-alpha
2025-04-07 20:50:54 - INFO - [llm_engine.py:37] - LLM Engine initialized successfully
2025-04-07 20:50:54 - INFO - [llm_engine.py:28] - Initializing LLM Engine with endpoint: https://openrouter.ai/api/v1
2025-04-07 20:50:54 - INFO - [llm_engine.py:29] - Using model: openrouter/quasar-alpha
2025-04-07 20:50:54 - INFO - [llm_engine.py:37] - LLM Engine initialized successfully
2025-04-07 20:50:54 - INFO - [azure_client.py:11] - Initializing Azure AI Client using LLM Engine
2025-04-07 20:50:54 - INFO - [llm_engine.py:28] - Initializing LLM Engine with endpoint: https://openrouter.ai/api/v1
2025-04-07 20:50:54 - INFO - [llm_engine.py:29] - Using model: openrouter/quasar-alpha
2025-04-07 20:50:55 - INFO - [llm_engine.py:37] - LLM Engine initialized successfully
2025-04-07 20:50:55 - INFO - [azure_client.py:17] - Azure AI Client initialized successfully
2025-04-07 20:50:55 - INFO - [database.py:38] - Database manager initialized with connection: sqlite:///text2sql.db
2025-04-07 20:50:55 - INFO - [feedback_manager.py:35] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-04-07 20:51:01 - INFO - [feedback_manager.py:49] - Attempting database connection
2025-04-07 20:51:01 - INFO - [feedback_manager.py:53] - Database connection established in 0.00s
2025-04-07 20:51:01 - INFO - [vector_store.py:38] - Connecting to vector database at ./vector_store.db
2025-04-07 20:51:02 - INFO - [vector_store.py:42] - Vector database connection established in 1.08s
2025-04-07 20:51:02 - INFO - [vector_store.py:66] - Creating collection 'query_embeddings'
2025-04-07 20:51:05 - INFO - [vector_store.py:73] - Collection 'query_embeddings' created successfully
2025-04-07 20:51:05 - INFO - [feedback_manager.py:430] - Feedback stats: 3 total, 2 positive, 1 negative
2025-04-07 20:51:25 - INFO - [feedback_manager.py:35] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-04-07 20:51:25 - INFO - [feedback_manager.py:49] - Attempting database connection
2025-04-07 20:51:25 - INFO - [feedback_manager.py:53] - Database connection established in 0.00s
2025-04-07 20:51:25 - INFO - [vector_store.py:38] - Connecting to vector database at ./vector_store.db
2025-04-07 20:51:25 - INFO - [vector_store.py:42] - Vector database connection established in 0.00s
2025-04-07 20:51:25 - INFO - [vector_store.py:75] - Collection 'query_embeddings' already exists
2025-04-07 20:51:25 - INFO - [feedback_manager.py:514] - Retrieved 2 samples (page 1, limit 10)
2025-04-07 20:52:41 - INFO - [azure_client.py:186] - Closing Azure AI client connection
2025-04-07 20:52:41 - INFO - [database.py:258] - Closing database connection
2025-04-07 20:52:41 - INFO - [feedback_manager.py:750] - Closing database connections
2025-04-07 20:52:41 - INFO - [vector_store.py:288] - Closing vector database connection
2025-04-07 20:52:51 - INFO - [app.py:67] - Debug logging enabled for SQL generator and agents
2025-04-07 20:52:51 - INFO - [llm_engine.py:28] - Initializing LLM Engine with endpoint: https://openrouter.ai/api/v1
2025-04-07 20:52:51 - INFO - [llm_engine.py:29] - Using model: openrouter/quasar-alpha
2025-04-07 20:52:51 - INFO - [llm_engine.py:37] - LLM Engine initialized successfully
2025-04-07 20:52:51 - INFO - [llm_engine.py:28] - Initializing LLM Engine with endpoint: https://openrouter.ai/api/v1
2025-04-07 20:52:51 - INFO - [llm_engine.py:29] - Using model: openrouter/quasar-alpha
2025-04-07 20:52:51 - INFO - [llm_engine.py:37] - LLM Engine initialized successfully
2025-04-07 20:52:51 - INFO - [llm_engine.py:28] - Initializing LLM Engine with endpoint: https://openrouter.ai/api/v1
2025-04-07 20:52:51 - INFO - [llm_engine.py:29] - Using model: openrouter/quasar-alpha
2025-04-07 20:52:51 - INFO - [llm_engine.py:37] - LLM Engine initialized successfully
2025-04-07 20:52:51 - INFO - [azure_client.py:11] - Initializing Azure AI Client using LLM Engine
2025-04-07 20:52:51 - INFO - [llm_engine.py:28] - Initializing LLM Engine with endpoint: https://openrouter.ai/api/v1
2025-04-07 20:52:51 - INFO - [llm_engine.py:29] - Using model: openrouter/quasar-alpha
2025-04-07 20:52:51 - INFO - [llm_engine.py:37] - LLM Engine initialized successfully
2025-04-07 20:52:51 - INFO - [azure_client.py:17] - Azure AI Client initialized successfully
2025-04-07 20:52:51 - INFO - [database.py:38] - Database manager initialized with connection: sqlite:///text2sql.db
2025-04-07 20:52:51 - INFO - [feedback_manager.py:35] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-04-07 20:52:58 - INFO - [feedback_manager.py:35] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-04-07 20:52:58 - INFO - [feedback_manager.py:49] - Attempting database connection
2025-04-07 20:52:58 - INFO - [feedback_manager.py:53] - Database connection established in 0.00s
2025-04-07 20:52:58 - INFO - [vector_store.py:38] - Connecting to vector database at ./vector_store.db
2025-04-07 20:52:59 - INFO - [vector_store.py:42] - Vector database connection established in 1.07s
2025-04-07 20:52:59 - INFO - [vector_store.py:75] - Collection 'query_embeddings' already exists
2025-04-07 20:52:59 - INFO - [feedback_manager.py:514] - Retrieved 2 samples (page 1, limit 10)
2025-04-07 20:53:10 - INFO - [feedback_manager.py:35] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-04-07 20:53:10 - INFO - [feedback_manager.py:49] - Attempting database connection
2025-04-07 20:53:10 - INFO - [feedback_manager.py:53] - Database connection established in 0.01s
2025-04-07 20:53:10 - INFO - [vector_store.py:38] - Connecting to vector database at ./vector_store.db
2025-04-07 20:53:10 - INFO - [vector_store.py:42] - Vector database connection established in 0.01s
2025-04-07 20:53:10 - INFO - [vector_store.py:75] - Collection 'query_embeddings' already exists
2025-04-07 20:53:10 - INFO - [feedback_manager.py:514] - Retrieved 2 samples (page 1, limit 10)
2025-04-07 20:53:15 - INFO - [database.py:44] - Attempting database connection
2025-04-07 20:53:15 - INFO - [database.py:48] - Database connection established in 0.00s
2025-04-07 20:53:16 - INFO - [llm_engine.py:56] - [TABLE] Completion generation started
2025-04-07 20:53:17 - INFO - [llm_engine.py:119] - [TABLE] Completion generation completed in 1.61s
2025-04-07 20:53:17 - INFO - [llm_engine.py:120] - **************************
2025-04-07 20:53:17 - INFO - [llm_engine.py:56] - [COLUMN] Completion generation started
2025-04-07 20:53:18 - INFO - [llm_engine.py:119] - [COLUMN] Completion generation completed in 1.32s
2025-04-07 20:53:18 - INFO - [llm_engine.py:120] - **************************
2025-04-07 20:53:18 - INFO - [feedback_manager.py:260] - Stage 1: Vector search for 'get me count of customers by order month...'
2025-04-07 20:53:18 - INFO - [feedback_manager.py:74] - Loading embedding model 'sentence-transformers/all-MiniLM-L12-v2'
2025-04-07 20:53:24 - INFO - [feedback_manager.py:77] - Embedding model loaded in 5.13s
2025-04-07 20:53:24 - INFO - [vector_store.py:38] - Connecting to vector database at ./vector_store.db
2025-04-07 20:53:24 - INFO - [vector_store.py:42] - Vector database connection established in 0.16s
2025-04-07 20:53:24 - INFO - [vector_store.py:75] - Collection 'query_embeddings' already exists
2025-04-07 20:53:24 - WARNING - [feedback_manager.py:282] - No candidates found from vector search, falling back to text-based search
2025-04-07 20:53:24 - INFO - [feedback_manager.py:49] - Attempting database connection
2025-04-07 20:53:24 - INFO - [feedback_manager.py:53] - Database connection established in 0.00s
2025-04-07 20:53:24 - INFO - [vector_store.py:38] - Connecting to vector database at ./vector_store.db
2025-04-07 20:53:24 - INFO - [vector_store.py:42] - Vector database connection established in 0.01s
2025-04-07 20:53:24 - INFO - [vector_store.py:75] - Collection 'query_embeddings' already exists
2025-04-07 20:53:24 - INFO - [feedback_manager.py:396] - Found 2 similar queries using text-based search for 'get me count of customers by order month...'
2025-04-07 20:53:24 - INFO - [azure_client.py:35] - SQL generation started for query: 'get me count of customers by order month'
2025-04-07 20:53:24 - INFO - [azure_client.py:69] - Including schema information (404 chars)
2025-04-07 20:53:24 - INFO - [azure_client.py:76] - Including 1 join conditions
2025-04-07 20:53:24 - INFO - [azure_client.py:97] - Including 2 SQL examples from feedback similarity search
2025-04-07 20:53:24 - INFO - [azure_client.py:114] - PROMPT: [{'role': 'system', 'content': "You are an expert SQL assistant. Convert natural language questions into precise, executable SQL queries.\nYour task is to:\n1. Analyze the provided schema carefully, noting table relationships and column types\n2. Generate a SQL query that accurately answers the user's question\n3. Consider performance by selecting only necessary columns\n4. Use appropriate JOIN conditions based on primary/foreign key relationships or provided join conditions\n5. Include a brief explanation of your query\n\nRules:\n- Include table names and column references exactly as provided in the schema\n- Use appropriate SQL functions based on column data types\n- Consider NULL values in your conditions\n- Use table aliases for better readability when joining multiple tables\n- Add column aliases for computed values\n- Format the SQL query with proper indentation\n- If similar queries are provided, strictly use that as format or syntax\n- Return the SQL inside a code block tagged with ```sql\n\nExample output format:\nHere's a query that will [explanation]...\n\n```sql\nSELECT ...\nFROM ...\nWHERE ...\n```"}, {'role': 'user', 'content': "Here's the database schema:\nTable: customers\nDescription: Customer information and profiles\nColumns: customer_id (INTEGER): Unique customer identifier\nPrimary Key(s): customer_id\n\nTable: orders\nDescription: Customer orders and transactions\nColumns: order_id (INTEGER): Unique order identifier, customer_id (INTEGER): Reference to customer who placed the order, order_date (TEXT): Date when order was placed\nPrimary Key(s): order_id\n"}, {'role': 'user', 'content': 'Use the following pre-defined join conditions when joining these tables:\n- When joining customers with orders, use: INNER JOIN orders ON customers.customer_id = orders.customer_id\n'}, {'role': 'user', 'content': "Here are some similar queries that were previously successful:\nQuestion: get me count of customers by order month\nSQL: SELECT \n    strftime('%Y-%m', o.order_date) AS order_month,\n    COUNT(DISTINCT c.customer_id) AS customer_count\nFROM \n    customers c\nINNER JOIN \n    orders o ON c.customer_id = o.customer_id\nGROUP BY \n    order_month\nORDER BY \n    order_month;\n\nQuestion: get me all the customers\nSQL: SELECT * FROM customers;\n\n"}, {'role': 'user', 'content': 'Convert this question to SQL: get me count of customers by order month'}]
2025-04-07 20:53:24 - INFO - [llm_engine.py:56] - [SQL_GEN] Completion generation started
2025-04-07 20:53:26 - INFO - [llm_engine.py:119] - [SQL_GEN] Completion generation completed in 1.88s
2025-04-07 20:53:26 - INFO - [llm_engine.py:120] - **************************
2025-04-07 20:53:26 - INFO - [azure_client.py:150] - Parsing SQL from model response
2025-04-07 20:53:26 - INFO - [azure_client.py:157] - Found SQL code block in response
2025-04-07 20:53:26 - INFO - [azure_client.py:171] - Extracted SQL query (244 chars) and explanation (103 chars)
2025-04-07 20:53:26 - INFO - [azure_client.py:124] - Generated SQL: SELECT 
    strftime('%Y-%m', o.order_date) AS order_month,
    COUNT(DISTINCT c.customer_id) AS customer_count
FROM 
    customers c
INNER JOIN 
    orders o ON c.customer_id = o.customer_id
GROUP BY 
    order_month
ORDER BY 
    order_month;
2025-04-07 20:53:26,359 - QUERY: 'get me count of customers by order month' → SQL: SELECT 
    strftime('%Y-%m', o.order_date) AS order_month,
    COUNT(DISTINCT c.customer_id) AS customer_count
FROM 
    customers c
INNER JOIN 
    orders o ON c.customer_id = o.customer_id
GROUP BY 
    order_month
ORDER BY 
    order_month;
2025-04-07 20:53:26 - INFO - [azure_client.py:132] - SQL generation completed in 1.91s
2025-04-07 20:53:26 - INFO - [database.py:65] - Executing SQL query: SELECT 
    strftime('%Y-%m', o.order_date) AS order_month,
    COUNT(DISTINCT c.customer_id) AS customer_count
FROM 
    customers c
INNER JOIN 
    orders o ON c.customer_id = o.customer_id
GROUP BY 
    order_month
ORDER BY 
    order_month;
2025-04-07 20:53:26 - INFO - [database.py:86] - Query returned 2 rows with 2 columns
2025-04-07 20:53:26 - INFO - [database.py:95] - Query processing completed in 0.02s
2025-04-07 20:56:20 - INFO - [azure_client.py:186] - Closing Azure AI client connection
2025-04-07 20:56:20 - INFO - [database.py:258] - Closing database connection
2025-04-07 20:56:20 - INFO - [feedback_manager.py:750] - Closing database connections
2025-04-07 20:56:20 - INFO - [vector_store.py:288] - Closing vector database connection
2025-04-07 20:56:29 - INFO - [app.py:67] - Debug logging enabled for SQL generator and agents
2025-04-07 20:56:29 - INFO - [llm_engine.py:28] - Initializing LLM Engine with endpoint: https://openrouter.ai/api/v1
2025-04-07 20:56:29 - INFO - [llm_engine.py:29] - Using model: openrouter/quasar-alpha
2025-04-07 20:56:29 - INFO - [llm_engine.py:37] - LLM Engine initialized successfully
2025-04-07 20:56:29 - INFO - [llm_engine.py:28] - Initializing LLM Engine with endpoint: https://openrouter.ai/api/v1
2025-04-07 20:56:29 - INFO - [llm_engine.py:29] - Using model: openrouter/quasar-alpha
2025-04-07 20:56:29 - INFO - [llm_engine.py:37] - LLM Engine initialized successfully
2025-04-07 20:56:29 - INFO - [llm_engine.py:28] - Initializing LLM Engine with endpoint: https://openrouter.ai/api/v1
2025-04-07 20:56:29 - INFO - [llm_engine.py:29] - Using model: openrouter/quasar-alpha
2025-04-07 20:56:29 - INFO - [llm_engine.py:37] - LLM Engine initialized successfully
2025-04-07 20:56:29 - INFO - [azure_client.py:11] - Initializing Azure AI Client using LLM Engine
2025-04-07 20:56:29 - INFO - [llm_engine.py:28] - Initializing LLM Engine with endpoint: https://openrouter.ai/api/v1
2025-04-07 20:56:29 - INFO - [llm_engine.py:29] - Using model: openrouter/quasar-alpha
2025-04-07 20:56:29 - INFO - [llm_engine.py:37] - LLM Engine initialized successfully
2025-04-07 20:56:29 - INFO - [azure_client.py:17] - Azure AI Client initialized successfully
2025-04-07 20:56:29 - INFO - [database.py:38] - Database manager initialized with connection: sqlite:///text2sql.db
2025-04-07 20:56:29 - INFO - [feedback_manager.py:35] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-04-07 20:57:13 - INFO - [azure_client.py:186] - Closing Azure AI client connection
2025-04-07 20:57:13 - INFO - [database.py:258] - Closing database connection
2025-04-07 20:57:13 - INFO - [feedback_manager.py:750] - Closing database connections
2025-04-07 20:57:13 - INFO - [vector_store.py:288] - Closing vector database connection
2025-04-07 20:57:22 - INFO - [app.py:67] - Debug logging enabled for SQL generator and agents
2025-04-07 20:57:22 - INFO - [llm_engine.py:28] - Initializing LLM Engine with endpoint: https://openrouter.ai/api/v1
2025-04-07 20:57:22 - INFO - [llm_engine.py:29] - Using model: openrouter/quasar-alpha
2025-04-07 20:57:22 - INFO - [llm_engine.py:37] - LLM Engine initialized successfully
2025-04-07 20:57:22 - INFO - [llm_engine.py:28] - Initializing LLM Engine with endpoint: https://openrouter.ai/api/v1
2025-04-07 20:57:22 - INFO - [llm_engine.py:29] - Using model: openrouter/quasar-alpha
2025-04-07 20:57:22 - INFO - [llm_engine.py:37] - LLM Engine initialized successfully
2025-04-07 20:57:22 - INFO - [llm_engine.py:28] - Initializing LLM Engine with endpoint: https://openrouter.ai/api/v1
2025-04-07 20:57:22 - INFO - [llm_engine.py:29] - Using model: openrouter/quasar-alpha
2025-04-07 20:57:22 - INFO - [llm_engine.py:37] - LLM Engine initialized successfully
2025-04-07 20:57:22 - INFO - [azure_client.py:11] - Initializing Azure AI Client using LLM Engine
2025-04-07 20:57:22 - INFO - [llm_engine.py:28] - Initializing LLM Engine with endpoint: https://openrouter.ai/api/v1
2025-04-07 20:57:22 - INFO - [llm_engine.py:29] - Using model: openrouter/quasar-alpha
2025-04-07 20:57:22 - INFO - [llm_engine.py:37] - LLM Engine initialized successfully
2025-04-07 20:57:22 - INFO - [azure_client.py:17] - Azure AI Client initialized successfully
2025-04-07 20:57:22 - INFO - [database.py:38] - Database manager initialized with connection: sqlite:///text2sql.db
2025-04-07 20:57:22 - INFO - [feedback_manager.py:35] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-04-07 20:57:25 - INFO - [database.py:44] - Attempting database connection
2025-04-07 20:57:25 - INFO - [database.py:48] - Database connection established in 0.00s
2025-04-07 20:57:25 - INFO - [llm_engine.py:56] - [TABLE] Completion generation started
2025-04-07 20:57:27 - INFO - [llm_engine.py:119] - [TABLE] Completion generation completed in 1.59s
2025-04-07 20:57:27 - INFO - [llm_engine.py:120] - **************************
2025-04-07 20:57:27 - INFO - [llm_engine.py:56] - [COLUMN] Completion generation started
2025-04-07 20:57:28 - INFO - [llm_engine.py:119] - [COLUMN] Completion generation completed in 1.27s
2025-04-07 20:57:28 - INFO - [llm_engine.py:120] - **************************
2025-04-07 20:57:28 - INFO - [feedback_manager.py:260] - Stage 1: Vector search for 'get me count of customers by order month...'
2025-04-07 20:57:28 - INFO - [feedback_manager.py:74] - Loading embedding model 'sentence-transformers/all-MiniLM-L12-v2'
2025-04-07 20:57:37 - INFO - [feedback_manager.py:77] - Embedding model loaded in 8.78s
2025-04-07 20:57:37 - INFO - [vector_store.py:38] - Connecting to vector database at ./vector_store.db
2025-04-07 20:57:38 - INFO - [vector_store.py:42] - Vector database connection established in 1.03s
2025-04-07 20:57:38 - INFO - [vector_store.py:75] - Collection 'query_embeddings' already exists
2025-04-07 20:57:38 - WARNING - [feedback_manager.py:281] - No candidates found from vector search, falling back to text-based search
2025-04-07 20:57:38 - INFO - [feedback_manager.py:49] - Attempting database connection
2025-04-07 20:57:38 - INFO - [feedback_manager.py:53] - Database connection established in 0.00s
2025-04-07 20:57:38 - INFO - [vector_store.py:38] - Connecting to vector database at ./vector_store.db
2025-04-07 20:57:38 - INFO - [vector_store.py:42] - Vector database connection established in 0.01s
2025-04-07 20:57:38 - INFO - [vector_store.py:75] - Collection 'query_embeddings' already exists
2025-04-07 20:57:38 - INFO - [feedback_manager.py:395] - Found 2 similar queries using text-based search for 'get me count of customers by order month...'
2025-04-07 20:57:38 - INFO - [azure_client.py:35] - SQL generation started for query: 'get me count of customers by order month'
2025-04-07 20:57:38 - INFO - [azure_client.py:69] - Including schema information (404 chars)
2025-04-07 20:57:38 - INFO - [azure_client.py:76] - Including 1 join conditions
2025-04-07 20:57:38 - INFO - [azure_client.py:97] - Including 2 SQL examples from feedback similarity search
2025-04-07 20:57:38 - INFO - [azure_client.py:114] - PROMPT: [{'role': 'system', 'content': "You are an expert SQL assistant. Convert natural language questions into precise, executable SQL queries.\nYour task is to:\n1. Analyze the provided schema carefully, noting table relationships and column types\n2. Generate a SQL query that accurately answers the user's question\n3. Consider performance by selecting only necessary columns\n4. Use appropriate JOIN conditions based on primary/foreign key relationships or provided join conditions\n5. Include a brief explanation of your query\n\nRules:\n- Include table names and column references exactly as provided in the schema\n- Use appropriate SQL functions based on column data types\n- Consider NULL values in your conditions\n- Use table aliases for better readability when joining multiple tables\n- Add column aliases for computed values\n- Format the SQL query with proper indentation\n- If similar queries are provided, strictly use that as format or syntax\n- Return the SQL inside a code block tagged with ```sql\n\nExample output format:\nHere's a query that will [explanation]...\n\n```sql\nSELECT ...\nFROM ...\nWHERE ...\n```"}, {'role': 'user', 'content': "Here's the database schema:\nTable: customers\nDescription: Customer information and profiles\nColumns: customer_id (INTEGER): Unique customer identifier\nPrimary Key(s): customer_id\n\nTable: orders\nDescription: Customer orders and transactions\nColumns: order_id (INTEGER): Unique order identifier, customer_id (INTEGER): Reference to customer who placed the order, order_date (TEXT): Date when order was placed\nPrimary Key(s): order_id\n"}, {'role': 'user', 'content': 'Use the following pre-defined join conditions when joining these tables:\n- When joining customers with orders, use: INNER JOIN orders ON customers.customer_id = orders.customer_id\n'}, {'role': 'user', 'content': "Here are some similar queries that were previously successful:\nQuestion: get me count of customers by order month\nSQL: SELECT \n    strftime('%Y-%m', o.order_date) AS order_month,\n    COUNT(DISTINCT c.customer_id) AS customer_count\nFROM \n    customers c\nINNER JOIN \n    orders o ON c.customer_id = o.customer_id\nGROUP BY \n    order_month\nORDER BY \n    order_month;\n\nQuestion: get me all the customers\nSQL: SELECT * FROM customers;\n\n"}, {'role': 'user', 'content': 'Convert this question to SQL: get me count of customers by order month'}]
2025-04-07 20:57:38 - INFO - [llm_engine.py:56] - [SQL_GEN] Completion generation started
2025-04-07 20:57:40 - INFO - [llm_engine.py:119] - [SQL_GEN] Completion generation completed in 1.91s
2025-04-07 20:57:40 - INFO - [llm_engine.py:120] - **************************
2025-04-07 20:57:40 - INFO - [azure_client.py:150] - Parsing SQL from model response
2025-04-07 20:57:40 - INFO - [azure_client.py:157] - Found SQL code block in response
2025-04-07 20:57:40 - INFO - [azure_client.py:171] - Extracted SQL query (244 chars) and explanation (112 chars)
2025-04-07 20:57:40 - INFO - [azure_client.py:124] - Generated SQL: SELECT 
    strftime('%Y-%m', o.order_date) AS order_month,
    COUNT(DISTINCT c.customer_id) AS customer_count
FROM 
    customers c
INNER JOIN 
    orders o ON c.customer_id = o.customer_id
GROUP BY 
    order_month
ORDER BY 
    order_month;
2025-04-07 20:57:40,449 - QUERY: 'get me count of customers by order month' → SQL: SELECT 
    strftime('%Y-%m', o.order_date) AS order_month,
    COUNT(DISTINCT c.customer_id) AS customer_count
FROM 
    customers c
INNER JOIN 
    orders o ON c.customer_id = o.customer_id
GROUP BY 
    order_month
ORDER BY 
    order_month;
2025-04-07 20:57:40 - INFO - [azure_client.py:132] - SQL generation completed in 1.92s
2025-04-07 20:57:40 - INFO - [database.py:65] - Executing SQL query: SELECT 
    strftime('%Y-%m', o.order_date) AS order_month,
    COUNT(DISTINCT c.customer_id) AS customer_count
FROM 
    customers c
INNER JOIN 
    orders o ON c.customer_id = o.customer_id
GROUP BY 
    order_month
ORDER BY 
    order_month;
2025-04-07 20:57:40 - INFO - [database.py:86] - Query returned 2 rows with 2 columns
2025-04-07 20:57:40 - INFO - [database.py:95] - Query processing completed in 0.01s
2025-04-07 20:58:25 - INFO - [feedback_manager.py:35] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-04-07 20:58:25 - INFO - [feedback_manager.py:49] - Attempting database connection
2025-04-07 20:58:25 - INFO - [feedback_manager.py:53] - Database connection established in 0.00s
2025-04-07 20:58:25 - INFO - [vector_store.py:38] - Connecting to vector database at ./vector_store.db
2025-04-07 20:58:25 - INFO - [vector_store.py:42] - Vector database connection established in 0.00s
2025-04-07 20:58:25 - INFO - [vector_store.py:75] - Collection 'query_embeddings' already exists
2025-04-07 20:58:25 - INFO - [feedback_manager.py:513] - Retrieved 2 samples (page 1, limit 10)
2025-04-07 20:59:48 - INFO - [feedback_manager.py:49] - Attempting database connection
2025-04-07 20:59:48 - INFO - [feedback_manager.py:53] - Database connection established in 0.00s
2025-04-07 20:59:48 - INFO - [vector_store.py:38] - Connecting to vector database at ./vector_store.db
2025-04-07 20:59:48 - INFO - [vector_store.py:42] - Vector database connection established in 0.00s
2025-04-07 20:59:48 - INFO - [vector_store.py:75] - Collection 'query_embeddings' already exists
2025-04-07 20:59:48 - INFO - [feedback_manager.py:429] - Feedback stats: 3 total, 2 positive, 1 negative
2025-04-07 21:02:06 - INFO - [azure_client.py:186] - Closing Azure AI client connection
2025-04-07 21:02:06 - INFO - [database.py:258] - Closing database connection
2025-04-07 21:02:06 - INFO - [feedback_manager.py:749] - Closing database connections
2025-04-07 21:02:06 - INFO - [vector_store.py:288] - Closing vector database connection
2025-04-07 21:02:10 - INFO - [app.py:67] - Debug logging enabled for SQL generator and agents
2025-04-07 21:02:10 - INFO - [llm_engine.py:28] - Initializing LLM Engine with endpoint: https://openrouter.ai/api/v1
2025-04-07 21:02:10 - INFO - [llm_engine.py:29] - Using model: openrouter/quasar-alpha
2025-04-07 21:02:11 - INFO - [llm_engine.py:37] - LLM Engine initialized successfully
2025-04-07 21:02:11 - INFO - [llm_engine.py:28] - Initializing LLM Engine with endpoint: https://openrouter.ai/api/v1
2025-04-07 21:02:11 - INFO - [llm_engine.py:29] - Using model: openrouter/quasar-alpha
2025-04-07 21:02:11 - INFO - [llm_engine.py:37] - LLM Engine initialized successfully
2025-04-07 21:02:11 - INFO - [llm_engine.py:28] - Initializing LLM Engine with endpoint: https://openrouter.ai/api/v1
2025-04-07 21:02:11 - INFO - [llm_engine.py:29] - Using model: openrouter/quasar-alpha
2025-04-07 21:02:11 - INFO - [llm_engine.py:37] - LLM Engine initialized successfully
2025-04-07 21:02:11 - INFO - [azure_client.py:11] - Initializing Azure AI Client using LLM Engine
2025-04-07 21:02:11 - INFO - [llm_engine.py:28] - Initializing LLM Engine with endpoint: https://openrouter.ai/api/v1
2025-04-07 21:02:11 - INFO - [llm_engine.py:29] - Using model: openrouter/quasar-alpha
2025-04-07 21:02:11 - INFO - [llm_engine.py:37] - LLM Engine initialized successfully
2025-04-07 21:02:11 - INFO - [azure_client.py:17] - Azure AI Client initialized successfully
2025-04-07 21:02:11 - INFO - [database.py:38] - Database manager initialized with connection: sqlite:///text2sql.db
2025-04-07 21:02:11 - INFO - [feedback_manager.py:35] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-04-07 21:02:12 - INFO - [feedback_manager.py:49] - Attempting database connection
2025-04-07 21:02:12 - INFO - [feedback_manager.py:53] - Database connection established in 0.00s
2025-04-07 21:02:12 - INFO - [vector_store.py:38] - Connecting to vector database at ./vector_store.db
2025-04-07 21:02:13 - INFO - [vector_store.py:42] - Vector database connection established in 1.03s
2025-04-07 21:02:13 - INFO - [vector_store.py:75] - Collection 'query_embeddings' already exists
2025-04-07 21:02:13 - INFO - [feedback_manager.py:679] - Starting migration of existing embeddings to vector store
2025-04-07 21:02:13 - INFO - [feedback_manager.py:733] - Embedding migration completed in 0.05s: 3 succeeded, 0 failed
2025-04-07 21:02:34 - INFO - [feedback_manager.py:35] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-04-07 21:02:34 - INFO - [feedback_manager.py:49] - Attempting database connection
2025-04-07 21:02:34 - INFO - [feedback_manager.py:53] - Database connection established in 0.00s
2025-04-07 21:02:34 - INFO - [vector_store.py:38] - Connecting to vector database at ./vector_store.db
2025-04-07 21:02:34 - INFO - [vector_store.py:42] - Vector database connection established in 0.00s
2025-04-07 21:02:34 - INFO - [vector_store.py:75] - Collection 'query_embeddings' already exists
2025-04-07 21:02:34 - INFO - [feedback_manager.py:513] - Retrieved 2 samples (page 1, limit 10)
2025-04-07 21:02:47 - INFO - [database.py:44] - Attempting database connection
2025-04-07 21:02:47 - INFO - [database.py:48] - Database connection established in 0.00s
2025-04-07 21:02:47 - INFO - [llm_engine.py:56] - [TABLE] Completion generation started
2025-04-07 21:02:48 - INFO - [llm_engine.py:119] - [TABLE] Completion generation completed in 1.65s
2025-04-07 21:02:48 - INFO - [llm_engine.py:120] - **************************
2025-04-07 21:02:48 - INFO - [llm_engine.py:56] - [COLUMN] Completion generation started
2025-04-07 21:02:50 - INFO - [llm_engine.py:119] - [COLUMN] Completion generation completed in 1.46s
2025-04-07 21:02:50 - INFO - [llm_engine.py:120] - **************************
2025-04-07 21:02:50 - INFO - [feedback_manager.py:260] - Stage 1: Vector search for 'get me count of customers by order month...'
2025-04-07 21:02:50 - INFO - [feedback_manager.py:74] - Loading embedding model 'sentence-transformers/all-MiniLM-L12-v2'
2025-04-07 21:03:01 - INFO - [feedback_manager.py:77] - Embedding model loaded in 11.08s
2025-04-07 21:03:01 - INFO - [vector_store.py:38] - Connecting to vector database at ./vector_store.db
2025-04-07 21:03:01 - INFO - [vector_store.py:42] - Vector database connection established in 0.01s
2025-04-07 21:03:01 - INFO - [vector_store.py:75] - Collection 'query_embeddings' already exists
2025-04-07 21:03:01 - ERROR - [vector_store.py:183] - Error searching similar vectors: 'query_text'
Traceback (most recent call last):
  File "/home/vijay/text2sql/src/utils/vector_store.py", line 169, in search_similar
    'query_text': hit['query_text'],
                  ~~~^^^^^^^^^^^^^^
KeyError: 'query_text'
2025-04-07 21:03:01 - WARNING - [feedback_manager.py:281] - No candidates found from vector search, falling back to text-based search
2025-04-07 21:03:01 - INFO - [feedback_manager.py:49] - Attempting database connection
2025-04-07 21:03:01 - INFO - [feedback_manager.py:53] - Database connection established in 0.00s
2025-04-07 21:03:01 - INFO - [vector_store.py:38] - Connecting to vector database at ./vector_store.db
2025-04-07 21:03:01 - INFO - [vector_store.py:42] - Vector database connection established in 0.01s
2025-04-07 21:03:01 - INFO - [vector_store.py:75] - Collection 'query_embeddings' already exists
2025-04-07 21:03:01 - INFO - [feedback_manager.py:395] - Found 2 similar queries using text-based search for 'get me count of customers by order month...'
2025-04-07 21:03:01 - INFO - [azure_client.py:35] - SQL generation started for query: 'get me count of customers by order month'
2025-04-07 21:03:01 - INFO - [azure_client.py:69] - Including schema information (404 chars)
2025-04-07 21:03:01 - INFO - [azure_client.py:76] - Including 1 join conditions
2025-04-07 21:03:01 - INFO - [azure_client.py:97] - Including 2 SQL examples from feedback similarity search
2025-04-07 21:03:01 - INFO - [azure_client.py:114] - PROMPT: [{'role': 'system', 'content': "You are an expert SQL assistant. Convert natural language questions into precise, executable SQL queries.\nYour task is to:\n1. Analyze the provided schema carefully, noting table relationships and column types\n2. Generate a SQL query that accurately answers the user's question\n3. Consider performance by selecting only necessary columns\n4. Use appropriate JOIN conditions based on primary/foreign key relationships or provided join conditions\n5. Include a brief explanation of your query\n\nRules:\n- Include table names and column references exactly as provided in the schema\n- Use appropriate SQL functions based on column data types\n- Consider NULL values in your conditions\n- Use table aliases for better readability when joining multiple tables\n- Add column aliases for computed values\n- Format the SQL query with proper indentation\n- If similar queries are provided, strictly use that as format or syntax\n- Return the SQL inside a code block tagged with ```sql\n\nExample output format:\nHere's a query that will [explanation]...\n\n```sql\nSELECT ...\nFROM ...\nWHERE ...\n```"}, {'role': 'user', 'content': "Here's the database schema:\nTable: customers\nDescription: Customer information and profiles\nColumns: customer_id (INTEGER): Unique customer identifier\nPrimary Key(s): customer_id\n\nTable: orders\nDescription: Customer orders and transactions\nColumns: order_id (INTEGER): Unique order identifier, customer_id (INTEGER): Reference to customer who placed the order, order_date (TEXT): Date when order was placed\nPrimary Key(s): order_id\n"}, {'role': 'user', 'content': 'Use the following pre-defined join conditions when joining these tables:\n- When joining customers with orders, use: INNER JOIN orders ON customers.customer_id = orders.customer_id\n'}, {'role': 'user', 'content': "Here are some similar queries that were previously successful:\nQuestion: get me count of customers by order month\nSQL: SELECT \n    strftime('%Y-%m', o.order_date) AS order_month,\n    COUNT(DISTINCT c.customer_id) AS customer_count\nFROM \n    customers c\nINNER JOIN \n    orders o ON c.customer_id = o.customer_id\nGROUP BY \n    order_month\nORDER BY \n    order_month;\n\nQuestion: get me all the customers\nSQL: SELECT * FROM customers;\n\n"}, {'role': 'user', 'content': 'Convert this question to SQL: get me count of customers by order month'}]
2025-04-07 21:03:01 - INFO - [llm_engine.py:56] - [SQL_GEN] Completion generation started
2025-04-07 21:03:05 - INFO - [llm_engine.py:119] - [SQL_GEN] Completion generation completed in 4.25s
2025-04-07 21:03:05 - INFO - [llm_engine.py:120] - **************************
2025-04-07 21:03:05 - INFO - [azure_client.py:150] - Parsing SQL from model response
2025-04-07 21:03:05 - INFO - [azure_client.py:157] - Found SQL code block in response
2025-04-07 21:03:05 - INFO - [azure_client.py:171] - Extracted SQL query (244 chars) and explanation (104 chars)
2025-04-07 21:03:05 - INFO - [azure_client.py:124] - Generated SQL: SELECT 
    strftime('%Y-%m', o.order_date) AS order_month,
    COUNT(DISTINCT c.customer_id) AS customer_count
FROM 
    customers c
INNER JOIN 
    orders o ON c.customer_id = o.customer_id
GROUP BY 
    order_month
ORDER BY 
    order_month;
2025-04-07 21:03:05,785 - QUERY: 'get me count of customers by order month' → SQL: SELECT 
    strftime('%Y-%m', o.order_date) AS order_month,
    COUNT(DISTINCT c.customer_id) AS customer_count
FROM 
    customers c
INNER JOIN 
    orders o ON c.customer_id = o.customer_id
GROUP BY 
    order_month
ORDER BY 
    order_month;
2025-04-07 21:03:05 - INFO - [azure_client.py:132] - SQL generation completed in 4.27s
2025-04-07 21:03:05 - INFO - [database.py:65] - Executing SQL query: SELECT 
    strftime('%Y-%m', o.order_date) AS order_month,
    COUNT(DISTINCT c.customer_id) AS customer_count
FROM 
    customers c
INNER JOIN 
    orders o ON c.customer_id = o.customer_id
GROUP BY 
    order_month
ORDER BY 
    order_month;
2025-04-07 21:03:05 - INFO - [database.py:86] - Query returned 2 rows with 2 columns
2025-04-07 21:03:05 - INFO - [database.py:95] - Query processing completed in 0.01s
2025-04-07 21:04:33 - INFO - [azure_client.py:186] - Closing Azure AI client connection
2025-04-07 21:04:33 - INFO - [database.py:258] - Closing database connection
2025-04-07 21:04:33 - INFO - [feedback_manager.py:749] - Closing database connections
2025-04-07 21:04:33 - INFO - [vector_store.py:288] - Closing vector database connection
2025-04-07 21:04:38 - INFO - [app.py:67] - Debug logging enabled for SQL generator and agents
2025-04-07 21:04:38 - INFO - [llm_engine.py:28] - Initializing LLM Engine with endpoint: https://openrouter.ai/api/v1
2025-04-07 21:04:38 - INFO - [llm_engine.py:29] - Using model: openrouter/quasar-alpha
2025-04-07 21:04:38 - INFO - [llm_engine.py:37] - LLM Engine initialized successfully
2025-04-07 21:04:38 - INFO - [llm_engine.py:28] - Initializing LLM Engine with endpoint: https://openrouter.ai/api/v1
2025-04-07 21:04:38 - INFO - [llm_engine.py:29] - Using model: openrouter/quasar-alpha
2025-04-07 21:04:38 - INFO - [llm_engine.py:37] - LLM Engine initialized successfully
2025-04-07 21:04:38 - INFO - [llm_engine.py:28] - Initializing LLM Engine with endpoint: https://openrouter.ai/api/v1
2025-04-07 21:04:38 - INFO - [llm_engine.py:29] - Using model: openrouter/quasar-alpha
2025-04-07 21:04:39 - INFO - [llm_engine.py:37] - LLM Engine initialized successfully
2025-04-07 21:04:39 - INFO - [azure_client.py:11] - Initializing Azure AI Client using LLM Engine
2025-04-07 21:04:39 - INFO - [llm_engine.py:28] - Initializing LLM Engine with endpoint: https://openrouter.ai/api/v1
2025-04-07 21:04:39 - INFO - [llm_engine.py:29] - Using model: openrouter/quasar-alpha
2025-04-07 21:04:39 - INFO - [llm_engine.py:37] - LLM Engine initialized successfully
2025-04-07 21:04:39 - INFO - [azure_client.py:17] - Azure AI Client initialized successfully
2025-04-07 21:04:39 - INFO - [database.py:38] - Database manager initialized with connection: sqlite:///text2sql.db
2025-04-07 21:04:39 - INFO - [feedback_manager.py:35] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-04-07 21:04:44 - INFO - [database.py:44] - Attempting database connection
2025-04-07 21:04:44 - INFO - [database.py:48] - Database connection established in 0.00s
2025-04-07 21:04:44 - INFO - [llm_engine.py:56] - [TABLE] Completion generation started
2025-04-07 21:04:48 - INFO - [llm_engine.py:119] - [TABLE] Completion generation completed in 3.80s
2025-04-07 21:04:48 - INFO - [llm_engine.py:120] - **************************
2025-04-07 21:04:48 - INFO - [llm_engine.py:56] - [COLUMN] Completion generation started
2025-04-07 21:04:52 - INFO - [llm_engine.py:119] - [COLUMN] Completion generation completed in 4.73s
2025-04-07 21:04:52 - INFO - [llm_engine.py:120] - **************************
2025-04-07 21:04:52 - INFO - [feedback_manager.py:260] - Stage 1: Vector search for 'get me count of customers by order month...'
2025-04-07 21:04:52 - INFO - [feedback_manager.py:74] - Loading embedding model 'sentence-transformers/all-MiniLM-L12-v2'
2025-04-07 21:05:04 - INFO - [feedback_manager.py:77] - Embedding model loaded in 11.41s
2025-04-07 21:05:04 - INFO - [vector_store.py:38] - Connecting to vector database at ./vector_store.db
2025-04-07 21:05:05 - INFO - [vector_store.py:42] - Vector database connection established in 1.02s
2025-04-07 21:05:05 - INFO - [vector_store.py:75] - Collection 'query_embeddings' already exists
2025-04-07 21:05:05 - ERROR - [vector_store.py:183] - Error searching similar vectors: 'score'
Traceback (most recent call last):
  File "/home/vijay/text2sql/src/utils/vector_store.py", line 177, in search_similar
    'similarity': hit['score']
                  ~~~^^^^^^^^^
KeyError: 'score'
2025-04-07 21:05:05 - WARNING - [feedback_manager.py:281] - No candidates found from vector search, falling back to text-based search
2025-04-07 21:05:05 - INFO - [feedback_manager.py:49] - Attempting database connection
2025-04-07 21:05:05 - INFO - [feedback_manager.py:53] - Database connection established in 0.00s
2025-04-07 21:05:05 - INFO - [vector_store.py:38] - Connecting to vector database at ./vector_store.db
2025-04-07 21:05:05 - INFO - [vector_store.py:42] - Vector database connection established in 0.00s
2025-04-07 21:05:05 - INFO - [vector_store.py:75] - Collection 'query_embeddings' already exists
2025-04-07 21:05:05 - INFO - [feedback_manager.py:395] - Found 2 similar queries using text-based search for 'get me count of customers by order month...'
2025-04-07 21:05:05 - INFO - [azure_client.py:35] - SQL generation started for query: 'get me count of customers by order month'
2025-04-07 21:05:05 - INFO - [azure_client.py:69] - Including schema information (404 chars)
2025-04-07 21:05:05 - INFO - [azure_client.py:76] - Including 1 join conditions
2025-04-07 21:05:05 - INFO - [azure_client.py:97] - Including 2 SQL examples from feedback similarity search
2025-04-07 21:05:05 - INFO - [azure_client.py:114] - PROMPT: [{'role': 'system', 'content': "You are an expert SQL assistant. Convert natural language questions into precise, executable SQL queries.\nYour task is to:\n1. Analyze the provided schema carefully, noting table relationships and column types\n2. Generate a SQL query that accurately answers the user's question\n3. Consider performance by selecting only necessary columns\n4. Use appropriate JOIN conditions based on primary/foreign key relationships or provided join conditions\n5. Include a brief explanation of your query\n\nRules:\n- Include table names and column references exactly as provided in the schema\n- Use appropriate SQL functions based on column data types\n- Consider NULL values in your conditions\n- Use table aliases for better readability when joining multiple tables\n- Add column aliases for computed values\n- Format the SQL query with proper indentation\n- If similar queries are provided, strictly use that as format or syntax\n- Return the SQL inside a code block tagged with ```sql\n\nExample output format:\nHere's a query that will [explanation]...\n\n```sql\nSELECT ...\nFROM ...\nWHERE ...\n```"}, {'role': 'user', 'content': "Here's the database schema:\nTable: customers\nDescription: Customer information and profiles\nColumns: customer_id (INTEGER): Unique customer identifier\nPrimary Key(s): customer_id\n\nTable: orders\nDescription: Customer orders and transactions\nColumns: order_id (INTEGER): Unique order identifier, customer_id (INTEGER): Reference to customer who placed the order, order_date (TEXT): Date when order was placed\nPrimary Key(s): order_id\n"}, {'role': 'user', 'content': 'Use the following pre-defined join conditions when joining these tables:\n- When joining customers with orders, use: INNER JOIN orders ON customers.customer_id = orders.customer_id\n'}, {'role': 'user', 'content': "Here are some similar queries that were previously successful:\nQuestion: get me count of customers by order month\nSQL: SELECT \n    strftime('%Y-%m', o.order_date) AS order_month,\n    COUNT(DISTINCT c.customer_id) AS customer_count\nFROM \n    customers c\nINNER JOIN \n    orders o ON c.customer_id = o.customer_id\nGROUP BY \n    order_month\nORDER BY \n    order_month;\n\nQuestion: get me all the customers\nSQL: SELECT * FROM customers;\n\n"}, {'role': 'user', 'content': 'Convert this question to SQL: get me count of customers by order month'}]
2025-04-07 21:05:05 - INFO - [llm_engine.py:56] - [SQL_GEN] Completion generation started
2025-04-07 21:05:07 - INFO - [llm_engine.py:119] - [SQL_GEN] Completion generation completed in 2.20s
2025-04-07 21:05:07 - INFO - [llm_engine.py:120] - **************************
2025-04-07 21:05:07 - INFO - [azure_client.py:150] - Parsing SQL from model response
2025-04-07 21:05:07 - INFO - [azure_client.py:157] - Found SQL code block in response
2025-04-07 21:05:07 - INFO - [azure_client.py:171] - Extracted SQL query (244 chars) and explanation (101 chars)
2025-04-07 21:05:07 - INFO - [azure_client.py:124] - Generated SQL: SELECT 
    strftime('%Y-%m', o.order_date) AS order_month,
    COUNT(DISTINCT c.customer_id) AS customer_count
FROM 
    customers c
INNER JOIN 
    orders o ON c.customer_id = o.customer_id
GROUP BY 
    order_month
ORDER BY 
    order_month;
2025-04-07 21:05:07,515 - QUERY: 'get me count of customers by order month' → SQL: SELECT 
    strftime('%Y-%m', o.order_date) AS order_month,
    COUNT(DISTINCT c.customer_id) AS customer_count
FROM 
    customers c
INNER JOIN 
    orders o ON c.customer_id = o.customer_id
GROUP BY 
    order_month
ORDER BY 
    order_month;
2025-04-07 21:05:07 - INFO - [azure_client.py:132] - SQL generation completed in 2.22s
2025-04-07 21:05:07 - INFO - [database.py:65] - Executing SQL query: SELECT 
    strftime('%Y-%m', o.order_date) AS order_month,
    COUNT(DISTINCT c.customer_id) AS customer_count
FROM 
    customers c
INNER JOIN 
    orders o ON c.customer_id = o.customer_id
GROUP BY 
    order_month
ORDER BY 
    order_month;
2025-04-07 21:05:07 - INFO - [database.py:86] - Query returned 2 rows with 2 columns
2025-04-07 21:05:07 - INFO - [database.py:95] - Query processing completed in 0.01s
2025-04-07 21:05:40 - INFO - [azure_client.py:186] - Closing Azure AI client connection
2025-04-07 21:05:40 - INFO - [database.py:258] - Closing database connection
2025-04-07 21:05:40 - INFO - [feedback_manager.py:749] - Closing database connections
2025-04-07 21:05:40 - INFO - [vector_store.py:288] - Closing vector database connection
2025-04-07 21:05:47 - INFO - [app.py:67] - Debug logging enabled for SQL generator and agents
2025-04-07 21:05:47 - INFO - [llm_engine.py:28] - Initializing LLM Engine with endpoint: https://openrouter.ai/api/v1
2025-04-07 21:05:47 - INFO - [llm_engine.py:29] - Using model: openrouter/quasar-alpha
2025-04-07 21:05:47 - INFO - [llm_engine.py:37] - LLM Engine initialized successfully
2025-04-07 21:05:47 - INFO - [llm_engine.py:28] - Initializing LLM Engine with endpoint: https://openrouter.ai/api/v1
2025-04-07 21:05:47 - INFO - [llm_engine.py:29] - Using model: openrouter/quasar-alpha
2025-04-07 21:05:47 - INFO - [llm_engine.py:37] - LLM Engine initialized successfully
2025-04-07 21:05:47 - INFO - [llm_engine.py:28] - Initializing LLM Engine with endpoint: https://openrouter.ai/api/v1
2025-04-07 21:05:47 - INFO - [llm_engine.py:29] - Using model: openrouter/quasar-alpha
2025-04-07 21:05:47 - INFO - [llm_engine.py:37] - LLM Engine initialized successfully
2025-04-07 21:05:47 - INFO - [azure_client.py:11] - Initializing Azure AI Client using LLM Engine
2025-04-07 21:05:47 - INFO - [llm_engine.py:28] - Initializing LLM Engine with endpoint: https://openrouter.ai/api/v1
2025-04-07 21:05:47 - INFO - [llm_engine.py:29] - Using model: openrouter/quasar-alpha
2025-04-07 21:05:48 - INFO - [llm_engine.py:37] - LLM Engine initialized successfully
2025-04-07 21:05:48 - INFO - [azure_client.py:17] - Azure AI Client initialized successfully
2025-04-07 21:05:48 - INFO - [database.py:38] - Database manager initialized with connection: sqlite:///text2sql.db
2025-04-07 21:05:48 - INFO - [feedback_manager.py:35] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-04-07 21:05:49 - INFO - [database.py:44] - Attempting database connection
2025-04-07 21:05:49 - INFO - [database.py:48] - Database connection established in 0.00s
2025-04-07 21:05:49 - INFO - [llm_engine.py:56] - [TABLE] Completion generation started
2025-04-07 21:05:50 - INFO - [llm_engine.py:119] - [TABLE] Completion generation completed in 1.68s
2025-04-07 21:05:50 - INFO - [llm_engine.py:120] - **************************
2025-04-07 21:05:50 - INFO - [llm_engine.py:56] - [COLUMN] Completion generation started
2025-04-07 21:05:55 - INFO - [llm_engine.py:119] - [COLUMN] Completion generation completed in 4.43s
2025-04-07 21:05:55 - INFO - [llm_engine.py:120] - **************************
2025-04-07 21:05:55 - INFO - [feedback_manager.py:260] - Stage 1: Vector search for 'get me count of customers by order month...'
2025-04-07 21:05:55 - INFO - [feedback_manager.py:74] - Loading embedding model 'sentence-transformers/all-MiniLM-L12-v2'
2025-04-07 21:06:01 - INFO - [feedback_manager.py:77] - Embedding model loaded in 6.13s
2025-04-07 21:06:01 - INFO - [vector_store.py:38] - Connecting to vector database at ./vector_store.db
2025-04-07 21:06:02 - INFO - [vector_store.py:42] - Vector database connection established in 1.03s
2025-04-07 21:06:02 - INFO - [vector_store.py:75] - Collection 'query_embeddings' already exists
2025-04-07 21:06:02 - INFO - [feedback_manager.py:284] - Found 3 initial candidates from vector search
2025-04-07 21:06:02 - INFO - [feedback_manager.py:288] - Stage 2: Reranking 3 candidates
2025-04-07 21:06:02 - INFO - [feedback_manager.py:118] - Loading reranking model 'cross-encoder/ms-marco-MiniLM-L-6-v2'
2025-04-07 21:06:06 - INFO - [feedback_manager.py:122] - Reranking model loaded in 4.08s
2025-04-07 21:06:06 - WARNING - [feedback_manager.py:314] - No candidates with positive reranking scores, returning vector search results
2025-04-07 21:06:06 - INFO - [azure_client.py:35] - SQL generation started for query: 'get me count of customers by order month'
2025-04-07 21:06:06 - INFO - [azure_client.py:69] - Including schema information (404 chars)
2025-04-07 21:06:06 - INFO - [azure_client.py:76] - Including 1 join conditions
2025-04-07 21:06:06 - INFO - [azure_client.py:97] - Including 2 SQL examples from feedback similarity search
2025-04-07 21:06:06 - INFO - [azure_client.py:114] - PROMPT: [{'role': 'system', 'content': "You are an expert SQL assistant. Convert natural language questions into precise, executable SQL queries.\nYour task is to:\n1. Analyze the provided schema carefully, noting table relationships and column types\n2. Generate a SQL query that accurately answers the user's question\n3. Consider performance by selecting only necessary columns\n4. Use appropriate JOIN conditions based on primary/foreign key relationships or provided join conditions\n5. Include a brief explanation of your query\n\nRules:\n- Include table names and column references exactly as provided in the schema\n- Use appropriate SQL functions based on column data types\n- Consider NULL values in your conditions\n- Use table aliases for better readability when joining multiple tables\n- Add column aliases for computed values\n- Format the SQL query with proper indentation\n- If similar queries are provided, strictly use that as format or syntax\n- Return the SQL inside a code block tagged with ```sql\n\nExample output format:\nHere's a query that will [explanation]...\n\n```sql\nSELECT ...\nFROM ...\nWHERE ...\n```"}, {'role': 'user', 'content': "Here's the database schema:\nTable: customers\nDescription: Customer information and profiles\nColumns: customer_id (INTEGER): Unique customer identifier\nPrimary Key(s): customer_id\n\nTable: orders\nDescription: Customer orders and transactions\nColumns: order_id (INTEGER): Unique order identifier, customer_id (INTEGER): Reference to customer who placed the order, order_date (TEXT): Date when order was placed\nPrimary Key(s): order_id\n"}, {'role': 'user', 'content': 'Use the following pre-defined join conditions when joining these tables:\n- When joining customers with orders, use: INNER JOIN orders ON customers.customer_id = orders.customer_id\n'}, {'role': 'user', 'content': 'Here are some similar queries that were previously successful:\nQuestion: \nSQL: \n\nQuestion: \nSQL: \n\n'}, {'role': 'user', 'content': 'Convert this question to SQL: get me count of customers by order month'}]
2025-04-07 21:06:06 - INFO - [llm_engine.py:56] - [SQL_GEN] Completion generation started
2025-04-07 21:06:09 - INFO - [llm_engine.py:119] - [SQL_GEN] Completion generation completed in 3.20s
2025-04-07 21:06:10 - INFO - [llm_engine.py:120] - **************************
2025-04-07 21:06:10 - INFO - [azure_client.py:150] - Parsing SQL from model response
2025-04-07 21:06:10 - INFO - [azure_client.py:157] - Found SQL code block in response
2025-04-07 21:06:10 - INFO - [azure_client.py:171] - Extracted SQL query (239 chars) and explanation (177 chars)
2025-04-07 21:06:10 - INFO - [azure_client.py:124] - Generated SQL: SELECT
    strftime('%Y-%m', o.order_date) AS order_month,
    COUNT(DISTINCT c.customer_id) AS customer_count
FROM
    customers c
    INNER JOIN orders o ON c.customer_id = o.customer_id
GROUP BY
    order_month
ORDER BY
    order_month;
2025-04-07 21:06:10,014 - QUERY: 'get me count of customers by order month' → SQL: SELECT
    strftime('%Y-%m', o.order_date) AS order_month,
    COUNT(DISTINCT c.customer_id) AS customer_count
FROM
    customers c
    INNER JOIN orders o ON c.customer_id = o.customer_id
GROUP BY
    order_month
ORDER BY
    order_month;
2025-04-07 21:06:10 - INFO - [azure_client.py:132] - SQL generation completed in 3.22s
2025-04-07 21:06:10 - INFO - [database.py:65] - Executing SQL query: SELECT
    strftime('%Y-%m', o.order_date) AS order_month,
    COUNT(DISTINCT c.customer_id) AS customer_count
FROM
    customers c
    INNER JOIN orders o ON c.customer_id = o.customer_id
GROUP BY
    order_month
ORDER BY
    order_month;
2025-04-07 21:06:10 - INFO - [database.py:86] - Query returned 2 rows with 2 columns
2025-04-07 21:06:10 - INFO - [database.py:95] - Query processing completed in 0.01s
2025-04-07 21:07:17 - INFO - [azure_client.py:186] - Closing Azure AI client connection
2025-04-07 21:07:17 - INFO - [database.py:258] - Closing database connection
2025-04-07 21:07:17 - INFO - [feedback_manager.py:749] - Closing database connections
2025-04-07 21:07:17 - INFO - [vector_store.py:288] - Closing vector database connection
2025-04-07 21:07:22 - INFO - [app.py:67] - Debug logging enabled for SQL generator and agents
2025-04-07 21:07:22 - INFO - [llm_engine.py:28] - Initializing LLM Engine with endpoint: https://openrouter.ai/api/v1
2025-04-07 21:07:22 - INFO - [llm_engine.py:29] - Using model: openrouter/quasar-alpha
2025-04-07 21:07:22 - INFO - [llm_engine.py:37] - LLM Engine initialized successfully
2025-04-07 21:07:22 - INFO - [llm_engine.py:28] - Initializing LLM Engine with endpoint: https://openrouter.ai/api/v1
2025-04-07 21:07:22 - INFO - [llm_engine.py:29] - Using model: openrouter/quasar-alpha
2025-04-07 21:07:22 - INFO - [llm_engine.py:37] - LLM Engine initialized successfully
2025-04-07 21:07:22 - INFO - [llm_engine.py:28] - Initializing LLM Engine with endpoint: https://openrouter.ai/api/v1
2025-04-07 21:07:22 - INFO - [llm_engine.py:29] - Using model: openrouter/quasar-alpha
2025-04-07 21:07:22 - INFO - [llm_engine.py:37] - LLM Engine initialized successfully
2025-04-07 21:07:22 - INFO - [azure_client.py:11] - Initializing Azure AI Client using LLM Engine
2025-04-07 21:07:22 - INFO - [llm_engine.py:28] - Initializing LLM Engine with endpoint: https://openrouter.ai/api/v1
2025-04-07 21:07:22 - INFO - [llm_engine.py:29] - Using model: openrouter/quasar-alpha
2025-04-07 21:07:22 - INFO - [llm_engine.py:37] - LLM Engine initialized successfully
2025-04-07 21:07:22 - INFO - [azure_client.py:17] - Azure AI Client initialized successfully
2025-04-07 21:07:22 - INFO - [database.py:38] - Database manager initialized with connection: sqlite:///text2sql.db
2025-04-07 21:07:22 - INFO - [feedback_manager.py:35] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-04-07 21:09:11 - INFO - [azure_client.py:186] - Closing Azure AI client connection
2025-04-07 21:09:11 - INFO - [database.py:258] - Closing database connection
2025-04-07 21:09:11 - INFO - [feedback_manager.py:749] - Closing database connections
2025-04-07 21:09:11 - INFO - [vector_store.py:288] - Closing vector database connection
2025-04-07 21:09:18 - INFO - [app.py:67] - Debug logging enabled for SQL generator and agents
2025-04-07 21:09:18 - INFO - [llm_engine.py:28] - Initializing LLM Engine with endpoint: https://openrouter.ai/api/v1
2025-04-07 21:09:18 - INFO - [llm_engine.py:29] - Using model: openrouter/quasar-alpha
2025-04-07 21:09:18 - INFO - [llm_engine.py:37] - LLM Engine initialized successfully
2025-04-07 21:09:18 - INFO - [llm_engine.py:28] - Initializing LLM Engine with endpoint: https://openrouter.ai/api/v1
2025-04-07 21:09:18 - INFO - [llm_engine.py:29] - Using model: openrouter/quasar-alpha
2025-04-07 21:09:18 - INFO - [llm_engine.py:37] - LLM Engine initialized successfully
2025-04-07 21:09:18 - INFO - [llm_engine.py:28] - Initializing LLM Engine with endpoint: https://openrouter.ai/api/v1
2025-04-07 21:09:18 - INFO - [llm_engine.py:29] - Using model: openrouter/quasar-alpha
2025-04-07 21:09:18 - INFO - [llm_engine.py:37] - LLM Engine initialized successfully
2025-04-07 21:09:18 - INFO - [azure_client.py:11] - Initializing Azure AI Client using LLM Engine
2025-04-07 21:09:18 - INFO - [llm_engine.py:28] - Initializing LLM Engine with endpoint: https://openrouter.ai/api/v1
2025-04-07 21:09:18 - INFO - [llm_engine.py:29] - Using model: openrouter/quasar-alpha
2025-04-07 21:09:18 - INFO - [llm_engine.py:37] - LLM Engine initialized successfully
2025-04-07 21:09:18 - INFO - [azure_client.py:17] - Azure AI Client initialized successfully
2025-04-07 21:09:18 - INFO - [database.py:38] - Database manager initialized with connection: sqlite:///text2sql.db
2025-04-07 21:09:18 - INFO - [feedback_manager.py:35] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-04-07 21:09:31 - INFO - [database.py:44] - Attempting database connection
2025-04-07 21:09:31 - INFO - [database.py:48] - Database connection established in 0.00s
2025-04-07 21:09:31 - INFO - [llm_engine.py:56] - [TABLE] Completion generation started
2025-04-07 21:09:33 - INFO - [llm_engine.py:119] - [TABLE] Completion generation completed in 1.54s
2025-04-07 21:09:33 - INFO - [llm_engine.py:120] - **************************
2025-04-07 21:09:33 - INFO - [llm_engine.py:56] - [COLUMN] Completion generation started
2025-04-07 21:09:34 - INFO - [llm_engine.py:119] - [COLUMN] Completion generation completed in 1.14s
2025-04-07 21:09:34 - INFO - [llm_engine.py:120] - **************************
2025-04-07 21:09:34 - INFO - [feedback_manager.py:260] - Stage 1: Vector search for 'get me count of customers by order month...'
2025-04-07 21:09:34 - INFO - [feedback_manager.py:74] - Loading embedding model 'sentence-transformers/all-MiniLM-L12-v2'
2025-04-07 21:09:42 - INFO - [feedback_manager.py:77] - Embedding model loaded in 8.08s
2025-04-07 21:09:42 - INFO - [vector_store.py:38] - Connecting to vector database at ./vector_store.db
2025-04-07 21:09:43 - INFO - [vector_store.py:42] - Vector database connection established in 1.02s
2025-04-07 21:09:43 - INFO - [vector_store.py:75] - Collection 'query_embeddings' already exists
2025-04-07 21:09:43 - INFO - [feedback_manager.py:285] - Found 2 initial candidates from vector search
2025-04-07 21:09:43 - INFO - [feedback_manager.py:327] - Less than 3 candidates, skipping reranking
2025-04-07 21:09:43 - ERROR - [background_tasks.py:62] - Exception while processing query: Unknown format code 'f' for object of type 'str'
Traceback (most recent call last):
  File "/home/vijay/text2sql/src/utils/background_tasks.py", line 39, in process_in_background
    result = self.sql_manager.process_query(
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/text2sql/src/models/sql_generator.py", line 71, in process_query
    sql_result = self._generate_sql(query, workspaces, explicit_tables, progress_callback)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/text2sql/src/models/sql_generator.py", line 300, in _generate_sql
    "score": f"{rerank_score:.4f}"  # Add the reranker score for logging
             ^^^^^^^^^^^^^^^^^^^^^
ValueError: Unknown format code 'f' for object of type 'str'
2025-04-07 21:10:57 - INFO - [azure_client.py:186] - Closing Azure AI client connection
2025-04-07 21:10:57 - INFO - [database.py:258] - Closing database connection
2025-04-07 21:10:57 - INFO - [feedback_manager.py:750] - Closing database connections
2025-04-07 21:10:57 - INFO - [vector_store.py:288] - Closing vector database connection
2025-04-07 21:11:07 - INFO - [app.py:67] - Debug logging enabled for SQL generator and agents
2025-04-07 21:11:07 - INFO - [llm_engine.py:28] - Initializing LLM Engine with endpoint: https://openrouter.ai/api/v1
2025-04-07 21:11:07 - INFO - [llm_engine.py:29] - Using model: openrouter/quasar-alpha
2025-04-07 21:11:07 - INFO - [llm_engine.py:37] - LLM Engine initialized successfully
2025-04-07 21:11:07 - INFO - [llm_engine.py:28] - Initializing LLM Engine with endpoint: https://openrouter.ai/api/v1
2025-04-07 21:11:07 - INFO - [llm_engine.py:29] - Using model: openrouter/quasar-alpha
2025-04-07 21:11:07 - INFO - [llm_engine.py:37] - LLM Engine initialized successfully
2025-04-07 21:11:07 - INFO - [llm_engine.py:28] - Initializing LLM Engine with endpoint: https://openrouter.ai/api/v1
2025-04-07 21:11:07 - INFO - [llm_engine.py:29] - Using model: openrouter/quasar-alpha
2025-04-07 21:11:07 - INFO - [llm_engine.py:37] - LLM Engine initialized successfully
2025-04-07 21:11:07 - INFO - [azure_client.py:11] - Initializing Azure AI Client using LLM Engine
2025-04-07 21:11:07 - INFO - [llm_engine.py:28] - Initializing LLM Engine with endpoint: https://openrouter.ai/api/v1
2025-04-07 21:11:07 - INFO - [llm_engine.py:29] - Using model: openrouter/quasar-alpha
2025-04-07 21:11:07 - INFO - [llm_engine.py:37] - LLM Engine initialized successfully
2025-04-07 21:11:07 - INFO - [azure_client.py:17] - Azure AI Client initialized successfully
2025-04-07 21:11:07 - INFO - [database.py:38] - Database manager initialized with connection: sqlite:///text2sql.db
2025-04-07 21:11:07 - INFO - [feedback_manager.py:35] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-04-07 21:11:23 - INFO - [azure_client.py:186] - Closing Azure AI client connection
2025-04-07 21:11:23 - INFO - [database.py:258] - Closing database connection
2025-04-07 21:11:23 - INFO - [feedback_manager.py:750] - Closing database connections
2025-04-07 21:11:23 - INFO - [vector_store.py:288] - Closing vector database connection
2025-04-07 21:11:29 - INFO - [app.py:67] - Debug logging enabled for SQL generator and agents
2025-04-07 21:11:29 - INFO - [llm_engine.py:28] - Initializing LLM Engine with endpoint: https://openrouter.ai/api/v1
2025-04-07 21:11:29 - INFO - [llm_engine.py:29] - Using model: openrouter/quasar-alpha
2025-04-07 21:11:29 - INFO - [llm_engine.py:37] - LLM Engine initialized successfully
2025-04-07 21:11:29 - INFO - [llm_engine.py:28] - Initializing LLM Engine with endpoint: https://openrouter.ai/api/v1
2025-04-07 21:11:29 - INFO - [llm_engine.py:29] - Using model: openrouter/quasar-alpha
2025-04-07 21:11:29 - INFO - [llm_engine.py:37] - LLM Engine initialized successfully
2025-04-07 21:11:29 - INFO - [llm_engine.py:28] - Initializing LLM Engine with endpoint: https://openrouter.ai/api/v1
2025-04-07 21:11:29 - INFO - [llm_engine.py:29] - Using model: openrouter/quasar-alpha
2025-04-07 21:11:29 - INFO - [llm_engine.py:37] - LLM Engine initialized successfully
2025-04-07 21:11:29 - INFO - [azure_client.py:11] - Initializing Azure AI Client using LLM Engine
2025-04-07 21:11:29 - INFO - [llm_engine.py:28] - Initializing LLM Engine with endpoint: https://openrouter.ai/api/v1
2025-04-07 21:11:29 - INFO - [llm_engine.py:29] - Using model: openrouter/quasar-alpha
2025-04-07 21:11:29 - INFO - [llm_engine.py:37] - LLM Engine initialized successfully
2025-04-07 21:11:29 - INFO - [azure_client.py:17] - Azure AI Client initialized successfully
2025-04-07 21:11:29 - INFO - [database.py:38] - Database manager initialized with connection: sqlite:///text2sql.db
2025-04-07 21:11:29 - INFO - [feedback_manager.py:35] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-04-07 21:11:40 - INFO - [database.py:44] - Attempting database connection
2025-04-07 21:11:40 - INFO - [database.py:48] - Database connection established in 0.00s
2025-04-07 21:11:40 - INFO - [llm_engine.py:56] - [TABLE] Completion generation started
2025-04-07 21:11:41 - INFO - [llm_engine.py:119] - [TABLE] Completion generation completed in 1.75s
2025-04-07 21:11:41 - INFO - [llm_engine.py:120] - **************************
2025-04-07 21:11:41 - INFO - [llm_engine.py:56] - [COLUMN] Completion generation started
2025-04-07 21:11:43 - INFO - [llm_engine.py:119] - [COLUMN] Completion generation completed in 2.13s
2025-04-07 21:11:43 - INFO - [llm_engine.py:120] - **************************
2025-04-07 21:11:43 - INFO - [feedback_manager.py:260] - Stage 1: Vector search for 'get me count of customers by order month...'
2025-04-07 21:11:43 - INFO - [feedback_manager.py:74] - Loading embedding model 'sentence-transformers/all-MiniLM-L12-v2'
2025-04-07 21:11:56 - INFO - [feedback_manager.py:77] - Embedding model loaded in 12.77s
2025-04-07 21:11:56 - INFO - [vector_store.py:38] - Connecting to vector database at ./vector_store.db
2025-04-07 21:11:57 - INFO - [vector_store.py:42] - Vector database connection established in 1.02s
2025-04-07 21:11:57 - INFO - [vector_store.py:75] - Collection 'query_embeddings' already exists
2025-04-07 21:11:57 - INFO - [feedback_manager.py:285] - Found 2 initial candidates from vector search
2025-04-07 21:11:57 - INFO - [feedback_manager.py:327] - Less than 3 candidates, skipping reranking
2025-04-07 21:11:57 - ERROR - [background_tasks.py:62] - Exception while processing query: Unknown format code 'f' for object of type 'str'
Traceback (most recent call last):
  File "/home/vijay/text2sql/src/utils/background_tasks.py", line 39, in process_in_background
    result = self.sql_manager.process_query(
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/text2sql/src/models/sql_generator.py", line 71, in process_query
    sql_result = self._generate_sql(query, workspaces, explicit_tables, progress_callback)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vijay/text2sql/src/models/sql_generator.py", line 300, in _generate_sql
    "score": f"{rerank_score:.4f}"  # Add the reranker score for logging
             ^^^^^^^^^^^^^^^^^^^^^
ValueError: Unknown format code 'f' for object of type 'str'
2025-04-07 21:12:36 - INFO - [azure_client.py:186] - Closing Azure AI client connection
2025-04-07 21:12:36 - INFO - [database.py:258] - Closing database connection
2025-04-07 21:12:36 - INFO - [feedback_manager.py:750] - Closing database connections
2025-04-07 21:12:36 - INFO - [vector_store.py:288] - Closing vector database connection
2025-04-07 21:12:42 - INFO - [app.py:67] - Debug logging enabled for SQL generator and agents
2025-04-07 21:12:42 - INFO - [llm_engine.py:28] - Initializing LLM Engine with endpoint: https://openrouter.ai/api/v1
2025-04-07 21:12:42 - INFO - [llm_engine.py:29] - Using model: openrouter/quasar-alpha
2025-04-07 21:12:42 - INFO - [llm_engine.py:37] - LLM Engine initialized successfully
2025-04-07 21:12:42 - INFO - [llm_engine.py:28] - Initializing LLM Engine with endpoint: https://openrouter.ai/api/v1
2025-04-07 21:12:42 - INFO - [llm_engine.py:29] - Using model: openrouter/quasar-alpha
2025-04-07 21:12:42 - INFO - [llm_engine.py:37] - LLM Engine initialized successfully
2025-04-07 21:12:42 - INFO - [llm_engine.py:28] - Initializing LLM Engine with endpoint: https://openrouter.ai/api/v1
2025-04-07 21:12:42 - INFO - [llm_engine.py:29] - Using model: openrouter/quasar-alpha
2025-04-07 21:12:42 - INFO - [llm_engine.py:37] - LLM Engine initialized successfully
2025-04-07 21:12:42 - INFO - [azure_client.py:11] - Initializing Azure AI Client using LLM Engine
2025-04-07 21:12:42 - INFO - [llm_engine.py:28] - Initializing LLM Engine with endpoint: https://openrouter.ai/api/v1
2025-04-07 21:12:42 - INFO - [llm_engine.py:29] - Using model: openrouter/quasar-alpha
2025-04-07 21:12:42 - INFO - [llm_engine.py:37] - LLM Engine initialized successfully
2025-04-07 21:12:42 - INFO - [azure_client.py:17] - Azure AI Client initialized successfully
2025-04-07 21:12:42 - INFO - [database.py:38] - Database manager initialized with connection: sqlite:///text2sql.db
2025-04-07 21:12:42 - INFO - [feedback_manager.py:35] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-04-07 21:13:56 - INFO - [database.py:44] - Attempting database connection
2025-04-07 21:13:56 - INFO - [database.py:48] - Database connection established in 0.00s
2025-04-07 21:13:56 - INFO - [llm_engine.py:56] - [TABLE] Completion generation started
2025-04-07 21:13:58 - INFO - [llm_engine.py:119] - [TABLE] Completion generation completed in 1.92s
2025-04-07 21:13:58 - INFO - [llm_engine.py:120] - **************************
2025-04-07 21:13:58 - INFO - [llm_engine.py:56] - [COLUMN] Completion generation started
2025-04-07 21:13:59 - INFO - [llm_engine.py:119] - [COLUMN] Completion generation completed in 1.12s
2025-04-07 21:13:59 - INFO - [llm_engine.py:120] - **************************
2025-04-07 21:13:59 - INFO - [feedback_manager.py:260] - Stage 1: Vector search for 'get me count of customers by order month...'
2025-04-07 21:13:59 - INFO - [feedback_manager.py:74] - Loading embedding model 'sentence-transformers/all-MiniLM-L12-v2'
2025-04-07 21:14:10 - INFO - [feedback_manager.py:77] - Embedding model loaded in 11.72s
2025-04-07 21:14:10 - INFO - [vector_store.py:38] - Connecting to vector database at ./vector_store.db
2025-04-07 21:14:11 - INFO - [vector_store.py:42] - Vector database connection established in 1.02s
2025-04-07 21:14:11 - INFO - [vector_store.py:75] - Collection 'query_embeddings' already exists
2025-04-07 21:14:12 - INFO - [feedback_manager.py:285] - Found 2 initial candidates from vector search
2025-04-07 21:14:12 - INFO - [feedback_manager.py:289] - Stage 2: Reranking 2 candidates
2025-04-07 21:14:12 - INFO - [feedback_manager.py:118] - Loading reranking model 'cross-encoder/ms-marco-MiniLM-L-6-v2'
2025-04-07 21:14:13 - INFO - [feedback_manager.py:122] - Reranking model loaded in 1.26s
2025-04-07 21:14:13 - INFO - [feedback_manager.py:295] - [('get me count of customers by order month', ''), ('get me count of customers by order month', '')]
2025-04-07 21:14:13 - INFO - [feedback_manager.py:303] - [{'feedback_id': 2, 'query_text': '', 'sql_query': '', 'results_summary': '', 'workspace': '', 'feedback_rating': 1, 'created_at': '', 'tables_used': [], 'is_manual_sample': False, 'similarity': '', 'rerank_score': -10.036384582519531}, {'feedback_id': 1, 'query_text': '', 'sql_query': '', 'results_summary': '', 'workspace': '', 'feedback_rating': 1, 'created_at': '', 'tables_used': [], 'is_manual_sample': False, 'similarity': '', 'rerank_score': -10.036384582519531}]
2025-04-07 21:14:13 - WARNING - [feedback_manager.py:315] - No candidates with positive reranking scores, returning vector search results
2025-04-07 21:14:13 - INFO - [azure_client.py:35] - SQL generation started for query: 'get me count of customers by order month'
2025-04-07 21:14:13 - INFO - [azure_client.py:69] - Including schema information (404 chars)
2025-04-07 21:14:13 - INFO - [azure_client.py:76] - Including 1 join conditions
2025-04-07 21:14:13 - INFO - [azure_client.py:97] - Including 1 SQL examples from feedback similarity search
2025-04-07 21:14:13 - INFO - [azure_client.py:114] - PROMPT: [{'role': 'system', 'content': "You are an expert SQL assistant. Convert natural language questions into precise, executable SQL queries.\nYour task is to:\n1. Analyze the provided schema carefully, noting table relationships and column types\n2. Generate a SQL query that accurately answers the user's question\n3. Consider performance by selecting only necessary columns\n4. Use appropriate JOIN conditions based on primary/foreign key relationships or provided join conditions\n5. Include a brief explanation of your query\n\nRules:\n- Include table names and column references exactly as provided in the schema\n- Use appropriate SQL functions based on column data types\n- Consider NULL values in your conditions\n- Use table aliases for better readability when joining multiple tables\n- Add column aliases for computed values\n- Format the SQL query with proper indentation\n- If similar queries are provided, strictly use that as format or syntax\n- Return the SQL inside a code block tagged with ```sql\n\nExample output format:\nHere's a query that will [explanation]...\n\n```sql\nSELECT ...\nFROM ...\nWHERE ...\n```"}, {'role': 'user', 'content': "Here's the database schema:\nTable: customers\nDescription: Customer information and profiles\nColumns: customer_id (INTEGER): Unique customer identifier\nPrimary Key(s): customer_id\n\nTable: orders\nDescription: Customer orders and transactions\nColumns: order_id (INTEGER): Unique order identifier, customer_id (INTEGER): Reference to customer who placed the order, order_date (TEXT): Date when order was placed\nPrimary Key(s): order_id\n"}, {'role': 'user', 'content': 'Use the following pre-defined join conditions when joining these tables:\n- When joining customers with orders, use: INNER JOIN orders ON customers.customer_id = orders.customer_id\n'}, {'role': 'user', 'content': 'Here are some similar queries that were previously successful:\nQuestion: \nSQL: \n\n'}, {'role': 'user', 'content': 'Convert this question to SQL: get me count of customers by order month'}]
2025-04-07 21:14:13 - INFO - [llm_engine.py:56] - [SQL_GEN] Completion generation started
2025-04-07 21:14:16 - INFO - [llm_engine.py:119] - [SQL_GEN] Completion generation completed in 3.00s
2025-04-07 21:14:16 - INFO - [llm_engine.py:120] - **************************
2025-04-07 21:14:16 - INFO - [azure_client.py:150] - Parsing SQL from model response
2025-04-07 21:14:16 - INFO - [azure_client.py:157] - Found SQL code block in response
2025-04-07 21:14:16 - INFO - [azure_client.py:171] - Extracted SQL query (243 chars) and explanation (263 chars)
2025-04-07 21:14:16 - INFO - [azure_client.py:124] - Generated SQL: SELECT 
    strftime('%Y-%m', o.order_date) AS order_month,
    COUNT(DISTINCT c.customer_id) AS customer_count
FROM 
    customers c
INNER JOIN 
    orders o ON c.customer_id = o.customer_id
GROUP BY 
    order_month
ORDER BY
    order_month;
2025-04-07 21:14:16,328 - QUERY: 'get me count of customers by order month' → SQL: SELECT 
    strftime('%Y-%m', o.order_date) AS order_month,
    COUNT(DISTINCT c.customer_id) AS customer_count
FROM 
    customers c
INNER JOIN 
    orders o ON c.customer_id = o.customer_id
GROUP BY 
    order_month
ORDER BY
    order_month;
2025-04-07 21:14:16 - INFO - [azure_client.py:132] - SQL generation completed in 3.02s
2025-04-07 21:14:16 - INFO - [database.py:65] - Executing SQL query: SELECT 
    strftime('%Y-%m', o.order_date) AS order_month,
    COUNT(DISTINCT c.customer_id) AS customer_count
FROM 
    customers c
INNER JOIN 
    orders o ON c.customer_id = o.customer_id
GROUP BY 
    order_month
ORDER BY
    order_month;
2025-04-07 21:14:16 - INFO - [database.py:86] - Query returned 2 rows with 2 columns
2025-04-07 21:14:16 - INFO - [database.py:95] - Query processing completed in 0.01s
2025-04-07 23:48:22 - INFO - [feedback_manager.py:35] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-04-07 23:48:22 - INFO - [feedback_manager.py:49] - Attempting database connection
2025-04-07 23:48:22 - INFO - [feedback_manager.py:53] - Database connection established in 0.01s
2025-04-07 23:48:22 - INFO - [vector_store.py:38] - Connecting to vector database at ./vector_store.db
2025-04-07 23:48:22 - INFO - [vector_store.py:42] - Vector database connection established in 0.03s
2025-04-07 23:48:22 - INFO - [vector_store.py:75] - Collection 'query_embeddings' already exists
2025-04-07 23:48:22 - INFO - [feedback_manager.py:514] - Retrieved 2 samples (page 1, limit 10)
2025-04-07 23:49:08 - INFO - [azure_client.py:186] - Closing Azure AI client connection
2025-04-07 23:49:08 - INFO - [database.py:258] - Closing database connection
2025-04-07 23:49:08 - INFO - [feedback_manager.py:750] - Closing database connections
2025-04-07 23:49:08 - INFO - [vector_store.py:288] - Closing vector database connection
2025-04-07 23:49:19 - INFO - [app.py:67] - Debug logging enabled for SQL generator and agents
2025-04-07 23:49:19 - INFO - [llm_engine.py:28] - Initializing LLM Engine with endpoint: https://openrouter.ai/api/v1
2025-04-07 23:49:19 - INFO - [llm_engine.py:29] - Using model: openrouter/quasar-alpha
2025-04-07 23:49:19 - INFO - [llm_engine.py:37] - LLM Engine initialized successfully
2025-04-07 23:49:19 - INFO - [llm_engine.py:28] - Initializing LLM Engine with endpoint: https://openrouter.ai/api/v1
2025-04-07 23:49:19 - INFO - [llm_engine.py:29] - Using model: openrouter/quasar-alpha
2025-04-07 23:49:19 - INFO - [llm_engine.py:37] - LLM Engine initialized successfully
2025-04-07 23:49:19 - INFO - [llm_engine.py:28] - Initializing LLM Engine with endpoint: https://openrouter.ai/api/v1
2025-04-07 23:49:19 - INFO - [llm_engine.py:29] - Using model: openrouter/quasar-alpha
2025-04-07 23:49:19 - INFO - [llm_engine.py:37] - LLM Engine initialized successfully
2025-04-07 23:49:19 - INFO - [azure_client.py:11] - Initializing Azure AI Client using LLM Engine
2025-04-07 23:49:19 - INFO - [llm_engine.py:28] - Initializing LLM Engine with endpoint: https://openrouter.ai/api/v1
2025-04-07 23:49:19 - INFO - [llm_engine.py:29] - Using model: openrouter/quasar-alpha
2025-04-07 23:49:19 - INFO - [llm_engine.py:37] - LLM Engine initialized successfully
2025-04-07 23:49:19 - INFO - [azure_client.py:17] - Azure AI Client initialized successfully
2025-04-07 23:49:19 - INFO - [database.py:38] - Database manager initialized with connection: sqlite:///text2sql.db
2025-04-07 23:49:19 - INFO - [feedback_manager.py:35] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-04-07 23:49:27 - INFO - [database.py:44] - Attempting database connection
2025-04-07 23:49:27 - INFO - [database.py:48] - Database connection established in 0.00s
2025-04-07 23:49:27 - INFO - [llm_engine.py:56] - [TABLE] Completion generation started
2025-04-07 23:49:28 - INFO - [llm_engine.py:119] - [TABLE] Completion generation completed in 1.69s
2025-04-07 23:49:28 - INFO - [llm_engine.py:120] - **************************
2025-04-07 23:49:28 - INFO - [llm_engine.py:56] - [COLUMN] Completion generation started
2025-04-07 23:49:30 - INFO - [llm_engine.py:119] - [COLUMN] Completion generation completed in 1.85s
2025-04-07 23:49:30 - INFO - [llm_engine.py:120] - **************************
2025-04-07 23:49:30 - INFO - [feedback_manager.py:260] - Stage 1: Vector search for 'get me count of customers by order month...'
2025-04-07 23:49:30 - INFO - [feedback_manager.py:74] - Loading embedding model 'sentence-transformers/all-MiniLM-L12-v2'
2025-04-07 23:49:33 - INFO - [feedback_manager.py:77] - Embedding model loaded in 2.68s
2025-04-07 23:49:33 - INFO - [vector_store.py:38] - Connecting to vector database at ./vector_store.db
2025-04-07 23:49:34 - INFO - [vector_store.py:42] - Vector database connection established in 1.03s
2025-04-07 23:49:34 - INFO - [vector_store.py:75] - Collection 'query_embeddings' already exists
2025-04-07 23:49:34 - INFO - [feedback_manager.py:280] - [{'feedback_id': 2, 'query_text': '', 'sql_query': '', 'results_summary': '', 'workspace': '', 'feedback_rating': 1, 'created_at': '', 'tables_used': [], 'is_manual_sample': False, 'similarity': ''}, {'feedback_id': 1, 'query_text': '', 'sql_query': '', 'results_summary': '', 'workspace': '', 'feedback_rating': 1, 'created_at': '', 'tables_used': [], 'is_manual_sample': False, 'similarity': ''}]
2025-04-07 23:49:34 - INFO - [feedback_manager.py:286] - Found 2 initial candidates from vector search
2025-04-07 23:49:34 - INFO - [feedback_manager.py:290] - Stage 2: Reranking 2 candidates
2025-04-07 23:49:34 - INFO - [feedback_manager.py:118] - Loading reranking model 'cross-encoder/ms-marco-MiniLM-L-6-v2'
2025-04-07 23:49:35 - INFO - [feedback_manager.py:122] - Reranking model loaded in 1.15s
2025-04-07 23:49:35 - INFO - [feedback_manager.py:296] - [('get me count of customers by order month', ''), ('get me count of customers by order month', '')]
2025-04-07 23:49:35 - INFO - [feedback_manager.py:304] - [{'feedback_id': 2, 'query_text': '', 'sql_query': '', 'results_summary': '', 'workspace': '', 'feedback_rating': 1, 'created_at': '', 'tables_used': [], 'is_manual_sample': False, 'similarity': '', 'rerank_score': -10.036384582519531}, {'feedback_id': 1, 'query_text': '', 'sql_query': '', 'results_summary': '', 'workspace': '', 'feedback_rating': 1, 'created_at': '', 'tables_used': [], 'is_manual_sample': False, 'similarity': '', 'rerank_score': -10.036384582519531}]
2025-04-07 23:49:35 - WARNING - [feedback_manager.py:316] - No candidates with positive reranking scores, returning vector search results
2025-04-07 23:49:35 - INFO - [azure_client.py:35] - SQL generation started for query: 'get me count of customers by order month'
2025-04-07 23:49:35 - INFO - [azure_client.py:69] - Including schema information (404 chars)
2025-04-07 23:49:35 - INFO - [azure_client.py:76] - Including 1 join conditions
2025-04-07 23:49:35 - INFO - [azure_client.py:97] - Including 1 SQL examples from feedback similarity search
2025-04-07 23:49:35 - INFO - [azure_client.py:114] - PROMPT: [{'role': 'system', 'content': "You are an expert SQL assistant. Convert natural language questions into precise, executable SQL queries.\nYour task is to:\n1. Analyze the provided schema carefully, noting table relationships and column types\n2. Generate a SQL query that accurately answers the user's question\n3. Consider performance by selecting only necessary columns\n4. Use appropriate JOIN conditions based on primary/foreign key relationships or provided join conditions\n5. Include a brief explanation of your query\n\nRules:\n- Include table names and column references exactly as provided in the schema\n- Use appropriate SQL functions based on column data types\n- Consider NULL values in your conditions\n- Use table aliases for better readability when joining multiple tables\n- Add column aliases for computed values\n- Format the SQL query with proper indentation\n- If similar queries are provided, strictly use that as format or syntax\n- Return the SQL inside a code block tagged with ```sql\n\nExample output format:\nHere's a query that will [explanation]...\n\n```sql\nSELECT ...\nFROM ...\nWHERE ...\n```"}, {'role': 'user', 'content': "Here's the database schema:\nTable: customers\nDescription: Customer information and profiles\nColumns: customer_id (INTEGER): Unique customer identifier\nPrimary Key(s): customer_id\n\nTable: orders\nDescription: Customer orders and transactions\nColumns: order_id (INTEGER): Unique order identifier, customer_id (INTEGER): Reference to customer who placed the order, order_date (TEXT): Date when order was placed\nPrimary Key(s): order_id\n"}, {'role': 'user', 'content': 'Use the following pre-defined join conditions when joining these tables:\n- When joining customers with orders, use: INNER JOIN orders ON customers.customer_id = orders.customer_id\n'}, {'role': 'user', 'content': 'Here are some similar queries that were previously successful:\nQuestion: \nSQL: \n\n'}, {'role': 'user', 'content': 'Convert this question to SQL: get me count of customers by order month'}]
2025-04-07 23:49:35 - INFO - [llm_engine.py:56] - [SQL_GEN] Completion generation started
2025-04-07 23:49:38 - INFO - [llm_engine.py:119] - [SQL_GEN] Completion generation completed in 2.85s
2025-04-07 23:49:38 - INFO - [llm_engine.py:120] - **************************
2025-04-07 23:49:38 - INFO - [azure_client.py:150] - Parsing SQL from model response
2025-04-07 23:49:38 - INFO - [azure_client.py:157] - Found SQL code block in response
2025-04-07 23:49:38 - INFO - [azure_client.py:171] - Extracted SQL query (224 chars) and explanation (85 chars)
2025-04-07 23:49:38 - INFO - [azure_client.py:124] - Generated SQL: SELECT 
    strftime('%Y-%m', o.order_date) AS order_month,
    COUNT(DISTINCT c.customer_id) AS customer_count
FROM customers c
INNER JOIN orders o ON c.customer_id = o.customer_id
GROUP BY order_month
ORDER BY order_month;
2025-04-07 23:49:38,696 - QUERY: 'get me count of customers by order month' → SQL: SELECT 
    strftime('%Y-%m', o.order_date) AS order_month,
    COUNT(DISTINCT c.customer_id) AS customer_count
FROM customers c
INNER JOIN orders o ON c.customer_id = o.customer_id
GROUP BY order_month
ORDER BY order_month;
2025-04-07 23:49:38 - INFO - [azure_client.py:132] - SQL generation completed in 2.87s
2025-04-07 23:49:38 - INFO - [database.py:65] - Executing SQL query: SELECT 
    strftime('%Y-%m', o.order_date) AS order_month,
    COUNT(DISTINCT c.customer_id) AS customer_count
FROM customers c
INNER JOIN orders o ON c.customer_id = o.customer_id
GROUP BY order_month
ORDER BY order_month;
2025-04-07 23:49:38 - INFO - [database.py:86] - Query returned 2 rows with 2 columns
2025-04-07 23:49:38 - INFO - [database.py:95] - Query processing completed in 0.02s
2025-04-07 23:50:39 - INFO - [feedback_manager.py:35] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-04-07 23:50:39 - INFO - [feedback_manager.py:49] - Attempting database connection
2025-04-07 23:50:39 - INFO - [feedback_manager.py:53] - Database connection established in 0.00s
2025-04-07 23:50:39 - INFO - [vector_store.py:38] - Connecting to vector database at ./vector_store.db
2025-04-07 23:50:39 - INFO - [vector_store.py:42] - Vector database connection established in 0.01s
2025-04-07 23:50:39 - INFO - [vector_store.py:75] - Collection 'query_embeddings' already exists
2025-04-07 23:50:39 - INFO - [feedback_manager.py:515] - Retrieved 2 samples (page 1, limit 10)
2025-04-07 23:50:41 - INFO - [feedback_manager.py:35] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-04-07 23:50:41 - INFO - [feedback_manager.py:49] - Attempting database connection
2025-04-07 23:50:41 - INFO - [feedback_manager.py:53] - Database connection established in 0.00s
2025-04-07 23:50:41 - INFO - [vector_store.py:38] - Connecting to vector database at ./vector_store.db
2025-04-07 23:50:41 - INFO - [vector_store.py:42] - Vector database connection established in 0.01s
2025-04-07 23:50:41 - INFO - [vector_store.py:75] - Collection 'query_embeddings' already exists
2025-04-07 23:50:42 - INFO - [feedback_manager.py:35] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-04-07 23:50:42 - INFO - [feedback_manager.py:49] - Attempting database connection
2025-04-07 23:50:42 - INFO - [feedback_manager.py:53] - Database connection established in 0.00s
2025-04-07 23:50:42 - INFO - [vector_store.py:38] - Connecting to vector database at ./vector_store.db
2025-04-07 23:50:42 - INFO - [vector_store.py:42] - Vector database connection established in 0.01s
2025-04-07 23:50:42 - INFO - [vector_store.py:75] - Collection 'query_embeddings' already exists
2025-04-07 23:50:43 - INFO - [feedback_manager.py:74] - Loading embedding model 'sentence-transformers/all-MiniLM-L12-v2'
2025-04-07 23:50:45 - INFO - [feedback_manager.py:77] - Embedding model loaded in 2.34s
2025-04-07 23:50:45 - INFO - [feedback_manager.py:633] - Updated sample ID 2
2025-04-07 23:50:45 - INFO - [feedback_manager.py:35] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-04-07 23:50:45 - INFO - [feedback_manager.py:49] - Attempting database connection
2025-04-07 23:50:45 - INFO - [feedback_manager.py:53] - Database connection established in 0.00s
2025-04-07 23:50:45 - INFO - [vector_store.py:38] - Connecting to vector database at ./vector_store.db
2025-04-07 23:50:45 - INFO - [vector_store.py:42] - Vector database connection established in 0.01s
2025-04-07 23:50:45 - INFO - [vector_store.py:75] - Collection 'query_embeddings' already exists
2025-04-07 23:50:45 - INFO - [feedback_manager.py:515] - Retrieved 2 samples (page 1, limit 10)
2025-04-07 23:50:59 - INFO - [database.py:44] - Attempting database connection
2025-04-07 23:50:59 - INFO - [database.py:48] - Database connection established in 0.00s
2025-04-07 23:50:59 - INFO - [llm_engine.py:56] - [TABLE] Completion generation started
2025-04-07 23:51:01 - INFO - [llm_engine.py:119] - [TABLE] Completion generation completed in 1.73s
2025-04-07 23:51:01 - INFO - [llm_engine.py:120] - **************************
2025-04-07 23:51:01 - INFO - [llm_engine.py:56] - [COLUMN] Completion generation started
2025-04-07 23:51:06 - INFO - [llm_engine.py:119] - [COLUMN] Completion generation completed in 4.96s
2025-04-07 23:51:06 - INFO - [llm_engine.py:120] - **************************
2025-04-07 23:51:06 - INFO - [feedback_manager.py:260] - Stage 1: Vector search for 'get me count of customers by order month...'
2025-04-07 23:51:06 - INFO - [feedback_manager.py:280] - [{'feedback_id': 2, 'query_text': '', 'sql_query': '', 'results_summary': '', 'workspace': '', 'feedback_rating': 1, 'created_at': '', 'tables_used': [], 'is_manual_sample': False, 'similarity': ''}, {'feedback_id': 1, 'query_text': '', 'sql_query': '', 'results_summary': '', 'workspace': '', 'feedback_rating': 1, 'created_at': '', 'tables_used': [], 'is_manual_sample': False, 'similarity': ''}]
2025-04-07 23:51:06 - INFO - [feedback_manager.py:286] - Found 2 initial candidates from vector search
2025-04-07 23:51:06 - INFO - [feedback_manager.py:290] - Stage 2: Reranking 2 candidates
2025-04-07 23:51:06 - INFO - [feedback_manager.py:296] - [('get me count of customers by order month', ''), ('get me count of customers by order month', '')]
2025-04-07 23:51:06 - INFO - [feedback_manager.py:304] - [{'feedback_id': 2, 'query_text': '', 'sql_query': '', 'results_summary': '', 'workspace': '', 'feedback_rating': 1, 'created_at': '', 'tables_used': [], 'is_manual_sample': False, 'similarity': '', 'rerank_score': -10.036384582519531}, {'feedback_id': 1, 'query_text': '', 'sql_query': '', 'results_summary': '', 'workspace': '', 'feedback_rating': 1, 'created_at': '', 'tables_used': [], 'is_manual_sample': False, 'similarity': '', 'rerank_score': -10.036384582519531}]
2025-04-07 23:51:06 - WARNING - [feedback_manager.py:316] - No candidates with positive reranking scores, returning vector search results
2025-04-07 23:51:06 - INFO - [azure_client.py:35] - SQL generation started for query: 'get me count of customers by order month'
2025-04-07 23:51:06 - INFO - [azure_client.py:69] - Including schema information (404 chars)
2025-04-07 23:51:06 - INFO - [azure_client.py:76] - Including 1 join conditions
2025-04-07 23:51:06 - INFO - [azure_client.py:97] - Including 1 SQL examples from feedback similarity search
2025-04-07 23:51:06 - INFO - [azure_client.py:114] - PROMPT: [{'role': 'system', 'content': "You are an expert SQL assistant. Convert natural language questions into precise, executable SQL queries.\nYour task is to:\n1. Analyze the provided schema carefully, noting table relationships and column types\n2. Generate a SQL query that accurately answers the user's question\n3. Consider performance by selecting only necessary columns\n4. Use appropriate JOIN conditions based on primary/foreign key relationships or provided join conditions\n5. Include a brief explanation of your query\n\nRules:\n- Include table names and column references exactly as provided in the schema\n- Use appropriate SQL functions based on column data types\n- Consider NULL values in your conditions\n- Use table aliases for better readability when joining multiple tables\n- Add column aliases for computed values\n- Format the SQL query with proper indentation\n- If similar queries are provided, strictly use that as format or syntax\n- Return the SQL inside a code block tagged with ```sql\n\nExample output format:\nHere's a query that will [explanation]...\n\n```sql\nSELECT ...\nFROM ...\nWHERE ...\n```"}, {'role': 'user', 'content': "Here's the database schema:\nTable: customers\nDescription: Customer information and profiles\nColumns: customer_id (INTEGER): Unique customer identifier\nPrimary Key(s): customer_id\n\nTable: orders\nDescription: Customer orders and transactions\nColumns: order_id (INTEGER): Unique order identifier, customer_id (INTEGER): Reference to customer who placed the order, order_date (TEXT): Date when order was placed\nPrimary Key(s): order_id\n"}, {'role': 'user', 'content': 'Use the following pre-defined join conditions when joining these tables:\n- When joining customers with orders, use: INNER JOIN orders ON customers.customer_id = orders.customer_id\n'}, {'role': 'user', 'content': 'Here are some similar queries that were previously successful:\nQuestion: \nSQL: \n\n'}, {'role': 'user', 'content': 'Convert this question to SQL: get me count of customers by order month'}]
2025-04-07 23:51:06 - INFO - [llm_engine.py:56] - [SQL_GEN] Completion generation started
2025-04-07 23:51:08 - INFO - [llm_engine.py:119] - [SQL_GEN] Completion generation completed in 2.28s
2025-04-07 23:51:08 - INFO - [llm_engine.py:120] - **************************
2025-04-07 23:51:08 - INFO - [azure_client.py:150] - Parsing SQL from model response
2025-04-07 23:51:08 - INFO - [azure_client.py:157] - Found SQL code block in response
2025-04-07 23:51:08 - INFO - [azure_client.py:171] - Extracted SQL query (244 chars) and explanation (116 chars)
2025-04-07 23:51:08 - INFO - [azure_client.py:124] - Generated SQL: SELECT 
    strftime('%Y-%m', o.order_date) AS order_month,
    COUNT(DISTINCT c.customer_id) AS customer_count
FROM 
    customers c
INNER JOIN 
    orders o ON c.customer_id = o.customer_id
GROUP BY 
    order_month
ORDER BY 
    order_month;
2025-04-07 23:51:08,632 - QUERY: 'get me count of customers by order month' → SQL: SELECT 
    strftime('%Y-%m', o.order_date) AS order_month,
    COUNT(DISTINCT c.customer_id) AS customer_count
FROM 
    customers c
INNER JOIN 
    orders o ON c.customer_id = o.customer_id
GROUP BY 
    order_month
ORDER BY 
    order_month;
2025-04-07 23:51:08 - INFO - [azure_client.py:132] - SQL generation completed in 2.30s
2025-04-07 23:51:08 - INFO - [database.py:65] - Executing SQL query: SELECT 
    strftime('%Y-%m', o.order_date) AS order_month,
    COUNT(DISTINCT c.customer_id) AS customer_count
FROM 
    customers c
INNER JOIN 
    orders o ON c.customer_id = o.customer_id
GROUP BY 
    order_month
ORDER BY 
    order_month;
2025-04-07 23:51:08 - INFO - [database.py:86] - Query returned 2 rows with 2 columns
2025-04-07 23:51:08 - INFO - [database.py:95] - Query processing completed in 0.01s
2025-04-07 23:52:36 - INFO - [azure_client.py:186] - Closing Azure AI client connection
2025-04-07 23:52:36 - INFO - [database.py:258] - Closing database connection
2025-04-07 23:52:36 - INFO - [feedback_manager.py:751] - Closing database connections
2025-04-07 23:52:36 - INFO - [vector_store.py:288] - Closing vector database connection
2025-04-07 23:52:42 - INFO - [app.py:67] - Debug logging enabled for SQL generator and agents
2025-04-07 23:52:42 - INFO - [llm_engine.py:28] - Initializing LLM Engine with endpoint: https://openrouter.ai/api/v1
2025-04-07 23:52:42 - INFO - [llm_engine.py:29] - Using model: openrouter/quasar-alpha
2025-04-07 23:52:43 - INFO - [llm_engine.py:37] - LLM Engine initialized successfully
2025-04-07 23:52:43 - INFO - [llm_engine.py:28] - Initializing LLM Engine with endpoint: https://openrouter.ai/api/v1
2025-04-07 23:52:43 - INFO - [llm_engine.py:29] - Using model: openrouter/quasar-alpha
2025-04-07 23:52:43 - INFO - [llm_engine.py:37] - LLM Engine initialized successfully
2025-04-07 23:52:43 - INFO - [llm_engine.py:28] - Initializing LLM Engine with endpoint: https://openrouter.ai/api/v1
2025-04-07 23:52:43 - INFO - [llm_engine.py:29] - Using model: openrouter/quasar-alpha
2025-04-07 23:52:43 - INFO - [llm_engine.py:37] - LLM Engine initialized successfully
2025-04-07 23:52:43 - INFO - [azure_client.py:11] - Initializing Azure AI Client using LLM Engine
2025-04-07 23:52:43 - INFO - [llm_engine.py:28] - Initializing LLM Engine with endpoint: https://openrouter.ai/api/v1
2025-04-07 23:52:43 - INFO - [llm_engine.py:29] - Using model: openrouter/quasar-alpha
2025-04-07 23:52:43 - INFO - [llm_engine.py:37] - LLM Engine initialized successfully
2025-04-07 23:52:43 - INFO - [azure_client.py:17] - Azure AI Client initialized successfully
2025-04-07 23:52:43 - INFO - [database.py:38] - Database manager initialized with connection: sqlite:///text2sql.db
2025-04-07 23:52:43 - INFO - [feedback_manager.py:35] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-04-07 23:52:52 - INFO - [database.py:44] - Attempting database connection
2025-04-07 23:52:52 - INFO - [database.py:48] - Database connection established in 0.00s
2025-04-07 23:52:52 - INFO - [llm_engine.py:56] - [TABLE] Completion generation started
2025-04-07 23:52:55 - INFO - [llm_engine.py:119] - [TABLE] Completion generation completed in 2.42s
2025-04-07 23:52:55 - INFO - [llm_engine.py:120] - **************************
2025-04-07 23:52:55 - INFO - [llm_engine.py:56] - [COLUMN] Completion generation started
2025-04-07 23:52:58 - INFO - [llm_engine.py:119] - [COLUMN] Completion generation completed in 2.69s
2025-04-07 23:52:58 - INFO - [llm_engine.py:120] - **************************
2025-04-07 23:52:58 - INFO - [feedback_manager.py:260] - Stage 1: Vector search for 'get me count of customers by order month...'
2025-04-07 23:52:58 - INFO - [feedback_manager.py:74] - Loading embedding model 'sentence-transformers/all-MiniLM-L12-v2'
2025-04-07 23:53:00 - INFO - [feedback_manager.py:77] - Embedding model loaded in 2.32s
2025-04-07 23:53:00 - INFO - [vector_store.py:38] - Connecting to vector database at ./vector_store.db
2025-04-07 23:53:01 - INFO - [vector_store.py:42] - Vector database connection established in 1.03s
2025-04-07 23:53:01 - INFO - [vector_store.py:75] - Collection 'query_embeddings' already exists
2025-04-07 23:53:01 - INFO - [vector_store.py:163] - **************data: ['[{\'id\': 2, \'distance\': 1.0, \'entity\': {\'query_text\': \'get me count of customers by order month\', \'sql_query\': "SELECT \\n    strftime(\'%Y-%m\', o.order_date) AS order_month,\\n    COUNT(DISTINCT c.customer_id) AS customer_count\\nFROM \\n    customers c\\nINNER JOIN \\n    orders o ON c.customer_id = o.customer_id\\nGROUP BY \\n    order_month\\nORDER BY \\n    order_month;", \'results_summary\': \'Returned 2 rows with 2 columns\', \'workspace\': \'dfd\', \'feedback_rating\': 1, \'tables_used\': \'\', \'is_manual_sample\': True, \'created_at\': \'2025-04-07 23:50:45\', \'id\': 2}}, {\'id\': 1, \'distance\': 0.5187309980392456, \'entity\': {\'query_text\': \'get me all the customers\', \'sql_query\': \'SELECT * FROM customers;\', \'results_summary\': \'Returned 5 rows with 11 columns\', \'workspace\': \'dfd\', \'feedback_rating\': 1, \'tables_used\': \'\', \'is_manual_sample\': False, \'created_at\': \'2025-04-05 15:17:11\', \'id\': 1}}]'] 
2025-04-07 23:53:01 - INFO - [feedback_manager.py:280] - [{'feedback_id': 2, 'query_text': '', 'sql_query': '', 'results_summary': '', 'workspace': '', 'feedback_rating': 1, 'created_at': '', 'tables_used': [], 'is_manual_sample': False, 'similarity': ''}, {'feedback_id': 1, 'query_text': '', 'sql_query': '', 'results_summary': '', 'workspace': '', 'feedback_rating': 1, 'created_at': '', 'tables_used': [], 'is_manual_sample': False, 'similarity': ''}]
2025-04-07 23:53:01 - INFO - [feedback_manager.py:286] - Found 2 initial candidates from vector search
2025-04-07 23:53:01 - INFO - [feedback_manager.py:290] - Stage 2: Reranking 2 candidates
2025-04-07 23:53:01 - INFO - [feedback_manager.py:118] - Loading reranking model 'cross-encoder/ms-marco-MiniLM-L-6-v2'
2025-04-07 23:53:02 - INFO - [feedback_manager.py:122] - Reranking model loaded in 1.21s
2025-04-07 23:53:02 - INFO - [feedback_manager.py:296] - [('get me count of customers by order month', ''), ('get me count of customers by order month', '')]
2025-04-07 23:53:02 - INFO - [feedback_manager.py:304] - [{'feedback_id': 2, 'query_text': '', 'sql_query': '', 'results_summary': '', 'workspace': '', 'feedback_rating': 1, 'created_at': '', 'tables_used': [], 'is_manual_sample': False, 'similarity': '', 'rerank_score': -10.036384582519531}, {'feedback_id': 1, 'query_text': '', 'sql_query': '', 'results_summary': '', 'workspace': '', 'feedback_rating': 1, 'created_at': '', 'tables_used': [], 'is_manual_sample': False, 'similarity': '', 'rerank_score': -10.036384582519531}]
2025-04-07 23:53:02 - WARNING - [feedback_manager.py:316] - No candidates with positive reranking scores, returning vector search results
2025-04-07 23:53:02 - INFO - [azure_client.py:35] - SQL generation started for query: 'get me count of customers by order month'
2025-04-07 23:53:02 - INFO - [azure_client.py:69] - Including schema information (404 chars)
2025-04-07 23:53:02 - INFO - [azure_client.py:76] - Including 1 join conditions
2025-04-07 23:53:02 - INFO - [azure_client.py:97] - Including 1 SQL examples from feedback similarity search
2025-04-07 23:53:02 - INFO - [azure_client.py:114] - PROMPT: [{'role': 'system', 'content': "You are an expert SQL assistant. Convert natural language questions into precise, executable SQL queries.\nYour task is to:\n1. Analyze the provided schema carefully, noting table relationships and column types\n2. Generate a SQL query that accurately answers the user's question\n3. Consider performance by selecting only necessary columns\n4. Use appropriate JOIN conditions based on primary/foreign key relationships or provided join conditions\n5. Include a brief explanation of your query\n\nRules:\n- Include table names and column references exactly as provided in the schema\n- Use appropriate SQL functions based on column data types\n- Consider NULL values in your conditions\n- Use table aliases for better readability when joining multiple tables\n- Add column aliases for computed values\n- Format the SQL query with proper indentation\n- If similar queries are provided, strictly use that as format or syntax\n- Return the SQL inside a code block tagged with ```sql\n\nExample output format:\nHere's a query that will [explanation]...\n\n```sql\nSELECT ...\nFROM ...\nWHERE ...\n```"}, {'role': 'user', 'content': "Here's the database schema:\nTable: customers\nDescription: Customer information and profiles\nColumns: customer_id (INTEGER): Unique customer identifier\nPrimary Key(s): customer_id\n\nTable: orders\nDescription: Customer orders and transactions\nColumns: order_id (INTEGER): Unique order identifier, customer_id (INTEGER): Reference to customer who placed the order, order_date (TEXT): Date when order was placed\nPrimary Key(s): order_id\n"}, {'role': 'user', 'content': 'Use the following pre-defined join conditions when joining these tables:\n- When joining customers with orders, use: INNER JOIN orders ON customers.customer_id = orders.customer_id\n'}, {'role': 'user', 'content': 'Here are some similar queries that were previously successful:\nQuestion: \nSQL: \n\n'}, {'role': 'user', 'content': 'Convert this question to SQL: get me count of customers by order month'}]
2025-04-07 23:53:02 - INFO - [llm_engine.py:56] - [SQL_GEN] Completion generation started
2025-04-07 23:53:07 - INFO - [llm_engine.py:119] - [SQL_GEN] Completion generation completed in 5.02s
2025-04-07 23:53:07 - INFO - [llm_engine.py:120] - **************************
2025-04-07 23:53:07 - INFO - [azure_client.py:150] - Parsing SQL from model response
2025-04-07 23:53:07 - INFO - [azure_client.py:157] - Found SQL code block in response
2025-04-07 23:53:07 - INFO - [azure_client.py:171] - Extracted SQL query (244 chars) and explanation (122 chars)
2025-04-07 23:53:07 - INFO - [azure_client.py:124] - Generated SQL: SELECT 
    strftime('%Y-%m', o.order_date) AS order_month,
    COUNT(DISTINCT c.customer_id) AS customer_count
FROM 
    customers c
INNER JOIN 
    orders o ON c.customer_id = o.customer_id
GROUP BY 
    order_month
ORDER BY 
    order_month;
2025-04-07 23:53:07,824 - QUERY: 'get me count of customers by order month' → SQL: SELECT 
    strftime('%Y-%m', o.order_date) AS order_month,
    COUNT(DISTINCT c.customer_id) AS customer_count
FROM 
    customers c
INNER JOIN 
    orders o ON c.customer_id = o.customer_id
GROUP BY 
    order_month
ORDER BY 
    order_month;
2025-04-07 23:53:07 - INFO - [azure_client.py:132] - SQL generation completed in 5.03s
2025-04-07 23:53:07 - INFO - [database.py:65] - Executing SQL query: SELECT 
    strftime('%Y-%m', o.order_date) AS order_month,
    COUNT(DISTINCT c.customer_id) AS customer_count
FROM 
    customers c
INNER JOIN 
    orders o ON c.customer_id = o.customer_id
GROUP BY 
    order_month
ORDER BY 
    order_month;
2025-04-07 23:53:07 - INFO - [database.py:86] - Query returned 2 rows with 2 columns
2025-04-07 23:53:07 - INFO - [database.py:95] - Query processing completed in 0.01s
2025-04-07 23:54:39 - INFO - [azure_client.py:186] - Closing Azure AI client connection
2025-04-07 23:54:39 - INFO - [database.py:258] - Closing database connection
2025-04-07 23:54:39 - INFO - [feedback_manager.py:751] - Closing database connections
2025-04-07 23:54:39 - INFO - [vector_store.py:288] - Closing vector database connection
2025-04-07 23:54:48 - INFO - [app.py:67] - Debug logging enabled for SQL generator and agents
2025-04-07 23:54:48 - INFO - [llm_engine.py:28] - Initializing LLM Engine with endpoint: https://openrouter.ai/api/v1
2025-04-07 23:54:48 - INFO - [llm_engine.py:29] - Using model: openrouter/quasar-alpha
2025-04-07 23:54:48 - INFO - [llm_engine.py:37] - LLM Engine initialized successfully
2025-04-07 23:54:48 - INFO - [llm_engine.py:28] - Initializing LLM Engine with endpoint: https://openrouter.ai/api/v1
2025-04-07 23:54:48 - INFO - [llm_engine.py:29] - Using model: openrouter/quasar-alpha
2025-04-07 23:54:48 - INFO - [llm_engine.py:37] - LLM Engine initialized successfully
2025-04-07 23:54:48 - INFO - [llm_engine.py:28] - Initializing LLM Engine with endpoint: https://openrouter.ai/api/v1
2025-04-07 23:54:48 - INFO - [llm_engine.py:29] - Using model: openrouter/quasar-alpha
2025-04-07 23:54:49 - INFO - [llm_engine.py:37] - LLM Engine initialized successfully
2025-04-07 23:54:49 - INFO - [azure_client.py:11] - Initializing Azure AI Client using LLM Engine
2025-04-07 23:54:49 - INFO - [llm_engine.py:28] - Initializing LLM Engine with endpoint: https://openrouter.ai/api/v1
2025-04-07 23:54:49 - INFO - [llm_engine.py:29] - Using model: openrouter/quasar-alpha
2025-04-07 23:54:49 - INFO - [llm_engine.py:37] - LLM Engine initialized successfully
2025-04-07 23:54:49 - INFO - [azure_client.py:17] - Azure AI Client initialized successfully
2025-04-07 23:54:49 - INFO - [database.py:38] - Database manager initialized with connection: sqlite:///text2sql.db
2025-04-07 23:54:49 - INFO - [feedback_manager.py:35] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-04-07 23:54:49 - INFO - [database.py:44] - Attempting database connection
2025-04-07 23:54:49 - INFO - [database.py:48] - Database connection established in 0.00s
2025-04-07 23:54:49 - INFO - [llm_engine.py:56] - [TABLE] Completion generation started
2025-04-07 23:54:51 - INFO - [llm_engine.py:119] - [TABLE] Completion generation completed in 1.84s
2025-04-07 23:54:51 - INFO - [llm_engine.py:120] - **************************
2025-04-07 23:54:51 - INFO - [llm_engine.py:56] - [COLUMN] Completion generation started
2025-04-07 23:54:53 - INFO - [llm_engine.py:119] - [COLUMN] Completion generation completed in 1.94s
2025-04-07 23:54:53 - INFO - [llm_engine.py:120] - **************************
2025-04-07 23:54:53 - INFO - [feedback_manager.py:260] - Stage 1: Vector search for 'get me count of customers by order month...'
2025-04-07 23:54:53 - INFO - [feedback_manager.py:74] - Loading embedding model 'sentence-transformers/all-MiniLM-L12-v2'
2025-04-07 23:54:56 - INFO - [feedback_manager.py:77] - Embedding model loaded in 2.65s
2025-04-07 23:54:56 - INFO - [vector_store.py:38] - Connecting to vector database at ./vector_store.db
2025-04-07 23:54:57 - INFO - [vector_store.py:42] - Vector database connection established in 1.02s
2025-04-07 23:54:57 - INFO - [vector_store.py:75] - Collection 'query_embeddings' already exists
2025-04-07 23:54:57 - INFO - [vector_store.py:163] - **************[{'id': 2, 'distance': 1.0, 'entity': {'query_text': 'get me count of customers by order month', 'sql_query': "SELECT \n    strftime('%Y-%m', o.order_date) AS order_month,\n    COUNT(DISTINCT c.customer_id) AS customer_count\nFROM \n    customers c\nINNER JOIN \n    orders o ON c.customer_id = o.customer_id\nGROUP BY \n    order_month\nORDER BY \n    order_month;", 'results_summary': 'Returned 2 rows with 2 columns', 'workspace': 'dfd', 'feedback_rating': 1, 'tables_used': '', 'is_manual_sample': True, 'created_at': '2025-04-07 23:50:45', 'id': 2}}, {'id': 1, 'distance': 0.5187309980392456, 'entity': {'query_text': 'get me all the customers', 'sql_query': 'SELECT * FROM customers;', 'results_summary': 'Returned 5 rows with 11 columns', 'workspace': 'dfd', 'feedback_rating': 1, 'tables_used': '', 'is_manual_sample': False, 'created_at': '2025-04-05 15:17:11', 'id': 1}}]
2025-04-07 23:54:57 - INFO - [feedback_manager.py:280] - [{'feedback_id': 2, 'query_text': '', 'sql_query': '', 'results_summary': '', 'workspace': '', 'feedback_rating': 1, 'created_at': '', 'tables_used': [], 'is_manual_sample': False, 'similarity': ''}, {'feedback_id': 1, 'query_text': '', 'sql_query': '', 'results_summary': '', 'workspace': '', 'feedback_rating': 1, 'created_at': '', 'tables_used': [], 'is_manual_sample': False, 'similarity': ''}]
2025-04-07 23:54:57 - INFO - [feedback_manager.py:286] - Found 2 initial candidates from vector search
2025-04-07 23:54:57 - INFO - [feedback_manager.py:290] - Stage 2: Reranking 2 candidates
2025-04-07 23:54:57 - INFO - [feedback_manager.py:118] - Loading reranking model 'cross-encoder/ms-marco-MiniLM-L-6-v2'
2025-04-07 23:54:58 - INFO - [feedback_manager.py:122] - Reranking model loaded in 1.08s
2025-04-07 23:54:58 - INFO - [feedback_manager.py:296] - [('get me count of customers by order month', ''), ('get me count of customers by order month', '')]
2025-04-07 23:54:58 - INFO - [feedback_manager.py:304] - [{'feedback_id': 2, 'query_text': '', 'sql_query': '', 'results_summary': '', 'workspace': '', 'feedback_rating': 1, 'created_at': '', 'tables_used': [], 'is_manual_sample': False, 'similarity': '', 'rerank_score': -10.036384582519531}, {'feedback_id': 1, 'query_text': '', 'sql_query': '', 'results_summary': '', 'workspace': '', 'feedback_rating': 1, 'created_at': '', 'tables_used': [], 'is_manual_sample': False, 'similarity': '', 'rerank_score': -10.036384582519531}]
2025-04-07 23:54:58 - WARNING - [feedback_manager.py:316] - No candidates with positive reranking scores, returning vector search results
2025-04-07 23:54:58 - INFO - [azure_client.py:35] - SQL generation started for query: 'get me count of customers by order month'
2025-04-07 23:54:58 - INFO - [azure_client.py:69] - Including schema information (404 chars)
2025-04-07 23:54:58 - INFO - [azure_client.py:76] - Including 1 join conditions
2025-04-07 23:54:58 - INFO - [azure_client.py:97] - Including 1 SQL examples from feedback similarity search
2025-04-07 23:54:58 - INFO - [azure_client.py:114] - PROMPT: [{'role': 'system', 'content': "You are an expert SQL assistant. Convert natural language questions into precise, executable SQL queries.\nYour task is to:\n1. Analyze the provided schema carefully, noting table relationships and column types\n2. Generate a SQL query that accurately answers the user's question\n3. Consider performance by selecting only necessary columns\n4. Use appropriate JOIN conditions based on primary/foreign key relationships or provided join conditions\n5. Include a brief explanation of your query\n\nRules:\n- Include table names and column references exactly as provided in the schema\n- Use appropriate SQL functions based on column data types\n- Consider NULL values in your conditions\n- Use table aliases for better readability when joining multiple tables\n- Add column aliases for computed values\n- Format the SQL query with proper indentation\n- If similar queries are provided, strictly use that as format or syntax\n- Return the SQL inside a code block tagged with ```sql\n\nExample output format:\nHere's a query that will [explanation]...\n\n```sql\nSELECT ...\nFROM ...\nWHERE ...\n```"}, {'role': 'user', 'content': "Here's the database schema:\nTable: customers\nDescription: Customer information and profiles\nColumns: customer_id (INTEGER): Unique customer identifier\nPrimary Key(s): customer_id\n\nTable: orders\nDescription: Customer orders and transactions\nColumns: order_id (INTEGER): Unique order identifier, customer_id (INTEGER): Reference to customer who placed the order, order_date (TEXT): Date when order was placed\nPrimary Key(s): order_id\n"}, {'role': 'user', 'content': 'Use the following pre-defined join conditions when joining these tables:\n- When joining customers with orders, use: INNER JOIN orders ON customers.customer_id = orders.customer_id\n'}, {'role': 'user', 'content': 'Here are some similar queries that were previously successful:\nQuestion: \nSQL: \n\n'}, {'role': 'user', 'content': 'Convert this question to SQL: get me count of customers by order month'}]
2025-04-07 23:54:58 - INFO - [llm_engine.py:56] - [SQL_GEN] Completion generation started
2025-04-07 23:55:00 - INFO - [llm_engine.py:119] - [SQL_GEN] Completion generation completed in 2.31s
2025-04-07 23:55:00 - INFO - [llm_engine.py:120] - **************************
2025-04-07 23:55:00 - INFO - [azure_client.py:150] - Parsing SQL from model response
2025-04-07 23:55:00 - INFO - [azure_client.py:157] - Found SQL code block in response
2025-04-07 23:55:00 - INFO - [azure_client.py:171] - Extracted SQL query (244 chars) and explanation (104 chars)
2025-04-07 23:55:00 - INFO - [azure_client.py:124] - Generated SQL: SELECT 
    strftime('%Y-%m', o.order_date) AS order_month,
    COUNT(DISTINCT c.customer_id) AS customer_count
FROM 
    customers c
INNER JOIN 
    orders o ON c.customer_id = o.customer_id
GROUP BY 
    order_month
ORDER BY 
    order_month;
2025-04-07 23:55:00,871 - QUERY: 'get me count of customers by order month' → SQL: SELECT 
    strftime('%Y-%m', o.order_date) AS order_month,
    COUNT(DISTINCT c.customer_id) AS customer_count
FROM 
    customers c
INNER JOIN 
    orders o ON c.customer_id = o.customer_id
GROUP BY 
    order_month
ORDER BY 
    order_month;
2025-04-07 23:55:00 - INFO - [azure_client.py:132] - SQL generation completed in 2.33s
2025-04-07 23:55:00 - INFO - [database.py:65] - Executing SQL query: SELECT 
    strftime('%Y-%m', o.order_date) AS order_month,
    COUNT(DISTINCT c.customer_id) AS customer_count
FROM 
    customers c
INNER JOIN 
    orders o ON c.customer_id = o.customer_id
GROUP BY 
    order_month
ORDER BY 
    order_month;
2025-04-07 23:55:00 - INFO - [database.py:86] - Query returned 2 rows with 2 columns
2025-04-07 23:55:00 - INFO - [database.py:95] - Query processing completed in 0.01s
2025-04-07 23:59:18 - INFO - [azure_client.py:186] - Closing Azure AI client connection
2025-04-07 23:59:18 - INFO - [database.py:258] - Closing database connection
2025-04-07 23:59:18 - INFO - [feedback_manager.py:751] - Closing database connections
2025-04-07 23:59:18 - INFO - [vector_store.py:288] - Closing vector database connection
2025-04-07 23:59:18 - INFO - [azure_client.py:186] - Closing Azure AI client connection
2025-04-07 23:59:18 - INFO - [database.py:258] - Closing database connection
2025-04-07 23:59:18 - INFO - [feedback_manager.py:750] - Closing database connections
2025-04-07 23:59:18 - INFO - [vector_store.py:288] - Closing vector database connection
2025-04-08 00:01:52 - INFO - [app.py:67] - Debug logging enabled for SQL generator and agents
2025-04-08 00:01:52 - INFO - [llm_engine.py:28] - Initializing LLM Engine with endpoint: https://openrouter.ai/api/v1
2025-04-08 00:01:52 - INFO - [llm_engine.py:29] - Using model: openrouter/quasar-alpha
2025-04-08 00:01:52 - INFO - [llm_engine.py:37] - LLM Engine initialized successfully
2025-04-08 00:01:52 - INFO - [llm_engine.py:28] - Initializing LLM Engine with endpoint: https://openrouter.ai/api/v1
2025-04-08 00:01:52 - INFO - [llm_engine.py:29] - Using model: openrouter/quasar-alpha
2025-04-08 00:01:52 - INFO - [llm_engine.py:37] - LLM Engine initialized successfully
2025-04-08 00:01:52 - INFO - [llm_engine.py:28] - Initializing LLM Engine with endpoint: https://openrouter.ai/api/v1
2025-04-08 00:01:52 - INFO - [llm_engine.py:29] - Using model: openrouter/quasar-alpha
2025-04-08 00:01:52 - INFO - [llm_engine.py:37] - LLM Engine initialized successfully
2025-04-08 00:01:52 - INFO - [azure_client.py:11] - Initializing Azure AI Client using LLM Engine
2025-04-08 00:01:52 - INFO - [llm_engine.py:28] - Initializing LLM Engine with endpoint: https://openrouter.ai/api/v1
2025-04-08 00:01:52 - INFO - [llm_engine.py:29] - Using model: openrouter/quasar-alpha
2025-04-08 00:01:52 - INFO - [llm_engine.py:37] - LLM Engine initialized successfully
2025-04-08 00:01:52 - INFO - [azure_client.py:17] - Azure AI Client initialized successfully
2025-04-08 00:01:52 - INFO - [database.py:38] - Database manager initialized with connection: sqlite:///text2sql.db
2025-04-08 00:01:52 - INFO - [feedback_manager.py:35] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-04-08 00:02:19 - INFO - [app.py:67] - Debug logging enabled for SQL generator and agents
2025-04-08 00:02:19 - INFO - [llm_engine.py:28] - Initializing LLM Engine with endpoint: https://openrouter.ai/api/v1
2025-04-08 00:02:19 - INFO - [llm_engine.py:29] - Using model: openrouter/quasar-alpha
2025-04-08 00:02:19 - INFO - [llm_engine.py:37] - LLM Engine initialized successfully
2025-04-08 00:02:19 - INFO - [llm_engine.py:28] - Initializing LLM Engine with endpoint: https://openrouter.ai/api/v1
2025-04-08 00:02:19 - INFO - [llm_engine.py:29] - Using model: openrouter/quasar-alpha
2025-04-08 00:02:20 - INFO - [llm_engine.py:37] - LLM Engine initialized successfully
2025-04-08 00:02:20 - INFO - [llm_engine.py:28] - Initializing LLM Engine with endpoint: https://openrouter.ai/api/v1
2025-04-08 00:02:20 - INFO - [llm_engine.py:29] - Using model: openrouter/quasar-alpha
2025-04-08 00:02:20 - INFO - [llm_engine.py:37] - LLM Engine initialized successfully
2025-04-08 00:02:20 - INFO - [azure_client.py:11] - Initializing Azure AI Client using LLM Engine
2025-04-08 00:02:20 - INFO - [llm_engine.py:28] - Initializing LLM Engine with endpoint: https://openrouter.ai/api/v1
2025-04-08 00:02:20 - INFO - [llm_engine.py:29] - Using model: openrouter/quasar-alpha
2025-04-08 00:02:21 - INFO - [llm_engine.py:37] - LLM Engine initialized successfully
2025-04-08 00:02:21 - INFO - [azure_client.py:17] - Azure AI Client initialized successfully
2025-04-08 00:02:21 - INFO - [database.py:38] - Database manager initialized with connection: sqlite:///text2sql.db
2025-04-08 00:02:21 - INFO - [feedback_manager.py:35] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-04-08 00:02:40 - INFO - [database.py:44] - Attempting database connection
2025-04-08 00:02:40 - INFO - [database.py:48] - Database connection established in 0.01s
2025-04-08 00:02:40 - INFO - [llm_engine.py:56] - [TABLE] Completion generation started
2025-04-08 00:02:42 - INFO - [llm_engine.py:119] - [TABLE] Completion generation completed in 1.90s
2025-04-08 00:02:42 - INFO - [llm_engine.py:120] - **************************
2025-04-08 00:02:42 - INFO - [llm_engine.py:56] - [COLUMN] Completion generation started
2025-04-08 00:02:43 - INFO - [llm_engine.py:119] - [COLUMN] Completion generation completed in 1.24s
2025-04-08 00:02:43 - INFO - [llm_engine.py:120] - **************************
2025-04-08 00:02:43 - INFO - [feedback_manager.py:260] - Stage 1: Vector search for 'get me count of customers by order month...'
2025-04-08 00:02:43 - INFO - [feedback_manager.py:74] - Loading embedding model 'sentence-transformers/all-MiniLM-L12-v2'
2025-04-08 00:02:46 - INFO - [feedback_manager.py:77] - Embedding model loaded in 3.28s
2025-04-08 00:02:47 - INFO - [feedback_manager.py:35] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-04-08 00:02:47 - INFO - [feedback_manager.py:49] - Attempting database connection
2025-04-08 00:02:47 - INFO - [feedback_manager.py:53] - Database connection established in 0.02s
2025-04-08 00:02:47 - INFO - [vector_store.py:38] - Connecting to vector database at ./vector_store.db
2025-04-08 00:02:47 - INFO - [vector_store.py:38] - Connecting to vector database at ./vector_store.db
2025-04-08 00:02:48 - INFO - [vector_store.py:42] - Vector database connection established in 0.79s
2025-04-08 00:02:48 - INFO - [vector_store.py:42] - Vector database connection established in 1.26s
2025-04-08 00:02:48 - INFO - [vector_store.py:75] - Collection 'query_embeddings' already exists
2025-04-08 00:02:48 - INFO - [vector_store.py:75] - Collection 'query_embeddings' already exists
2025-04-08 00:02:48 - INFO - [feedback_manager.py:515] - Retrieved 2 samples (page 1, limit 10)
2025-04-08 00:02:48 - INFO - [vector_store.py:163] - **************[{'id': 2, 'distance': 1.0, 'entity': {'query_text': 'get me count of customers by order month', 'sql_query': "SELECT \n    strftime('%Y-%m', o.order_date) AS order_month,\n    COUNT(DISTINCT c.customer_id) AS customer_count\nFROM \n    customers c\nINNER JOIN \n    orders o ON c.customer_id = o.customer_id\nGROUP BY \n    order_month\nORDER BY \n    order_month;", 'results_summary': 'Returned 2 rows with 2 columns', 'workspace': 'dfd', 'feedback_rating': 1, 'tables_used': '', 'is_manual_sample': True, 'created_at': '2025-04-07 23:50:45', 'id': 2}}, {'id': 1, 'distance': 0.5187309980392456, 'entity': {'query_text': 'get me all the customers', 'sql_query': 'SELECT * FROM customers;', 'results_summary': 'Returned 5 rows with 11 columns', 'workspace': 'dfd', 'feedback_rating': 1, 'tables_used': '', 'is_manual_sample': False, 'created_at': '2025-04-05 15:17:11', 'id': 1}}]
2025-04-08 00:02:48 - INFO - [feedback_manager.py:280] - [{'feedback_id': 2, 'query_text': 'get me count of customers by order month', 'sql_query': "SELECT \n    strftime('%Y-%m', o.order_date) AS order_month,\n    COUNT(DISTINCT c.customer_id) AS customer_count\nFROM \n    customers c\nINNER JOIN \n    orders o ON c.customer_id = o.customer_id\nGROUP BY \n    order_month\nORDER BY \n    order_month;", 'results_summary': 'Returned 2 rows with 2 columns', 'workspace': 'dfd', 'feedback_rating': 1, 'created_at': '2025-04-07 23:50:45', 'tables_used': [], 'is_manual_sample': True, 'similarity': 1.0}, {'feedback_id': 1, 'query_text': 'get me all the customers', 'sql_query': 'SELECT * FROM customers;', 'results_summary': 'Returned 5 rows with 11 columns', 'workspace': 'dfd', 'feedback_rating': 1, 'created_at': '2025-04-05 15:17:11', 'tables_used': [], 'is_manual_sample': False, 'similarity': 0.5187309980392456}]
2025-04-08 00:02:48 - INFO - [feedback_manager.py:286] - Found 2 initial candidates from vector search
2025-04-08 00:02:48 - INFO - [feedback_manager.py:290] - Stage 2: Reranking 2 candidates
2025-04-08 00:02:48 - INFO - [feedback_manager.py:118] - Loading reranking model 'cross-encoder/ms-marco-MiniLM-L-6-v2'
2025-04-08 00:02:50 - INFO - [feedback_manager.py:122] - Reranking model loaded in 1.38s
2025-04-08 00:02:50 - INFO - [feedback_manager.py:296] - [('get me count of customers by order month', 'get me count of customers by order month'), ('get me count of customers by order month', 'get me all the customers')]
2025-04-08 00:02:50 - INFO - [feedback_manager.py:304] - [{'feedback_id': 2, 'query_text': 'get me count of customers by order month', 'sql_query': "SELECT \n    strftime('%Y-%m', o.order_date) AS order_month,\n    COUNT(DISTINCT c.customer_id) AS customer_count\nFROM \n    customers c\nINNER JOIN \n    orders o ON c.customer_id = o.customer_id\nGROUP BY \n    order_month\nORDER BY \n    order_month;", 'results_summary': 'Returned 2 rows with 2 columns', 'workspace': 'dfd', 'feedback_rating': 1, 'created_at': '2025-04-07 23:50:45', 'tables_used': [], 'is_manual_sample': True, 'similarity': 1.0, 'rerank_score': 8.964216232299805}, {'feedback_id': 1, 'query_text': 'get me all the customers', 'sql_query': 'SELECT * FROM customers;', 'results_summary': 'Returned 5 rows with 11 columns', 'workspace': 'dfd', 'feedback_rating': 1, 'created_at': '2025-04-05 15:17:11', 'tables_used': [], 'is_manual_sample': False, 'similarity': 0.5187309980392456, 'rerank_score': -2.0921530723571777}]
2025-04-08 00:02:50 - INFO - [feedback_manager.py:309] - Found 1 candidates with positive reranking scores
2025-04-08 00:02:50 - INFO - [feedback_manager.py:313] - Reranking successful, returning top 1 results
2025-04-08 00:02:50 - INFO - [azure_client.py:35] - SQL generation started for query: 'get me count of customers by order month'
2025-04-08 00:02:50 - INFO - [azure_client.py:69] - Including schema information (404 chars)
2025-04-08 00:02:50 - INFO - [azure_client.py:76] - Including 1 join conditions
2025-04-08 00:02:50 - INFO - [azure_client.py:97] - Including 1 SQL examples from manual similarity search
2025-04-08 00:02:50 - INFO - [azure_client.py:114] - PROMPT: [{'role': 'system', 'content': "You are an expert SQL assistant. Convert natural language questions into precise, executable SQL queries.\nYour task is to:\n1. Analyze the provided schema carefully, noting table relationships and column types\n2. Generate a SQL query that accurately answers the user's question\n3. Consider performance by selecting only necessary columns\n4. Use appropriate JOIN conditions based on primary/foreign key relationships or provided join conditions\n5. Include a brief explanation of your query\n\nRules:\n- Include table names and column references exactly as provided in the schema\n- Use appropriate SQL functions based on column data types\n- Consider NULL values in your conditions\n- Use table aliases for better readability when joining multiple tables\n- Add column aliases for computed values\n- Format the SQL query with proper indentation\n- If similar queries are provided, strictly use that as format or syntax\n- Return the SQL inside a code block tagged with ```sql\n\nExample output format:\nHere's a query that will [explanation]...\n\n```sql\nSELECT ...\nFROM ...\nWHERE ...\n```"}, {'role': 'user', 'content': "Here's the database schema:\nTable: customers\nDescription: Customer information and profiles\nColumns: customer_id (INTEGER): Unique customer identifier\nPrimary Key(s): customer_id\n\nTable: orders\nDescription: Customer orders and transactions\nColumns: order_id (INTEGER): Unique order identifier, customer_id (INTEGER): Reference to customer who placed the order, order_date (TEXT): Date when order was placed\nPrimary Key(s): order_id\n"}, {'role': 'user', 'content': 'Use the following pre-defined join conditions when joining these tables:\n- When joining customers with orders, use: INNER JOIN orders ON customers.customer_id = orders.customer_id\n'}, {'role': 'user', 'content': "Here are some similar queries that were previously successful:\nQuestion: get me count of customers by order month\nSQL: SELECT \n    strftime('%Y-%m', o.order_date) AS order_month,\n    COUNT(DISTINCT c.customer_id) AS customer_count\nFROM \n    customers c\nINNER JOIN \n    orders o ON c.customer_id = o.customer_id\nGROUP BY \n    order_month\nORDER BY \n    order_month;\n\n"}, {'role': 'user', 'content': 'Convert this question to SQL: get me count of customers by order month'}]
2025-04-08 00:02:50 - INFO - [llm_engine.py:56] - [SQL_GEN] Completion generation started
2025-04-08 00:02:52 - INFO - [llm_engine.py:119] - [SQL_GEN] Completion generation completed in 2.73s
2025-04-08 00:02:52 - INFO - [llm_engine.py:120] - **************************
2025-04-08 00:02:52 - INFO - [azure_client.py:150] - Parsing SQL from model response
2025-04-08 00:02:52 - INFO - [azure_client.py:157] - Found SQL code block in response
2025-04-08 00:02:52 - INFO - [azure_client.py:171] - Extracted SQL query (244 chars) and explanation (91 chars)
2025-04-08 00:02:52 - INFO - [azure_client.py:124] - Generated SQL: SELECT 
    strftime('%Y-%m', o.order_date) AS order_month,
    COUNT(DISTINCT c.customer_id) AS customer_count
FROM 
    customers c
INNER JOIN 
    orders o ON c.customer_id = o.customer_id
GROUP BY 
    order_month
ORDER BY 
    order_month;
2025-04-08 00:02:52,985 - QUERY: 'get me count of customers by order month' → SQL: SELECT 
    strftime('%Y-%m', o.order_date) AS order_month,
    COUNT(DISTINCT c.customer_id) AS customer_count
FROM 
    customers c
INNER JOIN 
    orders o ON c.customer_id = o.customer_id
GROUP BY 
    order_month
ORDER BY 
    order_month;
2025-04-08 00:02:52 - INFO - [azure_client.py:132] - SQL generation completed in 2.74s
2025-04-08 00:02:52 - INFO - [database.py:65] - Executing SQL query: SELECT 
    strftime('%Y-%m', o.order_date) AS order_month,
    COUNT(DISTINCT c.customer_id) AS customer_count
FROM 
    customers c
INNER JOIN 
    orders o ON c.customer_id = o.customer_id
GROUP BY 
    order_month
ORDER BY 
    order_month;
2025-04-08 00:02:52 - INFO - [database.py:86] - Query returned 2 rows with 2 columns
2025-04-08 00:02:53 - INFO - [database.py:95] - Query processing completed in 0.02s
2025-04-08 00:02:53 - ERROR - [background_tasks.py:62] - Exception while processing query: Method 'rollback()' can't be called here; method '_connection_for_bind()' is already in progress and this would cause an unexpected state change to <SessionTransactionState.CLOSED: 5>
Traceback (most recent call last):
  File "/home/vijay/text2sql/src/utils/user_manager.py", line 514, in log_audit_event
    self.session.commit()
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 1903, in commit
    trans.commit(_to_root=True)
  File "<string>", line 2, in commit
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/sqlalchemy/orm/state_changes.py", line 121, in _go
    raise sa_exc.IllegalStateChangeError(
sqlalchemy.exc.IllegalStateChangeError: Method 'commit()' can't be called here; method '_connection_for_bind()' is already in progress and this would cause an unexpected state change to <SessionTransactionState.CLOSED: 5>

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/vijay/text2sql/src/utils/background_tasks.py", line 51, in process_in_background
    self.user_manager.log_audit_event(
  File "/home/vijay/text2sql/src/utils/user_manager.py", line 518, in log_audit_event
    self.session.rollback()
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 1865, in rollback
    self._transaction.rollback(_to_root=True)
  File "<string>", line 2, in rollback
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/sqlalchemy/orm/state_changes.py", line 121, in _go
    raise sa_exc.IllegalStateChangeError(
sqlalchemy.exc.IllegalStateChangeError: Method 'rollback()' can't be called here; method '_connection_for_bind()' is already in progress and this would cause an unexpected state change to <SessionTransactionState.CLOSED: 5>
2025-04-08 00:02:53 - INFO - [database.py:44] - Attempting database connection
2025-04-08 00:02:53 - INFO - [database.py:48] - Database connection established in 0.00s
2025-04-08 00:02:53 - INFO - [llm_engine.py:56] - [TABLE] Completion generation started
2025-04-08 00:02:55 - INFO - [llm_engine.py:119] - [TABLE] Completion generation completed in 1.62s
2025-04-08 00:02:55 - INFO - [llm_engine.py:120] - **************************
2025-04-08 00:02:55 - INFO - [llm_engine.py:56] - [COLUMN] Completion generation started
2025-04-08 00:02:56 - INFO - [llm_engine.py:119] - [COLUMN] Completion generation completed in 1.56s
2025-04-08 00:02:56 - INFO - [llm_engine.py:120] - **************************
2025-04-08 00:02:56 - INFO - [feedback_manager.py:260] - Stage 1: Vector search for 'get me count of customers by order month...'
2025-04-08 00:02:56 - INFO - [vector_store.py:163] - **************[{'id': 2, 'distance': 1.0, 'entity': {'query_text': 'get me count of customers by order month', 'sql_query': "SELECT \n    strftime('%Y-%m', o.order_date) AS order_month,\n    COUNT(DISTINCT c.customer_id) AS customer_count\nFROM \n    customers c\nINNER JOIN \n    orders o ON c.customer_id = o.customer_id\nGROUP BY \n    order_month\nORDER BY \n    order_month;", 'results_summary': 'Returned 2 rows with 2 columns', 'workspace': 'dfd', 'feedback_rating': 1, 'tables_used': '', 'is_manual_sample': True, 'created_at': '2025-04-07 23:50:45', 'id': 2}}, {'id': 1, 'distance': 0.5187309980392456, 'entity': {'query_text': 'get me all the customers', 'sql_query': 'SELECT * FROM customers;', 'results_summary': 'Returned 5 rows with 11 columns', 'workspace': 'dfd', 'feedback_rating': 1, 'tables_used': '', 'is_manual_sample': False, 'created_at': '2025-04-05 15:17:11', 'id': 1}}]
2025-04-08 00:02:56 - INFO - [feedback_manager.py:280] - [{'feedback_id': 2, 'query_text': 'get me count of customers by order month', 'sql_query': "SELECT \n    strftime('%Y-%m', o.order_date) AS order_month,\n    COUNT(DISTINCT c.customer_id) AS customer_count\nFROM \n    customers c\nINNER JOIN \n    orders o ON c.customer_id = o.customer_id\nGROUP BY \n    order_month\nORDER BY \n    order_month;", 'results_summary': 'Returned 2 rows with 2 columns', 'workspace': 'dfd', 'feedback_rating': 1, 'created_at': '2025-04-07 23:50:45', 'tables_used': [], 'is_manual_sample': True, 'similarity': 1.0}, {'feedback_id': 1, 'query_text': 'get me all the customers', 'sql_query': 'SELECT * FROM customers;', 'results_summary': 'Returned 5 rows with 11 columns', 'workspace': 'dfd', 'feedback_rating': 1, 'created_at': '2025-04-05 15:17:11', 'tables_used': [], 'is_manual_sample': False, 'similarity': 0.5187309980392456}]
2025-04-08 00:02:56 - INFO - [feedback_manager.py:286] - Found 2 initial candidates from vector search
2025-04-08 00:02:56 - INFO - [feedback_manager.py:290] - Stage 2: Reranking 2 candidates
2025-04-08 00:02:56 - INFO - [feedback_manager.py:296] - [('get me count of customers by order month', 'get me count of customers by order month'), ('get me count of customers by order month', 'get me all the customers')]
2025-04-08 00:02:56 - INFO - [feedback_manager.py:304] - [{'feedback_id': 2, 'query_text': 'get me count of customers by order month', 'sql_query': "SELECT \n    strftime('%Y-%m', o.order_date) AS order_month,\n    COUNT(DISTINCT c.customer_id) AS customer_count\nFROM \n    customers c\nINNER JOIN \n    orders o ON c.customer_id = o.customer_id\nGROUP BY \n    order_month\nORDER BY \n    order_month;", 'results_summary': 'Returned 2 rows with 2 columns', 'workspace': 'dfd', 'feedback_rating': 1, 'created_at': '2025-04-07 23:50:45', 'tables_used': [], 'is_manual_sample': True, 'similarity': 1.0, 'rerank_score': 8.964216232299805}, {'feedback_id': 1, 'query_text': 'get me all the customers', 'sql_query': 'SELECT * FROM customers;', 'results_summary': 'Returned 5 rows with 11 columns', 'workspace': 'dfd', 'feedback_rating': 1, 'created_at': '2025-04-05 15:17:11', 'tables_used': [], 'is_manual_sample': False, 'similarity': 0.5187309980392456, 'rerank_score': -2.0921530723571777}]
2025-04-08 00:02:56 - INFO - [feedback_manager.py:309] - Found 1 candidates with positive reranking scores
2025-04-08 00:02:56 - INFO - [feedback_manager.py:313] - Reranking successful, returning top 1 results
2025-04-08 00:02:56 - INFO - [azure_client.py:35] - SQL generation started for query: 'get me count of customers by order month'
2025-04-08 00:02:56 - INFO - [azure_client.py:69] - Including schema information (404 chars)
2025-04-08 00:02:56 - INFO - [azure_client.py:76] - Including 1 join conditions
2025-04-08 00:02:56 - INFO - [azure_client.py:97] - Including 1 SQL examples from manual similarity search
2025-04-08 00:02:56 - INFO - [azure_client.py:114] - PROMPT: [{'role': 'system', 'content': "You are an expert SQL assistant. Convert natural language questions into precise, executable SQL queries.\nYour task is to:\n1. Analyze the provided schema carefully, noting table relationships and column types\n2. Generate a SQL query that accurately answers the user's question\n3. Consider performance by selecting only necessary columns\n4. Use appropriate JOIN conditions based on primary/foreign key relationships or provided join conditions\n5. Include a brief explanation of your query\n\nRules:\n- Include table names and column references exactly as provided in the schema\n- Use appropriate SQL functions based on column data types\n- Consider NULL values in your conditions\n- Use table aliases for better readability when joining multiple tables\n- Add column aliases for computed values\n- Format the SQL query with proper indentation\n- If similar queries are provided, strictly use that as format or syntax\n- Return the SQL inside a code block tagged with ```sql\n\nExample output format:\nHere's a query that will [explanation]...\n\n```sql\nSELECT ...\nFROM ...\nWHERE ...\n```"}, {'role': 'user', 'content': "Here's the database schema:\nTable: customers\nDescription: Customer information and profiles\nColumns: customer_id (INTEGER): Unique customer identifier\nPrimary Key(s): customer_id\n\nTable: orders\nDescription: Customer orders and transactions\nColumns: order_id (INTEGER): Unique order identifier, customer_id (INTEGER): Reference to customer who placed the order, order_date (TEXT): Date when order was placed\nPrimary Key(s): order_id\n"}, {'role': 'user', 'content': 'Use the following pre-defined join conditions when joining these tables:\n- When joining customers with orders, use: INNER JOIN orders ON customers.customer_id = orders.customer_id\n'}, {'role': 'user', 'content': "Here are some similar queries that were previously successful:\nQuestion: get me count of customers by order month\nSQL: SELECT \n    strftime('%Y-%m', o.order_date) AS order_month,\n    COUNT(DISTINCT c.customer_id) AS customer_count\nFROM \n    customers c\nINNER JOIN \n    orders o ON c.customer_id = o.customer_id\nGROUP BY \n    order_month\nORDER BY \n    order_month;\n\n"}, {'role': 'user', 'content': 'Convert this question to SQL: get me count of customers by order month'}]
2025-04-08 00:02:56 - INFO - [llm_engine.py:56] - [SQL_GEN] Completion generation started
2025-04-08 00:02:58 - INFO - [llm_engine.py:119] - [SQL_GEN] Completion generation completed in 1.88s
2025-04-08 00:02:58 - INFO - [llm_engine.py:120] - **************************
2025-04-08 00:02:58 - INFO - [azure_client.py:150] - Parsing SQL from model response
2025-04-08 00:02:58 - INFO - [azure_client.py:157] - Found SQL code block in response
2025-04-08 00:02:58 - INFO - [azure_client.py:171] - Extracted SQL query (244 chars) and explanation (104 chars)
2025-04-08 00:02:58 - INFO - [azure_client.py:124] - Generated SQL: SELECT 
    strftime('%Y-%m', o.order_date) AS order_month,
    COUNT(DISTINCT c.customer_id) AS customer_count
FROM 
    customers c
INNER JOIN 
    orders o ON c.customer_id = o.customer_id
GROUP BY 
    order_month
ORDER BY 
    order_month;
2025-04-08 00:02:58,709 - QUERY: 'get me count of customers by order month' → SQL: SELECT 
    strftime('%Y-%m', o.order_date) AS order_month,
    COUNT(DISTINCT c.customer_id) AS customer_count
FROM 
    customers c
INNER JOIN 
    orders o ON c.customer_id = o.customer_id
GROUP BY 
    order_month
ORDER BY 
    order_month;
2025-04-08 00:02:58 - INFO - [azure_client.py:132] - SQL generation completed in 1.90s
2025-04-08 00:02:58 - INFO - [database.py:65] - Executing SQL query: SELECT 
    strftime('%Y-%m', o.order_date) AS order_month,
    COUNT(DISTINCT c.customer_id) AS customer_count
FROM 
    customers c
INNER JOIN 
    orders o ON c.customer_id = o.customer_id
GROUP BY 
    order_month
ORDER BY 
    order_month;
2025-04-08 00:02:58 - INFO - [database.py:86] - Query returned 2 rows with 2 columns
2025-04-08 00:02:58 - INFO - [database.py:95] - Query processing completed in 0.01s
2025-04-08 00:02:58 - ERROR - [background_tasks.py:62] - Exception while processing query: Method 'rollback()' can't be called here; method '_connection_for_bind()' is already in progress and this would cause an unexpected state change to <SessionTransactionState.CLOSED: 5>
Traceback (most recent call last):
  File "/home/vijay/text2sql/src/utils/user_manager.py", line 514, in log_audit_event
    self.session.commit()
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 1903, in commit
    trans.commit(_to_root=True)
  File "<string>", line 2, in commit
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/sqlalchemy/orm/state_changes.py", line 121, in _go
    raise sa_exc.IllegalStateChangeError(
sqlalchemy.exc.IllegalStateChangeError: Method 'commit()' can't be called here; method '_connection_for_bind()' is already in progress and this would cause an unexpected state change to <SessionTransactionState.CLOSED: 5>

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/vijay/text2sql/src/utils/background_tasks.py", line 51, in process_in_background
    self.user_manager.log_audit_event(
  File "/home/vijay/text2sql/src/utils/user_manager.py", line 518, in log_audit_event
    self.session.rollback()
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 1865, in rollback
    self._transaction.rollback(_to_root=True)
  File "<string>", line 2, in rollback
  File "/home/vijay/anaconda3/lib/python3.11/site-packages/sqlalchemy/orm/state_changes.py", line 121, in _go
    raise sa_exc.IllegalStateChangeError(
sqlalchemy.exc.IllegalStateChangeError: Method 'rollback()' can't be called here; method '_connection_for_bind()' is already in progress and this would cause an unexpected state change to <SessionTransactionState.CLOSED: 5>
2025-04-08 00:04:13 - INFO - [azure_client.py:186] - Closing Azure AI client connection
2025-04-08 00:04:13 - INFO - [database.py:258] - Closing database connection
2025-04-08 00:04:13 - INFO - [feedback_manager.py:751] - Closing database connections
2025-04-08 00:04:13 - INFO - [vector_store.py:288] - Closing vector database connection
2025-04-08 00:04:26 - INFO - [app.py:67] - Debug logging enabled for SQL generator and agents
2025-04-08 00:04:26 - INFO - [llm_engine.py:28] - Initializing LLM Engine with endpoint: https://openrouter.ai/api/v1
2025-04-08 00:04:26 - INFO - [llm_engine.py:29] - Using model: openrouter/quasar-alpha
2025-04-08 00:04:26 - INFO - [llm_engine.py:37] - LLM Engine initialized successfully
2025-04-08 00:04:26 - INFO - [llm_engine.py:28] - Initializing LLM Engine with endpoint: https://openrouter.ai/api/v1
2025-04-08 00:04:26 - INFO - [llm_engine.py:29] - Using model: openrouter/quasar-alpha
2025-04-08 00:04:26 - INFO - [llm_engine.py:37] - LLM Engine initialized successfully
2025-04-08 00:04:26 - INFO - [llm_engine.py:28] - Initializing LLM Engine with endpoint: https://openrouter.ai/api/v1
2025-04-08 00:04:26 - INFO - [llm_engine.py:29] - Using model: openrouter/quasar-alpha
2025-04-08 00:04:26 - INFO - [llm_engine.py:37] - LLM Engine initialized successfully
2025-04-08 00:04:26 - INFO - [azure_client.py:11] - Initializing Azure AI Client using LLM Engine
2025-04-08 00:04:26 - INFO - [llm_engine.py:28] - Initializing LLM Engine with endpoint: https://openrouter.ai/api/v1
2025-04-08 00:04:26 - INFO - [llm_engine.py:29] - Using model: openrouter/quasar-alpha
2025-04-08 00:04:26 - INFO - [llm_engine.py:37] - LLM Engine initialized successfully
2025-04-08 00:04:26 - INFO - [azure_client.py:17] - Azure AI Client initialized successfully
2025-04-08 00:04:26 - INFO - [database.py:38] - Database manager initialized with connection: sqlite:///text2sql.db
2025-04-08 00:04:26 - INFO - [feedback_manager.py:35] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-04-08 00:05:30 - INFO - [azure_client.py:186] - Closing Azure AI client connection
2025-04-08 00:05:30 - INFO - [database.py:258] - Closing database connection
2025-04-08 00:05:30 - INFO - [feedback_manager.py:751] - Closing database connections
2025-04-08 00:05:30 - INFO - [vector_store.py:288] - Closing vector database connection
2025-04-08 00:05:35 - INFO - [app.py:67] - Debug logging enabled for SQL generator and agents
2025-04-08 00:05:35 - INFO - [llm_engine.py:28] - Initializing LLM Engine with endpoint: https://openrouter.ai/api/v1
2025-04-08 00:05:35 - INFO - [llm_engine.py:29] - Using model: openrouter/quasar-alpha
2025-04-08 00:05:35 - INFO - [llm_engine.py:37] - LLM Engine initialized successfully
2025-04-08 00:05:35 - INFO - [llm_engine.py:28] - Initializing LLM Engine with endpoint: https://openrouter.ai/api/v1
2025-04-08 00:05:35 - INFO - [llm_engine.py:29] - Using model: openrouter/quasar-alpha
2025-04-08 00:05:35 - INFO - [llm_engine.py:37] - LLM Engine initialized successfully
2025-04-08 00:05:35 - INFO - [llm_engine.py:28] - Initializing LLM Engine with endpoint: https://openrouter.ai/api/v1
2025-04-08 00:05:35 - INFO - [llm_engine.py:29] - Using model: openrouter/quasar-alpha
2025-04-08 00:05:35 - INFO - [llm_engine.py:37] - LLM Engine initialized successfully
2025-04-08 00:05:35 - INFO - [azure_client.py:11] - Initializing Azure AI Client using LLM Engine
2025-04-08 00:05:35 - INFO - [llm_engine.py:28] - Initializing LLM Engine with endpoint: https://openrouter.ai/api/v1
2025-04-08 00:05:35 - INFO - [llm_engine.py:29] - Using model: openrouter/quasar-alpha
2025-04-08 00:05:35 - INFO - [llm_engine.py:37] - LLM Engine initialized successfully
2025-04-08 00:05:35 - INFO - [azure_client.py:17] - Azure AI Client initialized successfully
2025-04-08 00:05:35 - INFO - [database.py:38] - Database manager initialized with connection: sqlite:///text2sql.db
2025-04-08 00:05:35 - INFO - [feedback_manager.py:35] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-04-08 00:05:43 - INFO - [database.py:44] - Attempting database connection
2025-04-08 00:05:43 - INFO - [database.py:48] - Database connection established in 0.00s
2025-04-08 00:05:43 - INFO - [llm_engine.py:56] - [TABLE] Completion generation started
2025-04-08 00:05:45 - INFO - [llm_engine.py:119] - [TABLE] Completion generation completed in 1.77s
2025-04-08 00:05:45 - INFO - [llm_engine.py:120] - **************************
2025-04-08 00:05:45 - INFO - [llm_engine.py:56] - [COLUMN] Completion generation started
2025-04-08 00:05:47 - INFO - [llm_engine.py:119] - [COLUMN] Completion generation completed in 1.50s
2025-04-08 00:05:47 - INFO - [llm_engine.py:120] - **************************
2025-04-08 00:05:47 - INFO - [feedback_manager.py:260] - Stage 1: Vector search for 'get me count of customers by order month...'
2025-04-08 00:05:47 - INFO - [feedback_manager.py:74] - Loading embedding model 'sentence-transformers/all-MiniLM-L12-v2'
2025-04-08 00:05:49 - INFO - [feedback_manager.py:77] - Embedding model loaded in 2.36s
2025-04-08 00:05:49 - INFO - [vector_store.py:38] - Connecting to vector database at ./vector_store.db
2025-04-08 00:05:50 - INFO - [vector_store.py:42] - Vector database connection established in 1.03s
2025-04-08 00:05:50 - INFO - [vector_store.py:75] - Collection 'query_embeddings' already exists
2025-04-08 00:05:50 - INFO - [feedback_manager.py:286] - Found 2 initial candidates from vector search
2025-04-08 00:05:50 - INFO - [feedback_manager.py:290] - Stage 2: Reranking 2 candidates
2025-04-08 00:05:50 - INFO - [feedback_manager.py:118] - Loading reranking model 'cross-encoder/ms-marco-MiniLM-L-6-v2'
2025-04-08 00:05:51 - INFO - [feedback_manager.py:122] - Reranking model loaded in 1.16s
2025-04-08 00:05:51 - INFO - [feedback_manager.py:296] - [('get me count of customers by order month', 'get me count of customers by order month'), ('get me count of customers by order month', 'get me all the customers')]
2025-04-08 00:05:51 - INFO - [feedback_manager.py:304] - [{'feedback_id': 2, 'query_text': 'get me count of customers by order month', 'sql_query': "SELECT \n    strftime('%Y-%m', o.order_date) AS order_month,\n    COUNT(DISTINCT c.customer_id) AS customer_count\nFROM \n    customers c\nINNER JOIN \n    orders o ON c.customer_id = o.customer_id\nGROUP BY \n    order_month\nORDER BY \n    order_month;", 'results_summary': 'Returned 2 rows with 2 columns', 'workspace': 'dfd', 'feedback_rating': 1, 'created_at': '2025-04-07 23:50:45', 'tables_used': [], 'is_manual_sample': True, 'similarity': 1.0, 'rerank_score': 8.964216232299805}, {'feedback_id': 1, 'query_text': 'get me all the customers', 'sql_query': 'SELECT * FROM customers;', 'results_summary': 'Returned 5 rows with 11 columns', 'workspace': 'dfd', 'feedback_rating': 1, 'created_at': '2025-04-05 15:17:11', 'tables_used': [], 'is_manual_sample': False, 'similarity': 0.5187309980392456, 'rerank_score': -2.0921530723571777}]
2025-04-08 00:05:51 - INFO - [feedback_manager.py:309] - Found 1 candidates with positive reranking scores
2025-04-08 00:05:51 - INFO - [feedback_manager.py:313] - Reranking successful, returning top 1 results
2025-04-08 00:05:51 - INFO - [azure_client.py:35] - SQL generation started for query: 'get me count of customers by order month'
2025-04-08 00:05:51 - INFO - [azure_client.py:69] - Including schema information (404 chars)
2025-04-08 00:05:51 - INFO - [azure_client.py:76] - Including 1 join conditions
2025-04-08 00:05:51 - INFO - [azure_client.py:97] - Including 1 SQL examples from manual similarity search
2025-04-08 00:05:51 - INFO - [azure_client.py:114] - PROMPT: [{'role': 'system', 'content': "You are an expert SQL assistant. Convert natural language questions into precise, executable SQL queries.\nYour task is to:\n1. Analyze the provided schema carefully, noting table relationships and column types\n2. Generate a SQL query that accurately answers the user's question\n3. Consider performance by selecting only necessary columns\n4. Use appropriate JOIN conditions based on primary/foreign key relationships or provided join conditions\n5. Include a brief explanation of your query\n\nRules:\n- Include table names and column references exactly as provided in the schema\n- Use appropriate SQL functions based on column data types\n- Consider NULL values in your conditions\n- Use table aliases for better readability when joining multiple tables\n- Add column aliases for computed values\n- Format the SQL query with proper indentation\n- If similar queries are provided, strictly use that as format or syntax\n- Return the SQL inside a code block tagged with ```sql\n\nExample output format:\nHere's a query that will [explanation]...\n\n```sql\nSELECT ...\nFROM ...\nWHERE ...\n```"}, {'role': 'user', 'content': "Here's the database schema:\nTable: customers\nDescription: Customer information and profiles\nColumns: customer_id (INTEGER): Unique customer identifier\nPrimary Key(s): customer_id\n\nTable: orders\nDescription: Customer orders and transactions\nColumns: order_id (INTEGER): Unique order identifier, customer_id (INTEGER): Reference to customer who placed the order, order_date (TEXT): Date when order was placed\nPrimary Key(s): order_id\n"}, {'role': 'user', 'content': 'Use the following pre-defined join conditions when joining these tables:\n- When joining customers with orders, use: INNER JOIN orders ON customers.customer_id = orders.customer_id\n'}, {'role': 'user', 'content': "Here are some similar queries that were previously successful:\nQuestion: get me count of customers by order month\nSQL: SELECT \n    strftime('%Y-%m', o.order_date) AS order_month,\n    COUNT(DISTINCT c.customer_id) AS customer_count\nFROM \n    customers c\nINNER JOIN \n    orders o ON c.customer_id = o.customer_id\nGROUP BY \n    order_month\nORDER BY \n    order_month;\n\n"}, {'role': 'user', 'content': 'Convert this question to SQL: get me count of customers by order month'}]
2025-04-08 00:05:51 - INFO - [llm_engine.py:56] - [SQL_GEN] Completion generation started
2025-04-08 00:05:54 - INFO - [llm_engine.py:119] - [SQL_GEN] Completion generation completed in 2.85s
2025-04-08 00:05:54 - INFO - [llm_engine.py:120] - **************************
2025-04-08 00:05:54 - INFO - [azure_client.py:150] - Parsing SQL from model response
2025-04-08 00:05:54 - INFO - [azure_client.py:157] - Found SQL code block in response
2025-04-08 00:05:54 - INFO - [azure_client.py:171] - Extracted SQL query (244 chars) and explanation (115 chars)
2025-04-08 00:05:54 - INFO - [azure_client.py:124] - Generated SQL: SELECT 
    strftime('%Y-%m', o.order_date) AS order_month,
    COUNT(DISTINCT c.customer_id) AS customer_count
FROM 
    customers c
INNER JOIN 
    orders o ON c.customer_id = o.customer_id
GROUP BY 
    order_month
ORDER BY 
    order_month;
2025-04-08 00:05:54,585 - QUERY: 'get me count of customers by order month' → SQL: SELECT 
    strftime('%Y-%m', o.order_date) AS order_month,
    COUNT(DISTINCT c.customer_id) AS customer_count
FROM 
    customers c
INNER JOIN 
    orders o ON c.customer_id = o.customer_id
GROUP BY 
    order_month
ORDER BY 
    order_month;
2025-04-08 00:05:54 - INFO - [azure_client.py:132] - SQL generation completed in 2.87s
2025-04-08 00:05:54 - INFO - [database.py:65] - Executing SQL query: SELECT 
    strftime('%Y-%m', o.order_date) AS order_month,
    COUNT(DISTINCT c.customer_id) AS customer_count
FROM 
    customers c
INNER JOIN 
    orders o ON c.customer_id = o.customer_id
GROUP BY 
    order_month
ORDER BY 
    order_month;
2025-04-08 00:05:54 - INFO - [database.py:86] - Query returned 2 rows with 2 columns
2025-04-08 00:05:54 - INFO - [database.py:95] - Query processing completed in 0.01s
2025-04-08 00:06:18 - INFO - [azure_client.py:186] - Closing Azure AI client connection
2025-04-08 00:06:18 - INFO - [database.py:258] - Closing database connection
2025-04-08 00:06:18 - INFO - [feedback_manager.py:751] - Closing database connections
2025-04-08 00:06:18 - INFO - [vector_store.py:288] - Closing vector database connection
2025-04-08 00:06:25 - INFO - [app.py:67] - Debug logging enabled for SQL generator and agents
2025-04-08 00:06:25 - INFO - [llm_engine.py:28] - Initializing LLM Engine with endpoint: https://openrouter.ai/api/v1
2025-04-08 00:06:25 - INFO - [llm_engine.py:29] - Using model: openrouter/quasar-alpha
2025-04-08 00:06:25 - INFO - [llm_engine.py:37] - LLM Engine initialized successfully
2025-04-08 00:06:25 - INFO - [llm_engine.py:28] - Initializing LLM Engine with endpoint: https://openrouter.ai/api/v1
2025-04-08 00:06:25 - INFO - [llm_engine.py:29] - Using model: openrouter/quasar-alpha
2025-04-08 00:06:25 - INFO - [llm_engine.py:37] - LLM Engine initialized successfully
2025-04-08 00:06:25 - INFO - [llm_engine.py:28] - Initializing LLM Engine with endpoint: https://openrouter.ai/api/v1
2025-04-08 00:06:25 - INFO - [llm_engine.py:29] - Using model: openrouter/quasar-alpha
2025-04-08 00:06:25 - INFO - [llm_engine.py:37] - LLM Engine initialized successfully
2025-04-08 00:06:25 - INFO - [azure_client.py:11] - Initializing Azure AI Client using LLM Engine
2025-04-08 00:06:25 - INFO - [llm_engine.py:28] - Initializing LLM Engine with endpoint: https://openrouter.ai/api/v1
2025-04-08 00:06:25 - INFO - [llm_engine.py:29] - Using model: openrouter/quasar-alpha
2025-04-08 00:06:25 - INFO - [llm_engine.py:37] - LLM Engine initialized successfully
2025-04-08 00:06:25 - INFO - [azure_client.py:17] - Azure AI Client initialized successfully
2025-04-08 00:06:25 - INFO - [database.py:38] - Database manager initialized with connection: sqlite:///text2sql.db
2025-04-08 00:06:25 - INFO - [feedback_manager.py:35] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-04-08 00:08:36 - INFO - [azure_client.py:186] - Closing Azure AI client connection
2025-04-08 00:08:36 - INFO - [database.py:258] - Closing database connection
2025-04-08 00:08:36 - INFO - [feedback_manager.py:751] - Closing database connections
2025-04-08 00:08:36 - INFO - [vector_store.py:288] - Closing vector database connection
2025-04-08 00:08:45 - INFO - [app.py:67] - Debug logging enabled for SQL generator and agents
2025-04-08 00:08:45 - INFO - [llm_engine.py:28] - Initializing LLM Engine with endpoint: https://openrouter.ai/api/v1
2025-04-08 00:08:45 - INFO - [llm_engine.py:29] - Using model: openrouter/quasar-alpha
2025-04-08 00:08:45 - INFO - [llm_engine.py:37] - LLM Engine initialized successfully
2025-04-08 00:08:45 - INFO - [llm_engine.py:28] - Initializing LLM Engine with endpoint: https://openrouter.ai/api/v1
2025-04-08 00:08:45 - INFO - [llm_engine.py:29] - Using model: openrouter/quasar-alpha
2025-04-08 00:08:45 - INFO - [llm_engine.py:37] - LLM Engine initialized successfully
2025-04-08 00:08:45 - INFO - [llm_engine.py:28] - Initializing LLM Engine with endpoint: https://openrouter.ai/api/v1
2025-04-08 00:08:45 - INFO - [llm_engine.py:29] - Using model: openrouter/quasar-alpha
2025-04-08 00:08:46 - INFO - [llm_engine.py:37] - LLM Engine initialized successfully
2025-04-08 00:08:46 - INFO - [azure_client.py:11] - Initializing Azure AI Client using LLM Engine
2025-04-08 00:08:46 - INFO - [llm_engine.py:28] - Initializing LLM Engine with endpoint: https://openrouter.ai/api/v1
2025-04-08 00:08:46 - INFO - [llm_engine.py:29] - Using model: openrouter/quasar-alpha
2025-04-08 00:08:46 - INFO - [llm_engine.py:37] - LLM Engine initialized successfully
2025-04-08 00:08:46 - INFO - [azure_client.py:17] - Azure AI Client initialized successfully
2025-04-08 00:08:46 - INFO - [database.py:38] - Database manager initialized with connection: sqlite:///text2sql.db
2025-04-08 00:08:46 - INFO - [feedback_manager.py:35] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-04-08 00:09:01 - INFO - [azure_client.py:186] - Closing Azure AI client connection
2025-04-08 00:09:01 - INFO - [database.py:258] - Closing database connection
2025-04-08 00:09:01 - INFO - [feedback_manager.py:751] - Closing database connections
2025-04-08 00:09:01 - INFO - [vector_store.py:305] - Closing vector database connection
2025-04-08 00:09:08 - INFO - [app.py:67] - Debug logging enabled for SQL generator and agents
2025-04-08 00:09:08 - INFO - [llm_engine.py:28] - Initializing LLM Engine with endpoint: https://openrouter.ai/api/v1
2025-04-08 00:09:08 - INFO - [llm_engine.py:29] - Using model: openrouter/quasar-alpha
2025-04-08 00:09:08 - INFO - [llm_engine.py:37] - LLM Engine initialized successfully
2025-04-08 00:09:08 - INFO - [llm_engine.py:28] - Initializing LLM Engine with endpoint: https://openrouter.ai/api/v1
2025-04-08 00:09:08 - INFO - [llm_engine.py:29] - Using model: openrouter/quasar-alpha
2025-04-08 00:09:08 - INFO - [llm_engine.py:37] - LLM Engine initialized successfully
2025-04-08 00:09:08 - INFO - [llm_engine.py:28] - Initializing LLM Engine with endpoint: https://openrouter.ai/api/v1
2025-04-08 00:09:08 - INFO - [llm_engine.py:29] - Using model: openrouter/quasar-alpha
2025-04-08 00:09:08 - INFO - [llm_engine.py:37] - LLM Engine initialized successfully
2025-04-08 00:09:08 - INFO - [azure_client.py:11] - Initializing Azure AI Client using LLM Engine
2025-04-08 00:09:08 - INFO - [llm_engine.py:28] - Initializing LLM Engine with endpoint: https://openrouter.ai/api/v1
2025-04-08 00:09:08 - INFO - [llm_engine.py:29] - Using model: openrouter/quasar-alpha
2025-04-08 00:09:08 - INFO - [llm_engine.py:37] - LLM Engine initialized successfully
2025-04-08 00:09:08 - INFO - [azure_client.py:17] - Azure AI Client initialized successfully
2025-04-08 00:09:08 - INFO - [database.py:38] - Database manager initialized with connection: sqlite:///text2sql.db
2025-04-08 00:09:08 - INFO - [feedback_manager.py:35] - Feedback manager initialized with connection: sqlite:///text2sql.db
2025-04-08 00:11:42 - INFO - [azure_client.py:186] - Closing Azure AI client connection
2025-04-08 00:11:42 - INFO - [database.py:258] - Closing database connection
2025-04-08 00:11:42 - INFO - [feedback_manager.py:751] - Closing database connections
2025-04-08 00:11:42 - INFO - [vector_store.py:288] - Closing vector database connection
2025-04-08 00:12:36,822 - QUERY: 'get me count of customers by order month' → SQL: SELECT 
    strftime('%Y-%m', o.order_date) AS order_month,
    COUNT(DISTINCT c.customer_id) AS customer_count
FROM 
    customers c
INNER JOIN 
    orders o ON c.customer_id = o.customer_id
GROUP BY 
    order_month
ORDER BY 
    order_month;
2025-04-08 00:14:34,348 - QUERY: 'get me count of customers by order month' → SQL: SELECT 
    strftime('%Y-%m', o.order_date) AS order_month,
    COUNT(DISTINCT c.customer_id) AS customer_count
FROM 
    customers c
INNER JOIN 
    orders o ON c.customer_id = o.customer_id
GROUP BY 
    order_month
ORDER BY 
    order_month;
2025-04-08 00:16:54 - INFO - [azure_client.py:186] - Closing Azure AI client connection
2025-04-08 00:16:54 - INFO - [database.py:258] - Closing database connection
2025-04-08 00:16:54 - INFO - [feedback_manager.py:751] - Closing database connections
2025-04-08 00:16:54 - INFO - [vector_store.py:288] - Closing vector database connection
2025-04-10 00:43:19,980 - QUERY: 'get me count of customers by state' → SQL: SELECT 
    state, 
    COUNT(*) AS customer_count
FROM 
    customers
GROUP BY 
    state
2025-04-10 00:49:08,694 - QUERY: 'get me count of customers by state' → SQL: SELECT 
    state, 
    COUNT(*) AS customer_count
FROM 
    customers
GROUP BY 
    state
2025-04-10 00:51:02,618 - QUERY: 'get me count of customers by state' → SQL: SELECT 
    state, 
    COUNT(*) AS customer_count
FROM 
    customers
GROUP BY 
    state
2025-04-10 00:51:31,383 - QUERY: 'get me count of customers by state' → SQL: SELECT 
    state, 
    COUNT(*) AS customer_count
FROM 
    customers
GROUP BY 
    state
2025-04-10 00:57:51,441 - QUERY: 'Get me count of customers by state' → SQL: SELECT 
    state, 
    COUNT(*) AS customer_count
FROM 
    customers
GROUP BY 
    state
2025-04-10 00:58:29,786 - QUERY: 'Get me count of customers by state' → SQL: SELECT 
    state, 
    COUNT(*) AS customer_count
FROM 
    customers
GROUP BY 
    state
2025-04-10 00:58:51,193 - QUERY: 'Get me count of customers by state' → SQL: SELECT 
    state, 
    COUNT(*) AS customer_count
FROM 
    customers
GROUP BY 
    state
2025-04-10 00:59:24,549 - QUERY: 'Get me count of orders by customers' → SQL: SELECT 
    customers.customer_id, 
    COUNT(orders.order_id) AS order_count
FROM customers
INNER JOIN orders ON customers.customer_id = orders.customer_id
GROUP BY customers.customer_id
2025-04-10 01:02:16,678 - QUERY: 'Get me count of orders by customers' → SQL: SELECT 
    customer_id, 
    COUNT(*) AS order_count
FROM 
    orders
GROUP BY 
    customer_id
2025-04-10 01:02:51,786 - QUERY: 'Get me all the customers records' → SQL: SELECT *
FROM customers
2025-04-10 01:03:33,790 - QUERY: 'Get me count of orders by customers' → SQL: SELECT 
    customers.customer_id,
    customers.first_name,
    customers.last_name,
    COUNT(orders.order_id) AS order_count
FROM customers
INNER JOIN orders ON customers.customer_id = orders.customer_id
GROUP BY customers.customer_id, customers.first_name, customers.last_name
2025-04-10 01:09:01,870 - QUERY: 'Get me count of orders by customers' → SQL: SELECT 
    customer_id, 
    COUNT(*) AS order_count
FROM 
    orders
GROUP BY 
    customer_id
2025-04-10 01:09:42,644 - QUERY: 'Get me count of orders by customers' → SQL: SELECT 
    customer_id, 
    COUNT(*) AS order_count
FROM 
    orders
GROUP BY 
    customer_id
2025-04-10 01:10:20,086 - QUERY: 'Get me count of orders by customers along with their name' → SQL: SELECT 
    customers.first_name,
    customers.last_name,
    COUNT(orders.order_id) AS order_count
FROM customers
INNER JOIN orders ON customers.customer_id = orders.customer_id
GROUP BY customers.customer_id, customers.first_name, customers.last_name
2025-04-10 01:12:05,103 - QUERY: 'Get me count of orders by customers along with their name' → SQL: SELECT 
    customers.first_name, 
    customers.last_name, 
    COUNT(orders.order_id) AS order_count
FROM customers
INNER JOIN orders ON customers.customer_id = orders.customer_id
GROUP BY customers.customer_id, customers.first_name, customers.last_name
2025-04-10 01:15:53,803 - QUERY: 'Get me count of orders by customers along with their name' → SQL: SELECT 
    customers.first_name, 
    customers.last_name, 
    COUNT(orders.order_id) AS order_count
FROM customers
INNER JOIN orders ON customers.customer_id = orders.customer_id
GROUP BY customers.customer_id, customers.first_name, customers.last_name
2025-04-10 01:18:39,784 - QUERY: 'Get me count of orders by customers along with their name' → SQL: SELECT 
    customers.first_name, 
    customers.last_name, 
    COUNT(orders.order_id) AS order_count
FROM customers
INNER JOIN orders ON customers.customer_id = orders.customer_id
GROUP BY customers.customer_id, customers.first_name, customers.last_name
2025-04-10 01:19:54,067 - QUERY: 'Get me count of orders by customers along with their name' → SQL: SELECT 
    customers.first_name, 
    customers.last_name, 
    COUNT(orders.order_id) AS order_count
FROM customers
INNER JOIN orders ON customers.customer_id = orders.customer_id
GROUP BY customers.customer_id, customers.first_name, customers.last_name
2025-04-10 01:22:17,075 - QUERY: 'Get me count of orders by customers along with their name' → SQL: SELECT 
    customers.first_name, 
    customers.last_name, 
    COUNT(orders.order_id) AS order_count
FROM customers
INNER JOIN orders ON customers.customer_id = orders.customer_id
GROUP BY customers.customer_id, customers.first_name, customers.last_name
2025-04-10 01:24:33,682 - QUERY: 'Get me count of orders by customers along with their name' → SQL: SELECT 
    customers.first_name, 
    customers.last_name, 
    COUNT(orders.order_id) AS order_count
FROM customers
INNER JOIN orders ON customers.customer_id = orders.customer_id
GROUP BY customers.customer_id, customers.first_name, customers.last_name
2025-04-10 01:29:02,868 - QUERY: 'Get me count of orders by customers along with their name' → SQL: SELECT 
    customers.first_name, 
    customers.last_name, 
    COUNT(orders.order_id) AS order_count
FROM customers
INNER JOIN orders ON customers.customer_id = orders.customer_id
GROUP BY customers.customer_id, customers.first_name, customers.last_name
2025-04-10 01:33:50,250 - QUERY: 'get me all customers' → SQL: SELECT 
    customer_id,
    first_name,
    last_name,
    email,
    phone,
    address,
    city,
    state,
    country,
    postal_code,
    registration_date
FROM customers
2025-04-10 01:34:20,440 - QUERY: 'get me all customers

Please plot chart with customer id and registration date' → SQL: SELECT
    customer_id,
    registration_date
FROM customers
2025-04-10 01:34:53,358 - QUERY: 'get me all customers' → SQL: SELECT 
    customer_id,
    first_name,
    last_name,
    email,
    phone,
    address,
    city,
    state,
    country,
    postal_code,
    registration_date
FROM customers
2025-04-10 01:35:34,259 - QUERY: 'get me all from orders' → SQL: SELECT 
    order_id,
    customer_id,
    order_date,
    status,
    total_amount
FROM orders
2025-04-10 01:36:05,193 - QUERY: 'get me all from orders

Plot using status and total amount' → SQL: SELECT 
    orders.*,
    orders.status,
    orders.total_amount
FROM orders
2025-04-10 01:43:18,989 - QUERY: 'get me count of orders, sum of total amount by customer id' → SQL: SELECT 
    o.customer_id, 
    COUNT(o.order_id) AS order_count, 
    SUM(o.total_amount) AS total_amount_sum
FROM orders o
GROUP BY o.customer_id
